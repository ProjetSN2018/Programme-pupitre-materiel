
Noyau.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006134  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00086134  00086134  00016134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000eec  20070000  0008613c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000548  20070eec  00087028  00020eec  2**2
                  ALLOC
  4 .stack        00002004  20071434  00087570  00020eec  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020eec  2**0
                  CONTENTS, READONLY
  6 .comment      000000b2  00000000  00000000  00020f15  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016e6f  00000000  00000000  00020fc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000037fe  00000000  00000000  00037e36  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003dce  00000000  00000000  0003b634  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009d8  00000000  00000000  0003f402  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008c0  00000000  00000000  0003fdda  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001b38c  00000000  00000000  0004069a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00011a23  00000000  00000000  0005ba26  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00064dd5  00000000  00000000  0006d449  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002000  00000000  00000000  000d2220  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	38 34 07 20 05 13 08 00 01 13 08 00 01 13 08 00     84. ............
   80010:	01 13 08 00 01 13 08 00 01 13 08 00 00 00 00 00     ................
	...
   8002c:	01 13 08 00 01 13 08 00 00 00 00 00 01 13 08 00     ................
   8003c:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   8004c:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   8005c:	01 13 08 00 01 13 08 00 01 13 08 00 00 00 00 00     ................
   8006c:	75 11 08 00 89 11 08 00 9d 11 08 00 b1 11 08 00     u...............
	...
   80084:	f5 07 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   80094:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   800a4:	00 00 00 00 01 13 08 00 71 0a 08 00 01 13 08 00     ........q.......
   800b4:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   800c4:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   800d4:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................
   800e4:	01 13 08 00 01 13 08 00 01 13 08 00 01 13 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070eec 	.word	0x20070eec
   80110:	00000000 	.word	0x00000000
   80114:	0008613c 	.word	0x0008613c

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	0008613c 	.word	0x0008613c
   80154:	20070ef0 	.word	0x20070ef0
   80158:	0008613c 	.word	0x0008613c
   8015c:	00000000 	.word	0x00000000

00080160 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80160:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80162:	0189      	lsls	r1, r1, #6
   80164:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80166:	2402      	movs	r4, #2
   80168:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8016a:	f04f 31ff 	mov.w	r1, #4294967295
   8016e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80170:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80172:	605a      	str	r2, [r3, #4]
}
   80174:	bc10      	pop	{r4}
   80176:	4770      	bx	lr

00080178 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80178:	0189      	lsls	r1, r1, #6
   8017a:	2305      	movs	r3, #5
   8017c:	5043      	str	r3, [r0, r1]
   8017e:	4770      	bx	lr

00080180 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   80180:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80184:	614a      	str	r2, [r1, #20]
   80186:	4770      	bx	lr

00080188 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80188:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   8018c:	61ca      	str	r2, [r1, #28]
   8018e:	4770      	bx	lr

00080190 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80190:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80194:	624a      	str	r2, [r1, #36]	; 0x24
   80196:	4770      	bx	lr

00080198 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80198:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   8019c:	6a08      	ldr	r0, [r1, #32]
}
   8019e:	4770      	bx	lr

000801a0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
   801a0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
   801a2:	010b      	lsls	r3, r1, #4
   801a4:	4293      	cmp	r3, r2
   801a6:	d914      	bls.n	801d2 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   801a8:	00c9      	lsls	r1, r1, #3
   801aa:	084b      	lsrs	r3, r1, #1
   801ac:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
   801b0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
   801b4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   801b6:	1e5c      	subs	r4, r3, #1
   801b8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   801bc:	428c      	cmp	r4, r1
   801be:	d901      	bls.n	801c4 <usart_set_async_baudrate+0x24>
		return 1;
   801c0:	2001      	movs	r0, #1
   801c2:	e017      	b.n	801f4 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
   801c4:	6841      	ldr	r1, [r0, #4]
   801c6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
   801ca:	6041      	str	r1, [r0, #4]
   801cc:	e00c      	b.n	801e8 <usart_set_async_baudrate+0x48>
		return 1;
   801ce:	2001      	movs	r0, #1
   801d0:	e010      	b.n	801f4 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   801d2:	0859      	lsrs	r1, r3, #1
   801d4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   801d8:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
   801dc:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   801de:	1e5c      	subs	r4, r3, #1
   801e0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   801e4:	428c      	cmp	r4, r1
   801e6:	d8f2      	bhi.n	801ce <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
   801e8:	0412      	lsls	r2, r2, #16
   801ea:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
   801ee:	431a      	orrs	r2, r3
   801f0:	6202      	str	r2, [r0, #32]

	return 0;
   801f2:	2000      	movs	r0, #0
}
   801f4:	bc10      	pop	{r4}
   801f6:	4770      	bx	lr

000801f8 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   801f8:	4b08      	ldr	r3, [pc, #32]	; (8021c <usart_reset+0x24>)
   801fa:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
   801fe:	2300      	movs	r3, #0
   80200:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
   80202:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   80204:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   80206:	2388      	movs	r3, #136	; 0x88
   80208:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8020a:	2324      	movs	r3, #36	; 0x24
   8020c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
   8020e:	f44f 7380 	mov.w	r3, #256	; 0x100
   80212:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
   80214:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   80218:	6003      	str	r3, [r0, #0]
   8021a:	4770      	bx	lr
   8021c:	55534100 	.word	0x55534100

00080220 <usart_init_rs232>:
{
   80220:	b570      	push	{r4, r5, r6, lr}
   80222:	4605      	mov	r5, r0
   80224:	460c      	mov	r4, r1
   80226:	4616      	mov	r6, r2
	usart_reset(p_usart);
   80228:	4b0f      	ldr	r3, [pc, #60]	; (80268 <usart_init_rs232+0x48>)
   8022a:	4798      	blx	r3
	ul_reg_val = 0;
   8022c:	2200      	movs	r2, #0
   8022e:	4b0f      	ldr	r3, [pc, #60]	; (8026c <usart_init_rs232+0x4c>)
   80230:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
   80232:	b1a4      	cbz	r4, 8025e <usart_init_rs232+0x3e>
   80234:	4632      	mov	r2, r6
   80236:	6821      	ldr	r1, [r4, #0]
   80238:	4628      	mov	r0, r5
   8023a:	4b0d      	ldr	r3, [pc, #52]	; (80270 <usart_init_rs232+0x50>)
   8023c:	4798      	blx	r3
   8023e:	4602      	mov	r2, r0
   80240:	b978      	cbnz	r0, 80262 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80242:	6863      	ldr	r3, [r4, #4]
   80244:	68a1      	ldr	r1, [r4, #8]
   80246:	430b      	orrs	r3, r1
   80248:	6921      	ldr	r1, [r4, #16]
   8024a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
   8024c:	68e1      	ldr	r1, [r4, #12]
   8024e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80250:	4906      	ldr	r1, [pc, #24]	; (8026c <usart_init_rs232+0x4c>)
   80252:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
   80254:	6869      	ldr	r1, [r5, #4]
   80256:	430b      	orrs	r3, r1
   80258:	606b      	str	r3, [r5, #4]
}
   8025a:	4610      	mov	r0, r2
   8025c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
   8025e:	2201      	movs	r2, #1
   80260:	e7fb      	b.n	8025a <usart_init_rs232+0x3a>
   80262:	2201      	movs	r2, #1
   80264:	e7f9      	b.n	8025a <usart_init_rs232+0x3a>
   80266:	bf00      	nop
   80268:	000801f9 	.word	0x000801f9
   8026c:	20070f08 	.word	0x20070f08
   80270:	000801a1 	.word	0x000801a1

00080274 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   80274:	2340      	movs	r3, #64	; 0x40
   80276:	6003      	str	r3, [r0, #0]
   80278:	4770      	bx	lr

0008027a <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
   8027a:	2310      	movs	r3, #16
   8027c:	6003      	str	r3, [r0, #0]
   8027e:	4770      	bx	lr

00080280 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
   80280:	6081      	str	r1, [r0, #8]
   80282:	4770      	bx	lr

00080284 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
   80284:	60c1      	str	r1, [r0, #12]
   80286:	4770      	bx	lr

00080288 <usart_get_status>:
	return p_usart->US_CSR;
   80288:	6940      	ldr	r0, [r0, #20]
}
   8028a:	4770      	bx	lr

0008028c <CRC16MODBUSFRAME>:
   8028c:	b189      	cbz	r1, 802b2 <CRC16MODBUSFRAME+0x26>
   8028e:	b410      	push	{r4}
   80290:	1841      	adds	r1, r0, r1
   80292:	f64f 72ff 	movw	r2, #65535	; 0xffff
   80296:	4c09      	ldr	r4, [pc, #36]	; (802bc <CRC16MODBUSFRAME+0x30>)
   80298:	f810 3b01 	ldrb.w	r3, [r0], #1
   8029c:	4053      	eors	r3, r2
   8029e:	b2db      	uxtb	r3, r3
   802a0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   802a4:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
   802a8:	4281      	cmp	r1, r0
   802aa:	d1f5      	bne.n	80298 <CRC16MODBUSFRAME+0xc>
   802ac:	4610      	mov	r0, r2
   802ae:	bc10      	pop	{r4}
   802b0:	4770      	bx	lr
   802b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
   802b6:	4610      	mov	r0, r2
   802b8:	4770      	bx	lr
   802ba:	bf00      	nop
   802bc:	20070138 	.word	0x20070138

000802c0 <ErrorLed>:
 #include "../Headers/appli.h"

 t_ptf32 pErrorFunc = ErrorLed;

 uint32_t ErrorLed(uint32_t err, ...)
 {
   802c0:	b40f      	push	{r0, r1, r2, r3}
   802c2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   802c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(LED0_GPIO);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   802c8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80368 <ErrorLed+0xa8>
   802cc:	fba8 2803 	umull	r2, r8, r8, r3
   802d0:	ea4f 08d8 	mov.w	r8, r8, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   802d4:	eb08 0a88 	add.w	sl, r8, r8, lsl #2
   802d8:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(LED0_GPIO);
   802dc:	253b      	movs	r5, #59	; 0x3b
		delay_ms(2000);
   802de:	4c1c      	ldr	r4, [pc, #112]	; (80350 <ErrorLed+0x90>)
		delay_ms(500);
   802e0:	f8df b088 	ldr.w	fp, [pc, #136]	; 8036c <ErrorLed+0xac>
   802e4:	e001      	b.n	802ea <ErrorLed+0x2a>
			gpio_set_pin_high(LED0_GPIO);
			delay_ms(200);
			gpio_set_pin_low(LED0_GPIO);
			delay_ms(200);
		}
		delay_ms(1000);
   802e6:	481b      	ldr	r0, [pc, #108]	; (80354 <ErrorLed+0x94>)
   802e8:	47a0      	blx	r4
		gpio_set_pin_high(LED0_GPIO);
   802ea:	4628      	mov	r0, r5
   802ec:	4b1a      	ldr	r3, [pc, #104]	; (80358 <ErrorLed+0x98>)
   802ee:	4798      	blx	r3
		delay_ms(2000);
   802f0:	481a      	ldr	r0, [pc, #104]	; (8035c <ErrorLed+0x9c>)
   802f2:	47a0      	blx	r4
		gpio_set_pin_low(LED0_GPIO);
   802f4:	4628      	mov	r0, r5
   802f6:	4b1a      	ldr	r3, [pc, #104]	; (80360 <ErrorLed+0xa0>)
   802f8:	4798      	blx	r3
		delay_ms(500);
   802fa:	4658      	mov	r0, fp
   802fc:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   802fe:	f1b8 0f00 	cmp.w	r8, #0
   80302:	d00f      	beq.n	80324 <ErrorLed+0x64>
   80304:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80306:	f8df 9050 	ldr.w	r9, [pc, #80]	; 80358 <ErrorLed+0x98>
			delay_ms(200);
   8030a:	4f16      	ldr	r7, [pc, #88]	; (80364 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   8030c:	4628      	mov	r0, r5
   8030e:	47c8      	blx	r9
			delay_ms(200);
   80310:	4638      	mov	r0, r7
   80312:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80314:	4628      	mov	r0, r5
   80316:	4b12      	ldr	r3, [pc, #72]	; (80360 <ErrorLed+0xa0>)
   80318:	4798      	blx	r3
			delay_ms(200);
   8031a:	4638      	mov	r0, r7
   8031c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8031e:	3601      	adds	r6, #1
   80320:	4546      	cmp	r6, r8
   80322:	d1f3      	bne.n	8030c <ErrorLed+0x4c>
		delay_ms(500);
   80324:	4658      	mov	r0, fp
   80326:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80328:	f1ba 0f00 	cmp.w	sl, #0
   8032c:	d0db      	beq.n	802e6 <ErrorLed+0x26>
   8032e:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80330:	f8df 9024 	ldr.w	r9, [pc, #36]	; 80358 <ErrorLed+0x98>
			delay_ms(200);
   80334:	4f0b      	ldr	r7, [pc, #44]	; (80364 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   80336:	4628      	mov	r0, r5
   80338:	47c8      	blx	r9
			delay_ms(200);
   8033a:	4638      	mov	r0, r7
   8033c:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   8033e:	4628      	mov	r0, r5
   80340:	4b07      	ldr	r3, [pc, #28]	; (80360 <ErrorLed+0xa0>)
   80342:	4798      	blx	r3
			delay_ms(200);
   80344:	4638      	mov	r0, r7
   80346:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80348:	3601      	adds	r6, #1
   8034a:	4556      	cmp	r6, sl
   8034c:	d1f3      	bne.n	80336 <ErrorLed+0x76>
   8034e:	e7ca      	b.n	802e6 <ErrorLed+0x26>
   80350:	20070001 	.word	0x20070001
   80354:	005b8d80 	.word	0x005b8d80
   80358:	00080f63 	.word	0x00080f63
   8035c:	00b71b00 	.word	0x00b71b00
   80360:	00080f7d 	.word	0x00080f7d
   80364:	00124f80 	.word	0x00124f80
   80368:	cccccccd 	.word	0xcccccccd
   8036c:	002dc6c0 	.word	0x002dc6c0

00080370 <Shell>:
	_SHELL_KBHIT = 1,
	_SHELL_HEARTBEAT,
};

 uint32_t Shell(uint32_t sc, ...)
 {
   80370:	b40f      	push	{r0, r1, r2, r3}
   80372:	b5f0      	push	{r4, r5, r6, r7, lr}
   80374:	b083      	sub	sp, #12
	 uint32_t u1;
	 
	switch(sc)
   80376:	9908      	ldr	r1, [sp, #32]
   80378:	2902      	cmp	r1, #2
   8037a:	f000 8125 	beq.w	805c8 <Shell+0x258>
   8037e:	2964      	cmp	r1, #100	; 0x64
   80380:	d006      	beq.n	80390 <Shell+0x20>
   80382:	2901      	cmp	r1, #1
   80384:	d01e      	beq.n	803c4 <Shell+0x54>
		break;
		
		
	////////////////////////////////////////////////////////////////////////////////////////////////	
	default:
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   80386:	4b9f      	ldr	r3, [pc, #636]	; (80604 <Shell+0x294>)
   80388:	681b      	ldr	r3, [r3, #0]
   8038a:	200e      	movs	r0, #14
   8038c:	4798      	blx	r3
   8038e:	e013      	b.n	803b8 <Shell+0x48>
		gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80390:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80394:	203b      	movs	r0, #59	; 0x3b
   80396:	4b9c      	ldr	r3, [pc, #624]	; (80608 <Shell+0x298>)
   80398:	4798      	blx	r3
		gpio_set_pin_low(LED0_GPIO);
   8039a:	203b      	movs	r0, #59	; 0x3b
   8039c:	4b9b      	ldr	r3, [pc, #620]	; (8060c <Shell+0x29c>)
   8039e:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   803a0:	2064      	movs	r0, #100	; 0x64
   803a2:	4b9b      	ldr	r3, [pc, #620]	; (80610 <Shell+0x2a0>)
   803a4:	4798      	blx	r3
		state = IDLE;
   803a6:	2300      	movs	r3, #0
   803a8:	4a9a      	ldr	r2, [pc, #616]	; (80614 <Shell+0x2a4>)
   803aa:	7013      	strb	r3, [r2, #0]
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   803ac:	9300      	str	r3, [sp, #0]
   803ae:	2202      	movs	r2, #2
   803b0:	4999      	ldr	r1, [pc, #612]	; (80618 <Shell+0x2a8>)
   803b2:	2066      	movs	r0, #102	; 0x66
   803b4:	4c99      	ldr	r4, [pc, #612]	; (8061c <Shell+0x2ac>)
   803b6:	47a0      	blx	r4
	}

	return 0;
 }
   803b8:	2000      	movs	r0, #0
   803ba:	b003      	add	sp, #12
   803bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   803c0:	b004      	add	sp, #16
   803c2:	4770      	bx	lr
		switch(state)
   803c4:	4b93      	ldr	r3, [pc, #588]	; (80614 <Shell+0x2a4>)
   803c6:	781b      	ldrb	r3, [r3, #0]
   803c8:	2b06      	cmp	r3, #6
   803ca:	f200 80f7 	bhi.w	805bc <Shell+0x24c>
   803ce:	a201      	add	r2, pc, #4	; (adr r2, 803d4 <Shell+0x64>)
   803d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   803d4:	000803f1 	.word	0x000803f1
   803d8:	00080489 	.word	0x00080489
   803dc:	0008052d 	.word	0x0008052d
   803e0:	000803b9 	.word	0x000803b9
   803e4:	000803b9 	.word	0x000803b9
   803e8:	000803b9 	.word	0x000803b9
   803ec:	000803b9 	.word	0x000803b9
			switch(_kbhitChar)
   803f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   803f2:	b2ec      	uxtb	r4, r5
   803f4:	f1a4 0308 	sub.w	r3, r4, #8
   803f8:	2b18      	cmp	r3, #24
   803fa:	d835      	bhi.n	80468 <Shell+0xf8>
   803fc:	a201      	add	r2, pc, #4	; (adr r2, 80404 <Shell+0x94>)
   803fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80402:	bf00      	nop
   80404:	000803b9 	.word	0x000803b9
   80408:	000803b9 	.word	0x000803b9
   8040c:	000803b9 	.word	0x000803b9
   80410:	00080469 	.word	0x00080469
   80414:	00080469 	.word	0x00080469
   80418:	000803b9 	.word	0x000803b9
   8041c:	00080469 	.word	0x00080469
   80420:	00080469 	.word	0x00080469
   80424:	00080469 	.word	0x00080469
   80428:	00080469 	.word	0x00080469
   8042c:	00080469 	.word	0x00080469
   80430:	00080469 	.word	0x00080469
   80434:	00080469 	.word	0x00080469
   80438:	00080469 	.word	0x00080469
   8043c:	00080469 	.word	0x00080469
   80440:	00080469 	.word	0x00080469
   80444:	00080469 	.word	0x00080469
   80448:	00080469 	.word	0x00080469
   8044c:	00080469 	.word	0x00080469
   80450:	000803b9 	.word	0x000803b9
   80454:	00080469 	.word	0x00080469
   80458:	00080469 	.word	0x00080469
   8045c:	00080469 	.word	0x00080469
   80460:	00080469 	.word	0x00080469
   80464:	000803b9 	.word	0x000803b9
				Putstr("\r\n>");
   80468:	496d      	ldr	r1, [pc, #436]	; (80620 <Shell+0x2b0>)
   8046a:	2067      	movs	r0, #103	; 0x67
   8046c:	4f68      	ldr	r7, [pc, #416]	; (80610 <Shell+0x2a0>)
   8046e:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   80470:	4e68      	ldr	r6, [pc, #416]	; (80614 <Shell+0x2a4>)
   80472:	4b6c      	ldr	r3, [pc, #432]	; (80624 <Shell+0x2b4>)
   80474:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   80476:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   8047a:	2501      	movs	r5, #1
   8047c:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   8047e:	4621      	mov	r1, r4
   80480:	2066      	movs	r0, #102	; 0x66
   80482:	47b8      	blx	r7
				state = EDITION;
   80484:	7035      	strb	r5, [r6, #0]
				break;
   80486:	e797      	b.n	803b8 <Shell+0x48>
			switch(_kbhitChar)
   80488:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8048a:	b2d1      	uxtb	r1, r2
   8048c:	f1a1 0308 	sub.w	r3, r1, #8
   80490:	2b13      	cmp	r3, #19
   80492:	d83a      	bhi.n	8050a <Shell+0x19a>
   80494:	a001      	add	r0, pc, #4	; (adr r0, 8049c <Shell+0x12c>)
   80496:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   8049a:	bf00      	nop
   8049c:	000803b9 	.word	0x000803b9
   804a0:	000803b9 	.word	0x000803b9
   804a4:	000803b9 	.word	0x000803b9
   804a8:	0008050b 	.word	0x0008050b
   804ac:	0008050b 	.word	0x0008050b
   804b0:	000804ed 	.word	0x000804ed
   804b4:	0008050b 	.word	0x0008050b
   804b8:	0008050b 	.word	0x0008050b
   804bc:	0008050b 	.word	0x0008050b
   804c0:	0008050b 	.word	0x0008050b
   804c4:	0008050b 	.word	0x0008050b
   804c8:	0008050b 	.word	0x0008050b
   804cc:	0008050b 	.word	0x0008050b
   804d0:	0008050b 	.word	0x0008050b
   804d4:	0008050b 	.word	0x0008050b
   804d8:	0008050b 	.word	0x0008050b
   804dc:	0008050b 	.word	0x0008050b
   804e0:	0008050b 	.word	0x0008050b
   804e4:	0008050b 	.word	0x0008050b
   804e8:	000803b9 	.word	0x000803b9
				*pEdit++ = '\0';
   804ec:	4a49      	ldr	r2, [pc, #292]	; (80614 <Shell+0x2a4>)
   804ee:	6891      	ldr	r1, [r2, #8]
   804f0:	1c4b      	adds	r3, r1, #1
   804f2:	6093      	str	r3, [r2, #8]
   804f4:	2300      	movs	r3, #0
   804f6:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   804f8:	2102      	movs	r1, #2
   804fa:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   804fc:	9300      	str	r3, [sp, #0]
   804fe:	2201      	movs	r2, #1
   80500:	4945      	ldr	r1, [pc, #276]	; (80618 <Shell+0x2a8>)
   80502:	2066      	movs	r0, #102	; 0x66
   80504:	4c45      	ldr	r4, [pc, #276]	; (8061c <Shell+0x2ac>)
   80506:	47a0      	blx	r4
				break;
   80508:	e756      	b.n	803b8 <Shell+0x48>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   8050a:	4b42      	ldr	r3, [pc, #264]	; (80614 <Shell+0x2a4>)
   8050c:	68db      	ldr	r3, [r3, #12]
   8050e:	2bfd      	cmp	r3, #253	; 0xfd
   80510:	f63f af52 	bhi.w	803b8 <Shell+0x48>
					*pEdit++ = _kbhitChar;
   80514:	4b3f      	ldr	r3, [pc, #252]	; (80614 <Shell+0x2a4>)
   80516:	6898      	ldr	r0, [r3, #8]
   80518:	1c44      	adds	r4, r0, #1
   8051a:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   8051c:	7002      	strb	r2, [r0, #0]
					nbChar++;
   8051e:	68da      	ldr	r2, [r3, #12]
   80520:	3201      	adds	r2, #1
   80522:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   80524:	2066      	movs	r0, #102	; 0x66
   80526:	4b3a      	ldr	r3, [pc, #232]	; (80610 <Shell+0x2a0>)
   80528:	4798      	blx	r3
   8052a:	e745      	b.n	803b8 <Shell+0x48>
			Putstr("\r\n>>>");
   8052c:	493e      	ldr	r1, [pc, #248]	; (80628 <Shell+0x2b8>)
   8052e:	2067      	movs	r0, #103	; 0x67
   80530:	4c37      	ldr	r4, [pc, #220]	; (80610 <Shell+0x2a0>)
   80532:	47a0      	blx	r4
			Putstr(shellBuf);
   80534:	4d3d      	ldr	r5, [pc, #244]	; (8062c <Shell+0x2bc>)
   80536:	4629      	mov	r1, r5
   80538:	2067      	movs	r0, #103	; 0x67
   8053a:	47a0      	blx	r4
			Putstr("\r\n");
   8053c:	493c      	ldr	r1, [pc, #240]	; (80630 <Shell+0x2c0>)
   8053e:	2067      	movs	r0, #103	; 0x67
   80540:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   80542:	493c      	ldr	r1, [pc, #240]	; (80634 <Shell+0x2c4>)
   80544:	4628      	mov	r0, r5
   80546:	4b3c      	ldr	r3, [pc, #240]	; (80638 <Shell+0x2c8>)
   80548:	4798      	blx	r3
   8054a:	4606      	mov	r6, r0
   8054c:	9008      	str	r0, [sp, #32]
			if(pToken)
   8054e:	b918      	cbnz	r0, 80558 <Shell+0x1e8>
			state = IDLE;
   80550:	2200      	movs	r2, #0
   80552:	4b30      	ldr	r3, [pc, #192]	; (80614 <Shell+0x2a4>)
   80554:	701a      	strb	r2, [r3, #0]
			break;
   80556:	e72f      	b.n	803b8 <Shell+0x48>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   80558:	4b38      	ldr	r3, [pc, #224]	; (8063c <Shell+0x2cc>)
   8055a:	4798      	blx	r3
   8055c:	4601      	mov	r1, r0
   8055e:	4630      	mov	r0, r6
   80560:	4b37      	ldr	r3, [pc, #220]	; (80640 <Shell+0x2d0>)
   80562:	4798      	blx	r3
   80564:	b284      	uxth	r4, r0
   80566:	4b2b      	ldr	r3, [pc, #172]	; (80614 <Shell+0x2a4>)
   80568:	821c      	strh	r4, [r3, #16]
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   8056a:	4b36      	ldr	r3, [pc, #216]	; (80644 <Shell+0x2d4>)
   8056c:	881b      	ldrh	r3, [r3, #0]
   8056e:	b1b3      	cbz	r3, 8059e <Shell+0x22e>
   80570:	429c      	cmp	r4, r3
   80572:	d016      	beq.n	805a2 <Shell+0x232>
   80574:	2300      	movs	r3, #0
   80576:	4d33      	ldr	r5, [pc, #204]	; (80644 <Shell+0x2d4>)
   80578:	3301      	adds	r3, #1
   8057a:	f835 1033 	ldrh.w	r1, [r5, r3, lsl #3]
   8057e:	b109      	cbz	r1, 80584 <Shell+0x214>
   80580:	428c      	cmp	r4, r1
   80582:	d1f9      	bne.n	80578 <Shell+0x208>
				if(_cmdEntries[k].pCmdFunc)
   80584:	492f      	ldr	r1, [pc, #188]	; (80644 <Shell+0x2d4>)
   80586:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   8058a:	685c      	ldr	r4, [r3, #4]
   8058c:	b15c      	cbz	r4, 805a6 <Shell+0x236>
					_cmdEntries[k].pCmdFunc(0, shellBuf + strlen(pToken) + 1);
   8058e:	4630      	mov	r0, r6
   80590:	4b2a      	ldr	r3, [pc, #168]	; (8063c <Shell+0x2cc>)
   80592:	4798      	blx	r3
   80594:	4923      	ldr	r1, [pc, #140]	; (80624 <Shell+0x2b4>)
   80596:	4401      	add	r1, r0
   80598:	2000      	movs	r0, #0
   8059a:	47a0      	blx	r4
   8059c:	e7d8      	b.n	80550 <Shell+0x1e0>
				k = 0;
   8059e:	2300      	movs	r3, #0
   805a0:	e7f0      	b.n	80584 <Shell+0x214>
   805a2:	2300      	movs	r3, #0
   805a4:	e7ee      	b.n	80584 <Shell+0x214>
					sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   805a6:	4c28      	ldr	r4, [pc, #160]	; (80648 <Shell+0x2d8>)
   805a8:	b282      	uxth	r2, r0
   805aa:	4928      	ldr	r1, [pc, #160]	; (8064c <Shell+0x2dc>)
   805ac:	4620      	mov	r0, r4
   805ae:	4b28      	ldr	r3, [pc, #160]	; (80650 <Shell+0x2e0>)
   805b0:	4798      	blx	r3
					Putstr(buf);
   805b2:	4621      	mov	r1, r4
   805b4:	2067      	movs	r0, #103	; 0x67
   805b6:	4b16      	ldr	r3, [pc, #88]	; (80610 <Shell+0x2a0>)
   805b8:	4798      	blx	r3
   805ba:	e7c9      	b.n	80550 <Shell+0x1e0>
			Putch(_kbhitChar);
   805bc:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
   805c0:	2066      	movs	r0, #102	; 0x66
   805c2:	4b13      	ldr	r3, [pc, #76]	; (80610 <Shell+0x2a0>)
   805c4:	4798      	blx	r3
			break;
   805c6:	e6f7      	b.n	803b8 <Shell+0x48>
		k++; if(flashSequ[k]==0) k=0;
   805c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   805ca:	3401      	adds	r4, #1
   805cc:	9409      	str	r4, [sp, #36]	; 0x24
   805ce:	4b21      	ldr	r3, [pc, #132]	; (80654 <Shell+0x2e4>)
   805d0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   805d4:	b133      	cbz	r3, 805e4 <Shell+0x274>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   805d6:	f014 0f01 	tst.w	r4, #1
   805da:	d004      	beq.n	805e6 <Shell+0x276>
		else gpio_set_pin_low(LED0_GPIO);
   805dc:	203b      	movs	r0, #59	; 0x3b
   805de:	4b0b      	ldr	r3, [pc, #44]	; (8060c <Shell+0x29c>)
   805e0:	4798      	blx	r3
   805e2:	e003      	b.n	805ec <Shell+0x27c>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   805e4:	2400      	movs	r4, #0
   805e6:	203b      	movs	r0, #59	; 0x3b
   805e8:	4b1b      	ldr	r3, [pc, #108]	; (80658 <Shell+0x2e8>)
   805ea:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   805ec:	4b19      	ldr	r3, [pc, #100]	; (80654 <Shell+0x2e4>)
   805ee:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   805f2:	9300      	str	r3, [sp, #0]
   805f4:	4623      	mov	r3, r4
   805f6:	2202      	movs	r2, #2
   805f8:	4907      	ldr	r1, [pc, #28]	; (80618 <Shell+0x2a8>)
   805fa:	2066      	movs	r0, #102	; 0x66
   805fc:	4c07      	ldr	r4, [pc, #28]	; (8061c <Shell+0x2ac>)
   805fe:	47a0      	blx	r4
		break;
   80600:	e6da      	b.n	803b8 <Shell+0x48>
   80602:	bf00      	nop
   80604:	20070538 	.word	0x20070538
   80608:	00080fb9 	.word	0x00080fb9
   8060c:	00080f7d 	.word	0x00080f7d
   80610:	0008066d 	.word	0x0008066d
   80614:	20070fbc 	.word	0x20070fbc
   80618:	00080371 	.word	0x00080371
   8061c:	00080875 	.word	0x00080875
   80620:	00085dc8 	.word	0x00085dc8
   80624:	20070fd1 	.word	0x20070fd1
   80628:	00085dcc 	.word	0x00085dcc
   8062c:	20070fd0 	.word	0x20070fd0
   80630:	00085e64 	.word	0x00085e64
   80634:	00085dd4 	.word	0x00085dd4
   80638:	00081681 	.word	0x00081681
   8063c:	00081625 	.word	0x00081625
   80640:	0008028d 	.word	0x0008028d
   80644:	00085e04 	.word	0x00085e04
   80648:	20071330 	.word	0x20071330
   8064c:	00085dd8 	.word	0x00085dd8
   80650:	000815d9 	.word	0x000815d9
   80654:	00085df0 	.word	0x00085df0
   80658:	00080f63 	.word	0x00080f63

0008065c <_cmd_set>:
	//////////////////LIST TERMINATOR ////////////////////////////
	{	0,	NULL			}	
};

void _cmd_set(uint32_t sc, void* pParam)
{
   8065c:	b508      	push	{r3, lr}
	Putstr(pParam);
   8065e:	2067      	movs	r0, #103	; 0x67
   80660:	4b01      	ldr	r3, [pc, #4]	; (80668 <_cmd_set+0xc>)
   80662:	4798      	blx	r3
   80664:	bd08      	pop	{r3, pc}
   80666:	bf00      	nop
   80668:	0008066d 	.word	0x0008066d

0008066c <Shellcom>:
 ////// Nicely shortcuts .............. ///////////////////////
 #define pTxWrite		shellcom.pTxWrite
 #define pTxRead		shellcom.pTxRead

 uint32_t Shellcom(uint32_t sc , ...)
 {
   8066c:	b40f      	push	{r0, r1, r2, r3}
   8066e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(sc)
   80670:	9906      	ldr	r1, [sp, #24]
   80672:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   80676:	2b04      	cmp	r3, #4
   80678:	f200 809a 	bhi.w	807b0 <Shellcom+0x144>
   8067c:	e8df f003 	tbb	[pc, r3]
   80680:	236e9845 	.word	0x236e9845
   80684:	03          	.byte	0x03
   80685:	00          	.byte	0x00
#undef _pStr
		break;
	case SHELLCOM_PUTSTRLEN:
#define _pStr pa1
#define _len  pa2
	while(_len)
   80686:	9d08      	ldr	r5, [sp, #32]
   80688:	2d00      	cmp	r5, #0
   8068a:	d062      	beq.n	80752 <Shellcom+0xe6>
	{
		*pTxWrite++ = *(char*)_pStr++; _len--;
   8068c:	4c4b      	ldr	r4, [pc, #300]	; (807bc <Shellcom+0x150>)
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   8068e:	4e4c      	ldr	r6, [pc, #304]	; (807c0 <Shellcom+0x154>)
   80690:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80694:	6823      	ldr	r3, [r4, #0]
   80696:	1c5a      	adds	r2, r3, #1
   80698:	6022      	str	r2, [r4, #0]
   8069a:	9a07      	ldr	r2, [sp, #28]
   8069c:	1c51      	adds	r1, r2, #1
   8069e:	9107      	str	r1, [sp, #28]
   806a0:	7812      	ldrb	r2, [r2, #0]
   806a2:	701a      	strb	r2, [r3, #0]
   806a4:	3d01      	subs	r5, #1
   806a6:	9508      	str	r5, [sp, #32]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   806a8:	6823      	ldr	r3, [r4, #0]
   806aa:	42b3      	cmp	r3, r6
   806ac:	bf28      	it	cs
   806ae:	6027      	strcs	r7, [r4, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   806b0:	6822      	ldr	r2, [r4, #0]
   806b2:	6863      	ldr	r3, [r4, #4]
   806b4:	429a      	cmp	r2, r3
   806b6:	d075      	beq.n	807a4 <Shellcom+0x138>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   806b8:	2102      	movs	r1, #2
   806ba:	4842      	ldr	r0, [pc, #264]	; (807c4 <Shellcom+0x158>)
   806bc:	4b42      	ldr	r3, [pc, #264]	; (807c8 <Shellcom+0x15c>)
   806be:	4798      	blx	r3
	while(_len)
   806c0:	2d00      	cmp	r5, #0
   806c2:	d1e7      	bne.n	80694 <Shellcom+0x28>
   806c4:	e045      	b.n	80752 <Shellcom+0xe6>
		while(*(char*)_pStr)
   806c6:	9d07      	ldr	r5, [sp, #28]
   806c8:	462a      	mov	r2, r5
   806ca:	782b      	ldrb	r3, [r5, #0]
   806cc:	2b00      	cmp	r3, #0
   806ce:	d040      	beq.n	80752 <Shellcom+0xe6>
   806d0:	3501      	adds	r5, #1
			*pTxWrite++ = *(char*)_pStr++;
   806d2:	4c3a      	ldr	r4, [pc, #232]	; (807bc <Shellcom+0x150>)
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   806d4:	4e3a      	ldr	r6, [pc, #232]	; (807c0 <Shellcom+0x154>)
   806d6:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
			*pTxWrite++ = *(char*)_pStr++;
   806da:	6823      	ldr	r3, [r4, #0]
   806dc:	1c59      	adds	r1, r3, #1
   806de:	6021      	str	r1, [r4, #0]
   806e0:	9507      	str	r5, [sp, #28]
   806e2:	7812      	ldrb	r2, [r2, #0]
   806e4:	701a      	strb	r2, [r3, #0]
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   806e6:	6823      	ldr	r3, [r4, #0]
   806e8:	42b3      	cmp	r3, r6
   806ea:	bf28      	it	cs
   806ec:	6027      	strcs	r7, [r4, #0]
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   806ee:	6822      	ldr	r2, [r4, #0]
   806f0:	6863      	ldr	r3, [r4, #4]
   806f2:	429a      	cmp	r2, r3
   806f4:	d050      	beq.n	80798 <Shellcom+0x12c>
			usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   806f6:	2102      	movs	r1, #2
   806f8:	4832      	ldr	r0, [pc, #200]	; (807c4 <Shellcom+0x158>)
   806fa:	4b33      	ldr	r3, [pc, #204]	; (807c8 <Shellcom+0x15c>)
   806fc:	4798      	blx	r3
		while(*(char*)_pStr)
   806fe:	462a      	mov	r2, r5
   80700:	f815 3b01 	ldrb.w	r3, [r5], #1
   80704:	2b00      	cmp	r3, #0
   80706:	d1e8      	bne.n	806da <Shellcom+0x6e>
   80708:	e023      	b.n	80752 <Shellcom+0xe6>
		pTxWrite = pTxRead = shellcomTxBuf;
   8070a:	4b2c      	ldr	r3, [pc, #176]	; (807bc <Shellcom+0x150>)
   8070c:	4a2f      	ldr	r2, [pc, #188]	; (807cc <Shellcom+0x160>)
   8070e:	605a      	str	r2, [r3, #4]
   80710:	601a      	str	r2, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80712:	2011      	movs	r0, #17
   80714:	4b2e      	ldr	r3, [pc, #184]	; (807d0 <Shellcom+0x164>)
   80716:	4798      	blx	r3
		usart_init_rs232(USART_SERIAL, &usart_console_settings,	sysclk_get_cpu_hz());
   80718:	4c2a      	ldr	r4, [pc, #168]	; (807c4 <Shellcom+0x158>)
   8071a:	4a2e      	ldr	r2, [pc, #184]	; (807d4 <Shellcom+0x168>)
   8071c:	492e      	ldr	r1, [pc, #184]	; (807d8 <Shellcom+0x16c>)
   8071e:	4620      	mov	r0, r4
   80720:	4b2e      	ldr	r3, [pc, #184]	; (807dc <Shellcom+0x170>)
   80722:	4798      	blx	r3
		gpio_configure_pin(USART_SERIAL_TXD_IDX,USART_SERIAL_TXD_FLAGS);
   80724:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80728:	200b      	movs	r0, #11
   8072a:	4d2d      	ldr	r5, [pc, #180]	; (807e0 <Shellcom+0x174>)
   8072c:	47a8      	blx	r5
		gpio_configure_pin(USART_SERIAL_RXD_IDX,USART_SERIAL_RXD_FLAGS);
   8072e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80732:	200a      	movs	r0, #10
   80734:	47a8      	blx	r5
		usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
   80736:	2101      	movs	r1, #1
   80738:	4620      	mov	r0, r4
   8073a:	4b23      	ldr	r3, [pc, #140]	; (807c8 <Shellcom+0x15c>)
   8073c:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8073e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80742:	4b28      	ldr	r3, [pc, #160]	; (807e4 <Shellcom+0x178>)
   80744:	601a      	str	r2, [r3, #0]
		usart_enable_tx(USART_SERIAL);
   80746:	4620      	mov	r0, r4
   80748:	4b27      	ldr	r3, [pc, #156]	; (807e8 <Shellcom+0x17c>)
   8074a:	4798      	blx	r3
		usart_enable_rx(USART_SERIAL);
   8074c:	4620      	mov	r0, r4
   8074e:	4b27      	ldr	r3, [pc, #156]	; (807ec <Shellcom+0x180>)
   80750:	4798      	blx	r3
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80752:	2000      	movs	r0, #0
   80754:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80758:	b004      	add	sp, #16
   8075a:	4770      	bx	lr
		*pTxWrite++ = _ch;
   8075c:	4b17      	ldr	r3, [pc, #92]	; (807bc <Shellcom+0x150>)
   8075e:	681a      	ldr	r2, [r3, #0]
   80760:	1c51      	adds	r1, r2, #1
   80762:	6019      	str	r1, [r3, #0]
   80764:	9907      	ldr	r1, [sp, #28]
   80766:	7011      	strb	r1, [r2, #0]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80768:	681a      	ldr	r2, [r3, #0]
   8076a:	4b15      	ldr	r3, [pc, #84]	; (807c0 <Shellcom+0x154>)
   8076c:	429a      	cmp	r2, r3
   8076e:	d303      	bcc.n	80778 <Shellcom+0x10c>
   80770:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80774:	4b11      	ldr	r3, [pc, #68]	; (807bc <Shellcom+0x150>)
   80776:	601a      	str	r2, [r3, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80778:	4b10      	ldr	r3, [pc, #64]	; (807bc <Shellcom+0x150>)
   8077a:	681a      	ldr	r2, [r3, #0]
   8077c:	685b      	ldr	r3, [r3, #4]
   8077e:	429a      	cmp	r2, r3
   80780:	d004      	beq.n	8078c <Shellcom+0x120>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80782:	2102      	movs	r1, #2
   80784:	480f      	ldr	r0, [pc, #60]	; (807c4 <Shellcom+0x158>)
   80786:	4b10      	ldr	r3, [pc, #64]	; (807c8 <Shellcom+0x15c>)
   80788:	4798      	blx	r3
		break;
   8078a:	e7e2      	b.n	80752 <Shellcom+0xe6>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   8078c:	4b18      	ldr	r3, [pc, #96]	; (807f0 <Shellcom+0x184>)
   8078e:	681b      	ldr	r3, [r3, #0]
   80790:	2166      	movs	r1, #102	; 0x66
   80792:	2017      	movs	r0, #23
   80794:	4798      	blx	r3
   80796:	e7f4      	b.n	80782 <Shellcom+0x116>
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80798:	4b15      	ldr	r3, [pc, #84]	; (807f0 <Shellcom+0x184>)
   8079a:	681b      	ldr	r3, [r3, #0]
   8079c:	2167      	movs	r1, #103	; 0x67
   8079e:	2017      	movs	r0, #23
   807a0:	4798      	blx	r3
   807a2:	e7a8      	b.n	806f6 <Shellcom+0x8a>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   807a4:	4b12      	ldr	r3, [pc, #72]	; (807f0 <Shellcom+0x184>)
   807a6:	681b      	ldr	r3, [r3, #0]
   807a8:	2167      	movs	r1, #103	; 0x67
   807aa:	2017      	movs	r0, #23
   807ac:	4798      	blx	r3
   807ae:	e783      	b.n	806b8 <Shellcom+0x4c>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
   807b0:	4b0f      	ldr	r3, [pc, #60]	; (807f0 <Shellcom+0x184>)
   807b2:	681b      	ldr	r3, [r3, #0]
   807b4:	200d      	movs	r0, #13
   807b6:	4798      	blx	r3
   807b8:	e7cb      	b.n	80752 <Shellcom+0xe6>
   807ba:	bf00      	nop
   807bc:	200710e0 	.word	0x200710e0
   807c0:	200711e8 	.word	0x200711e8
   807c4:	40098000 	.word	0x40098000
   807c8:	00080281 	.word	0x00080281
   807cc:	200710e8 	.word	0x200710e8
   807d0:	000812ad 	.word	0x000812ad
   807d4:	0501bd00 	.word	0x0501bd00
   807d8:	00085e14 	.word	0x00085e14
   807dc:	00080221 	.word	0x00080221
   807e0:	00080fb9 	.word	0x00080fb9
   807e4:	e000e100 	.word	0xe000e100
   807e8:	00080275 	.word	0x00080275
   807ec:	0008027b 	.word	0x0008027b
   807f0:	20070538 	.word	0x20070538

000807f4 <USART0_Handler>:
	 _SHELL_KBHIT = 1
 };

 
 void USART0_Handler()
 {
   807f4:	b530      	push	{r4, r5, lr}
   807f6:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
   807f8:	4817      	ldr	r0, [pc, #92]	; (80858 <USART0_Handler+0x64>)
   807fa:	4b18      	ldr	r3, [pc, #96]	; (8085c <USART0_Handler+0x68>)
   807fc:	4798      	blx	r3
   807fe:	4604      	mov	r4, r0

	if(dw_status & US_CSR_RXRDY)
   80800:	f010 0f01 	tst.w	r0, #1
   80804:	d116      	bne.n	80834 <USART0_Handler+0x40>
	{
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
	}

	if(dw_status & US_CSR_TXRDY)
   80806:	f014 0f02 	tst.w	r4, #2
   8080a:	d011      	beq.n	80830 <USART0_Handler+0x3c>
	{
				
		if(pTxRead!=pTxWrite)
   8080c:	4a14      	ldr	r2, [pc, #80]	; (80860 <USART0_Handler+0x6c>)
   8080e:	6853      	ldr	r3, [r2, #4]
   80810:	6812      	ldr	r2, [r2, #0]
   80812:	4293      	cmp	r3, r2
   80814:	d01a      	beq.n	8084c <USART0_Handler+0x58>
		{
			USART_SERIAL->US_THR = US_THR_TXCHR(*pTxRead++);
   80816:	1c5a      	adds	r2, r3, #1
   80818:	4911      	ldr	r1, [pc, #68]	; (80860 <USART0_Handler+0x6c>)
   8081a:	604a      	str	r2, [r1, #4]
   8081c:	7819      	ldrb	r1, [r3, #0]
   8081e:	4b0e      	ldr	r3, [pc, #56]	; (80858 <USART0_Handler+0x64>)
   80820:	61d9      	str	r1, [r3, #28]
			if(pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxRead = shellcomTxBuf;
   80822:	4b10      	ldr	r3, [pc, #64]	; (80864 <USART0_Handler+0x70>)
   80824:	429a      	cmp	r2, r3
   80826:	d303      	bcc.n	80830 <USART0_Handler+0x3c>
   80828:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   8082c:	4b0c      	ldr	r3, [pc, #48]	; (80860 <USART0_Handler+0x6c>)
   8082e:	605a      	str	r2, [r3, #4]
		else
		{
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
		}
	}
   80830:	b003      	add	sp, #12
   80832:	bd30      	pop	{r4, r5, pc}
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
   80834:	4b08      	ldr	r3, [pc, #32]	; (80858 <USART0_Handler+0x64>)
   80836:	699b      	ldr	r3, [r3, #24]
   80838:	2200      	movs	r2, #0
   8083a:	9200      	str	r2, [sp, #0]
   8083c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   80840:	2201      	movs	r2, #1
   80842:	4909      	ldr	r1, [pc, #36]	; (80868 <USART0_Handler+0x74>)
   80844:	2066      	movs	r0, #102	; 0x66
   80846:	4d09      	ldr	r5, [pc, #36]	; (8086c <USART0_Handler+0x78>)
   80848:	47a8      	blx	r5
   8084a:	e7dc      	b.n	80806 <USART0_Handler+0x12>
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
   8084c:	2102      	movs	r1, #2
   8084e:	4802      	ldr	r0, [pc, #8]	; (80858 <USART0_Handler+0x64>)
   80850:	4b07      	ldr	r3, [pc, #28]	; (80870 <USART0_Handler+0x7c>)
   80852:	4798      	blx	r3
   80854:	e7ec      	b.n	80830 <USART0_Handler+0x3c>
   80856:	bf00      	nop
   80858:	40098000 	.word	0x40098000
   8085c:	00080289 	.word	0x00080289
   80860:	200710e0 	.word	0x200710e0
   80864:	200711e8 	.word	0x200711e8
   80868:	00080371 	.word	0x00080371
   8086c:	00080875 	.word	0x00080875
   80870:	00080285 	.word	0x00080285

00080874 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   80874:	b40f      	push	{r0, r1, r2, r3}
   80876:	b5f0      	push	{r4, r5, r6, r7, lr}
   80878:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   8087a:	9908      	ldr	r1, [sp, #32]
   8087c:	2964      	cmp	r1, #100	; 0x64
   8087e:	d024      	beq.n	808ca <Taskman+0x56>
   80880:	d917      	bls.n	808b2 <Taskman+0x3e>
   80882:	2966      	cmp	r1, #102	; 0x66
   80884:	d067      	beq.n	80956 <Taskman+0xe2>
   80886:	2967      	cmp	r1, #103	; 0x67
   80888:	f040 80c8 	bne.w	80a1c <Taskman+0x1a8>
#undef _delay
#undef k
		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   8088c:	4a66      	ldr	r2, [pc, #408]	; (80a28 <Taskman+0x1b4>)
   8088e:	6853      	ldr	r3, [r2, #4]
   80890:	6812      	ldr	r2, [r2, #0]
   80892:	4293      	cmp	r3, r2
   80894:	d059      	beq.n	8094a <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   80896:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   80898:	6858      	ldr	r0, [r3, #4]
   8089a:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   8089c:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   8089e:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   808a0:	4c62      	ldr	r4, [pc, #392]	; (80a2c <Taskman+0x1b8>)
   808a2:	42a3      	cmp	r3, r4
   808a4:	f0c0 80a3 	bcc.w	809ee <Taskman+0x17a>
   808a8:	4c61      	ldr	r4, [pc, #388]	; (80a30 <Taskman+0x1bc>)
   808aa:	4b5f      	ldr	r3, [pc, #380]	; (80a28 <Taskman+0x1b4>)
   808ac:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   808ae:	4790      	blx	r2
   808b0:	e04b      	b.n	8094a <Taskman+0xd6>
	switch(sc)
   808b2:	2901      	cmp	r1, #1
   808b4:	f040 80b2 	bne.w	80a1c <Taskman+0x1a8>
		}
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   808b8:	2002      	movs	r0, #2
   808ba:	4b5e      	ldr	r3, [pc, #376]	; (80a34 <Taskman+0x1c0>)
   808bc:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   808be:	2500      	movs	r5, #0
   808c0:	9508      	str	r5, [sp, #32]
   808c2:	4c5d      	ldr	r4, [pc, #372]	; (80a38 <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   808c4:	462f      	mov	r7, r5
   808c6:	2666      	movs	r6, #102	; 0x66
   808c8:	e099      	b.n	809fe <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   808ca:	4b57      	ldr	r3, [pc, #348]	; (80a28 <Taskman+0x1b4>)
   808cc:	4a58      	ldr	r2, [pc, #352]	; (80a30 <Taskman+0x1bc>)
   808ce:	601a      	str	r2, [r3, #0]
   808d0:	605a      	str	r2, [r3, #4]
   808d2:	4b59      	ldr	r3, [pc, #356]	; (80a38 <Taskman+0x1c4>)
   808d4:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   808d8:	2200      	movs	r2, #0
   808da:	60da      	str	r2, [r3, #12]
   808dc:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   808de:	428b      	cmp	r3, r1
   808e0:	d1fb      	bne.n	808da <Taskman+0x66>
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   808e2:	4b56      	ldr	r3, [pc, #344]	; (80a3c <Taskman+0x1c8>)
   808e4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   808e8:	661a      	str	r2, [r3, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   808ea:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   808ec:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   808ee:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
#endif
	}

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
   808f2:	6f19      	ldr	r1, [r3, #112]	; 0x70
   808f4:	4311      	orrs	r1, r2
   808f6:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   808f8:	605a      	str	r2, [r3, #4]
   808fa:	201b      	movs	r0, #27
   808fc:	4b50      	ldr	r3, [pc, #320]	; (80a40 <Taskman+0x1cc>)
   808fe:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   80900:	4c50      	ldr	r4, [pc, #320]	; (80a44 <Taskman+0x1d0>)
   80902:	4a51      	ldr	r2, [pc, #324]	; (80a48 <Taskman+0x1d4>)
   80904:	2100      	movs	r1, #0
   80906:	4620      	mov	r0, r4
   80908:	4b50      	ldr	r3, [pc, #320]	; (80a4c <Taskman+0x1d8>)
   8090a:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   8090c:	f44f 7224 	mov.w	r2, #656	; 0x290
   80910:	2100      	movs	r1, #0
   80912:	4620      	mov	r0, r4
   80914:	4b4e      	ldr	r3, [pc, #312]	; (80a50 <Taskman+0x1dc>)
   80916:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   80918:	f240 12cb 	movw	r2, #459	; 0x1cb
   8091c:	2100      	movs	r1, #0
   8091e:	4620      	mov	r0, r4
   80920:	4b4c      	ldr	r3, [pc, #304]	; (80a54 <Taskman+0x1e0>)
   80922:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   80924:	2100      	movs	r1, #0
   80926:	4620      	mov	r0, r4
   80928:	4b4b      	ldr	r3, [pc, #300]	; (80a58 <Taskman+0x1e4>)
   8092a:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   8092c:	4b4b      	ldr	r3, [pc, #300]	; (80a5c <Taskman+0x1e8>)
   8092e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80932:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   80936:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   8093a:	2100      	movs	r1, #0
   8093c:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80940:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   80942:	2204      	movs	r2, #4
   80944:	4620      	mov	r0, r4
   80946:	4b46      	ldr	r3, [pc, #280]	; (80a60 <Taskman+0x1ec>)
   80948:	4798      	blx	r3
 }
   8094a:	2000      	movs	r0, #0
   8094c:	b003      	add	sp, #12
   8094e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   80952:	b004      	add	sp, #16
   80954:	4770      	bx	lr
		cpu_irq_enter_critical();
   80956:	4b43      	ldr	r3, [pc, #268]	; (80a64 <Taskman+0x1f0>)
   80958:	4798      	blx	r3
		if(_delay)
   8095a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8095c:	b34d      	cbz	r5, 809b2 <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   8095e:	2300      	movs	r3, #0
   80960:	9308      	str	r3, [sp, #32]
   80962:	4b35      	ldr	r3, [pc, #212]	; (80a38 <Taskman+0x1c4>)
   80964:	68db      	ldr	r3, [r3, #12]
   80966:	b1ab      	cbz	r3, 80994 <Taskman+0x120>
   80968:	2301      	movs	r3, #1
   8096a:	9308      	str	r3, [sp, #32]
   8096c:	4a32      	ldr	r2, [pc, #200]	; (80a38 <Taskman+0x1c4>)
   8096e:	2000      	movs	r0, #0
   80970:	461c      	mov	r4, r3
   80972:	69d1      	ldr	r1, [r2, #28]
   80974:	b159      	cbz	r1, 8098e <Taskman+0x11a>
   80976:	3301      	adds	r3, #1
   80978:	3210      	adds	r2, #16
   8097a:	4620      	mov	r0, r4
   8097c:	2b0a      	cmp	r3, #10
   8097e:	d1f8      	bne.n	80972 <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   80980:	4b39      	ldr	r3, [pc, #228]	; (80a68 <Taskman+0x1f4>)
   80982:	681b      	ldr	r3, [r3, #0]
   80984:	2100      	movs	r1, #0
   80986:	2016      	movs	r0, #22
   80988:	4798      	blx	r3
   8098a:	230a      	movs	r3, #10
   8098c:	e002      	b.n	80994 <Taskman+0x120>
   8098e:	b970      	cbnz	r0, 809ae <Taskman+0x13a>
   80990:	2b0a      	cmp	r3, #10
   80992:	d0f5      	beq.n	80980 <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   80994:	4928      	ldr	r1, [pc, #160]	; (80a38 <Taskman+0x1c4>)
   80996:	011b      	lsls	r3, r3, #4
   80998:	18ca      	adds	r2, r1, r3
   8099a:	9809      	ldr	r0, [sp, #36]	; 0x24
   8099c:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   8099e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   809a0:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   809a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   809a4:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   809a6:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   809a8:	4b30      	ldr	r3, [pc, #192]	; (80a6c <Taskman+0x1f8>)
   809aa:	4798      	blx	r3
		break;
   809ac:	e7cd      	b.n	8094a <Taskman+0xd6>
   809ae:	9308      	str	r3, [sp, #32]
   809b0:	e7ee      	b.n	80990 <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   809b2:	4b1d      	ldr	r3, [pc, #116]	; (80a28 <Taskman+0x1b4>)
   809b4:	681a      	ldr	r2, [r3, #0]
   809b6:	9909      	ldr	r1, [sp, #36]	; 0x24
   809b8:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   809ba:	681b      	ldr	r3, [r3, #0]
   809bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   809be:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   809c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   809c2:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   809c4:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   809c6:	4a19      	ldr	r2, [pc, #100]	; (80a2c <Taskman+0x1b8>)
   809c8:	4293      	cmp	r3, r2
   809ca:	d20c      	bcs.n	809e6 <Taskman+0x172>
			taskman.pPush++;
   809cc:	4a16      	ldr	r2, [pc, #88]	; (80a28 <Taskman+0x1b4>)
   809ce:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   809d0:	4b15      	ldr	r3, [pc, #84]	; (80a28 <Taskman+0x1b4>)
   809d2:	681a      	ldr	r2, [r3, #0]
   809d4:	685b      	ldr	r3, [r3, #4]
   809d6:	429a      	cmp	r2, r3
   809d8:	d1e6      	bne.n	809a8 <Taskman+0x134>
   809da:	4b23      	ldr	r3, [pc, #140]	; (80a68 <Taskman+0x1f4>)
   809dc:	681b      	ldr	r3, [r3, #0]
   809de:	2100      	movs	r1, #0
   809e0:	2015      	movs	r0, #21
   809e2:	4798      	blx	r3
   809e4:	e7e0      	b.n	809a8 <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   809e6:	4a12      	ldr	r2, [pc, #72]	; (80a30 <Taskman+0x1bc>)
   809e8:	4b0f      	ldr	r3, [pc, #60]	; (80a28 <Taskman+0x1b4>)
   809ea:	601a      	str	r2, [r3, #0]
   809ec:	e7f0      	b.n	809d0 <Taskman+0x15c>
			taskman.pPop++;
   809ee:	4c0e      	ldr	r4, [pc, #56]	; (80a28 <Taskman+0x1b4>)
   809f0:	6063      	str	r3, [r4, #4]
   809f2:	e75c      	b.n	808ae <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   809f4:	3501      	adds	r5, #1
   809f6:	9508      	str	r5, [sp, #32]
   809f8:	3410      	adds	r4, #16
   809fa:	2d0a      	cmp	r5, #10
   809fc:	d0a5      	beq.n	8094a <Taskman+0xd6>
			if(dTasks[k].delay)
   809fe:	68e3      	ldr	r3, [r4, #12]
   80a00:	2b00      	cmp	r3, #0
   80a02:	d0f7      	beq.n	809f4 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   80a04:	3b01      	subs	r3, #1
   80a06:	60e3      	str	r3, [r4, #12]
   80a08:	2b00      	cmp	r3, #0
   80a0a:	d1f3      	bne.n	809f4 <Taskman+0x180>
					PushTask(
   80a0c:	68a3      	ldr	r3, [r4, #8]
   80a0e:	6862      	ldr	r2, [r4, #4]
   80a10:	6821      	ldr	r1, [r4, #0]
   80a12:	9700      	str	r7, [sp, #0]
   80a14:	4630      	mov	r0, r6
   80a16:	f7ff ff2d 	bl	80874 <Taskman>
   80a1a:	e7eb      	b.n	809f4 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   80a1c:	4b12      	ldr	r3, [pc, #72]	; (80a68 <Taskman+0x1f4>)
   80a1e:	681b      	ldr	r3, [r3, #0]
   80a20:	200b      	movs	r0, #11
   80a22:	4798      	blx	r3
	return 0;
   80a24:	e791      	b.n	8094a <Taskman+0xd6>
   80a26:	bf00      	nop
   80a28:	20071288 	.word	0x20071288
   80a2c:	20071288 	.word	0x20071288
   80a30:	200711e8 	.word	0x200711e8
   80a34:	00080f97 	.word	0x00080f97
   80a38:	20071290 	.word	0x20071290
   80a3c:	400e1000 	.word	0x400e1000
   80a40:	000812ad 	.word	0x000812ad
   80a44:	40080000 	.word	0x40080000
   80a48:	0009c003 	.word	0x0009c003
   80a4c:	00080161 	.word	0x00080161
   80a50:	00080189 	.word	0x00080189
   80a54:	00080181 	.word	0x00080181
   80a58:	00080179 	.word	0x00080179
   80a5c:	e000e100 	.word	0xe000e100
   80a60:	00080191 	.word	0x00080191
   80a64:	00080ddd 	.word	0x00080ddd
   80a68:	20070538 	.word	0x20070538
   80a6c:	00080e19 	.word	0x00080e19

00080a70 <TC0_Handler>:
 {
   80a70:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   80a72:	2100      	movs	r1, #0
   80a74:	4803      	ldr	r0, [pc, #12]	; (80a84 <TC0_Handler+0x14>)
   80a76:	4b04      	ldr	r3, [pc, #16]	; (80a88 <TC0_Handler+0x18>)
   80a78:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   80a7a:	2001      	movs	r0, #1
   80a7c:	4b03      	ldr	r3, [pc, #12]	; (80a8c <TC0_Handler+0x1c>)
   80a7e:	4798      	blx	r3
   80a80:	bd08      	pop	{r3, pc}
   80a82:	bf00      	nop
   80a84:	40080000 	.word	0x40080000
   80a88:	00080199 	.word	0x00080199
   80a8c:	00080875 	.word	0x00080875

00080a90 <Appli>:
 */ 

 #include "./Headers/appli.h"

 uint32_t Appli(uint32_t sc, ...)
 {
   80a90:	b40f      	push	{r0, r1, r2, r3}
   80a92:	b510      	push	{r4, lr}
   80a94:	b082      	sub	sp, #8
   80a96:	9904      	ldr	r1, [sp, #16]
	switch (sc)
   80a98:	2964      	cmp	r1, #100	; 0x64
   80a9a:	d006      	beq.n	80aaa <Appli+0x1a>
   80a9c:	2966      	cmp	r1, #102	; 0x66
   80a9e:	d01a      	beq.n	80ad6 <Appli+0x46>
	case APPLI_TEST:
		LcdPutstr("Hello World!",0,0);
		Putstr("LCD Hello World!\r\n");
		break;
	default:
		Error(ERR_APPLI_SWITCH_BAD_SC, sc);
   80aa0:	4b12      	ldr	r3, [pc, #72]	; (80aec <Appli+0x5c>)
   80aa2:	681b      	ldr	r3, [r3, #0]
   80aa4:	200f      	movs	r0, #15
   80aa6:	4798      	blx	r3
   80aa8:	e00f      	b.n	80aca <Appli+0x3a>
		Putstr("APPLI_NEW\r\n");
   80aaa:	4911      	ldr	r1, [pc, #68]	; (80af0 <Appli+0x60>)
   80aac:	2067      	movs	r0, #103	; 0x67
   80aae:	4b11      	ldr	r3, [pc, #68]	; (80af4 <Appli+0x64>)
   80ab0:	4798      	blx	r3
		Lcd(LCD_NEW);
   80ab2:	2064      	movs	r0, #100	; 0x64
   80ab4:	4b10      	ldr	r3, [pc, #64]	; (80af8 <Appli+0x68>)
   80ab6:	4798      	blx	r3
		PushTask(Appli,APPLI_TEST,0,3000);
   80ab8:	f640 33b8 	movw	r3, #3000	; 0xbb8
   80abc:	9300      	str	r3, [sp, #0]
   80abe:	2300      	movs	r3, #0
   80ac0:	2266      	movs	r2, #102	; 0x66
   80ac2:	490e      	ldr	r1, [pc, #56]	; (80afc <Appli+0x6c>)
   80ac4:	4610      	mov	r0, r2
   80ac6:	4c0e      	ldr	r4, [pc, #56]	; (80b00 <Appli+0x70>)
   80ac8:	47a0      	blx	r4
	}
	return 0;
 }
   80aca:	2000      	movs	r0, #0
   80acc:	b002      	add	sp, #8
   80ace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80ad2:	b004      	add	sp, #16
   80ad4:	4770      	bx	lr
		LcdPutstr("Hello World!",0,0);
   80ad6:	2300      	movs	r3, #0
   80ad8:	461a      	mov	r2, r3
   80ada:	490a      	ldr	r1, [pc, #40]	; (80b04 <Appli+0x74>)
   80adc:	2066      	movs	r0, #102	; 0x66
   80ade:	4c06      	ldr	r4, [pc, #24]	; (80af8 <Appli+0x68>)
   80ae0:	47a0      	blx	r4
		Putstr("LCD Hello World!\r\n");
   80ae2:	4909      	ldr	r1, [pc, #36]	; (80b08 <Appli+0x78>)
   80ae4:	2067      	movs	r0, #103	; 0x67
   80ae6:	4b03      	ldr	r3, [pc, #12]	; (80af4 <Appli+0x64>)
   80ae8:	4798      	blx	r3
		break;
   80aea:	e7ee      	b.n	80aca <Appli+0x3a>
   80aec:	20070538 	.word	0x20070538
   80af0:	00085e2c 	.word	0x00085e2c
   80af4:	0008066d 	.word	0x0008066d
   80af8:	00080b0d 	.word	0x00080b0d
   80afc:	00080a91 	.word	0x00080a91
   80b00:	00080875 	.word	0x00080875
   80b04:	00085e38 	.word	0x00085e38
   80b08:	00085e48 	.word	0x00085e48

00080b0c <Lcd>:
#define _LcdWriteData(data)		Lcd(_LCD_WRITE_DATA,(uint32_t)data)

/////////////////////////////////////////////////////////////////////////////////////

 uint32_t Lcd(uint32_t sc, ...)
 {
   80b0c:	b40f      	push	{r0, r1, r2, r3}
   80b0e:	b538      	push	{r3, r4, r5, lr}
	switch (sc)
   80b10:	9904      	ldr	r1, [sp, #16]
   80b12:	2904      	cmp	r1, #4
   80b14:	f000 80af 	beq.w	80c76 <Lcd+0x16a>
   80b18:	d829      	bhi.n	80b6e <Lcd+0x62>
   80b1a:	2902      	cmp	r1, #2
   80b1c:	f000 80a0 	beq.w	80c60 <Lcd+0x154>
   80b20:	f200 80d3 	bhi.w	80cca <Lcd+0x1be>
   80b24:	2901      	cmp	r1, #1
   80b26:	d129      	bne.n	80b7c <Lcd+0x70>


	//////// Private Services Implementation //////////////////////////////////////
	case _LCD_PUT_DATA:
#define data ((char)pa1)
		if(mIsBitsSet(data,LCD_DATA7_MSK)) gpio_set_pin_high(LCD_DATA7); //P1
   80b28:	9c05      	ldr	r4, [sp, #20]
   80b2a:	f014 0f80 	tst.w	r4, #128	; 0x80
   80b2e:	f04f 0039 	mov.w	r0, #57	; 0x39
   80b32:	bf14      	ite	ne
   80b34:	4b6c      	ldrne	r3, [pc, #432]	; (80ce8 <Lcd+0x1dc>)
		else gpio_set_pin_low(LCD_DATA7);
   80b36:	4b6d      	ldreq	r3, [pc, #436]	; (80cec <Lcd+0x1e0>)
   80b38:	4798      	blx	r3
		if(mIsBitsSet(data,LCD_DATA6_MSK)) gpio_set_pin_high(LCD_DATA6); //P2
   80b3a:	b2e4      	uxtb	r4, r4
   80b3c:	f014 0f40 	tst.w	r4, #64	; 0x40
   80b40:	f04f 005c 	mov.w	r0, #92	; 0x5c
   80b44:	bf14      	ite	ne
   80b46:	4b68      	ldrne	r3, [pc, #416]	; (80ce8 <Lcd+0x1dc>)
		else gpio_set_pin_low(LCD_DATA6);
   80b48:	4b68      	ldreq	r3, [pc, #416]	; (80cec <Lcd+0x1e0>)
   80b4a:	4798      	blx	r3
		if(mIsBitsSet(data,LCD_DATA5_MSK)) gpio_set_pin_high(LCD_DATA5); //P3
   80b4c:	f014 0f20 	tst.w	r4, #32
   80b50:	f04f 005a 	mov.w	r0, #90	; 0x5a
   80b54:	bf14      	ite	ne
   80b56:	4b64      	ldrne	r3, [pc, #400]	; (80ce8 <Lcd+0x1dc>)
		else gpio_set_pin_low(LCD_DATA5);
   80b58:	4b64      	ldreq	r3, [pc, #400]	; (80cec <Lcd+0x1e0>)
   80b5a:	4798      	blx	r3
		if(mIsBitsSet(data,LCD_DATA4_MSK)) gpio_set_pin_high(LCD_DATA4); //P4
   80b5c:	f014 0f10 	tst.w	r4, #16
   80b60:	f04f 0059 	mov.w	r0, #89	; 0x59
   80b64:	bf14      	ite	ne
   80b66:	4b60      	ldrne	r3, [pc, #384]	; (80ce8 <Lcd+0x1dc>)
		else gpio_set_pin_low(LCD_DATA4);
   80b68:	4b60      	ldreq	r3, [pc, #384]	; (80cec <Lcd+0x1e0>)
   80b6a:	4798      	blx	r3
   80b6c:	e073      	b.n	80c56 <Lcd+0x14a>
	switch (sc)
   80b6e:	2964      	cmp	r1, #100	; 0x64
   80b70:	d017      	beq.n	80ba2 <Lcd+0x96>
   80b72:	2966      	cmp	r1, #102	; 0x66
   80b74:	d007      	beq.n	80b86 <Lcd+0x7a>
   80b76:	2905      	cmp	r1, #5
   80b78:	f000 8092 	beq.w	80ca0 <Lcd+0x194>
		gpio_set_pin_low(LCD_RS);

		break;

	default:
		Error(ERR_LCD_SWITCH_BAD_SC, sc);
   80b7c:	4b5c      	ldr	r3, [pc, #368]	; (80cf0 <Lcd+0x1e4>)
   80b7e:	681b      	ldr	r3, [r3, #0]
   80b80:	2010      	movs	r0, #16
   80b82:	4798      	blx	r3
   80b84:	e067      	b.n	80c56 <Lcd+0x14a>
		while(*(char*)pStr)
   80b86:	9c05      	ldr	r4, [sp, #20]
   80b88:	7821      	ldrb	r1, [r4, #0]
   80b8a:	2900      	cmp	r1, #0
   80b8c:	d063      	beq.n	80c56 <Lcd+0x14a>
			_LcdWriteData(*(char*)pStr);
   80b8e:	2505      	movs	r5, #5
   80b90:	4628      	mov	r0, r5
   80b92:	f7ff ffbb 	bl	80b0c <Lcd>
			pStr++;
   80b96:	3401      	adds	r4, #1
   80b98:	9405      	str	r4, [sp, #20]
		while(*(char*)pStr)
   80b9a:	7821      	ldrb	r1, [r4, #0]
   80b9c:	2900      	cmp	r1, #0
   80b9e:	d1f7      	bne.n	80b90 <Lcd+0x84>
   80ba0:	e059      	b.n	80c56 <Lcd+0x14a>
		Putstr("lcd new \r\n");
   80ba2:	4954      	ldr	r1, [pc, #336]	; (80cf4 <Lcd+0x1e8>)
   80ba4:	2067      	movs	r0, #103	; 0x67
   80ba6:	4b54      	ldr	r3, [pc, #336]	; (80cf8 <Lcd+0x1ec>)
   80ba8:	4798      	blx	r3
		gpio_configure_pin(LCD_DATA4, LCD_PIN_FLAGS);
   80baa:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bae:	2059      	movs	r0, #89	; 0x59
   80bb0:	4c52      	ldr	r4, [pc, #328]	; (80cfc <Lcd+0x1f0>)
   80bb2:	47a0      	blx	r4
		gpio_configure_pin(LCD_DATA5, LCD_PIN_FLAGS);
   80bb4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bb8:	205a      	movs	r0, #90	; 0x5a
   80bba:	47a0      	blx	r4
		gpio_configure_pin(LCD_DATA6, LCD_PIN_FLAGS);
   80bbc:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bc0:	205c      	movs	r0, #92	; 0x5c
   80bc2:	47a0      	blx	r4
		gpio_configure_pin(LCD_DATA7, LCD_PIN_FLAGS);
   80bc4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bc8:	2039      	movs	r0, #57	; 0x39
   80bca:	47a0      	blx	r4
		gpio_configure_pin(LCD_E,	  LCD_PIN_FLAGS);
   80bcc:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bd0:	2067      	movs	r0, #103	; 0x67
   80bd2:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,    LCD_PIN_FLAGS);
   80bd4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80bd8:	2068      	movs	r0, #104	; 0x68
   80bda:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DATA4);
   80bdc:	2059      	movs	r0, #89	; 0x59
   80bde:	4c43      	ldr	r4, [pc, #268]	; (80cec <Lcd+0x1e0>)
   80be0:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DATA5);
   80be2:	205a      	movs	r0, #90	; 0x5a
   80be4:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DATA6);
   80be6:	205c      	movs	r0, #92	; 0x5c
   80be8:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DATA7);
   80bea:	2039      	movs	r0, #57	; 0x39
   80bec:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   80bee:	2068      	movs	r0, #104	; 0x68
   80bf0:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   80bf2:	2067      	movs	r0, #103	; 0x67
   80bf4:	47a0      	blx	r4
		delay_ms(100);			// SEQUENCE DISPLAY HAVEN
   80bf6:	4842      	ldr	r0, [pc, #264]	; (80d00 <Lcd+0x1f4>)
   80bf8:	4c42      	ldr	r4, [pc, #264]	; (80d04 <Lcd+0x1f8>)
   80bfa:	47a0      	blx	r4
		_LcdPutData(0x20);		//pas la valeur 0x30 !!!!!
   80bfc:	2120      	movs	r1, #32
   80bfe:	2001      	movs	r0, #1
   80c00:	f7ff ff84 	bl	80b0c <Lcd>
		_LcdNybble();
   80c04:	2002      	movs	r0, #2
   80c06:	f7ff ff81 	bl	80b0c <Lcd>
		delay_ms(10);
   80c0a:	f64e 2060 	movw	r0, #60000	; 0xea60
   80c0e:	47a0      	blx	r4
		_LcdNybble();
   80c10:	2002      	movs	r0, #2
   80c12:	f7ff ff7b 	bl	80b0c <Lcd>
		delay_ms(10);
   80c16:	f64e 2060 	movw	r0, #60000	; 0xea60
   80c1a:	47a0      	blx	r4
		_LcdNybble();
   80c1c:	2002      	movs	r0, #2
   80c1e:	f7ff ff75 	bl	80b0c <Lcd>
		delay_ms(10);
   80c22:	f64e 2060 	movw	r0, #60000	; 0xea60
   80c26:	47a0      	blx	r4
		_LcdPutData(0x20);
   80c28:	2120      	movs	r1, #32
   80c2a:	2001      	movs	r0, #1
   80c2c:	f7ff ff6e 	bl	80b0c <Lcd>
		_LcdNybble();
   80c30:	2002      	movs	r0, #2
   80c32:	f7ff ff6b 	bl	80b0c <Lcd>
		_LcdCommand(0x28);		 //Function Set
   80c36:	2128      	movs	r1, #40	; 0x28
   80c38:	2004      	movs	r0, #4
   80c3a:	f7ff ff67 	bl	80b0c <Lcd>
		_LcdCommand(0x10);		 //Cursor or display shift
   80c3e:	2110      	movs	r1, #16
   80c40:	2004      	movs	r0, #4
   80c42:	f7ff ff63 	bl	80b0c <Lcd>
		_LcdCommand(0x0E);		 //Display On/Off
   80c46:	210e      	movs	r1, #14
   80c48:	2004      	movs	r0, #4
   80c4a:	f7ff ff5f 	bl	80b0c <Lcd>
		_LcdCommand(0x06);		 //Entry Mode
   80c4e:	2106      	movs	r1, #6
   80c50:	2004      	movs	r0, #4
   80c52:	f7ff ff5b 	bl	80b0c <Lcd>
	}
	return 0;
   80c56:	2000      	movs	r0, #0
   80c58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80c5c:	b004      	add	sp, #16
   80c5e:	4770      	bx	lr
		gpio_set_pin_high(LCD_E);
   80c60:	2067      	movs	r0, #103	; 0x67
   80c62:	4b21      	ldr	r3, [pc, #132]	; (80ce8 <Lcd+0x1dc>)
   80c64:	4798      	blx	r3
		delay_ms(1);
   80c66:	f241 7070 	movw	r0, #6000	; 0x1770
   80c6a:	4b26      	ldr	r3, [pc, #152]	; (80d04 <Lcd+0x1f8>)
   80c6c:	4798      	blx	r3
		gpio_set_pin_low(LCD_E);
   80c6e:	2067      	movs	r0, #103	; 0x67
   80c70:	4b1e      	ldr	r3, [pc, #120]	; (80cec <Lcd+0x1e0>)
   80c72:	4798      	blx	r3
		break;
   80c74:	e7ef      	b.n	80c56 <Lcd+0x14a>
		gpio_set_pin_low(LCD_RS);	//RS=0 => COMMAND
   80c76:	2068      	movs	r0, #104	; 0x68
   80c78:	4b1c      	ldr	r3, [pc, #112]	; (80cec <Lcd+0x1e0>)
   80c7a:	4798      	blx	r3
		_LcdPutData(cmd);
   80c7c:	9c05      	ldr	r4, [sp, #20]
   80c7e:	b2e1      	uxtb	r1, r4
   80c80:	2001      	movs	r0, #1
   80c82:	f7ff ff43 	bl	80b0c <Lcd>
		_LcdNybble();
   80c86:	2002      	movs	r0, #2
   80c88:	f7ff ff40 	bl	80b0c <Lcd>
		_LcdPutData(cmd<<4);
   80c8c:	0121      	lsls	r1, r4, #4
   80c8e:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   80c92:	2001      	movs	r0, #1
   80c94:	f7ff ff3a 	bl	80b0c <Lcd>
		_LcdNybble();
   80c98:	2002      	movs	r0, #2
   80c9a:	f7ff ff37 	bl	80b0c <Lcd>
		break;
   80c9e:	e7da      	b.n	80c56 <Lcd+0x14a>
		gpio_set_pin_high(LCD_RS);	//RS=1 => DATA
   80ca0:	2068      	movs	r0, #104	; 0x68
   80ca2:	4b11      	ldr	r3, [pc, #68]	; (80ce8 <Lcd+0x1dc>)
   80ca4:	4798      	blx	r3
		_LcdPutData(data);
   80ca6:	9c05      	ldr	r4, [sp, #20]
   80ca8:	b2e1      	uxtb	r1, r4
   80caa:	2001      	movs	r0, #1
   80cac:	f7ff ff2e 	bl	80b0c <Lcd>
		_LcdNybble();
   80cb0:	2002      	movs	r0, #2
   80cb2:	f7ff ff2b 	bl	80b0c <Lcd>
		_LcdPutData(data<<4);
   80cb6:	0121      	lsls	r1, r4, #4
   80cb8:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   80cbc:	2001      	movs	r0, #1
   80cbe:	f7ff ff25 	bl	80b0c <Lcd>
		_LcdNybble();
   80cc2:	2002      	movs	r0, #2
   80cc4:	f7ff ff22 	bl	80b0c <Lcd>
		break;
   80cc8:	e7c5      	b.n	80c56 <Lcd+0x14a>
		gpio_set_pin_high(LCD_DATA4);
   80cca:	2059      	movs	r0, #89	; 0x59
   80ccc:	4c06      	ldr	r4, [pc, #24]	; (80ce8 <Lcd+0x1dc>)
   80cce:	47a0      	blx	r4
		gpio_set_pin_high(LCD_DATA5);
   80cd0:	205a      	movs	r0, #90	; 0x5a
   80cd2:	47a0      	blx	r4
		gpio_set_pin_high(LCD_DATA6);
   80cd4:	205c      	movs	r0, #92	; 0x5c
   80cd6:	47a0      	blx	r4
		gpio_set_pin_high(LCD_DATA7);
   80cd8:	2039      	movs	r0, #57	; 0x39
   80cda:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   80cdc:	2067      	movs	r0, #103	; 0x67
   80cde:	4c03      	ldr	r4, [pc, #12]	; (80cec <Lcd+0x1e0>)
   80ce0:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   80ce2:	2068      	movs	r0, #104	; 0x68
   80ce4:	47a0      	blx	r4
		break;
   80ce6:	e7b6      	b.n	80c56 <Lcd+0x14a>
   80ce8:	00080f63 	.word	0x00080f63
   80cec:	00080f7d 	.word	0x00080f7d
   80cf0:	20070538 	.word	0x20070538
   80cf4:	00085e5c 	.word	0x00085e5c
   80cf8:	0008066d 	.word	0x0008066d
   80cfc:	00080fb9 	.word	0x00080fb9
   80d00:	000927c0 	.word	0x000927c0
   80d04:	20070001 	.word	0x20070001

00080d08 <main>:
void Prompt(uint32_t sc, uint32_t i);

char buf[256];

int main (void)
{
   80d08:	b500      	push	{lr}
   80d0a:	b083      	sub	sp, #12
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   80d0c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   80d0e:	f3bf 8f5f 	dmb	sy
	/* Insert system clock initialization code here (sysclk_init()). */
		
	cpu_irq_disable();
   80d12:	4c11      	ldr	r4, [pc, #68]	; (80d58 <main+0x50>)
   80d14:	2600      	movs	r6, #0
   80d16:	7026      	strb	r6, [r4, #0]
	sysclk_init();
   80d18:	4b10      	ldr	r3, [pc, #64]	; (80d5c <main+0x54>)
   80d1a:	4798      	blx	r3
	board_init();
   80d1c:	4b10      	ldr	r3, [pc, #64]	; (80d60 <main+0x58>)
   80d1e:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());
	//////////////////////////////////////////////////////////////////
	
	Taskman(TASKMAN_NEW);
   80d20:	2064      	movs	r0, #100	; 0x64
   80d22:	4d10      	ldr	r5, [pc, #64]	; (80d64 <main+0x5c>)
   80d24:	47a8      	blx	r5
	Shell(SHELL_NEW);
   80d26:	2064      	movs	r0, #100	; 0x64
   80d28:	4b0f      	ldr	r3, [pc, #60]	; (80d68 <main+0x60>)
   80d2a:	4798      	blx	r3
	Putstr("\r\n\n\tATMEL ATSAM3U STARTED\r\n\n");
   80d2c:	490f      	ldr	r1, [pc, #60]	; (80d6c <main+0x64>)
   80d2e:	2067      	movs	r0, #103	; 0x67
   80d30:	4b0f      	ldr	r3, [pc, #60]	; (80d70 <main+0x68>)
   80d32:	4798      	blx	r3
	
	PushTask(Appli,APPLI_NEW,0,2000);
   80d34:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   80d38:	9300      	str	r3, [sp, #0]
   80d3a:	4633      	mov	r3, r6
   80d3c:	2264      	movs	r2, #100	; 0x64
   80d3e:	490d      	ldr	r1, [pc, #52]	; (80d74 <main+0x6c>)
   80d40:	2066      	movs	r0, #102	; 0x66
   80d42:	47a8      	blx	r5


	//PushTask(Sablier, SABLIER_NEW, 0, 0);
	//PushTask(Prompt, 0, 0, 800);
	
	cpu_irq_enable();
   80d44:	2301      	movs	r3, #1
   80d46:	7023      	strb	r3, [r4, #0]
   80d48:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80d4c:	b662      	cpsie	i
	
	for(;;)
	{
		PopTask();
   80d4e:	2567      	movs	r5, #103	; 0x67
   80d50:	4c04      	ldr	r4, [pc, #16]	; (80d64 <main+0x5c>)
   80d52:	4628      	mov	r0, r5
   80d54:	47a0      	blx	r4
   80d56:	e7fc      	b.n	80d52 <main+0x4a>
   80d58:	2007053c 	.word	0x2007053c
   80d5c:	00080d79 	.word	0x00080d79
   80d60:	00080e45 	.word	0x00080e45
   80d64:	00080875 	.word	0x00080875
   80d68:	00080371 	.word	0x00080371
   80d6c:	00085e68 	.word	0x00085e68
   80d70:	0008066d 	.word	0x0008066d
   80d74:	00080a91 	.word	0x00080a91

00080d78 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80d78:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   80d7a:	480e      	ldr	r0, [pc, #56]	; (80db4 <sysclk_init+0x3c>)
   80d7c:	4b0e      	ldr	r3, [pc, #56]	; (80db8 <sysclk_init+0x40>)
   80d7e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80d80:	213e      	movs	r1, #62	; 0x3e
   80d82:	2000      	movs	r0, #0
   80d84:	4b0d      	ldr	r3, [pc, #52]	; (80dbc <sysclk_init+0x44>)
   80d86:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80d88:	4c0d      	ldr	r4, [pc, #52]	; (80dc0 <sysclk_init+0x48>)
   80d8a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80d8c:	2800      	cmp	r0, #0
   80d8e:	d0fc      	beq.n	80d8a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80d90:	4b0c      	ldr	r3, [pc, #48]	; (80dc4 <sysclk_init+0x4c>)
   80d92:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80d94:	4a0c      	ldr	r2, [pc, #48]	; (80dc8 <sysclk_init+0x50>)
   80d96:	4b0d      	ldr	r3, [pc, #52]	; (80dcc <sysclk_init+0x54>)
   80d98:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   80d9a:	4c0d      	ldr	r4, [pc, #52]	; (80dd0 <sysclk_init+0x58>)
   80d9c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80d9e:	2800      	cmp	r0, #0
   80da0:	d0fc      	beq.n	80d9c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80da2:	2010      	movs	r0, #16
   80da4:	4b0b      	ldr	r3, [pc, #44]	; (80dd4 <sysclk_init+0x5c>)
   80da6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80da8:	4b0b      	ldr	r3, [pc, #44]	; (80dd8 <sysclk_init+0x60>)
   80daa:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80dac:	4801      	ldr	r0, [pc, #4]	; (80db4 <sysclk_init+0x3c>)
   80dae:	4b02      	ldr	r3, [pc, #8]	; (80db8 <sysclk_init+0x40>)
   80db0:	4798      	blx	r3
   80db2:	bd10      	pop	{r4, pc}
   80db4:	0501bd00 	.word	0x0501bd00
   80db8:	200700b1 	.word	0x200700b1
   80dbc:	00081229 	.word	0x00081229
   80dc0:	0008127d 	.word	0x0008127d
   80dc4:	0008128d 	.word	0x0008128d
   80dc8:	200d3f01 	.word	0x200d3f01
   80dcc:	400e0600 	.word	0x400e0600
   80dd0:	0008129d 	.word	0x0008129d
   80dd4:	000811c5 	.word	0x000811c5
   80dd8:	0008139d 	.word	0x0008139d

00080ddc <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   80ddc:	4b0b      	ldr	r3, [pc, #44]	; (80e0c <cpu_irq_enter_critical+0x30>)
   80dde:	681b      	ldr	r3, [r3, #0]
   80de0:	b92b      	cbnz	r3, 80dee <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   80de2:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   80de6:	b13b      	cbz	r3, 80df8 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   80de8:	2200      	movs	r2, #0
   80dea:	4b09      	ldr	r3, [pc, #36]	; (80e10 <cpu_irq_enter_critical+0x34>)
   80dec:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   80dee:	4a07      	ldr	r2, [pc, #28]	; (80e0c <cpu_irq_enter_critical+0x30>)
   80df0:	6813      	ldr	r3, [r2, #0]
   80df2:	3301      	adds	r3, #1
   80df4:	6013      	str	r3, [r2, #0]
   80df6:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   80df8:	b672      	cpsid	i
   80dfa:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   80dfe:	2200      	movs	r2, #0
   80e00:	4b04      	ldr	r3, [pc, #16]	; (80e14 <cpu_irq_enter_critical+0x38>)
   80e02:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   80e04:	2201      	movs	r2, #1
   80e06:	4b02      	ldr	r3, [pc, #8]	; (80e10 <cpu_irq_enter_critical+0x34>)
   80e08:	701a      	strb	r2, [r3, #0]
   80e0a:	e7f0      	b.n	80dee <cpu_irq_enter_critical+0x12>
   80e0c:	20070f0c 	.word	0x20070f0c
   80e10:	20070f10 	.word	0x20070f10
   80e14:	2007053c 	.word	0x2007053c

00080e18 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   80e18:	4b07      	ldr	r3, [pc, #28]	; (80e38 <cpu_irq_leave_critical+0x20>)
   80e1a:	681a      	ldr	r2, [r3, #0]
   80e1c:	3a01      	subs	r2, #1
   80e1e:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   80e20:	681b      	ldr	r3, [r3, #0]
   80e22:	b943      	cbnz	r3, 80e36 <cpu_irq_leave_critical+0x1e>
   80e24:	4b05      	ldr	r3, [pc, #20]	; (80e3c <cpu_irq_leave_critical+0x24>)
   80e26:	781b      	ldrb	r3, [r3, #0]
   80e28:	b12b      	cbz	r3, 80e36 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   80e2a:	2201      	movs	r2, #1
   80e2c:	4b04      	ldr	r3, [pc, #16]	; (80e40 <cpu_irq_leave_critical+0x28>)
   80e2e:	701a      	strb	r2, [r3, #0]
   80e30:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80e34:	b662      	cpsie	i
   80e36:	4770      	bx	lr
   80e38:	20070f0c 	.word	0x20070f0c
   80e3c:	20070f10 	.word	0x20070f10
   80e40:	2007053c 	.word	0x2007053c

00080e44 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80e44:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80e46:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80e4a:	4b16      	ldr	r3, [pc, #88]	; (80ea4 <board_init+0x60>)
   80e4c:	605a      	str	r2, [r3, #4]
   80e4e:	200b      	movs	r0, #11
   80e50:	4c15      	ldr	r4, [pc, #84]	; (80ea8 <board_init+0x64>)
   80e52:	47a0      	blx	r4
   80e54:	200c      	movs	r0, #12
   80e56:	47a0      	blx	r4
   80e58:	200d      	movs	r0, #13
   80e5a:	47a0      	blx	r4
   80e5c:	200e      	movs	r0, #14
   80e5e:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80e60:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80e64:	203b      	movs	r0, #59	; 0x3b
   80e66:	4c11      	ldr	r4, [pc, #68]	; (80eac <board_init+0x68>)
   80e68:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80e6a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80e6e:	2055      	movs	r0, #85	; 0x55
   80e70:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80e72:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80e76:	2056      	movs	r0, #86	; 0x56
   80e78:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80e7a:	490d      	ldr	r1, [pc, #52]	; (80eb0 <board_init+0x6c>)
   80e7c:	2068      	movs	r0, #104	; 0x68
   80e7e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80e80:	490c      	ldr	r1, [pc, #48]	; (80eb4 <board_init+0x70>)
   80e82:	205c      	movs	r0, #92	; 0x5c
   80e84:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80e86:	4a0c      	ldr	r2, [pc, #48]	; (80eb8 <board_init+0x74>)
   80e88:	f44f 7140 	mov.w	r1, #768	; 0x300
   80e8c:	480b      	ldr	r0, [pc, #44]	; (80ebc <board_init+0x78>)
   80e8e:	4b0c      	ldr	r3, [pc, #48]	; (80ec0 <board_init+0x7c>)
   80e90:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   80e92:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80e96:	202b      	movs	r0, #43	; 0x2b
   80e98:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80e9a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80e9e:	202a      	movs	r0, #42	; 0x2a
   80ea0:	47a0      	blx	r4
   80ea2:	bd10      	pop	{r4, pc}
   80ea4:	400e1a50 	.word	0x400e1a50
   80ea8:	000812ad 	.word	0x000812ad
   80eac:	00080fb9 	.word	0x00080fb9
   80eb0:	28000079 	.word	0x28000079
   80eb4:	28000001 	.word	0x28000001
   80eb8:	08000001 	.word	0x08000001
   80ebc:	400e0e00 	.word	0x400e0e00
   80ec0:	00081089 	.word	0x00081089

00080ec4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80ec4:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80ec6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80eca:	d016      	beq.n	80efa <pio_set_peripheral+0x36>
   80ecc:	d80b      	bhi.n	80ee6 <pio_set_peripheral+0x22>
   80ece:	b149      	cbz	r1, 80ee4 <pio_set_peripheral+0x20>
   80ed0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80ed4:	d105      	bne.n	80ee2 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80ed6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80ed8:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80eda:	400b      	ands	r3, r1
   80edc:	ea23 0302 	bic.w	r3, r3, r2
   80ee0:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80ee2:	6042      	str	r2, [r0, #4]
   80ee4:	4770      	bx	lr
	switch (ul_type) {
   80ee6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80eea:	d0fb      	beq.n	80ee4 <pio_set_peripheral+0x20>
   80eec:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80ef0:	d0f8      	beq.n	80ee4 <pio_set_peripheral+0x20>
   80ef2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80ef6:	d1f4      	bne.n	80ee2 <pio_set_peripheral+0x1e>
   80ef8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   80efa:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80efc:	4313      	orrs	r3, r2
   80efe:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80f00:	e7ef      	b.n	80ee2 <pio_set_peripheral+0x1e>

00080f02 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80f02:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80f04:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80f08:	bf14      	ite	ne
   80f0a:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80f0c:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80f0e:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80f12:	bf14      	ite	ne
   80f14:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80f16:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80f18:	f012 0f02 	tst.w	r2, #2
   80f1c:	d107      	bne.n	80f2e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   80f1e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80f22:	bf18      	it	ne
   80f24:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80f28:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80f2a:	6001      	str	r1, [r0, #0]
   80f2c:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   80f2e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80f32:	e7f9      	b.n	80f28 <pio_set_input+0x26>

00080f34 <pio_set_output>:
{
   80f34:	b410      	push	{r4}
   80f36:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80f38:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80f3a:	b944      	cbnz	r4, 80f4e <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80f3c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   80f3e:	b143      	cbz	r3, 80f52 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   80f40:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   80f42:	b942      	cbnz	r2, 80f56 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80f44:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80f46:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80f48:	6001      	str	r1, [r0, #0]
}
   80f4a:	bc10      	pop	{r4}
   80f4c:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   80f4e:	6641      	str	r1, [r0, #100]	; 0x64
   80f50:	e7f5      	b.n	80f3e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   80f52:	6541      	str	r1, [r0, #84]	; 0x54
   80f54:	e7f5      	b.n	80f42 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   80f56:	6301      	str	r1, [r0, #48]	; 0x30
   80f58:	e7f5      	b.n	80f46 <pio_set_output+0x12>

00080f5a <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80f5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80f5c:	4770      	bx	lr

00080f5e <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80f5e:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80f60:	4770      	bx	lr

00080f62 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80f62:	0943      	lsrs	r3, r0, #5
   80f64:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80f68:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80f6c:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   80f6e:	f000 001f 	and.w	r0, r0, #31
   80f72:	2201      	movs	r2, #1
   80f74:	fa02 f000 	lsl.w	r0, r2, r0
   80f78:	6318      	str	r0, [r3, #48]	; 0x30
   80f7a:	4770      	bx	lr

00080f7c <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80f7c:	0943      	lsrs	r3, r0, #5
   80f7e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80f82:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80f86:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   80f88:	f000 001f 	and.w	r0, r0, #31
   80f8c:	2201      	movs	r2, #1
   80f8e:	fa02 f000 	lsl.w	r0, r2, r0
   80f92:	6358      	str	r0, [r3, #52]	; 0x34
   80f94:	4770      	bx	lr

00080f96 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80f96:	0943      	lsrs	r3, r0, #5
   80f98:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80f9c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80fa0:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   80fa2:	6b99      	ldr	r1, [r3, #56]	; 0x38
   80fa4:	f000 021f 	and.w	r2, r0, #31
   80fa8:	2001      	movs	r0, #1
   80faa:	4090      	lsls	r0, r2
   80fac:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   80fae:	bf14      	ite	ne
   80fb0:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   80fb2:	6318      	streq	r0, [r3, #48]	; 0x30
   80fb4:	4770      	bx	lr
	...

00080fb8 <pio_configure_pin>:
{
   80fb8:	b570      	push	{r4, r5, r6, lr}
   80fba:	b082      	sub	sp, #8
   80fbc:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80fbe:	0943      	lsrs	r3, r0, #5
   80fc0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80fc4:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80fc8:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   80fca:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80fce:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80fd2:	d031      	beq.n	81038 <pio_configure_pin+0x80>
   80fd4:	d816      	bhi.n	81004 <pio_configure_pin+0x4c>
   80fd6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80fda:	d01b      	beq.n	81014 <pio_configure_pin+0x5c>
   80fdc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80fe0:	d116      	bne.n	81010 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80fe2:	f000 001f 	and.w	r0, r0, #31
   80fe6:	2601      	movs	r6, #1
   80fe8:	4086      	lsls	r6, r0
   80fea:	4632      	mov	r2, r6
   80fec:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80ff0:	4620      	mov	r0, r4
   80ff2:	4b22      	ldr	r3, [pc, #136]	; (8107c <pio_configure_pin+0xc4>)
   80ff4:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80ff6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ffa:	bf14      	ite	ne
   80ffc:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80ffe:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81000:	2001      	movs	r0, #1
   81002:	e017      	b.n	81034 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   81004:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   81008:	d021      	beq.n	8104e <pio_configure_pin+0x96>
   8100a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   8100e:	d01e      	beq.n	8104e <pio_configure_pin+0x96>
		return 0;
   81010:	2000      	movs	r0, #0
   81012:	e00f      	b.n	81034 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   81014:	f000 001f 	and.w	r0, r0, #31
   81018:	2601      	movs	r6, #1
   8101a:	4086      	lsls	r6, r0
   8101c:	4632      	mov	r2, r6
   8101e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81022:	4620      	mov	r0, r4
   81024:	4b15      	ldr	r3, [pc, #84]	; (8107c <pio_configure_pin+0xc4>)
   81026:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81028:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8102c:	bf14      	ite	ne
   8102e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81030:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81032:	2001      	movs	r0, #1
}
   81034:	b002      	add	sp, #8
   81036:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   81038:	f000 011f 	and.w	r1, r0, #31
   8103c:	2601      	movs	r6, #1
   8103e:	462a      	mov	r2, r5
   81040:	fa06 f101 	lsl.w	r1, r6, r1
   81044:	4620      	mov	r0, r4
   81046:	4b0e      	ldr	r3, [pc, #56]	; (81080 <pio_configure_pin+0xc8>)
   81048:	4798      	blx	r3
	return 1;
   8104a:	4630      	mov	r0, r6
		break;
   8104c:	e7f2      	b.n	81034 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8104e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   81052:	f000 011f 	and.w	r1, r0, #31
   81056:	2601      	movs	r6, #1
   81058:	ea05 0306 	and.w	r3, r5, r6
   8105c:	9300      	str	r3, [sp, #0]
   8105e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   81062:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81066:	bf14      	ite	ne
   81068:	2200      	movne	r2, #0
   8106a:	2201      	moveq	r2, #1
   8106c:	fa06 f101 	lsl.w	r1, r6, r1
   81070:	4620      	mov	r0, r4
   81072:	4c04      	ldr	r4, [pc, #16]	; (81084 <pio_configure_pin+0xcc>)
   81074:	47a0      	blx	r4
	return 1;
   81076:	4630      	mov	r0, r6
		break;
   81078:	e7dc      	b.n	81034 <pio_configure_pin+0x7c>
   8107a:	bf00      	nop
   8107c:	00080ec5 	.word	0x00080ec5
   81080:	00080f03 	.word	0x00080f03
   81084:	00080f35 	.word	0x00080f35

00081088 <pio_configure_pin_group>:
{
   81088:	b570      	push	{r4, r5, r6, lr}
   8108a:	b082      	sub	sp, #8
   8108c:	4605      	mov	r5, r0
   8108e:	460e      	mov	r6, r1
   81090:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   81092:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   81096:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8109a:	d027      	beq.n	810ec <pio_configure_pin_group+0x64>
   8109c:	d811      	bhi.n	810c2 <pio_configure_pin_group+0x3a>
   8109e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   810a2:	d016      	beq.n	810d2 <pio_configure_pin_group+0x4a>
   810a4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   810a8:	d111      	bne.n	810ce <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   810aa:	460a      	mov	r2, r1
   810ac:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   810b0:	4b19      	ldr	r3, [pc, #100]	; (81118 <pio_configure_pin_group+0x90>)
   810b2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   810b4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   810b8:	bf14      	ite	ne
   810ba:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   810bc:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   810be:	2001      	movs	r0, #1
   810c0:	e012      	b.n	810e8 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   810c2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   810c6:	d015      	beq.n	810f4 <pio_configure_pin_group+0x6c>
   810c8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   810cc:	d012      	beq.n	810f4 <pio_configure_pin_group+0x6c>
		return 0;
   810ce:	2000      	movs	r0, #0
   810d0:	e00a      	b.n	810e8 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   810d2:	460a      	mov	r2, r1
   810d4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   810d8:	4b0f      	ldr	r3, [pc, #60]	; (81118 <pio_configure_pin_group+0x90>)
   810da:	4798      	blx	r3
	if (ul_pull_up_enable) {
   810dc:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   810e0:	bf14      	ite	ne
   810e2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   810e4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   810e6:	2001      	movs	r0, #1
}
   810e8:	b002      	add	sp, #8
   810ea:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   810ec:	4b0b      	ldr	r3, [pc, #44]	; (8111c <pio_configure_pin_group+0x94>)
   810ee:	4798      	blx	r3
	return 1;
   810f0:	2001      	movs	r0, #1
		break;
   810f2:	e7f9      	b.n	810e8 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   810f4:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   810f8:	f004 0301 	and.w	r3, r4, #1
   810fc:	9300      	str	r3, [sp, #0]
   810fe:	f3c4 0380 	ubfx	r3, r4, #2, #1
   81102:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81106:	bf14      	ite	ne
   81108:	2200      	movne	r2, #0
   8110a:	2201      	moveq	r2, #1
   8110c:	4631      	mov	r1, r6
   8110e:	4628      	mov	r0, r5
   81110:	4c03      	ldr	r4, [pc, #12]	; (81120 <pio_configure_pin_group+0x98>)
   81112:	47a0      	blx	r4
	return 1;
   81114:	2001      	movs	r0, #1
		break;
   81116:	e7e7      	b.n	810e8 <pio_configure_pin_group+0x60>
   81118:	00080ec5 	.word	0x00080ec5
   8111c:	00080f03 	.word	0x00080f03
   81120:	00080f35 	.word	0x00080f35

00081124 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   81124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81128:	4604      	mov	r4, r0
   8112a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   8112c:	4b0e      	ldr	r3, [pc, #56]	; (81168 <pio_handler_process+0x44>)
   8112e:	4798      	blx	r3
   81130:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   81132:	4620      	mov	r0, r4
   81134:	4b0d      	ldr	r3, [pc, #52]	; (8116c <pio_handler_process+0x48>)
   81136:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   81138:	4005      	ands	r5, r0
   8113a:	d013      	beq.n	81164 <pio_handler_process+0x40>
   8113c:	4c0c      	ldr	r4, [pc, #48]	; (81170 <pio_handler_process+0x4c>)
   8113e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   81142:	e003      	b.n	8114c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   81144:	42b4      	cmp	r4, r6
   81146:	d00d      	beq.n	81164 <pio_handler_process+0x40>
   81148:	3410      	adds	r4, #16
		while (status != 0) {
   8114a:	b15d      	cbz	r5, 81164 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   8114c:	6820      	ldr	r0, [r4, #0]
   8114e:	4540      	cmp	r0, r8
   81150:	d1f8      	bne.n	81144 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81152:	6861      	ldr	r1, [r4, #4]
   81154:	4229      	tst	r1, r5
   81156:	d0f5      	beq.n	81144 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81158:	68e3      	ldr	r3, [r4, #12]
   8115a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8115c:	6863      	ldr	r3, [r4, #4]
   8115e:	ea25 0503 	bic.w	r5, r5, r3
   81162:	e7ef      	b.n	81144 <pio_handler_process+0x20>
   81164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81168:	00080f5b 	.word	0x00080f5b
   8116c:	00080f5f 	.word	0x00080f5f
   81170:	20070f14 	.word	0x20070f14

00081174 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   81174:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   81176:	210b      	movs	r1, #11
   81178:	4801      	ldr	r0, [pc, #4]	; (81180 <PIOA_Handler+0xc>)
   8117a:	4b02      	ldr	r3, [pc, #8]	; (81184 <PIOA_Handler+0x10>)
   8117c:	4798      	blx	r3
   8117e:	bd08      	pop	{r3, pc}
   81180:	400e0e00 	.word	0x400e0e00
   81184:	00081125 	.word	0x00081125

00081188 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   81188:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   8118a:	210c      	movs	r1, #12
   8118c:	4801      	ldr	r0, [pc, #4]	; (81194 <PIOB_Handler+0xc>)
   8118e:	4b02      	ldr	r3, [pc, #8]	; (81198 <PIOB_Handler+0x10>)
   81190:	4798      	blx	r3
   81192:	bd08      	pop	{r3, pc}
   81194:	400e1000 	.word	0x400e1000
   81198:	00081125 	.word	0x00081125

0008119c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   8119c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   8119e:	210d      	movs	r1, #13
   811a0:	4801      	ldr	r0, [pc, #4]	; (811a8 <PIOC_Handler+0xc>)
   811a2:	4b02      	ldr	r3, [pc, #8]	; (811ac <PIOC_Handler+0x10>)
   811a4:	4798      	blx	r3
   811a6:	bd08      	pop	{r3, pc}
   811a8:	400e1200 	.word	0x400e1200
   811ac:	00081125 	.word	0x00081125

000811b0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   811b0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   811b2:	210e      	movs	r1, #14
   811b4:	4801      	ldr	r0, [pc, #4]	; (811bc <PIOD_Handler+0xc>)
   811b6:	4b02      	ldr	r3, [pc, #8]	; (811c0 <PIOD_Handler+0x10>)
   811b8:	4798      	blx	r3
   811ba:	bd08      	pop	{r3, pc}
   811bc:	400e1400 	.word	0x400e1400
   811c0:	00081125 	.word	0x00081125

000811c4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   811c4:	4a17      	ldr	r2, [pc, #92]	; (81224 <pmc_switch_mck_to_pllack+0x60>)
   811c6:	6b13      	ldr	r3, [r2, #48]	; 0x30
   811c8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   811cc:	4318      	orrs	r0, r3
   811ce:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   811d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
   811d2:	f013 0f08 	tst.w	r3, #8
   811d6:	d10a      	bne.n	811ee <pmc_switch_mck_to_pllack+0x2a>
   811d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   811dc:	4911      	ldr	r1, [pc, #68]	; (81224 <pmc_switch_mck_to_pllack+0x60>)
   811de:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   811e0:	f012 0f08 	tst.w	r2, #8
   811e4:	d103      	bne.n	811ee <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   811e6:	3b01      	subs	r3, #1
   811e8:	d1f9      	bne.n	811de <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   811ea:	2001      	movs	r0, #1
   811ec:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   811ee:	4a0d      	ldr	r2, [pc, #52]	; (81224 <pmc_switch_mck_to_pllack+0x60>)
   811f0:	6b13      	ldr	r3, [r2, #48]	; 0x30
   811f2:	f023 0303 	bic.w	r3, r3, #3
   811f6:	f043 0302 	orr.w	r3, r3, #2
   811fa:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   811fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
   811fe:	f013 0f08 	tst.w	r3, #8
   81202:	d10a      	bne.n	8121a <pmc_switch_mck_to_pllack+0x56>
   81204:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81208:	4906      	ldr	r1, [pc, #24]	; (81224 <pmc_switch_mck_to_pllack+0x60>)
   8120a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8120c:	f012 0f08 	tst.w	r2, #8
   81210:	d105      	bne.n	8121e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81212:	3b01      	subs	r3, #1
   81214:	d1f9      	bne.n	8120a <pmc_switch_mck_to_pllack+0x46>
			return 1;
   81216:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81218:	4770      	bx	lr
	return 0;
   8121a:	2000      	movs	r0, #0
   8121c:	4770      	bx	lr
   8121e:	2000      	movs	r0, #0
   81220:	4770      	bx	lr
   81222:	bf00      	nop
   81224:	400e0600 	.word	0x400e0600

00081228 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81228:	b9c8      	cbnz	r0, 8125e <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8122a:	4a11      	ldr	r2, [pc, #68]	; (81270 <pmc_switch_mainck_to_xtal+0x48>)
   8122c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   8122e:	0209      	lsls	r1, r1, #8
   81230:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81232:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   81236:	f023 0303 	bic.w	r3, r3, #3
   8123a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8123e:	f043 0301 	orr.w	r3, r3, #1
   81242:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81244:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   81246:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81248:	f013 0f01 	tst.w	r3, #1
   8124c:	d0fb      	beq.n	81246 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8124e:	4a08      	ldr	r2, [pc, #32]	; (81270 <pmc_switch_mainck_to_xtal+0x48>)
   81250:	6a13      	ldr	r3, [r2, #32]
   81252:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   81256:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8125a:	6213      	str	r3, [r2, #32]
   8125c:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8125e:	4904      	ldr	r1, [pc, #16]	; (81270 <pmc_switch_mainck_to_xtal+0x48>)
   81260:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   81262:	4a04      	ldr	r2, [pc, #16]	; (81274 <pmc_switch_mainck_to_xtal+0x4c>)
   81264:	401a      	ands	r2, r3
   81266:	4b04      	ldr	r3, [pc, #16]	; (81278 <pmc_switch_mainck_to_xtal+0x50>)
   81268:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8126a:	620b      	str	r3, [r1, #32]
   8126c:	4770      	bx	lr
   8126e:	bf00      	nop
   81270:	400e0600 	.word	0x400e0600
   81274:	fec8fffc 	.word	0xfec8fffc
   81278:	01370002 	.word	0x01370002

0008127c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   8127c:	4b02      	ldr	r3, [pc, #8]	; (81288 <pmc_osc_is_ready_mainck+0xc>)
   8127e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81280:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   81284:	4770      	bx	lr
   81286:	bf00      	nop
   81288:	400e0600 	.word	0x400e0600

0008128c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   8128c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81290:	4b01      	ldr	r3, [pc, #4]	; (81298 <pmc_disable_pllack+0xc>)
   81292:	629a      	str	r2, [r3, #40]	; 0x28
   81294:	4770      	bx	lr
   81296:	bf00      	nop
   81298:	400e0600 	.word	0x400e0600

0008129c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   8129c:	4b02      	ldr	r3, [pc, #8]	; (812a8 <pmc_is_locked_pllack+0xc>)
   8129e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   812a0:	f000 0002 	and.w	r0, r0, #2
   812a4:	4770      	bx	lr
   812a6:	bf00      	nop
   812a8:	400e0600 	.word	0x400e0600

000812ac <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   812ac:	282c      	cmp	r0, #44	; 0x2c
   812ae:	d81e      	bhi.n	812ee <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   812b0:	281f      	cmp	r0, #31
   812b2:	d80c      	bhi.n	812ce <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   812b4:	4b11      	ldr	r3, [pc, #68]	; (812fc <pmc_enable_periph_clk+0x50>)
   812b6:	699a      	ldr	r2, [r3, #24]
   812b8:	2301      	movs	r3, #1
   812ba:	4083      	lsls	r3, r0
   812bc:	4393      	bics	r3, r2
   812be:	d018      	beq.n	812f2 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   812c0:	2301      	movs	r3, #1
   812c2:	fa03 f000 	lsl.w	r0, r3, r0
   812c6:	4b0d      	ldr	r3, [pc, #52]	; (812fc <pmc_enable_periph_clk+0x50>)
   812c8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   812ca:	2000      	movs	r0, #0
   812cc:	4770      	bx	lr
		ul_id -= 32;
   812ce:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   812d0:	4b0a      	ldr	r3, [pc, #40]	; (812fc <pmc_enable_periph_clk+0x50>)
   812d2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   812d6:	2301      	movs	r3, #1
   812d8:	4083      	lsls	r3, r0
   812da:	4393      	bics	r3, r2
   812dc:	d00b      	beq.n	812f6 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   812de:	2301      	movs	r3, #1
   812e0:	fa03 f000 	lsl.w	r0, r3, r0
   812e4:	4b05      	ldr	r3, [pc, #20]	; (812fc <pmc_enable_periph_clk+0x50>)
   812e6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   812ea:	2000      	movs	r0, #0
   812ec:	4770      	bx	lr
		return 1;
   812ee:	2001      	movs	r0, #1
   812f0:	4770      	bx	lr
	return 0;
   812f2:	2000      	movs	r0, #0
   812f4:	4770      	bx	lr
   812f6:	2000      	movs	r0, #0
}
   812f8:	4770      	bx	lr
   812fa:	bf00      	nop
   812fc:	400e0600 	.word	0x400e0600

00081300 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81300:	e7fe      	b.n	81300 <Dummy_Handler>
	...

00081304 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   81304:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   81306:	4b1c      	ldr	r3, [pc, #112]	; (81378 <Reset_Handler+0x74>)
   81308:	4a1c      	ldr	r2, [pc, #112]	; (8137c <Reset_Handler+0x78>)
   8130a:	429a      	cmp	r2, r3
   8130c:	d010      	beq.n	81330 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   8130e:	4b1c      	ldr	r3, [pc, #112]	; (81380 <Reset_Handler+0x7c>)
   81310:	4a19      	ldr	r2, [pc, #100]	; (81378 <Reset_Handler+0x74>)
   81312:	429a      	cmp	r2, r3
   81314:	d20c      	bcs.n	81330 <Reset_Handler+0x2c>
   81316:	3b01      	subs	r3, #1
   81318:	1a9b      	subs	r3, r3, r2
   8131a:	f023 0303 	bic.w	r3, r3, #3
   8131e:	3304      	adds	r3, #4
   81320:	4413      	add	r3, r2
   81322:	4916      	ldr	r1, [pc, #88]	; (8137c <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   81324:	f851 0b04 	ldr.w	r0, [r1], #4
   81328:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   8132c:	429a      	cmp	r2, r3
   8132e:	d1f9      	bne.n	81324 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81330:	4b14      	ldr	r3, [pc, #80]	; (81384 <Reset_Handler+0x80>)
   81332:	4a15      	ldr	r2, [pc, #84]	; (81388 <Reset_Handler+0x84>)
   81334:	429a      	cmp	r2, r3
   81336:	d20a      	bcs.n	8134e <Reset_Handler+0x4a>
   81338:	3b01      	subs	r3, #1
   8133a:	1a9b      	subs	r3, r3, r2
   8133c:	f023 0303 	bic.w	r3, r3, #3
   81340:	3304      	adds	r3, #4
   81342:	4413      	add	r3, r2
		*pDest++ = 0;
   81344:	2100      	movs	r1, #0
   81346:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   8134a:	4293      	cmp	r3, r2
   8134c:	d1fb      	bne.n	81346 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8134e:	4b0f      	ldr	r3, [pc, #60]	; (8138c <Reset_Handler+0x88>)
   81350:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   81354:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81358:	490d      	ldr	r1, [pc, #52]	; (81390 <Reset_Handler+0x8c>)
   8135a:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   8135c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81360:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   81364:	d203      	bcs.n	8136e <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   81366:	688b      	ldr	r3, [r1, #8]
   81368:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   8136c:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   8136e:	4b09      	ldr	r3, [pc, #36]	; (81394 <Reset_Handler+0x90>)
   81370:	4798      	blx	r3

	/* Branch to main function */
	main();
   81372:	4b09      	ldr	r3, [pc, #36]	; (81398 <Reset_Handler+0x94>)
   81374:	4798      	blx	r3
   81376:	e7fe      	b.n	81376 <Reset_Handler+0x72>
   81378:	20070000 	.word	0x20070000
   8137c:	0008613c 	.word	0x0008613c
   81380:	20070eec 	.word	0x20070eec
   81384:	20071434 	.word	0x20071434
   81388:	20070eec 	.word	0x20070eec
   8138c:	00080000 	.word	0x00080000
   81390:	e000ed00 	.word	0xe000ed00
   81394:	000814ed 	.word	0x000814ed
   81398:	00080d09 	.word	0x00080d09

0008139c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   8139c:	4b3d      	ldr	r3, [pc, #244]	; (81494 <SystemCoreClockUpdate+0xf8>)
   8139e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   813a0:	f003 0303 	and.w	r3, r3, #3
   813a4:	2b03      	cmp	r3, #3
   813a6:	d80e      	bhi.n	813c6 <SystemCoreClockUpdate+0x2a>
   813a8:	e8df f003 	tbb	[pc, r3]
   813ac:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   813b0:	4b39      	ldr	r3, [pc, #228]	; (81498 <SystemCoreClockUpdate+0xfc>)
   813b2:	695b      	ldr	r3, [r3, #20]
   813b4:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   813b8:	bf14      	ite	ne
   813ba:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   813be:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   813c2:	4b36      	ldr	r3, [pc, #216]	; (8149c <SystemCoreClockUpdate+0x100>)
   813c4:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   813c6:	4b33      	ldr	r3, [pc, #204]	; (81494 <SystemCoreClockUpdate+0xf8>)
   813c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   813ca:	f003 0370 	and.w	r3, r3, #112	; 0x70
   813ce:	2b70      	cmp	r3, #112	; 0x70
   813d0:	d057      	beq.n	81482 <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   813d2:	4b30      	ldr	r3, [pc, #192]	; (81494 <SystemCoreClockUpdate+0xf8>)
   813d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   813d6:	4931      	ldr	r1, [pc, #196]	; (8149c <SystemCoreClockUpdate+0x100>)
   813d8:	f3c2 1202 	ubfx	r2, r2, #4, #3
   813dc:	680b      	ldr	r3, [r1, #0]
   813de:	40d3      	lsrs	r3, r2
   813e0:	600b      	str	r3, [r1, #0]
   813e2:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   813e4:	4b2b      	ldr	r3, [pc, #172]	; (81494 <SystemCoreClockUpdate+0xf8>)
   813e6:	6a1b      	ldr	r3, [r3, #32]
   813e8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   813ec:	d003      	beq.n	813f6 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   813ee:	4a2c      	ldr	r2, [pc, #176]	; (814a0 <SystemCoreClockUpdate+0x104>)
   813f0:	4b2a      	ldr	r3, [pc, #168]	; (8149c <SystemCoreClockUpdate+0x100>)
   813f2:	601a      	str	r2, [r3, #0]
   813f4:	e7e7      	b.n	813c6 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   813f6:	4a2b      	ldr	r2, [pc, #172]	; (814a4 <SystemCoreClockUpdate+0x108>)
   813f8:	4b28      	ldr	r3, [pc, #160]	; (8149c <SystemCoreClockUpdate+0x100>)
   813fa:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   813fc:	4b25      	ldr	r3, [pc, #148]	; (81494 <SystemCoreClockUpdate+0xf8>)
   813fe:	6a1b      	ldr	r3, [r3, #32]
   81400:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81404:	2b10      	cmp	r3, #16
   81406:	d005      	beq.n	81414 <SystemCoreClockUpdate+0x78>
   81408:	2b20      	cmp	r3, #32
   8140a:	d1dc      	bne.n	813c6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   8140c:	4a24      	ldr	r2, [pc, #144]	; (814a0 <SystemCoreClockUpdate+0x104>)
   8140e:	4b23      	ldr	r3, [pc, #140]	; (8149c <SystemCoreClockUpdate+0x100>)
   81410:	601a      	str	r2, [r3, #0]
				break;
   81412:	e7d8      	b.n	813c6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   81414:	4a24      	ldr	r2, [pc, #144]	; (814a8 <SystemCoreClockUpdate+0x10c>)
   81416:	4b21      	ldr	r3, [pc, #132]	; (8149c <SystemCoreClockUpdate+0x100>)
   81418:	601a      	str	r2, [r3, #0]
				break;
   8141a:	e7d4      	b.n	813c6 <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8141c:	4b1d      	ldr	r3, [pc, #116]	; (81494 <SystemCoreClockUpdate+0xf8>)
   8141e:	6a1b      	ldr	r3, [r3, #32]
   81420:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81424:	d00c      	beq.n	81440 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81426:	4a1e      	ldr	r2, [pc, #120]	; (814a0 <SystemCoreClockUpdate+0x104>)
   81428:	4b1c      	ldr	r3, [pc, #112]	; (8149c <SystemCoreClockUpdate+0x100>)
   8142a:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   8142c:	4b19      	ldr	r3, [pc, #100]	; (81494 <SystemCoreClockUpdate+0xf8>)
   8142e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81430:	f003 0303 	and.w	r3, r3, #3
   81434:	2b02      	cmp	r3, #2
   81436:	d016      	beq.n	81466 <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   81438:	4a1c      	ldr	r2, [pc, #112]	; (814ac <SystemCoreClockUpdate+0x110>)
   8143a:	4b18      	ldr	r3, [pc, #96]	; (8149c <SystemCoreClockUpdate+0x100>)
   8143c:	601a      	str	r2, [r3, #0]
   8143e:	e7c2      	b.n	813c6 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81440:	4a18      	ldr	r2, [pc, #96]	; (814a4 <SystemCoreClockUpdate+0x108>)
   81442:	4b16      	ldr	r3, [pc, #88]	; (8149c <SystemCoreClockUpdate+0x100>)
   81444:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81446:	4b13      	ldr	r3, [pc, #76]	; (81494 <SystemCoreClockUpdate+0xf8>)
   81448:	6a1b      	ldr	r3, [r3, #32]
   8144a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8144e:	2b10      	cmp	r3, #16
   81450:	d005      	beq.n	8145e <SystemCoreClockUpdate+0xc2>
   81452:	2b20      	cmp	r3, #32
   81454:	d1ea      	bne.n	8142c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   81456:	4a12      	ldr	r2, [pc, #72]	; (814a0 <SystemCoreClockUpdate+0x104>)
   81458:	4b10      	ldr	r3, [pc, #64]	; (8149c <SystemCoreClockUpdate+0x100>)
   8145a:	601a      	str	r2, [r3, #0]
				break;
   8145c:	e7e6      	b.n	8142c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   8145e:	4a12      	ldr	r2, [pc, #72]	; (814a8 <SystemCoreClockUpdate+0x10c>)
   81460:	4b0e      	ldr	r3, [pc, #56]	; (8149c <SystemCoreClockUpdate+0x100>)
   81462:	601a      	str	r2, [r3, #0]
				break;
   81464:	e7e2      	b.n	8142c <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81466:	4a0b      	ldr	r2, [pc, #44]	; (81494 <SystemCoreClockUpdate+0xf8>)
   81468:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   8146a:	6a92      	ldr	r2, [r2, #40]	; 0x28
   8146c:	480b      	ldr	r0, [pc, #44]	; (8149c <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8146e:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81472:	6803      	ldr	r3, [r0, #0]
   81474:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81478:	b2d2      	uxtb	r2, r2
   8147a:	fbb3 f3f2 	udiv	r3, r3, r2
   8147e:	6003      	str	r3, [r0, #0]
   81480:	e7a1      	b.n	813c6 <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81482:	4a06      	ldr	r2, [pc, #24]	; (8149c <SystemCoreClockUpdate+0x100>)
   81484:	6813      	ldr	r3, [r2, #0]
   81486:	490a      	ldr	r1, [pc, #40]	; (814b0 <SystemCoreClockUpdate+0x114>)
   81488:	fba1 1303 	umull	r1, r3, r1, r3
   8148c:	085b      	lsrs	r3, r3, #1
   8148e:	6013      	str	r3, [r2, #0]
   81490:	4770      	bx	lr
   81492:	bf00      	nop
   81494:	400e0600 	.word	0x400e0600
   81498:	400e1a10 	.word	0x400e1a10
   8149c:	20070540 	.word	0x20070540
   814a0:	00b71b00 	.word	0x00b71b00
   814a4:	003d0900 	.word	0x003d0900
   814a8:	007a1200 	.word	0x007a1200
   814ac:	0e4e1c00 	.word	0x0e4e1c00
   814b0:	aaaaaaab 	.word	0xaaaaaaab

000814b4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   814b4:	4b0a      	ldr	r3, [pc, #40]	; (814e0 <_sbrk+0x2c>)
   814b6:	681b      	ldr	r3, [r3, #0]
   814b8:	b153      	cbz	r3, 814d0 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   814ba:	4b09      	ldr	r3, [pc, #36]	; (814e0 <_sbrk+0x2c>)
   814bc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   814be:	181a      	adds	r2, r3, r0
   814c0:	4908      	ldr	r1, [pc, #32]	; (814e4 <_sbrk+0x30>)
   814c2:	4291      	cmp	r1, r2
   814c4:	db08      	blt.n	814d8 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   814c6:	4610      	mov	r0, r2
   814c8:	4a05      	ldr	r2, [pc, #20]	; (814e0 <_sbrk+0x2c>)
   814ca:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   814cc:	4618      	mov	r0, r3
   814ce:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   814d0:	4a05      	ldr	r2, [pc, #20]	; (814e8 <_sbrk+0x34>)
   814d2:	4b03      	ldr	r3, [pc, #12]	; (814e0 <_sbrk+0x2c>)
   814d4:	601a      	str	r2, [r3, #0]
   814d6:	e7f0      	b.n	814ba <_sbrk+0x6>
		return (caddr_t) -1;	
   814d8:	f04f 30ff 	mov.w	r0, #4294967295
}
   814dc:	4770      	bx	lr
   814de:	bf00      	nop
   814e0:	20070f84 	.word	0x20070f84
   814e4:	20087ffc 	.word	0x20087ffc
   814e8:	20073438 	.word	0x20073438

000814ec <__libc_init_array>:
   814ec:	b570      	push	{r4, r5, r6, lr}
   814ee:	4e0f      	ldr	r6, [pc, #60]	; (8152c <__libc_init_array+0x40>)
   814f0:	4d0f      	ldr	r5, [pc, #60]	; (81530 <__libc_init_array+0x44>)
   814f2:	1b76      	subs	r6, r6, r5
   814f4:	10b6      	asrs	r6, r6, #2
   814f6:	bf18      	it	ne
   814f8:	2400      	movne	r4, #0
   814fa:	d005      	beq.n	81508 <__libc_init_array+0x1c>
   814fc:	3401      	adds	r4, #1
   814fe:	f855 3b04 	ldr.w	r3, [r5], #4
   81502:	4798      	blx	r3
   81504:	42a6      	cmp	r6, r4
   81506:	d1f9      	bne.n	814fc <__libc_init_array+0x10>
   81508:	4e0a      	ldr	r6, [pc, #40]	; (81534 <__libc_init_array+0x48>)
   8150a:	4d0b      	ldr	r5, [pc, #44]	; (81538 <__libc_init_array+0x4c>)
   8150c:	f004 fe00 	bl	86110 <_init>
   81510:	1b76      	subs	r6, r6, r5
   81512:	10b6      	asrs	r6, r6, #2
   81514:	bf18      	it	ne
   81516:	2400      	movne	r4, #0
   81518:	d006      	beq.n	81528 <__libc_init_array+0x3c>
   8151a:	3401      	adds	r4, #1
   8151c:	f855 3b04 	ldr.w	r3, [r5], #4
   81520:	4798      	blx	r3
   81522:	42a6      	cmp	r6, r4
   81524:	d1f9      	bne.n	8151a <__libc_init_array+0x2e>
   81526:	bd70      	pop	{r4, r5, r6, pc}
   81528:	bd70      	pop	{r4, r5, r6, pc}
   8152a:	bf00      	nop
   8152c:	0008611c 	.word	0x0008611c
   81530:	0008611c 	.word	0x0008611c
   81534:	00086124 	.word	0x00086124
   81538:	0008611c 	.word	0x0008611c

0008153c <memset>:
   8153c:	b470      	push	{r4, r5, r6}
   8153e:	0786      	lsls	r6, r0, #30
   81540:	d046      	beq.n	815d0 <memset+0x94>
   81542:	1e54      	subs	r4, r2, #1
   81544:	2a00      	cmp	r2, #0
   81546:	d041      	beq.n	815cc <memset+0x90>
   81548:	b2ca      	uxtb	r2, r1
   8154a:	4603      	mov	r3, r0
   8154c:	e002      	b.n	81554 <memset+0x18>
   8154e:	f114 34ff 	adds.w	r4, r4, #4294967295
   81552:	d33b      	bcc.n	815cc <memset+0x90>
   81554:	f803 2b01 	strb.w	r2, [r3], #1
   81558:	079d      	lsls	r5, r3, #30
   8155a:	d1f8      	bne.n	8154e <memset+0x12>
   8155c:	2c03      	cmp	r4, #3
   8155e:	d92e      	bls.n	815be <memset+0x82>
   81560:	b2cd      	uxtb	r5, r1
   81562:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81566:	2c0f      	cmp	r4, #15
   81568:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   8156c:	d919      	bls.n	815a2 <memset+0x66>
   8156e:	4626      	mov	r6, r4
   81570:	f103 0210 	add.w	r2, r3, #16
   81574:	3e10      	subs	r6, #16
   81576:	2e0f      	cmp	r6, #15
   81578:	f842 5c10 	str.w	r5, [r2, #-16]
   8157c:	f842 5c0c 	str.w	r5, [r2, #-12]
   81580:	f842 5c08 	str.w	r5, [r2, #-8]
   81584:	f842 5c04 	str.w	r5, [r2, #-4]
   81588:	f102 0210 	add.w	r2, r2, #16
   8158c:	d8f2      	bhi.n	81574 <memset+0x38>
   8158e:	f1a4 0210 	sub.w	r2, r4, #16
   81592:	f022 020f 	bic.w	r2, r2, #15
   81596:	f004 040f 	and.w	r4, r4, #15
   8159a:	3210      	adds	r2, #16
   8159c:	2c03      	cmp	r4, #3
   8159e:	4413      	add	r3, r2
   815a0:	d90d      	bls.n	815be <memset+0x82>
   815a2:	461e      	mov	r6, r3
   815a4:	4622      	mov	r2, r4
   815a6:	3a04      	subs	r2, #4
   815a8:	2a03      	cmp	r2, #3
   815aa:	f846 5b04 	str.w	r5, [r6], #4
   815ae:	d8fa      	bhi.n	815a6 <memset+0x6a>
   815b0:	1f22      	subs	r2, r4, #4
   815b2:	f022 0203 	bic.w	r2, r2, #3
   815b6:	3204      	adds	r2, #4
   815b8:	4413      	add	r3, r2
   815ba:	f004 0403 	and.w	r4, r4, #3
   815be:	b12c      	cbz	r4, 815cc <memset+0x90>
   815c0:	b2c9      	uxtb	r1, r1
   815c2:	441c      	add	r4, r3
   815c4:	f803 1b01 	strb.w	r1, [r3], #1
   815c8:	429c      	cmp	r4, r3
   815ca:	d1fb      	bne.n	815c4 <memset+0x88>
   815cc:	bc70      	pop	{r4, r5, r6}
   815ce:	4770      	bx	lr
   815d0:	4614      	mov	r4, r2
   815d2:	4603      	mov	r3, r0
   815d4:	e7c2      	b.n	8155c <memset+0x20>
   815d6:	bf00      	nop

000815d8 <sprintf>:
   815d8:	b40e      	push	{r1, r2, r3}
   815da:	4601      	mov	r1, r0
   815dc:	b5f0      	push	{r4, r5, r6, r7, lr}
   815de:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   815e2:	f44f 7702 	mov.w	r7, #520	; 0x208
   815e6:	f64f 76ff 	movw	r6, #65535	; 0xffff
   815ea:	b09c      	sub	sp, #112	; 0x70
   815ec:	ac21      	add	r4, sp, #132	; 0x84
   815ee:	f854 2b04 	ldr.w	r2, [r4], #4
   815f2:	4b0b      	ldr	r3, [pc, #44]	; (81620 <sprintf+0x48>)
   815f4:	9102      	str	r1, [sp, #8]
   815f6:	9106      	str	r1, [sp, #24]
   815f8:	6818      	ldr	r0, [r3, #0]
   815fa:	a902      	add	r1, sp, #8
   815fc:	4623      	mov	r3, r4
   815fe:	9401      	str	r4, [sp, #4]
   81600:	f8ad 7014 	strh.w	r7, [sp, #20]
   81604:	9504      	str	r5, [sp, #16]
   81606:	9507      	str	r5, [sp, #28]
   81608:	f8ad 6016 	strh.w	r6, [sp, #22]
   8160c:	f000 f872 	bl	816f4 <_svfprintf_r>
   81610:	2200      	movs	r2, #0
   81612:	9b02      	ldr	r3, [sp, #8]
   81614:	701a      	strb	r2, [r3, #0]
   81616:	b01c      	add	sp, #112	; 0x70
   81618:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8161c:	b003      	add	sp, #12
   8161e:	4770      	bx	lr
   81620:	20070544 	.word	0x20070544

00081624 <strlen>:
   81624:	f020 0103 	bic.w	r1, r0, #3
   81628:	f010 0003 	ands.w	r0, r0, #3
   8162c:	f1c0 0000 	rsb	r0, r0, #0
   81630:	f851 3b04 	ldr.w	r3, [r1], #4
   81634:	f100 0c04 	add.w	ip, r0, #4
   81638:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   8163c:	f06f 0200 	mvn.w	r2, #0
   81640:	bf1c      	itt	ne
   81642:	fa22 f20c 	lsrne.w	r2, r2, ip
   81646:	4313      	orrne	r3, r2
   81648:	f04f 0c01 	mov.w	ip, #1
   8164c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81650:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81654:	eba3 020c 	sub.w	r2, r3, ip
   81658:	ea22 0203 	bic.w	r2, r2, r3
   8165c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81660:	bf04      	itt	eq
   81662:	f851 3b04 	ldreq.w	r3, [r1], #4
   81666:	3004      	addeq	r0, #4
   81668:	d0f4      	beq.n	81654 <strlen+0x30>
   8166a:	f1c2 0100 	rsb	r1, r2, #0
   8166e:	ea02 0201 	and.w	r2, r2, r1
   81672:	fab2 f282 	clz	r2, r2
   81676:	f1c2 021f 	rsb	r2, r2, #31
   8167a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   8167e:	4770      	bx	lr

00081680 <strtok>:
   81680:	4a02      	ldr	r2, [pc, #8]	; (8168c <strtok+0xc>)
   81682:	2301      	movs	r3, #1
   81684:	6812      	ldr	r2, [r2, #0]
   81686:	325c      	adds	r2, #92	; 0x5c
   81688:	f000 b802 	b.w	81690 <__strtok_r>
   8168c:	20070544 	.word	0x20070544

00081690 <__strtok_r>:
   81690:	b4f0      	push	{r4, r5, r6, r7}
   81692:	b318      	cbz	r0, 816dc <__strtok_r+0x4c>
   81694:	4607      	mov	r7, r0
   81696:	460d      	mov	r5, r1
   81698:	f817 6b01 	ldrb.w	r6, [r7], #1
   8169c:	e001      	b.n	816a2 <__strtok_r+0x12>
   8169e:	42a6      	cmp	r6, r4
   816a0:	d017      	beq.n	816d2 <__strtok_r+0x42>
   816a2:	f815 4b01 	ldrb.w	r4, [r5], #1
   816a6:	2c00      	cmp	r4, #0
   816a8:	d1f9      	bne.n	8169e <__strtok_r+0xe>
   816aa:	b1e6      	cbz	r6, 816e6 <__strtok_r+0x56>
   816ac:	460c      	mov	r4, r1
   816ae:	f817 5b01 	ldrb.w	r5, [r7], #1
   816b2:	e001      	b.n	816b8 <__strtok_r+0x28>
   816b4:	2b00      	cmp	r3, #0
   816b6:	d0f9      	beq.n	816ac <__strtok_r+0x1c>
   816b8:	f814 3b01 	ldrb.w	r3, [r4], #1
   816bc:	429d      	cmp	r5, r3
   816be:	d1f9      	bne.n	816b4 <__strtok_r+0x24>
   816c0:	b155      	cbz	r5, 816d8 <__strtok_r+0x48>
   816c2:	2300      	movs	r3, #0
   816c4:	f807 3c01 	strb.w	r3, [r7, #-1]
   816c8:	4606      	mov	r6, r0
   816ca:	6017      	str	r7, [r2, #0]
   816cc:	4630      	mov	r0, r6
   816ce:	bcf0      	pop	{r4, r5, r6, r7}
   816d0:	4770      	bx	lr
   816d2:	b153      	cbz	r3, 816ea <__strtok_r+0x5a>
   816d4:	4638      	mov	r0, r7
   816d6:	e7dd      	b.n	81694 <__strtok_r+0x4>
   816d8:	462f      	mov	r7, r5
   816da:	e7f5      	b.n	816c8 <__strtok_r+0x38>
   816dc:	6810      	ldr	r0, [r2, #0]
   816de:	2800      	cmp	r0, #0
   816e0:	d1d8      	bne.n	81694 <__strtok_r+0x4>
   816e2:	4606      	mov	r6, r0
   816e4:	e7f2      	b.n	816cc <__strtok_r+0x3c>
   816e6:	6016      	str	r6, [r2, #0]
   816e8:	e7f0      	b.n	816cc <__strtok_r+0x3c>
   816ea:	6017      	str	r7, [r2, #0]
   816ec:	4606      	mov	r6, r0
   816ee:	7003      	strb	r3, [r0, #0]
   816f0:	e7ec      	b.n	816cc <__strtok_r+0x3c>
   816f2:	bf00      	nop

000816f4 <_svfprintf_r>:
   816f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   816f8:	b0c3      	sub	sp, #268	; 0x10c
   816fa:	460c      	mov	r4, r1
   816fc:	910b      	str	r1, [sp, #44]	; 0x2c
   816fe:	4692      	mov	sl, r2
   81700:	930f      	str	r3, [sp, #60]	; 0x3c
   81702:	900c      	str	r0, [sp, #48]	; 0x30
   81704:	f002 fa54 	bl	83bb0 <_localeconv_r>
   81708:	6803      	ldr	r3, [r0, #0]
   8170a:	4618      	mov	r0, r3
   8170c:	931a      	str	r3, [sp, #104]	; 0x68
   8170e:	f7ff ff89 	bl	81624 <strlen>
   81712:	89a3      	ldrh	r3, [r4, #12]
   81714:	9019      	str	r0, [sp, #100]	; 0x64
   81716:	0619      	lsls	r1, r3, #24
   81718:	d503      	bpl.n	81722 <_svfprintf_r+0x2e>
   8171a:	6923      	ldr	r3, [r4, #16]
   8171c:	2b00      	cmp	r3, #0
   8171e:	f001 8031 	beq.w	82784 <_svfprintf_r+0x1090>
   81722:	2300      	movs	r3, #0
   81724:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81728:	46c8      	mov	r8, r9
   8172a:	9314      	str	r3, [sp, #80]	; 0x50
   8172c:	9313      	str	r3, [sp, #76]	; 0x4c
   8172e:	9315      	str	r3, [sp, #84]	; 0x54
   81730:	9318      	str	r3, [sp, #96]	; 0x60
   81732:	931b      	str	r3, [sp, #108]	; 0x6c
   81734:	9309      	str	r3, [sp, #36]	; 0x24
   81736:	9316      	str	r3, [sp, #88]	; 0x58
   81738:	9317      	str	r3, [sp, #92]	; 0x5c
   8173a:	9327      	str	r3, [sp, #156]	; 0x9c
   8173c:	9326      	str	r3, [sp, #152]	; 0x98
   8173e:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81742:	f89a 3000 	ldrb.w	r3, [sl]
   81746:	4654      	mov	r4, sl
   81748:	b1eb      	cbz	r3, 81786 <_svfprintf_r+0x92>
   8174a:	2b25      	cmp	r3, #37	; 0x25
   8174c:	d102      	bne.n	81754 <_svfprintf_r+0x60>
   8174e:	e01a      	b.n	81786 <_svfprintf_r+0x92>
   81750:	2b25      	cmp	r3, #37	; 0x25
   81752:	d003      	beq.n	8175c <_svfprintf_r+0x68>
   81754:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81758:	2b00      	cmp	r3, #0
   8175a:	d1f9      	bne.n	81750 <_svfprintf_r+0x5c>
   8175c:	eba4 050a 	sub.w	r5, r4, sl
   81760:	b18d      	cbz	r5, 81786 <_svfprintf_r+0x92>
   81762:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81764:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81766:	3301      	adds	r3, #1
   81768:	442a      	add	r2, r5
   8176a:	2b07      	cmp	r3, #7
   8176c:	f8c8 a000 	str.w	sl, [r8]
   81770:	f8c8 5004 	str.w	r5, [r8, #4]
   81774:	9227      	str	r2, [sp, #156]	; 0x9c
   81776:	9326      	str	r3, [sp, #152]	; 0x98
   81778:	f300 808a 	bgt.w	81890 <_svfprintf_r+0x19c>
   8177c:	f108 0808 	add.w	r8, r8, #8
   81780:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81782:	442b      	add	r3, r5
   81784:	9309      	str	r3, [sp, #36]	; 0x24
   81786:	7823      	ldrb	r3, [r4, #0]
   81788:	2b00      	cmp	r3, #0
   8178a:	f000 8089 	beq.w	818a0 <_svfprintf_r+0x1ac>
   8178e:	2300      	movs	r3, #0
   81790:	f04f 30ff 	mov.w	r0, #4294967295
   81794:	461a      	mov	r2, r3
   81796:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8179a:	4619      	mov	r1, r3
   8179c:	930d      	str	r3, [sp, #52]	; 0x34
   8179e:	469b      	mov	fp, r3
   817a0:	7863      	ldrb	r3, [r4, #1]
   817a2:	f104 0a01 	add.w	sl, r4, #1
   817a6:	900a      	str	r0, [sp, #40]	; 0x28
   817a8:	f10a 0a01 	add.w	sl, sl, #1
   817ac:	f1a3 0020 	sub.w	r0, r3, #32
   817b0:	2858      	cmp	r0, #88	; 0x58
   817b2:	f200 83b6 	bhi.w	81f22 <_svfprintf_r+0x82e>
   817b6:	e8df f010 	tbh	[pc, r0, lsl #1]
   817ba:	034b      	.short	0x034b
   817bc:	03b403b4 	.word	0x03b403b4
   817c0:	03b40353 	.word	0x03b40353
   817c4:	03b403b4 	.word	0x03b403b4
   817c8:	03b403b4 	.word	0x03b403b4
   817cc:	005903b4 	.word	0x005903b4
   817d0:	03b40358 	.word	0x03b40358
   817d4:	02140066 	.word	0x02140066
   817d8:	022f03b4 	.word	0x022f03b4
   817dc:	03a403a4 	.word	0x03a403a4
   817e0:	03a403a4 	.word	0x03a403a4
   817e4:	03a403a4 	.word	0x03a403a4
   817e8:	03a403a4 	.word	0x03a403a4
   817ec:	03b403a4 	.word	0x03b403a4
   817f0:	03b403b4 	.word	0x03b403b4
   817f4:	03b403b4 	.word	0x03b403b4
   817f8:	03b403b4 	.word	0x03b403b4
   817fc:	03b403b4 	.word	0x03b403b4
   81800:	028b03b4 	.word	0x028b03b4
   81804:	03b402d3 	.word	0x03b402d3
   81808:	03b402d3 	.word	0x03b402d3
   8180c:	03b403b4 	.word	0x03b403b4
   81810:	031a03b4 	.word	0x031a03b4
   81814:	03b403b4 	.word	0x03b403b4
   81818:	03b4031f 	.word	0x03b4031f
   8181c:	03b403b4 	.word	0x03b403b4
   81820:	03b403b4 	.word	0x03b403b4
   81824:	03b40234 	.word	0x03b40234
   81828:	024b03b4 	.word	0x024b03b4
   8182c:	03b403b4 	.word	0x03b403b4
   81830:	03b403b4 	.word	0x03b403b4
   81834:	03b403b4 	.word	0x03b403b4
   81838:	03b403b4 	.word	0x03b403b4
   8183c:	03b403b4 	.word	0x03b403b4
   81840:	039d0276 	.word	0x039d0276
   81844:	02d302d3 	.word	0x02d302d3
   81848:	036202d3 	.word	0x036202d3
   8184c:	03b4039d 	.word	0x03b4039d
   81850:	036703b4 	.word	0x036703b4
   81854:	037403b4 	.word	0x037403b4
   81858:	038b01dd 	.word	0x038b01dd
   8185c:	03b4035d 	.word	0x03b4035d
   81860:	03b401f2 	.word	0x03b401f2
   81864:	03b40087 	.word	0x03b40087
   81868:	033103b4 	.word	0x033103b4
   8186c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8186e:	6823      	ldr	r3, [r4, #0]
   81870:	4618      	mov	r0, r3
   81872:	930d      	str	r3, [sp, #52]	; 0x34
   81874:	4623      	mov	r3, r4
   81876:	2800      	cmp	r0, #0
   81878:	f103 0304 	add.w	r3, r3, #4
   8187c:	930f      	str	r3, [sp, #60]	; 0x3c
   8187e:	da04      	bge.n	8188a <_svfprintf_r+0x196>
   81880:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81882:	425b      	negs	r3, r3
   81884:	930d      	str	r3, [sp, #52]	; 0x34
   81886:	f04b 0b04 	orr.w	fp, fp, #4
   8188a:	f89a 3000 	ldrb.w	r3, [sl]
   8188e:	e78b      	b.n	817a8 <_svfprintf_r+0xb4>
   81890:	aa25      	add	r2, sp, #148	; 0x94
   81892:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81894:	980c      	ldr	r0, [sp, #48]	; 0x30
   81896:	f003 f809 	bl	848ac <__ssprint_r>
   8189a:	b940      	cbnz	r0, 818ae <_svfprintf_r+0x1ba>
   8189c:	46c8      	mov	r8, r9
   8189e:	e76f      	b.n	81780 <_svfprintf_r+0x8c>
   818a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   818a2:	b123      	cbz	r3, 818ae <_svfprintf_r+0x1ba>
   818a4:	980c      	ldr	r0, [sp, #48]	; 0x30
   818a6:	aa25      	add	r2, sp, #148	; 0x94
   818a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   818aa:	f002 ffff 	bl	848ac <__ssprint_r>
   818ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   818b0:	899b      	ldrh	r3, [r3, #12]
   818b2:	f013 0f40 	tst.w	r3, #64	; 0x40
   818b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   818b8:	bf18      	it	ne
   818ba:	f04f 33ff 	movne.w	r3, #4294967295
   818be:	9309      	str	r3, [sp, #36]	; 0x24
   818c0:	9809      	ldr	r0, [sp, #36]	; 0x24
   818c2:	b043      	add	sp, #268	; 0x10c
   818c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   818c8:	f01b 0f20 	tst.w	fp, #32
   818cc:	9311      	str	r3, [sp, #68]	; 0x44
   818ce:	f040 81af 	bne.w	81c30 <_svfprintf_r+0x53c>
   818d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   818d4:	f01b 0f10 	tst.w	fp, #16
   818d8:	4613      	mov	r3, r2
   818da:	f040 8596 	bne.w	8240a <_svfprintf_r+0xd16>
   818de:	f01b 0f40 	tst.w	fp, #64	; 0x40
   818e2:	f000 8592 	beq.w	8240a <_svfprintf_r+0xd16>
   818e6:	2500      	movs	r5, #0
   818e8:	2301      	movs	r3, #1
   818ea:	8814      	ldrh	r4, [r2, #0]
   818ec:	3204      	adds	r2, #4
   818ee:	920f      	str	r2, [sp, #60]	; 0x3c
   818f0:	2200      	movs	r2, #0
   818f2:	4617      	mov	r7, r2
   818f4:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   818f8:	990a      	ldr	r1, [sp, #40]	; 0x28
   818fa:	1c4a      	adds	r2, r1, #1
   818fc:	f000 8210 	beq.w	81d20 <_svfprintf_r+0x62c>
   81900:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   81904:	9207      	str	r2, [sp, #28]
   81906:	ea54 0205 	orrs.w	r2, r4, r5
   8190a:	f040 820f 	bne.w	81d2c <_svfprintf_r+0x638>
   8190e:	2900      	cmp	r1, #0
   81910:	f040 842d 	bne.w	8216e <_svfprintf_r+0xa7a>
   81914:	2b00      	cmp	r3, #0
   81916:	f040 8535 	bne.w	82384 <_svfprintf_r+0xc90>
   8191a:	f01b 0301 	ands.w	r3, fp, #1
   8191e:	930e      	str	r3, [sp, #56]	; 0x38
   81920:	f000 865e 	beq.w	825e0 <_svfprintf_r+0xeec>
   81924:	2330      	movs	r3, #48	; 0x30
   81926:	ae42      	add	r6, sp, #264	; 0x108
   81928:	f806 3d41 	strb.w	r3, [r6, #-65]!
   8192c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8192e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81930:	4293      	cmp	r3, r2
   81932:	bfb8      	it	lt
   81934:	4613      	movlt	r3, r2
   81936:	9308      	str	r3, [sp, #32]
   81938:	2300      	movs	r3, #0
   8193a:	9312      	str	r3, [sp, #72]	; 0x48
   8193c:	b117      	cbz	r7, 81944 <_svfprintf_r+0x250>
   8193e:	9b08      	ldr	r3, [sp, #32]
   81940:	3301      	adds	r3, #1
   81942:	9308      	str	r3, [sp, #32]
   81944:	9b07      	ldr	r3, [sp, #28]
   81946:	f013 0302 	ands.w	r3, r3, #2
   8194a:	9310      	str	r3, [sp, #64]	; 0x40
   8194c:	d002      	beq.n	81954 <_svfprintf_r+0x260>
   8194e:	9b08      	ldr	r3, [sp, #32]
   81950:	3302      	adds	r3, #2
   81952:	9308      	str	r3, [sp, #32]
   81954:	9b07      	ldr	r3, [sp, #28]
   81956:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   8195a:	f040 830e 	bne.w	81f7a <_svfprintf_r+0x886>
   8195e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81960:	9a08      	ldr	r2, [sp, #32]
   81962:	eba3 0b02 	sub.w	fp, r3, r2
   81966:	f1bb 0f00 	cmp.w	fp, #0
   8196a:	f340 8306 	ble.w	81f7a <_svfprintf_r+0x886>
   8196e:	f1bb 0f10 	cmp.w	fp, #16
   81972:	f340 87ae 	ble.w	828d2 <_svfprintf_r+0x11de>
   81976:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81978:	4643      	mov	r3, r8
   8197a:	4621      	mov	r1, r4
   8197c:	46a8      	mov	r8, r5
   8197e:	2710      	movs	r7, #16
   81980:	9a26      	ldr	r2, [sp, #152]	; 0x98
   81982:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81984:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81986:	e006      	b.n	81996 <_svfprintf_r+0x2a2>
   81988:	f1ab 0b10 	sub.w	fp, fp, #16
   8198c:	f1bb 0f10 	cmp.w	fp, #16
   81990:	f103 0308 	add.w	r3, r3, #8
   81994:	dd18      	ble.n	819c8 <_svfprintf_r+0x2d4>
   81996:	3201      	adds	r2, #1
   81998:	48ab      	ldr	r0, [pc, #684]	; (81c48 <_svfprintf_r+0x554>)
   8199a:	3110      	adds	r1, #16
   8199c:	2a07      	cmp	r2, #7
   8199e:	9127      	str	r1, [sp, #156]	; 0x9c
   819a0:	9226      	str	r2, [sp, #152]	; 0x98
   819a2:	e883 0081 	stmia.w	r3, {r0, r7}
   819a6:	ddef      	ble.n	81988 <_svfprintf_r+0x294>
   819a8:	aa25      	add	r2, sp, #148	; 0x94
   819aa:	4629      	mov	r1, r5
   819ac:	4620      	mov	r0, r4
   819ae:	f002 ff7d 	bl	848ac <__ssprint_r>
   819b2:	2800      	cmp	r0, #0
   819b4:	f47f af7b 	bne.w	818ae <_svfprintf_r+0x1ba>
   819b8:	f1ab 0b10 	sub.w	fp, fp, #16
   819bc:	f1bb 0f10 	cmp.w	fp, #16
   819c0:	464b      	mov	r3, r9
   819c2:	9927      	ldr	r1, [sp, #156]	; 0x9c
   819c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   819c6:	dce6      	bgt.n	81996 <_svfprintf_r+0x2a2>
   819c8:	4645      	mov	r5, r8
   819ca:	460c      	mov	r4, r1
   819cc:	4698      	mov	r8, r3
   819ce:	3201      	adds	r2, #1
   819d0:	4b9d      	ldr	r3, [pc, #628]	; (81c48 <_svfprintf_r+0x554>)
   819d2:	445c      	add	r4, fp
   819d4:	2a07      	cmp	r2, #7
   819d6:	9427      	str	r4, [sp, #156]	; 0x9c
   819d8:	9226      	str	r2, [sp, #152]	; 0x98
   819da:	e888 0808 	stmia.w	r8, {r3, fp}
   819de:	f300 82c1 	bgt.w	81f64 <_svfprintf_r+0x870>
   819e2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   819e6:	f108 0808 	add.w	r8, r8, #8
   819ea:	b187      	cbz	r7, 81a0e <_svfprintf_r+0x31a>
   819ec:	2101      	movs	r1, #1
   819ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819f0:	440c      	add	r4, r1
   819f2:	440b      	add	r3, r1
   819f4:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   819f8:	2b07      	cmp	r3, #7
   819fa:	9427      	str	r4, [sp, #156]	; 0x9c
   819fc:	9326      	str	r3, [sp, #152]	; 0x98
   819fe:	f8c8 1004 	str.w	r1, [r8, #4]
   81a02:	f8c8 2000 	str.w	r2, [r8]
   81a06:	f300 83c9 	bgt.w	8219c <_svfprintf_r+0xaa8>
   81a0a:	f108 0808 	add.w	r8, r8, #8
   81a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a10:	b17b      	cbz	r3, 81a32 <_svfprintf_r+0x33e>
   81a12:	2102      	movs	r1, #2
   81a14:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a16:	440c      	add	r4, r1
   81a18:	3301      	adds	r3, #1
   81a1a:	aa1e      	add	r2, sp, #120	; 0x78
   81a1c:	2b07      	cmp	r3, #7
   81a1e:	9427      	str	r4, [sp, #156]	; 0x9c
   81a20:	9326      	str	r3, [sp, #152]	; 0x98
   81a22:	f8c8 1004 	str.w	r1, [r8, #4]
   81a26:	f8c8 2000 	str.w	r2, [r8]
   81a2a:	f300 840d 	bgt.w	82248 <_svfprintf_r+0xb54>
   81a2e:	f108 0808 	add.w	r8, r8, #8
   81a32:	2d80      	cmp	r5, #128	; 0x80
   81a34:	f000 8301 	beq.w	8203a <_svfprintf_r+0x946>
   81a38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81a3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81a3c:	1a9f      	subs	r7, r3, r2
   81a3e:	2f00      	cmp	r7, #0
   81a40:	dd37      	ble.n	81ab2 <_svfprintf_r+0x3be>
   81a42:	2f10      	cmp	r7, #16
   81a44:	f340 8675 	ble.w	82732 <_svfprintf_r+0x103e>
   81a48:	4d80      	ldr	r5, [pc, #512]	; (81c4c <_svfprintf_r+0x558>)
   81a4a:	4642      	mov	r2, r8
   81a4c:	4621      	mov	r1, r4
   81a4e:	46b0      	mov	r8, r6
   81a50:	f04f 0b10 	mov.w	fp, #16
   81a54:	462e      	mov	r6, r5
   81a56:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81a5a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81a5c:	e004      	b.n	81a68 <_svfprintf_r+0x374>
   81a5e:	3f10      	subs	r7, #16
   81a60:	2f10      	cmp	r7, #16
   81a62:	f102 0208 	add.w	r2, r2, #8
   81a66:	dd15      	ble.n	81a94 <_svfprintf_r+0x3a0>
   81a68:	3301      	adds	r3, #1
   81a6a:	3110      	adds	r1, #16
   81a6c:	2b07      	cmp	r3, #7
   81a6e:	9127      	str	r1, [sp, #156]	; 0x9c
   81a70:	9326      	str	r3, [sp, #152]	; 0x98
   81a72:	e882 0840 	stmia.w	r2, {r6, fp}
   81a76:	ddf2      	ble.n	81a5e <_svfprintf_r+0x36a>
   81a78:	aa25      	add	r2, sp, #148	; 0x94
   81a7a:	4629      	mov	r1, r5
   81a7c:	4620      	mov	r0, r4
   81a7e:	f002 ff15 	bl	848ac <__ssprint_r>
   81a82:	2800      	cmp	r0, #0
   81a84:	f47f af13 	bne.w	818ae <_svfprintf_r+0x1ba>
   81a88:	3f10      	subs	r7, #16
   81a8a:	2f10      	cmp	r7, #16
   81a8c:	464a      	mov	r2, r9
   81a8e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81a90:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a92:	dce9      	bgt.n	81a68 <_svfprintf_r+0x374>
   81a94:	4635      	mov	r5, r6
   81a96:	460c      	mov	r4, r1
   81a98:	4646      	mov	r6, r8
   81a9a:	4690      	mov	r8, r2
   81a9c:	3301      	adds	r3, #1
   81a9e:	443c      	add	r4, r7
   81aa0:	2b07      	cmp	r3, #7
   81aa2:	9427      	str	r4, [sp, #156]	; 0x9c
   81aa4:	9326      	str	r3, [sp, #152]	; 0x98
   81aa6:	e888 00a0 	stmia.w	r8, {r5, r7}
   81aaa:	f300 836c 	bgt.w	82186 <_svfprintf_r+0xa92>
   81aae:	f108 0808 	add.w	r8, r8, #8
   81ab2:	9b07      	ldr	r3, [sp, #28]
   81ab4:	05df      	lsls	r7, r3, #23
   81ab6:	f100 8262 	bmi.w	81f7e <_svfprintf_r+0x88a>
   81aba:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81abc:	990e      	ldr	r1, [sp, #56]	; 0x38
   81abe:	3301      	adds	r3, #1
   81ac0:	440c      	add	r4, r1
   81ac2:	2b07      	cmp	r3, #7
   81ac4:	9427      	str	r4, [sp, #156]	; 0x9c
   81ac6:	f8c8 6000 	str.w	r6, [r8]
   81aca:	f8c8 1004 	str.w	r1, [r8, #4]
   81ace:	9326      	str	r3, [sp, #152]	; 0x98
   81ad0:	f300 83af 	bgt.w	82232 <_svfprintf_r+0xb3e>
   81ad4:	f108 0808 	add.w	r8, r8, #8
   81ad8:	9b07      	ldr	r3, [sp, #28]
   81ada:	075b      	lsls	r3, r3, #29
   81adc:	d53b      	bpl.n	81b56 <_svfprintf_r+0x462>
   81ade:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81ae0:	9a08      	ldr	r2, [sp, #32]
   81ae2:	1a9d      	subs	r5, r3, r2
   81ae4:	2d00      	cmp	r5, #0
   81ae6:	dd36      	ble.n	81b56 <_svfprintf_r+0x462>
   81ae8:	2d10      	cmp	r5, #16
   81aea:	f340 871d 	ble.w	82928 <_svfprintf_r+0x1234>
   81aee:	2610      	movs	r6, #16
   81af0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81af2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   81af4:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   81af8:	e004      	b.n	81b04 <_svfprintf_r+0x410>
   81afa:	3d10      	subs	r5, #16
   81afc:	2d10      	cmp	r5, #16
   81afe:	f108 0808 	add.w	r8, r8, #8
   81b02:	dd16      	ble.n	81b32 <_svfprintf_r+0x43e>
   81b04:	3301      	adds	r3, #1
   81b06:	4a50      	ldr	r2, [pc, #320]	; (81c48 <_svfprintf_r+0x554>)
   81b08:	3410      	adds	r4, #16
   81b0a:	2b07      	cmp	r3, #7
   81b0c:	9427      	str	r4, [sp, #156]	; 0x9c
   81b0e:	9326      	str	r3, [sp, #152]	; 0x98
   81b10:	e888 0044 	stmia.w	r8, {r2, r6}
   81b14:	ddf1      	ble.n	81afa <_svfprintf_r+0x406>
   81b16:	aa25      	add	r2, sp, #148	; 0x94
   81b18:	4659      	mov	r1, fp
   81b1a:	4638      	mov	r0, r7
   81b1c:	f002 fec6 	bl	848ac <__ssprint_r>
   81b20:	2800      	cmp	r0, #0
   81b22:	f47f aec4 	bne.w	818ae <_svfprintf_r+0x1ba>
   81b26:	3d10      	subs	r5, #16
   81b28:	2d10      	cmp	r5, #16
   81b2a:	46c8      	mov	r8, r9
   81b2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81b2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b30:	dce8      	bgt.n	81b04 <_svfprintf_r+0x410>
   81b32:	3301      	adds	r3, #1
   81b34:	4a44      	ldr	r2, [pc, #272]	; (81c48 <_svfprintf_r+0x554>)
   81b36:	442c      	add	r4, r5
   81b38:	2b07      	cmp	r3, #7
   81b3a:	9427      	str	r4, [sp, #156]	; 0x9c
   81b3c:	9326      	str	r3, [sp, #152]	; 0x98
   81b3e:	e888 0024 	stmia.w	r8, {r2, r5}
   81b42:	dd08      	ble.n	81b56 <_svfprintf_r+0x462>
   81b44:	aa25      	add	r2, sp, #148	; 0x94
   81b46:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81b48:	980c      	ldr	r0, [sp, #48]	; 0x30
   81b4a:	f002 feaf 	bl	848ac <__ssprint_r>
   81b4e:	2800      	cmp	r0, #0
   81b50:	f47f aead 	bne.w	818ae <_svfprintf_r+0x1ba>
   81b54:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81b56:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81b58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81b5a:	9908      	ldr	r1, [sp, #32]
   81b5c:	428a      	cmp	r2, r1
   81b5e:	bfac      	ite	ge
   81b60:	189b      	addge	r3, r3, r2
   81b62:	185b      	addlt	r3, r3, r1
   81b64:	9309      	str	r3, [sp, #36]	; 0x24
   81b66:	2c00      	cmp	r4, #0
   81b68:	f040 82f7 	bne.w	8215a <_svfprintf_r+0xa66>
   81b6c:	2300      	movs	r3, #0
   81b6e:	46c8      	mov	r8, r9
   81b70:	9326      	str	r3, [sp, #152]	; 0x98
   81b72:	e5e6      	b.n	81742 <_svfprintf_r+0x4e>
   81b74:	9311      	str	r3, [sp, #68]	; 0x44
   81b76:	f01b 0320 	ands.w	r3, fp, #32
   81b7a:	f040 8144 	bne.w	81e06 <_svfprintf_r+0x712>
   81b7e:	f01b 0210 	ands.w	r2, fp, #16
   81b82:	f040 8462 	bne.w	8244a <_svfprintf_r+0xd56>
   81b86:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   81b8a:	f000 845e 	beq.w	8244a <_svfprintf_r+0xd56>
   81b8e:	990f      	ldr	r1, [sp, #60]	; 0x3c
   81b90:	4613      	mov	r3, r2
   81b92:	460a      	mov	r2, r1
   81b94:	3204      	adds	r2, #4
   81b96:	880c      	ldrh	r4, [r1, #0]
   81b98:	2500      	movs	r5, #0
   81b9a:	920f      	str	r2, [sp, #60]	; 0x3c
   81b9c:	e6a8      	b.n	818f0 <_svfprintf_r+0x1fc>
   81b9e:	2500      	movs	r5, #0
   81ba0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81ba2:	9311      	str	r3, [sp, #68]	; 0x44
   81ba4:	6816      	ldr	r6, [r2, #0]
   81ba6:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81baa:	1d14      	adds	r4, r2, #4
   81bac:	2e00      	cmp	r6, #0
   81bae:	f000 86c9 	beq.w	82944 <_svfprintf_r+0x1250>
   81bb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   81bb4:	1c53      	adds	r3, r2, #1
   81bb6:	f000 8617 	beq.w	827e8 <_svfprintf_r+0x10f4>
   81bba:	4629      	mov	r1, r5
   81bbc:	4630      	mov	r0, r6
   81bbe:	f002 faa7 	bl	84110 <memchr>
   81bc2:	2800      	cmp	r0, #0
   81bc4:	f000 8709 	beq.w	829da <_svfprintf_r+0x12e6>
   81bc8:	1b83      	subs	r3, r0, r6
   81bca:	950a      	str	r5, [sp, #40]	; 0x28
   81bcc:	930e      	str	r3, [sp, #56]	; 0x38
   81bce:	940f      	str	r4, [sp, #60]	; 0x3c
   81bd0:	f8cd b01c 	str.w	fp, [sp, #28]
   81bd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   81bd8:	9308      	str	r3, [sp, #32]
   81bda:	9512      	str	r5, [sp, #72]	; 0x48
   81bdc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81be0:	e6ac      	b.n	8193c <_svfprintf_r+0x248>
   81be2:	f89a 3000 	ldrb.w	r3, [sl]
   81be6:	f10a 0401 	add.w	r4, sl, #1
   81bea:	2b2a      	cmp	r3, #42	; 0x2a
   81bec:	f000 87bd 	beq.w	82b6a <_svfprintf_r+0x1476>
   81bf0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81bf4:	2809      	cmp	r0, #9
   81bf6:	46a2      	mov	sl, r4
   81bf8:	f200 8714 	bhi.w	82a24 <_svfprintf_r+0x1330>
   81bfc:	2300      	movs	r3, #0
   81bfe:	461c      	mov	r4, r3
   81c00:	f81a 3b01 	ldrb.w	r3, [sl], #1
   81c04:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   81c08:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   81c0c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81c10:	2809      	cmp	r0, #9
   81c12:	d9f5      	bls.n	81c00 <_svfprintf_r+0x50c>
   81c14:	940a      	str	r4, [sp, #40]	; 0x28
   81c16:	e5c9      	b.n	817ac <_svfprintf_r+0xb8>
   81c18:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   81c1c:	f89a 3000 	ldrb.w	r3, [sl]
   81c20:	e5c2      	b.n	817a8 <_svfprintf_r+0xb4>
   81c22:	f04b 0b10 	orr.w	fp, fp, #16
   81c26:	f01b 0f20 	tst.w	fp, #32
   81c2a:	9311      	str	r3, [sp, #68]	; 0x44
   81c2c:	f43f ae51 	beq.w	818d2 <_svfprintf_r+0x1de>
   81c30:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81c32:	3407      	adds	r4, #7
   81c34:	f024 0307 	bic.w	r3, r4, #7
   81c38:	f103 0208 	add.w	r2, r3, #8
   81c3c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81c40:	920f      	str	r2, [sp, #60]	; 0x3c
   81c42:	2301      	movs	r3, #1
   81c44:	e654      	b.n	818f0 <_svfprintf_r+0x1fc>
   81c46:	bf00      	nop
   81c48:	00085ed0 	.word	0x00085ed0
   81c4c:	00085ee0 	.word	0x00085ee0
   81c50:	9311      	str	r3, [sp, #68]	; 0x44
   81c52:	2a00      	cmp	r2, #0
   81c54:	f040 87a8 	bne.w	82ba8 <_svfprintf_r+0x14b4>
   81c58:	4bbd      	ldr	r3, [pc, #756]	; (81f50 <_svfprintf_r+0x85c>)
   81c5a:	f01b 0f20 	tst.w	fp, #32
   81c5e:	9318      	str	r3, [sp, #96]	; 0x60
   81c60:	f040 80e6 	bne.w	81e30 <_svfprintf_r+0x73c>
   81c64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81c66:	f01b 0f10 	tst.w	fp, #16
   81c6a:	4613      	mov	r3, r2
   81c6c:	f040 83d4 	bne.w	82418 <_svfprintf_r+0xd24>
   81c70:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81c74:	f000 83d0 	beq.w	82418 <_svfprintf_r+0xd24>
   81c78:	2500      	movs	r5, #0
   81c7a:	3304      	adds	r3, #4
   81c7c:	8814      	ldrh	r4, [r2, #0]
   81c7e:	930f      	str	r3, [sp, #60]	; 0x3c
   81c80:	f01b 0f01 	tst.w	fp, #1
   81c84:	f000 80e2 	beq.w	81e4c <_svfprintf_r+0x758>
   81c88:	ea54 0305 	orrs.w	r3, r4, r5
   81c8c:	f000 80de 	beq.w	81e4c <_svfprintf_r+0x758>
   81c90:	2330      	movs	r3, #48	; 0x30
   81c92:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   81c96:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81c9a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   81c9e:	f04b 0b02 	orr.w	fp, fp, #2
   81ca2:	2302      	movs	r3, #2
   81ca4:	e624      	b.n	818f0 <_svfprintf_r+0x1fc>
   81ca6:	2201      	movs	r2, #1
   81ca8:	9311      	str	r3, [sp, #68]	; 0x44
   81caa:	2300      	movs	r3, #0
   81cac:	4611      	mov	r1, r2
   81cae:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81cb0:	9208      	str	r2, [sp, #32]
   81cb2:	6802      	ldr	r2, [r0, #0]
   81cb4:	461f      	mov	r7, r3
   81cb6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81cba:	930a      	str	r3, [sp, #40]	; 0x28
   81cbc:	9312      	str	r3, [sp, #72]	; 0x48
   81cbe:	1d03      	adds	r3, r0, #4
   81cc0:	f8cd b01c 	str.w	fp, [sp, #28]
   81cc4:	910e      	str	r1, [sp, #56]	; 0x38
   81cc6:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   81cca:	930f      	str	r3, [sp, #60]	; 0x3c
   81ccc:	ae28      	add	r6, sp, #160	; 0xa0
   81cce:	e639      	b.n	81944 <_svfprintf_r+0x250>
   81cd0:	9311      	str	r3, [sp, #68]	; 0x44
   81cd2:	2a00      	cmp	r2, #0
   81cd4:	f040 877f 	bne.w	82bd6 <_svfprintf_r+0x14e2>
   81cd8:	f04b 0b10 	orr.w	fp, fp, #16
   81cdc:	f01b 0f20 	tst.w	fp, #32
   81ce0:	f040 8471 	bne.w	825c6 <_svfprintf_r+0xed2>
   81ce4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81ce6:	f01b 0f10 	tst.w	fp, #16
   81cea:	4613      	mov	r3, r2
   81cec:	f040 8399 	bne.w	82422 <_svfprintf_r+0xd2e>
   81cf0:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81cf4:	f000 8395 	beq.w	82422 <_svfprintf_r+0xd2e>
   81cf8:	f9b2 4000 	ldrsh.w	r4, [r2]
   81cfc:	3304      	adds	r3, #4
   81cfe:	17e5      	asrs	r5, r4, #31
   81d00:	930f      	str	r3, [sp, #60]	; 0x3c
   81d02:	4622      	mov	r2, r4
   81d04:	462b      	mov	r3, r5
   81d06:	2a00      	cmp	r2, #0
   81d08:	f173 0300 	sbcs.w	r3, r3, #0
   81d0c:	f2c0 8394 	blt.w	82438 <_svfprintf_r+0xd44>
   81d10:	990a      	ldr	r1, [sp, #40]	; 0x28
   81d12:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81d16:	1c4a      	adds	r2, r1, #1
   81d18:	f04f 0301 	mov.w	r3, #1
   81d1c:	f47f adf0 	bne.w	81900 <_svfprintf_r+0x20c>
   81d20:	ea54 0205 	orrs.w	r2, r4, r5
   81d24:	f000 8225 	beq.w	82172 <_svfprintf_r+0xa7e>
   81d28:	f8cd b01c 	str.w	fp, [sp, #28]
   81d2c:	2b01      	cmp	r3, #1
   81d2e:	f000 830a 	beq.w	82346 <_svfprintf_r+0xc52>
   81d32:	2b02      	cmp	r3, #2
   81d34:	f040 8298 	bne.w	82268 <_svfprintf_r+0xb74>
   81d38:	464e      	mov	r6, r9
   81d3a:	9818      	ldr	r0, [sp, #96]	; 0x60
   81d3c:	0923      	lsrs	r3, r4, #4
   81d3e:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   81d42:	0929      	lsrs	r1, r5, #4
   81d44:	f004 020f 	and.w	r2, r4, #15
   81d48:	460d      	mov	r5, r1
   81d4a:	461c      	mov	r4, r3
   81d4c:	5c83      	ldrb	r3, [r0, r2]
   81d4e:	f806 3d01 	strb.w	r3, [r6, #-1]!
   81d52:	ea54 0305 	orrs.w	r3, r4, r5
   81d56:	d1f1      	bne.n	81d3c <_svfprintf_r+0x648>
   81d58:	eba9 0306 	sub.w	r3, r9, r6
   81d5c:	930e      	str	r3, [sp, #56]	; 0x38
   81d5e:	e5e5      	b.n	8192c <_svfprintf_r+0x238>
   81d60:	9311      	str	r3, [sp, #68]	; 0x44
   81d62:	2a00      	cmp	r2, #0
   81d64:	f040 8733 	bne.w	82bce <_svfprintf_r+0x14da>
   81d68:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81d6a:	f01b 0f08 	tst.w	fp, #8
   81d6e:	f104 0407 	add.w	r4, r4, #7
   81d72:	f000 84cb 	beq.w	8270c <_svfprintf_r+0x1018>
   81d76:	f024 0307 	bic.w	r3, r4, #7
   81d7a:	f103 0208 	add.w	r2, r3, #8
   81d7e:	920f      	str	r2, [sp, #60]	; 0x3c
   81d80:	681a      	ldr	r2, [r3, #0]
   81d82:	685b      	ldr	r3, [r3, #4]
   81d84:	9214      	str	r2, [sp, #80]	; 0x50
   81d86:	9315      	str	r3, [sp, #84]	; 0x54
   81d88:	9b15      	ldr	r3, [sp, #84]	; 0x54
   81d8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81d8c:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   81d90:	4628      	mov	r0, r5
   81d92:	4621      	mov	r1, r4
   81d94:	f04f 32ff 	mov.w	r2, #4294967295
   81d98:	4b6e      	ldr	r3, [pc, #440]	; (81f54 <_svfprintf_r+0x860>)
   81d9a:	f003 fe4f 	bl	85a3c <__aeabi_dcmpun>
   81d9e:	2800      	cmp	r0, #0
   81da0:	f040 8430 	bne.w	82604 <_svfprintf_r+0xf10>
   81da4:	4628      	mov	r0, r5
   81da6:	4621      	mov	r1, r4
   81da8:	f04f 32ff 	mov.w	r2, #4294967295
   81dac:	4b69      	ldr	r3, [pc, #420]	; (81f54 <_svfprintf_r+0x860>)
   81dae:	f003 fe27 	bl	85a00 <__aeabi_dcmple>
   81db2:	2800      	cmp	r0, #0
   81db4:	f040 8426 	bne.w	82604 <_svfprintf_r+0xf10>
   81db8:	a814      	add	r0, sp, #80	; 0x50
   81dba:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81dbc:	f003 fe16 	bl	859ec <__aeabi_dcmplt>
   81dc0:	2800      	cmp	r0, #0
   81dc2:	f040 85d1 	bne.w	82968 <_svfprintf_r+0x1274>
   81dc6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81dca:	2303      	movs	r3, #3
   81dcc:	461a      	mov	r2, r3
   81dce:	9308      	str	r3, [sp, #32]
   81dd0:	2300      	movs	r3, #0
   81dd2:	4619      	mov	r1, r3
   81dd4:	930a      	str	r3, [sp, #40]	; 0x28
   81dd6:	4e60      	ldr	r6, [pc, #384]	; (81f58 <_svfprintf_r+0x864>)
   81dd8:	4b60      	ldr	r3, [pc, #384]	; (81f5c <_svfprintf_r+0x868>)
   81dda:	920e      	str	r2, [sp, #56]	; 0x38
   81ddc:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81dde:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   81de2:	9007      	str	r0, [sp, #28]
   81de4:	9112      	str	r1, [sp, #72]	; 0x48
   81de6:	2a47      	cmp	r2, #71	; 0x47
   81de8:	bfd8      	it	le
   81dea:	461e      	movle	r6, r3
   81dec:	e5a6      	b.n	8193c <_svfprintf_r+0x248>
   81dee:	f04b 0b08 	orr.w	fp, fp, #8
   81df2:	f89a 3000 	ldrb.w	r3, [sl]
   81df6:	e4d7      	b.n	817a8 <_svfprintf_r+0xb4>
   81df8:	f04b 0b10 	orr.w	fp, fp, #16
   81dfc:	9311      	str	r3, [sp, #68]	; 0x44
   81dfe:	f01b 0320 	ands.w	r3, fp, #32
   81e02:	f43f aebc 	beq.w	81b7e <_svfprintf_r+0x48a>
   81e06:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81e08:	3407      	adds	r4, #7
   81e0a:	f024 0307 	bic.w	r3, r4, #7
   81e0e:	f103 0208 	add.w	r2, r3, #8
   81e12:	e9d3 4500 	ldrd	r4, r5, [r3]
   81e16:	920f      	str	r2, [sp, #60]	; 0x3c
   81e18:	2300      	movs	r3, #0
   81e1a:	e569      	b.n	818f0 <_svfprintf_r+0x1fc>
   81e1c:	9311      	str	r3, [sp, #68]	; 0x44
   81e1e:	2a00      	cmp	r2, #0
   81e20:	f040 86be 	bne.w	82ba0 <_svfprintf_r+0x14ac>
   81e24:	4b4e      	ldr	r3, [pc, #312]	; (81f60 <_svfprintf_r+0x86c>)
   81e26:	f01b 0f20 	tst.w	fp, #32
   81e2a:	9318      	str	r3, [sp, #96]	; 0x60
   81e2c:	f43f af1a 	beq.w	81c64 <_svfprintf_r+0x570>
   81e30:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81e32:	f01b 0f01 	tst.w	fp, #1
   81e36:	f104 0407 	add.w	r4, r4, #7
   81e3a:	f024 0307 	bic.w	r3, r4, #7
   81e3e:	f103 0208 	add.w	r2, r3, #8
   81e42:	920f      	str	r2, [sp, #60]	; 0x3c
   81e44:	e9d3 4500 	ldrd	r4, r5, [r3]
   81e48:	f47f af1e 	bne.w	81c88 <_svfprintf_r+0x594>
   81e4c:	2302      	movs	r3, #2
   81e4e:	e54f      	b.n	818f0 <_svfprintf_r+0x1fc>
   81e50:	f89a 3000 	ldrb.w	r3, [sl]
   81e54:	2900      	cmp	r1, #0
   81e56:	f47f aca7 	bne.w	817a8 <_svfprintf_r+0xb4>
   81e5a:	2201      	movs	r2, #1
   81e5c:	2120      	movs	r1, #32
   81e5e:	e4a3      	b.n	817a8 <_svfprintf_r+0xb4>
   81e60:	f04b 0b01 	orr.w	fp, fp, #1
   81e64:	f89a 3000 	ldrb.w	r3, [sl]
   81e68:	e49e      	b.n	817a8 <_svfprintf_r+0xb4>
   81e6a:	f89a 3000 	ldrb.w	r3, [sl]
   81e6e:	2201      	movs	r2, #1
   81e70:	212b      	movs	r1, #43	; 0x2b
   81e72:	e499      	b.n	817a8 <_svfprintf_r+0xb4>
   81e74:	f04b 0b20 	orr.w	fp, fp, #32
   81e78:	f89a 3000 	ldrb.w	r3, [sl]
   81e7c:	e494      	b.n	817a8 <_svfprintf_r+0xb4>
   81e7e:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   81e82:	f89a 3000 	ldrb.w	r3, [sl]
   81e86:	e48f      	b.n	817a8 <_svfprintf_r+0xb4>
   81e88:	f89a 3000 	ldrb.w	r3, [sl]
   81e8c:	2b6c      	cmp	r3, #108	; 0x6c
   81e8e:	bf03      	ittte	eq
   81e90:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   81e94:	f04b 0b20 	orreq.w	fp, fp, #32
   81e98:	f10a 0a01 	addeq.w	sl, sl, #1
   81e9c:	f04b 0b10 	orrne.w	fp, fp, #16
   81ea0:	e482      	b.n	817a8 <_svfprintf_r+0xb4>
   81ea2:	2a00      	cmp	r2, #0
   81ea4:	f040 8678 	bne.w	82b98 <_svfprintf_r+0x14a4>
   81ea8:	f01b 0f20 	tst.w	fp, #32
   81eac:	f040 844f 	bne.w	8274e <_svfprintf_r+0x105a>
   81eb0:	f01b 0f10 	tst.w	fp, #16
   81eb4:	f040 8435 	bne.w	82722 <_svfprintf_r+0x102e>
   81eb8:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81ebc:	f000 8431 	beq.w	82722 <_svfprintf_r+0x102e>
   81ec0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81ec2:	6813      	ldr	r3, [r2, #0]
   81ec4:	3204      	adds	r2, #4
   81ec6:	920f      	str	r2, [sp, #60]	; 0x3c
   81ec8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   81ecc:	801a      	strh	r2, [r3, #0]
   81ece:	e438      	b.n	81742 <_svfprintf_r+0x4e>
   81ed0:	2378      	movs	r3, #120	; 0x78
   81ed2:	2230      	movs	r2, #48	; 0x30
   81ed4:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81ed6:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   81eda:	9311      	str	r3, [sp, #68]	; 0x44
   81edc:	1d03      	adds	r3, r0, #4
   81ede:	930f      	str	r3, [sp, #60]	; 0x3c
   81ee0:	4b1f      	ldr	r3, [pc, #124]	; (81f60 <_svfprintf_r+0x86c>)
   81ee2:	6804      	ldr	r4, [r0, #0]
   81ee4:	9318      	str	r3, [sp, #96]	; 0x60
   81ee6:	f04b 0b02 	orr.w	fp, fp, #2
   81eea:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   81eee:	2500      	movs	r5, #0
   81ef0:	2302      	movs	r3, #2
   81ef2:	e4fd      	b.n	818f0 <_svfprintf_r+0x1fc>
   81ef4:	9311      	str	r3, [sp, #68]	; 0x44
   81ef6:	2a00      	cmp	r2, #0
   81ef8:	f43f aef0 	beq.w	81cdc <_svfprintf_r+0x5e8>
   81efc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   81f00:	e6ec      	b.n	81cdc <_svfprintf_r+0x5e8>
   81f02:	2000      	movs	r0, #0
   81f04:	4604      	mov	r4, r0
   81f06:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81f0a:	f81a 3b01 	ldrb.w	r3, [sl], #1
   81f0e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   81f12:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   81f16:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81f1a:	2809      	cmp	r0, #9
   81f1c:	d9f5      	bls.n	81f0a <_svfprintf_r+0x816>
   81f1e:	940d      	str	r4, [sp, #52]	; 0x34
   81f20:	e444      	b.n	817ac <_svfprintf_r+0xb8>
   81f22:	9311      	str	r3, [sp, #68]	; 0x44
   81f24:	2a00      	cmp	r2, #0
   81f26:	f040 8646 	bne.w	82bb6 <_svfprintf_r+0x14c2>
   81f2a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81f2c:	2a00      	cmp	r2, #0
   81f2e:	f43f acb7 	beq.w	818a0 <_svfprintf_r+0x1ac>
   81f32:	2300      	movs	r3, #0
   81f34:	2101      	movs	r1, #1
   81f36:	461f      	mov	r7, r3
   81f38:	9108      	str	r1, [sp, #32]
   81f3a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   81f3e:	f8cd b01c 	str.w	fp, [sp, #28]
   81f42:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81f46:	930a      	str	r3, [sp, #40]	; 0x28
   81f48:	9312      	str	r3, [sp, #72]	; 0x48
   81f4a:	910e      	str	r1, [sp, #56]	; 0x38
   81f4c:	ae28      	add	r6, sp, #160	; 0xa0
   81f4e:	e4f9      	b.n	81944 <_svfprintf_r+0x250>
   81f50:	00085e9c 	.word	0x00085e9c
   81f54:	7fefffff 	.word	0x7fefffff
   81f58:	00085e90 	.word	0x00085e90
   81f5c:	00085e8c 	.word	0x00085e8c
   81f60:	00085eb0 	.word	0x00085eb0
   81f64:	aa25      	add	r2, sp, #148	; 0x94
   81f66:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81f68:	980c      	ldr	r0, [sp, #48]	; 0x30
   81f6a:	f002 fc9f 	bl	848ac <__ssprint_r>
   81f6e:	2800      	cmp	r0, #0
   81f70:	f47f ac9d 	bne.w	818ae <_svfprintf_r+0x1ba>
   81f74:	46c8      	mov	r8, r9
   81f76:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81f7a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81f7c:	e535      	b.n	819ea <_svfprintf_r+0x2f6>
   81f7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81f80:	2b65      	cmp	r3, #101	; 0x65
   81f82:	f340 8099 	ble.w	820b8 <_svfprintf_r+0x9c4>
   81f86:	a814      	add	r0, sp, #80	; 0x50
   81f88:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81f8a:	f003 fd25 	bl	859d8 <__aeabi_dcmpeq>
   81f8e:	2800      	cmp	r0, #0
   81f90:	f000 8192 	beq.w	822b8 <_svfprintf_r+0xbc4>
   81f94:	2101      	movs	r1, #1
   81f96:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f98:	4ab4      	ldr	r2, [pc, #720]	; (8226c <_svfprintf_r+0xb78>)
   81f9a:	440b      	add	r3, r1
   81f9c:	440c      	add	r4, r1
   81f9e:	2b07      	cmp	r3, #7
   81fa0:	9427      	str	r4, [sp, #156]	; 0x9c
   81fa2:	9326      	str	r3, [sp, #152]	; 0x98
   81fa4:	f8c8 1004 	str.w	r1, [r8, #4]
   81fa8:	f8c8 2000 	str.w	r2, [r8]
   81fac:	f300 83c5 	bgt.w	8273a <_svfprintf_r+0x1046>
   81fb0:	f108 0808 	add.w	r8, r8, #8
   81fb4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81fb6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81fb8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81fba:	4293      	cmp	r3, r2
   81fbc:	db03      	blt.n	81fc6 <_svfprintf_r+0x8d2>
   81fbe:	9b07      	ldr	r3, [sp, #28]
   81fc0:	07dd      	lsls	r5, r3, #31
   81fc2:	f57f ad89 	bpl.w	81ad8 <_svfprintf_r+0x3e4>
   81fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81fc8:	9919      	ldr	r1, [sp, #100]	; 0x64
   81fca:	3301      	adds	r3, #1
   81fcc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   81fce:	440c      	add	r4, r1
   81fd0:	2b07      	cmp	r3, #7
   81fd2:	f8c8 2000 	str.w	r2, [r8]
   81fd6:	f8c8 1004 	str.w	r1, [r8, #4]
   81fda:	9427      	str	r4, [sp, #156]	; 0x9c
   81fdc:	9326      	str	r3, [sp, #152]	; 0x98
   81fde:	f300 83c3 	bgt.w	82768 <_svfprintf_r+0x1074>
   81fe2:	f108 0808 	add.w	r8, r8, #8
   81fe6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81fe8:	1e5e      	subs	r6, r3, #1
   81fea:	2e00      	cmp	r6, #0
   81fec:	f77f ad74 	ble.w	81ad8 <_svfprintf_r+0x3e4>
   81ff0:	2e10      	cmp	r6, #16
   81ff2:	f340 8574 	ble.w	82ade <_svfprintf_r+0x13ea>
   81ff6:	4622      	mov	r2, r4
   81ff8:	2710      	movs	r7, #16
   81ffa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ffc:	4d9c      	ldr	r5, [pc, #624]	; (82270 <_svfprintf_r+0xb7c>)
   81ffe:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82002:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82004:	e005      	b.n	82012 <_svfprintf_r+0x91e>
   82006:	f108 0808 	add.w	r8, r8, #8
   8200a:	3e10      	subs	r6, #16
   8200c:	2e10      	cmp	r6, #16
   8200e:	f340 8224 	ble.w	8245a <_svfprintf_r+0xd66>
   82012:	3301      	adds	r3, #1
   82014:	3210      	adds	r2, #16
   82016:	2b07      	cmp	r3, #7
   82018:	9227      	str	r2, [sp, #156]	; 0x9c
   8201a:	9326      	str	r3, [sp, #152]	; 0x98
   8201c:	e888 00a0 	stmia.w	r8, {r5, r7}
   82020:	ddf1      	ble.n	82006 <_svfprintf_r+0x912>
   82022:	aa25      	add	r2, sp, #148	; 0x94
   82024:	4621      	mov	r1, r4
   82026:	4658      	mov	r0, fp
   82028:	f002 fc40 	bl	848ac <__ssprint_r>
   8202c:	2800      	cmp	r0, #0
   8202e:	f47f ac3e 	bne.w	818ae <_svfprintf_r+0x1ba>
   82032:	46c8      	mov	r8, r9
   82034:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82036:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82038:	e7e7      	b.n	8200a <_svfprintf_r+0x916>
   8203a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8203c:	9a08      	ldr	r2, [sp, #32]
   8203e:	1a9f      	subs	r7, r3, r2
   82040:	2f00      	cmp	r7, #0
   82042:	f77f acf9 	ble.w	81a38 <_svfprintf_r+0x344>
   82046:	2f10      	cmp	r7, #16
   82048:	f340 84a7 	ble.w	8299a <_svfprintf_r+0x12a6>
   8204c:	4d88      	ldr	r5, [pc, #544]	; (82270 <_svfprintf_r+0xb7c>)
   8204e:	4642      	mov	r2, r8
   82050:	4621      	mov	r1, r4
   82052:	46b0      	mov	r8, r6
   82054:	f04f 0b10 	mov.w	fp, #16
   82058:	462e      	mov	r6, r5
   8205a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8205c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8205e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82060:	e004      	b.n	8206c <_svfprintf_r+0x978>
   82062:	3f10      	subs	r7, #16
   82064:	2f10      	cmp	r7, #16
   82066:	f102 0208 	add.w	r2, r2, #8
   8206a:	dd15      	ble.n	82098 <_svfprintf_r+0x9a4>
   8206c:	3301      	adds	r3, #1
   8206e:	3110      	adds	r1, #16
   82070:	2b07      	cmp	r3, #7
   82072:	9127      	str	r1, [sp, #156]	; 0x9c
   82074:	9326      	str	r3, [sp, #152]	; 0x98
   82076:	e882 0840 	stmia.w	r2, {r6, fp}
   8207a:	ddf2      	ble.n	82062 <_svfprintf_r+0x96e>
   8207c:	aa25      	add	r2, sp, #148	; 0x94
   8207e:	4629      	mov	r1, r5
   82080:	4620      	mov	r0, r4
   82082:	f002 fc13 	bl	848ac <__ssprint_r>
   82086:	2800      	cmp	r0, #0
   82088:	f47f ac11 	bne.w	818ae <_svfprintf_r+0x1ba>
   8208c:	3f10      	subs	r7, #16
   8208e:	2f10      	cmp	r7, #16
   82090:	464a      	mov	r2, r9
   82092:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82094:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82096:	dce9      	bgt.n	8206c <_svfprintf_r+0x978>
   82098:	4635      	mov	r5, r6
   8209a:	460c      	mov	r4, r1
   8209c:	4646      	mov	r6, r8
   8209e:	4690      	mov	r8, r2
   820a0:	3301      	adds	r3, #1
   820a2:	443c      	add	r4, r7
   820a4:	2b07      	cmp	r3, #7
   820a6:	9427      	str	r4, [sp, #156]	; 0x9c
   820a8:	9326      	str	r3, [sp, #152]	; 0x98
   820aa:	e888 00a0 	stmia.w	r8, {r5, r7}
   820ae:	f300 829d 	bgt.w	825ec <_svfprintf_r+0xef8>
   820b2:	f108 0808 	add.w	r8, r8, #8
   820b6:	e4bf      	b.n	81a38 <_svfprintf_r+0x344>
   820b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   820ba:	2b01      	cmp	r3, #1
   820bc:	f340 824e 	ble.w	8255c <_svfprintf_r+0xe68>
   820c0:	2301      	movs	r3, #1
   820c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   820c4:	441c      	add	r4, r3
   820c6:	441f      	add	r7, r3
   820c8:	2f07      	cmp	r7, #7
   820ca:	9427      	str	r4, [sp, #156]	; 0x9c
   820cc:	f8c8 6000 	str.w	r6, [r8]
   820d0:	9726      	str	r7, [sp, #152]	; 0x98
   820d2:	f8c8 3004 	str.w	r3, [r8, #4]
   820d6:	f300 825e 	bgt.w	82596 <_svfprintf_r+0xea2>
   820da:	f108 0808 	add.w	r8, r8, #8
   820de:	9a19      	ldr	r2, [sp, #100]	; 0x64
   820e0:	3701      	adds	r7, #1
   820e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   820e4:	4414      	add	r4, r2
   820e6:	2f07      	cmp	r7, #7
   820e8:	9427      	str	r4, [sp, #156]	; 0x9c
   820ea:	9726      	str	r7, [sp, #152]	; 0x98
   820ec:	f8c8 3000 	str.w	r3, [r8]
   820f0:	f8c8 2004 	str.w	r2, [r8, #4]
   820f4:	f300 825b 	bgt.w	825ae <_svfprintf_r+0xeba>
   820f8:	f108 0808 	add.w	r8, r8, #8
   820fc:	a814      	add	r0, sp, #80	; 0x50
   820fe:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   82100:	f003 fc6a 	bl	859d8 <__aeabi_dcmpeq>
   82104:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82106:	2800      	cmp	r0, #0
   82108:	f040 8141 	bne.w	8238e <_svfprintf_r+0xc9a>
   8210c:	3b01      	subs	r3, #1
   8210e:	3701      	adds	r7, #1
   82110:	3601      	adds	r6, #1
   82112:	441c      	add	r4, r3
   82114:	2f07      	cmp	r7, #7
   82116:	f8c8 6000 	str.w	r6, [r8]
   8211a:	9726      	str	r7, [sp, #152]	; 0x98
   8211c:	9427      	str	r4, [sp, #156]	; 0x9c
   8211e:	f8c8 3004 	str.w	r3, [r8, #4]
   82122:	f300 8166 	bgt.w	823f2 <_svfprintf_r+0xcfe>
   82126:	f108 0808 	add.w	r8, r8, #8
   8212a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   8212c:	3701      	adds	r7, #1
   8212e:	4414      	add	r4, r2
   82130:	ab21      	add	r3, sp, #132	; 0x84
   82132:	2f07      	cmp	r7, #7
   82134:	9427      	str	r4, [sp, #156]	; 0x9c
   82136:	9726      	str	r7, [sp, #152]	; 0x98
   82138:	f8c8 2004 	str.w	r2, [r8, #4]
   8213c:	f8c8 3000 	str.w	r3, [r8]
   82140:	f77f acc8 	ble.w	81ad4 <_svfprintf_r+0x3e0>
   82144:	aa25      	add	r2, sp, #148	; 0x94
   82146:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82148:	980c      	ldr	r0, [sp, #48]	; 0x30
   8214a:	f002 fbaf 	bl	848ac <__ssprint_r>
   8214e:	2800      	cmp	r0, #0
   82150:	f47f abad 	bne.w	818ae <_svfprintf_r+0x1ba>
   82154:	46c8      	mov	r8, r9
   82156:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82158:	e4be      	b.n	81ad8 <_svfprintf_r+0x3e4>
   8215a:	aa25      	add	r2, sp, #148	; 0x94
   8215c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8215e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82160:	f002 fba4 	bl	848ac <__ssprint_r>
   82164:	2800      	cmp	r0, #0
   82166:	f43f ad01 	beq.w	81b6c <_svfprintf_r+0x478>
   8216a:	f7ff bba0 	b.w	818ae <_svfprintf_r+0x1ba>
   8216e:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82172:	2b01      	cmp	r3, #1
   82174:	f000 817e 	beq.w	82474 <_svfprintf_r+0xd80>
   82178:	2b02      	cmp	r3, #2
   8217a:	d171      	bne.n	82260 <_svfprintf_r+0xb6c>
   8217c:	f8cd b01c 	str.w	fp, [sp, #28]
   82180:	2400      	movs	r4, #0
   82182:	2500      	movs	r5, #0
   82184:	e5d8      	b.n	81d38 <_svfprintf_r+0x644>
   82186:	aa25      	add	r2, sp, #148	; 0x94
   82188:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8218a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8218c:	f002 fb8e 	bl	848ac <__ssprint_r>
   82190:	2800      	cmp	r0, #0
   82192:	f47f ab8c 	bne.w	818ae <_svfprintf_r+0x1ba>
   82196:	46c8      	mov	r8, r9
   82198:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8219a:	e48a      	b.n	81ab2 <_svfprintf_r+0x3be>
   8219c:	aa25      	add	r2, sp, #148	; 0x94
   8219e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   821a0:	980c      	ldr	r0, [sp, #48]	; 0x30
   821a2:	f002 fb83 	bl	848ac <__ssprint_r>
   821a6:	2800      	cmp	r0, #0
   821a8:	f47f ab81 	bne.w	818ae <_svfprintf_r+0x1ba>
   821ac:	46c8      	mov	r8, r9
   821ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   821b0:	e42d      	b.n	81a0e <_svfprintf_r+0x31a>
   821b2:	2001      	movs	r0, #1
   821b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821b6:	4a2d      	ldr	r2, [pc, #180]	; (8226c <_svfprintf_r+0xb78>)
   821b8:	4403      	add	r3, r0
   821ba:	4404      	add	r4, r0
   821bc:	2b07      	cmp	r3, #7
   821be:	9427      	str	r4, [sp, #156]	; 0x9c
   821c0:	9326      	str	r3, [sp, #152]	; 0x98
   821c2:	f8c8 0004 	str.w	r0, [r8, #4]
   821c6:	f8c8 2000 	str.w	r2, [r8]
   821ca:	f340 82d8 	ble.w	8277e <_svfprintf_r+0x108a>
   821ce:	aa25      	add	r2, sp, #148	; 0x94
   821d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   821d2:	980c      	ldr	r0, [sp, #48]	; 0x30
   821d4:	f002 fb6a 	bl	848ac <__ssprint_r>
   821d8:	2800      	cmp	r0, #0
   821da:	f47f ab68 	bne.w	818ae <_svfprintf_r+0x1ba>
   821de:	46c8      	mov	r8, r9
   821e0:	991f      	ldr	r1, [sp, #124]	; 0x7c
   821e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   821e4:	b929      	cbnz	r1, 821f2 <_svfprintf_r+0xafe>
   821e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   821e8:	b91b      	cbnz	r3, 821f2 <_svfprintf_r+0xafe>
   821ea:	9b07      	ldr	r3, [sp, #28]
   821ec:	07d8      	lsls	r0, r3, #31
   821ee:	f57f ac73 	bpl.w	81ad8 <_svfprintf_r+0x3e4>
   821f2:	9819      	ldr	r0, [sp, #100]	; 0x64
   821f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821f6:	4602      	mov	r2, r0
   821f8:	3301      	adds	r3, #1
   821fa:	4422      	add	r2, r4
   821fc:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   821fe:	2b07      	cmp	r3, #7
   82200:	9227      	str	r2, [sp, #156]	; 0x9c
   82202:	f8c8 4000 	str.w	r4, [r8]
   82206:	f8c8 0004 	str.w	r0, [r8, #4]
   8220a:	9326      	str	r3, [sp, #152]	; 0x98
   8220c:	f300 8431 	bgt.w	82a72 <_svfprintf_r+0x137e>
   82210:	f108 0808 	add.w	r8, r8, #8
   82214:	2900      	cmp	r1, #0
   82216:	f2c0 8409 	blt.w	82a2c <_svfprintf_r+0x1338>
   8221a:	9913      	ldr	r1, [sp, #76]	; 0x4c
   8221c:	3301      	adds	r3, #1
   8221e:	188c      	adds	r4, r1, r2
   82220:	2b07      	cmp	r3, #7
   82222:	9427      	str	r4, [sp, #156]	; 0x9c
   82224:	9326      	str	r3, [sp, #152]	; 0x98
   82226:	f8c8 6000 	str.w	r6, [r8]
   8222a:	f8c8 1004 	str.w	r1, [r8, #4]
   8222e:	f77f ac51 	ble.w	81ad4 <_svfprintf_r+0x3e0>
   82232:	aa25      	add	r2, sp, #148	; 0x94
   82234:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82236:	980c      	ldr	r0, [sp, #48]	; 0x30
   82238:	f002 fb38 	bl	848ac <__ssprint_r>
   8223c:	2800      	cmp	r0, #0
   8223e:	f47f ab36 	bne.w	818ae <_svfprintf_r+0x1ba>
   82242:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82244:	46c8      	mov	r8, r9
   82246:	e447      	b.n	81ad8 <_svfprintf_r+0x3e4>
   82248:	aa25      	add	r2, sp, #148	; 0x94
   8224a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8224c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8224e:	f002 fb2d 	bl	848ac <__ssprint_r>
   82252:	2800      	cmp	r0, #0
   82254:	f47f ab2b 	bne.w	818ae <_svfprintf_r+0x1ba>
   82258:	46c8      	mov	r8, r9
   8225a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8225c:	f7ff bbe9 	b.w	81a32 <_svfprintf_r+0x33e>
   82260:	2400      	movs	r4, #0
   82262:	2500      	movs	r5, #0
   82264:	f8cd b01c 	str.w	fp, [sp, #28]
   82268:	4649      	mov	r1, r9
   8226a:	e004      	b.n	82276 <_svfprintf_r+0xb82>
   8226c:	00085ecc 	.word	0x00085ecc
   82270:	00085ee0 	.word	0x00085ee0
   82274:	4631      	mov	r1, r6
   82276:	08e2      	lsrs	r2, r4, #3
   82278:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   8227c:	08e8      	lsrs	r0, r5, #3
   8227e:	f004 0307 	and.w	r3, r4, #7
   82282:	4605      	mov	r5, r0
   82284:	4614      	mov	r4, r2
   82286:	3330      	adds	r3, #48	; 0x30
   82288:	ea54 0205 	orrs.w	r2, r4, r5
   8228c:	f801 3c01 	strb.w	r3, [r1, #-1]
   82290:	f101 36ff 	add.w	r6, r1, #4294967295
   82294:	d1ee      	bne.n	82274 <_svfprintf_r+0xb80>
   82296:	9a07      	ldr	r2, [sp, #28]
   82298:	07d2      	lsls	r2, r2, #31
   8229a:	f57f ad5d 	bpl.w	81d58 <_svfprintf_r+0x664>
   8229e:	2b30      	cmp	r3, #48	; 0x30
   822a0:	f43f ad5a 	beq.w	81d58 <_svfprintf_r+0x664>
   822a4:	2330      	movs	r3, #48	; 0x30
   822a6:	3902      	subs	r1, #2
   822a8:	f806 3c01 	strb.w	r3, [r6, #-1]
   822ac:	eba9 0301 	sub.w	r3, r9, r1
   822b0:	930e      	str	r3, [sp, #56]	; 0x38
   822b2:	460e      	mov	r6, r1
   822b4:	f7ff bb3a 	b.w	8192c <_svfprintf_r+0x238>
   822b8:	991f      	ldr	r1, [sp, #124]	; 0x7c
   822ba:	2900      	cmp	r1, #0
   822bc:	f77f af79 	ble.w	821b2 <_svfprintf_r+0xabe>
   822c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   822c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   822c4:	4293      	cmp	r3, r2
   822c6:	bfa8      	it	ge
   822c8:	4613      	movge	r3, r2
   822ca:	2b00      	cmp	r3, #0
   822cc:	461f      	mov	r7, r3
   822ce:	dd0b      	ble.n	822e8 <_svfprintf_r+0xbf4>
   822d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   822d2:	443c      	add	r4, r7
   822d4:	3301      	adds	r3, #1
   822d6:	2b07      	cmp	r3, #7
   822d8:	9427      	str	r4, [sp, #156]	; 0x9c
   822da:	e888 00c0 	stmia.w	r8, {r6, r7}
   822de:	9326      	str	r3, [sp, #152]	; 0x98
   822e0:	f300 82fb 	bgt.w	828da <_svfprintf_r+0x11e6>
   822e4:	f108 0808 	add.w	r8, r8, #8
   822e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   822ea:	2f00      	cmp	r7, #0
   822ec:	bfa8      	it	ge
   822ee:	1bdb      	subge	r3, r3, r7
   822f0:	2b00      	cmp	r3, #0
   822f2:	461f      	mov	r7, r3
   822f4:	f340 80d7 	ble.w	824a6 <_svfprintf_r+0xdb2>
   822f8:	2b10      	cmp	r3, #16
   822fa:	f340 8433 	ble.w	82b64 <_svfprintf_r+0x1470>
   822fe:	4dba      	ldr	r5, [pc, #744]	; (825e8 <_svfprintf_r+0xef4>)
   82300:	4642      	mov	r2, r8
   82302:	4621      	mov	r1, r4
   82304:	46b0      	mov	r8, r6
   82306:	f04f 0b10 	mov.w	fp, #16
   8230a:	462e      	mov	r6, r5
   8230c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8230e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82310:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82312:	e004      	b.n	8231e <_svfprintf_r+0xc2a>
   82314:	3208      	adds	r2, #8
   82316:	3f10      	subs	r7, #16
   82318:	2f10      	cmp	r7, #16
   8231a:	f340 80b5 	ble.w	82488 <_svfprintf_r+0xd94>
   8231e:	3301      	adds	r3, #1
   82320:	3110      	adds	r1, #16
   82322:	2b07      	cmp	r3, #7
   82324:	9127      	str	r1, [sp, #156]	; 0x9c
   82326:	9326      	str	r3, [sp, #152]	; 0x98
   82328:	e882 0840 	stmia.w	r2, {r6, fp}
   8232c:	ddf2      	ble.n	82314 <_svfprintf_r+0xc20>
   8232e:	aa25      	add	r2, sp, #148	; 0x94
   82330:	4629      	mov	r1, r5
   82332:	4620      	mov	r0, r4
   82334:	f002 faba 	bl	848ac <__ssprint_r>
   82338:	2800      	cmp	r0, #0
   8233a:	f47f aab8 	bne.w	818ae <_svfprintf_r+0x1ba>
   8233e:	464a      	mov	r2, r9
   82340:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82342:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82344:	e7e7      	b.n	82316 <_svfprintf_r+0xc22>
   82346:	2d00      	cmp	r5, #0
   82348:	bf08      	it	eq
   8234a:	2c0a      	cmpeq	r4, #10
   8234c:	f0c0 8090 	bcc.w	82470 <_svfprintf_r+0xd7c>
   82350:	464e      	mov	r6, r9
   82352:	4620      	mov	r0, r4
   82354:	4629      	mov	r1, r5
   82356:	220a      	movs	r2, #10
   82358:	2300      	movs	r3, #0
   8235a:	f003 fbad 	bl	85ab8 <__aeabi_uldivmod>
   8235e:	3230      	adds	r2, #48	; 0x30
   82360:	f806 2d01 	strb.w	r2, [r6, #-1]!
   82364:	4620      	mov	r0, r4
   82366:	4629      	mov	r1, r5
   82368:	2300      	movs	r3, #0
   8236a:	220a      	movs	r2, #10
   8236c:	f003 fba4 	bl	85ab8 <__aeabi_uldivmod>
   82370:	4604      	mov	r4, r0
   82372:	460d      	mov	r5, r1
   82374:	ea54 0305 	orrs.w	r3, r4, r5
   82378:	d1eb      	bne.n	82352 <_svfprintf_r+0xc5e>
   8237a:	eba9 0306 	sub.w	r3, r9, r6
   8237e:	930e      	str	r3, [sp, #56]	; 0x38
   82380:	f7ff bad4 	b.w	8192c <_svfprintf_r+0x238>
   82384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82386:	464e      	mov	r6, r9
   82388:	930e      	str	r3, [sp, #56]	; 0x38
   8238a:	f7ff bacf 	b.w	8192c <_svfprintf_r+0x238>
   8238e:	1e5e      	subs	r6, r3, #1
   82390:	2e00      	cmp	r6, #0
   82392:	f77f aeca 	ble.w	8212a <_svfprintf_r+0xa36>
   82396:	2e10      	cmp	r6, #16
   82398:	f340 83e2 	ble.w	82b60 <_svfprintf_r+0x146c>
   8239c:	4622      	mov	r2, r4
   8239e:	f04f 0b10 	mov.w	fp, #16
   823a2:	4d91      	ldr	r5, [pc, #580]	; (825e8 <_svfprintf_r+0xef4>)
   823a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   823a6:	e004      	b.n	823b2 <_svfprintf_r+0xcbe>
   823a8:	3e10      	subs	r6, #16
   823aa:	2e10      	cmp	r6, #16
   823ac:	f108 0808 	add.w	r8, r8, #8
   823b0:	dd15      	ble.n	823de <_svfprintf_r+0xcea>
   823b2:	3701      	adds	r7, #1
   823b4:	3210      	adds	r2, #16
   823b6:	2f07      	cmp	r7, #7
   823b8:	9227      	str	r2, [sp, #156]	; 0x9c
   823ba:	9726      	str	r7, [sp, #152]	; 0x98
   823bc:	e888 0820 	stmia.w	r8, {r5, fp}
   823c0:	ddf2      	ble.n	823a8 <_svfprintf_r+0xcb4>
   823c2:	aa25      	add	r2, sp, #148	; 0x94
   823c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823c6:	4620      	mov	r0, r4
   823c8:	f002 fa70 	bl	848ac <__ssprint_r>
   823cc:	2800      	cmp	r0, #0
   823ce:	f47f aa6e 	bne.w	818ae <_svfprintf_r+0x1ba>
   823d2:	3e10      	subs	r6, #16
   823d4:	2e10      	cmp	r6, #16
   823d6:	46c8      	mov	r8, r9
   823d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   823da:	9f26      	ldr	r7, [sp, #152]	; 0x98
   823dc:	dce9      	bgt.n	823b2 <_svfprintf_r+0xcbe>
   823de:	4614      	mov	r4, r2
   823e0:	3701      	adds	r7, #1
   823e2:	4434      	add	r4, r6
   823e4:	2f07      	cmp	r7, #7
   823e6:	9427      	str	r4, [sp, #156]	; 0x9c
   823e8:	9726      	str	r7, [sp, #152]	; 0x98
   823ea:	e888 0060 	stmia.w	r8, {r5, r6}
   823ee:	f77f ae9a 	ble.w	82126 <_svfprintf_r+0xa32>
   823f2:	aa25      	add	r2, sp, #148	; 0x94
   823f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823f6:	980c      	ldr	r0, [sp, #48]	; 0x30
   823f8:	f002 fa58 	bl	848ac <__ssprint_r>
   823fc:	2800      	cmp	r0, #0
   823fe:	f47f aa56 	bne.w	818ae <_svfprintf_r+0x1ba>
   82402:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82404:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82406:	46c8      	mov	r8, r9
   82408:	e68f      	b.n	8212a <_svfprintf_r+0xa36>
   8240a:	3204      	adds	r2, #4
   8240c:	681c      	ldr	r4, [r3, #0]
   8240e:	2500      	movs	r5, #0
   82410:	2301      	movs	r3, #1
   82412:	920f      	str	r2, [sp, #60]	; 0x3c
   82414:	f7ff ba6c 	b.w	818f0 <_svfprintf_r+0x1fc>
   82418:	681c      	ldr	r4, [r3, #0]
   8241a:	3304      	adds	r3, #4
   8241c:	930f      	str	r3, [sp, #60]	; 0x3c
   8241e:	2500      	movs	r5, #0
   82420:	e42e      	b.n	81c80 <_svfprintf_r+0x58c>
   82422:	681c      	ldr	r4, [r3, #0]
   82424:	3304      	adds	r3, #4
   82426:	17e5      	asrs	r5, r4, #31
   82428:	4622      	mov	r2, r4
   8242a:	930f      	str	r3, [sp, #60]	; 0x3c
   8242c:	462b      	mov	r3, r5
   8242e:	2a00      	cmp	r2, #0
   82430:	f173 0300 	sbcs.w	r3, r3, #0
   82434:	f6bf ac6c 	bge.w	81d10 <_svfprintf_r+0x61c>
   82438:	272d      	movs	r7, #45	; 0x2d
   8243a:	4264      	negs	r4, r4
   8243c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82440:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82444:	2301      	movs	r3, #1
   82446:	f7ff ba57 	b.w	818f8 <_svfprintf_r+0x204>
   8244a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8244c:	2500      	movs	r5, #0
   8244e:	460a      	mov	r2, r1
   82450:	3204      	adds	r2, #4
   82452:	680c      	ldr	r4, [r1, #0]
   82454:	920f      	str	r2, [sp, #60]	; 0x3c
   82456:	f7ff ba4b 	b.w	818f0 <_svfprintf_r+0x1fc>
   8245a:	4614      	mov	r4, r2
   8245c:	3301      	adds	r3, #1
   8245e:	4434      	add	r4, r6
   82460:	2b07      	cmp	r3, #7
   82462:	9427      	str	r4, [sp, #156]	; 0x9c
   82464:	9326      	str	r3, [sp, #152]	; 0x98
   82466:	e888 0060 	stmia.w	r8, {r5, r6}
   8246a:	f77f ab33 	ble.w	81ad4 <_svfprintf_r+0x3e0>
   8246e:	e6e0      	b.n	82232 <_svfprintf_r+0xb3e>
   82470:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82474:	2301      	movs	r3, #1
   82476:	ae42      	add	r6, sp, #264	; 0x108
   82478:	3430      	adds	r4, #48	; 0x30
   8247a:	f8cd b01c 	str.w	fp, [sp, #28]
   8247e:	f806 4d41 	strb.w	r4, [r6, #-65]!
   82482:	930e      	str	r3, [sp, #56]	; 0x38
   82484:	f7ff ba52 	b.w	8192c <_svfprintf_r+0x238>
   82488:	4635      	mov	r5, r6
   8248a:	460c      	mov	r4, r1
   8248c:	4646      	mov	r6, r8
   8248e:	4690      	mov	r8, r2
   82490:	3301      	adds	r3, #1
   82492:	443c      	add	r4, r7
   82494:	2b07      	cmp	r3, #7
   82496:	9427      	str	r4, [sp, #156]	; 0x9c
   82498:	9326      	str	r3, [sp, #152]	; 0x98
   8249a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8249e:	f300 8246 	bgt.w	8292e <_svfprintf_r+0x123a>
   824a2:	f108 0808 	add.w	r8, r8, #8
   824a6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   824a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   824aa:	429a      	cmp	r2, r3
   824ac:	db45      	blt.n	8253a <_svfprintf_r+0xe46>
   824ae:	9b07      	ldr	r3, [sp, #28]
   824b0:	07d9      	lsls	r1, r3, #31
   824b2:	d442      	bmi.n	8253a <_svfprintf_r+0xe46>
   824b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   824b6:	9812      	ldr	r0, [sp, #72]	; 0x48
   824b8:	1a9a      	subs	r2, r3, r2
   824ba:	1a1d      	subs	r5, r3, r0
   824bc:	4295      	cmp	r5, r2
   824be:	bfa8      	it	ge
   824c0:	4615      	movge	r5, r2
   824c2:	2d00      	cmp	r5, #0
   824c4:	dd0e      	ble.n	824e4 <_svfprintf_r+0xdf0>
   824c6:	9926      	ldr	r1, [sp, #152]	; 0x98
   824c8:	4406      	add	r6, r0
   824ca:	3101      	adds	r1, #1
   824cc:	442c      	add	r4, r5
   824ce:	2907      	cmp	r1, #7
   824d0:	f8c8 6000 	str.w	r6, [r8]
   824d4:	9427      	str	r4, [sp, #156]	; 0x9c
   824d6:	f8c8 5004 	str.w	r5, [r8, #4]
   824da:	9126      	str	r1, [sp, #152]	; 0x98
   824dc:	f300 8216 	bgt.w	8290c <_svfprintf_r+0x1218>
   824e0:	f108 0808 	add.w	r8, r8, #8
   824e4:	2d00      	cmp	r5, #0
   824e6:	bfb4      	ite	lt
   824e8:	4616      	movlt	r6, r2
   824ea:	1b56      	subge	r6, r2, r5
   824ec:	2e00      	cmp	r6, #0
   824ee:	f77f aaf3 	ble.w	81ad8 <_svfprintf_r+0x3e4>
   824f2:	2e10      	cmp	r6, #16
   824f4:	f340 82f3 	ble.w	82ade <_svfprintf_r+0x13ea>
   824f8:	4622      	mov	r2, r4
   824fa:	2710      	movs	r7, #16
   824fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   824fe:	4d3a      	ldr	r5, [pc, #232]	; (825e8 <_svfprintf_r+0xef4>)
   82500:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82504:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82506:	e004      	b.n	82512 <_svfprintf_r+0xe1e>
   82508:	f108 0808 	add.w	r8, r8, #8
   8250c:	3e10      	subs	r6, #16
   8250e:	2e10      	cmp	r6, #16
   82510:	dda3      	ble.n	8245a <_svfprintf_r+0xd66>
   82512:	3301      	adds	r3, #1
   82514:	3210      	adds	r2, #16
   82516:	2b07      	cmp	r3, #7
   82518:	9227      	str	r2, [sp, #156]	; 0x9c
   8251a:	9326      	str	r3, [sp, #152]	; 0x98
   8251c:	e888 00a0 	stmia.w	r8, {r5, r7}
   82520:	ddf2      	ble.n	82508 <_svfprintf_r+0xe14>
   82522:	aa25      	add	r2, sp, #148	; 0x94
   82524:	4621      	mov	r1, r4
   82526:	4658      	mov	r0, fp
   82528:	f002 f9c0 	bl	848ac <__ssprint_r>
   8252c:	2800      	cmp	r0, #0
   8252e:	f47f a9be 	bne.w	818ae <_svfprintf_r+0x1ba>
   82532:	46c8      	mov	r8, r9
   82534:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82536:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82538:	e7e8      	b.n	8250c <_svfprintf_r+0xe18>
   8253a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8253c:	9819      	ldr	r0, [sp, #100]	; 0x64
   8253e:	3301      	adds	r3, #1
   82540:	991a      	ldr	r1, [sp, #104]	; 0x68
   82542:	4404      	add	r4, r0
   82544:	2b07      	cmp	r3, #7
   82546:	9427      	str	r4, [sp, #156]	; 0x9c
   82548:	f8c8 1000 	str.w	r1, [r8]
   8254c:	f8c8 0004 	str.w	r0, [r8, #4]
   82550:	9326      	str	r3, [sp, #152]	; 0x98
   82552:	f300 81cf 	bgt.w	828f4 <_svfprintf_r+0x1200>
   82556:	f108 0808 	add.w	r8, r8, #8
   8255a:	e7ab      	b.n	824b4 <_svfprintf_r+0xdc0>
   8255c:	9b07      	ldr	r3, [sp, #28]
   8255e:	07da      	lsls	r2, r3, #31
   82560:	f53f adae 	bmi.w	820c0 <_svfprintf_r+0x9cc>
   82564:	2301      	movs	r3, #1
   82566:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82568:	441c      	add	r4, r3
   8256a:	441f      	add	r7, r3
   8256c:	2f07      	cmp	r7, #7
   8256e:	9427      	str	r4, [sp, #156]	; 0x9c
   82570:	f8c8 6000 	str.w	r6, [r8]
   82574:	9726      	str	r7, [sp, #152]	; 0x98
   82576:	f8c8 3004 	str.w	r3, [r8, #4]
   8257a:	f77f add4 	ble.w	82126 <_svfprintf_r+0xa32>
   8257e:	aa25      	add	r2, sp, #148	; 0x94
   82580:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82582:	980c      	ldr	r0, [sp, #48]	; 0x30
   82584:	f002 f992 	bl	848ac <__ssprint_r>
   82588:	2800      	cmp	r0, #0
   8258a:	f47f a990 	bne.w	818ae <_svfprintf_r+0x1ba>
   8258e:	46c8      	mov	r8, r9
   82590:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82592:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82594:	e5c9      	b.n	8212a <_svfprintf_r+0xa36>
   82596:	aa25      	add	r2, sp, #148	; 0x94
   82598:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8259a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8259c:	f002 f986 	bl	848ac <__ssprint_r>
   825a0:	2800      	cmp	r0, #0
   825a2:	f47f a984 	bne.w	818ae <_svfprintf_r+0x1ba>
   825a6:	46c8      	mov	r8, r9
   825a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   825aa:	9f26      	ldr	r7, [sp, #152]	; 0x98
   825ac:	e597      	b.n	820de <_svfprintf_r+0x9ea>
   825ae:	aa25      	add	r2, sp, #148	; 0x94
   825b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825b2:	980c      	ldr	r0, [sp, #48]	; 0x30
   825b4:	f002 f97a 	bl	848ac <__ssprint_r>
   825b8:	2800      	cmp	r0, #0
   825ba:	f47f a978 	bne.w	818ae <_svfprintf_r+0x1ba>
   825be:	46c8      	mov	r8, r9
   825c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   825c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   825c4:	e59a      	b.n	820fc <_svfprintf_r+0xa08>
   825c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   825c8:	3407      	adds	r4, #7
   825ca:	f024 0407 	bic.w	r4, r4, #7
   825ce:	f104 0108 	add.w	r1, r4, #8
   825d2:	e9d4 2300 	ldrd	r2, r3, [r4]
   825d6:	910f      	str	r1, [sp, #60]	; 0x3c
   825d8:	4614      	mov	r4, r2
   825da:	461d      	mov	r5, r3
   825dc:	f7ff bb93 	b.w	81d06 <_svfprintf_r+0x612>
   825e0:	464e      	mov	r6, r9
   825e2:	f7ff b9a3 	b.w	8192c <_svfprintf_r+0x238>
   825e6:	bf00      	nop
   825e8:	00085ee0 	.word	0x00085ee0
   825ec:	aa25      	add	r2, sp, #148	; 0x94
   825ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825f0:	980c      	ldr	r0, [sp, #48]	; 0x30
   825f2:	f002 f95b 	bl	848ac <__ssprint_r>
   825f6:	2800      	cmp	r0, #0
   825f8:	f47f a959 	bne.w	818ae <_svfprintf_r+0x1ba>
   825fc:	46c8      	mov	r8, r9
   825fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82600:	f7ff ba1a 	b.w	81a38 <_svfprintf_r+0x344>
   82604:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82606:	4622      	mov	r2, r4
   82608:	4620      	mov	r0, r4
   8260a:	9c15      	ldr	r4, [sp, #84]	; 0x54
   8260c:	4623      	mov	r3, r4
   8260e:	4621      	mov	r1, r4
   82610:	f003 fa14 	bl	85a3c <__aeabi_dcmpun>
   82614:	2800      	cmp	r0, #0
   82616:	f040 8273 	bne.w	82b00 <_svfprintf_r+0x140c>
   8261a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8261c:	3301      	adds	r3, #1
   8261e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82620:	f023 0320 	bic.w	r3, r3, #32
   82624:	930e      	str	r3, [sp, #56]	; 0x38
   82626:	f000 819c 	beq.w	82962 <_svfprintf_r+0x126e>
   8262a:	2b47      	cmp	r3, #71	; 0x47
   8262c:	f000 80d6 	beq.w	827dc <_svfprintf_r+0x10e8>
   82630:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   82634:	9307      	str	r3, [sp, #28]
   82636:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82638:	1e1f      	subs	r7, r3, #0
   8263a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8263c:	9308      	str	r3, [sp, #32]
   8263e:	bfb7      	itett	lt
   82640:	463b      	movlt	r3, r7
   82642:	2300      	movge	r3, #0
   82644:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82648:	232d      	movlt	r3, #45	; 0x2d
   8264a:	9310      	str	r3, [sp, #64]	; 0x40
   8264c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8264e:	2b66      	cmp	r3, #102	; 0x66
   82650:	f000 8190 	beq.w	82974 <_svfprintf_r+0x1280>
   82654:	2b46      	cmp	r3, #70	; 0x46
   82656:	f000 80a4 	beq.w	827a2 <_svfprintf_r+0x10ae>
   8265a:	2002      	movs	r0, #2
   8265c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8265e:	a923      	add	r1, sp, #140	; 0x8c
   82660:	2b45      	cmp	r3, #69	; 0x45
   82662:	bf0a      	itet	eq
   82664:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   82666:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82668:	1c5d      	addeq	r5, r3, #1
   8266a:	e88d 0021 	stmia.w	sp, {r0, r5}
   8266e:	9104      	str	r1, [sp, #16]
   82670:	a820      	add	r0, sp, #128	; 0x80
   82672:	a91f      	add	r1, sp, #124	; 0x7c
   82674:	463b      	mov	r3, r7
   82676:	9003      	str	r0, [sp, #12]
   82678:	9a08      	ldr	r2, [sp, #32]
   8267a:	9102      	str	r1, [sp, #8]
   8267c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8267e:	f000 fb5b 	bl	82d38 <_dtoa_r>
   82682:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82684:	4606      	mov	r6, r0
   82686:	2b67      	cmp	r3, #103	; 0x67
   82688:	f040 81ba 	bne.w	82a00 <_svfprintf_r+0x130c>
   8268c:	f01b 0f01 	tst.w	fp, #1
   82690:	f000 8223 	beq.w	82ada <_svfprintf_r+0x13e6>
   82694:	1974      	adds	r4, r6, r5
   82696:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82698:	9808      	ldr	r0, [sp, #32]
   8269a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   8269c:	4639      	mov	r1, r7
   8269e:	f003 f99b 	bl	859d8 <__aeabi_dcmpeq>
   826a2:	2800      	cmp	r0, #0
   826a4:	f040 8124 	bne.w	828f0 <_svfprintf_r+0x11fc>
   826a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   826aa:	42a3      	cmp	r3, r4
   826ac:	d206      	bcs.n	826bc <_svfprintf_r+0xfc8>
   826ae:	2130      	movs	r1, #48	; 0x30
   826b0:	1c5a      	adds	r2, r3, #1
   826b2:	9223      	str	r2, [sp, #140]	; 0x8c
   826b4:	7019      	strb	r1, [r3, #0]
   826b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   826b8:	429c      	cmp	r4, r3
   826ba:	d8f9      	bhi.n	826b0 <_svfprintf_r+0xfbc>
   826bc:	1b9b      	subs	r3, r3, r6
   826be:	9313      	str	r3, [sp, #76]	; 0x4c
   826c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   826c2:	2b47      	cmp	r3, #71	; 0x47
   826c4:	f000 80a2 	beq.w	8280c <_svfprintf_r+0x1118>
   826c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   826ca:	2b65      	cmp	r3, #101	; 0x65
   826cc:	f340 81a7 	ble.w	82a1e <_svfprintf_r+0x132a>
   826d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   826d2:	2b66      	cmp	r3, #102	; 0x66
   826d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   826d6:	9312      	str	r3, [sp, #72]	; 0x48
   826d8:	f000 8171 	beq.w	829be <_svfprintf_r+0x12ca>
   826dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   826de:	9a12      	ldr	r2, [sp, #72]	; 0x48
   826e0:	4619      	mov	r1, r3
   826e2:	4291      	cmp	r1, r2
   826e4:	f300 815d 	bgt.w	829a2 <_svfprintf_r+0x12ae>
   826e8:	f01b 0f01 	tst.w	fp, #1
   826ec:	f040 81f0 	bne.w	82ad0 <_svfprintf_r+0x13dc>
   826f0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   826f4:	9308      	str	r3, [sp, #32]
   826f6:	2367      	movs	r3, #103	; 0x67
   826f8:	920e      	str	r2, [sp, #56]	; 0x38
   826fa:	9311      	str	r3, [sp, #68]	; 0x44
   826fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   826fe:	2b00      	cmp	r3, #0
   82700:	d17d      	bne.n	827fe <_svfprintf_r+0x110a>
   82702:	930a      	str	r3, [sp, #40]	; 0x28
   82704:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82708:	f7ff b918 	b.w	8193c <_svfprintf_r+0x248>
   8270c:	f024 0407 	bic.w	r4, r4, #7
   82710:	6823      	ldr	r3, [r4, #0]
   82712:	9314      	str	r3, [sp, #80]	; 0x50
   82714:	6863      	ldr	r3, [r4, #4]
   82716:	9315      	str	r3, [sp, #84]	; 0x54
   82718:	f104 0308 	add.w	r3, r4, #8
   8271c:	930f      	str	r3, [sp, #60]	; 0x3c
   8271e:	f7ff bb33 	b.w	81d88 <_svfprintf_r+0x694>
   82722:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82724:	6813      	ldr	r3, [r2, #0]
   82726:	3204      	adds	r2, #4
   82728:	920f      	str	r2, [sp, #60]	; 0x3c
   8272a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8272c:	601a      	str	r2, [r3, #0]
   8272e:	f7ff b808 	b.w	81742 <_svfprintf_r+0x4e>
   82732:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82734:	4daf      	ldr	r5, [pc, #700]	; (829f4 <_svfprintf_r+0x1300>)
   82736:	f7ff b9b1 	b.w	81a9c <_svfprintf_r+0x3a8>
   8273a:	aa25      	add	r2, sp, #148	; 0x94
   8273c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8273e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82740:	f002 f8b4 	bl	848ac <__ssprint_r>
   82744:	2800      	cmp	r0, #0
   82746:	f47f a8b2 	bne.w	818ae <_svfprintf_r+0x1ba>
   8274a:	46c8      	mov	r8, r9
   8274c:	e432      	b.n	81fb4 <_svfprintf_r+0x8c0>
   8274e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82750:	4613      	mov	r3, r2
   82752:	3304      	adds	r3, #4
   82754:	930f      	str	r3, [sp, #60]	; 0x3c
   82756:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82758:	6811      	ldr	r1, [r2, #0]
   8275a:	17dd      	asrs	r5, r3, #31
   8275c:	461a      	mov	r2, r3
   8275e:	462b      	mov	r3, r5
   82760:	e9c1 2300 	strd	r2, r3, [r1]
   82764:	f7fe bfed 	b.w	81742 <_svfprintf_r+0x4e>
   82768:	aa25      	add	r2, sp, #148	; 0x94
   8276a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8276c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8276e:	f002 f89d 	bl	848ac <__ssprint_r>
   82772:	2800      	cmp	r0, #0
   82774:	f47f a89b 	bne.w	818ae <_svfprintf_r+0x1ba>
   82778:	46c8      	mov	r8, r9
   8277a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8277c:	e433      	b.n	81fe6 <_svfprintf_r+0x8f2>
   8277e:	f108 0808 	add.w	r8, r8, #8
   82782:	e52f      	b.n	821e4 <_svfprintf_r+0xaf0>
   82784:	2140      	movs	r1, #64	; 0x40
   82786:	980c      	ldr	r0, [sp, #48]	; 0x30
   82788:	f001 fa20 	bl	83bcc <_malloc_r>
   8278c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8278e:	6010      	str	r0, [r2, #0]
   82790:	6110      	str	r0, [r2, #16]
   82792:	2800      	cmp	r0, #0
   82794:	f000 8213 	beq.w	82bbe <_svfprintf_r+0x14ca>
   82798:	2340      	movs	r3, #64	; 0x40
   8279a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8279c:	6153      	str	r3, [r2, #20]
   8279e:	f7fe bfc0 	b.w	81722 <_svfprintf_r+0x2e>
   827a2:	2003      	movs	r0, #3
   827a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   827a6:	a923      	add	r1, sp, #140	; 0x8c
   827a8:	e88d 0011 	stmia.w	sp, {r0, r4}
   827ac:	9104      	str	r1, [sp, #16]
   827ae:	a820      	add	r0, sp, #128	; 0x80
   827b0:	a91f      	add	r1, sp, #124	; 0x7c
   827b2:	9003      	str	r0, [sp, #12]
   827b4:	9a08      	ldr	r2, [sp, #32]
   827b6:	463b      	mov	r3, r7
   827b8:	9102      	str	r1, [sp, #8]
   827ba:	980c      	ldr	r0, [sp, #48]	; 0x30
   827bc:	f000 fabc 	bl	82d38 <_dtoa_r>
   827c0:	4625      	mov	r5, r4
   827c2:	4606      	mov	r6, r0
   827c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   827c6:	1974      	adds	r4, r6, r5
   827c8:	2b46      	cmp	r3, #70	; 0x46
   827ca:	f47f af64 	bne.w	82696 <_svfprintf_r+0xfa2>
   827ce:	7833      	ldrb	r3, [r6, #0]
   827d0:	2b30      	cmp	r3, #48	; 0x30
   827d2:	f000 8187 	beq.w	82ae4 <_svfprintf_r+0x13f0>
   827d6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   827d8:	442c      	add	r4, r5
   827da:	e75c      	b.n	82696 <_svfprintf_r+0xfa2>
   827dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   827de:	2b00      	cmp	r3, #0
   827e0:	bf08      	it	eq
   827e2:	2301      	moveq	r3, #1
   827e4:	930a      	str	r3, [sp, #40]	; 0x28
   827e6:	e723      	b.n	82630 <_svfprintf_r+0xf3c>
   827e8:	4630      	mov	r0, r6
   827ea:	950a      	str	r5, [sp, #40]	; 0x28
   827ec:	f7fe ff1a 	bl	81624 <strlen>
   827f0:	940f      	str	r4, [sp, #60]	; 0x3c
   827f2:	900e      	str	r0, [sp, #56]	; 0x38
   827f4:	f8cd b01c 	str.w	fp, [sp, #28]
   827f8:	4603      	mov	r3, r0
   827fa:	f7ff b9eb 	b.w	81bd4 <_svfprintf_r+0x4e0>
   827fe:	272d      	movs	r7, #45	; 0x2d
   82800:	2300      	movs	r3, #0
   82802:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82806:	930a      	str	r3, [sp, #40]	; 0x28
   82808:	f7ff b899 	b.w	8193e <_svfprintf_r+0x24a>
   8280c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8280e:	461a      	mov	r2, r3
   82810:	9312      	str	r3, [sp, #72]	; 0x48
   82812:	3303      	adds	r3, #3
   82814:	db04      	blt.n	82820 <_svfprintf_r+0x112c>
   82816:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82818:	4619      	mov	r1, r3
   8281a:	4291      	cmp	r1, r2
   8281c:	f6bf af5e 	bge.w	826dc <_svfprintf_r+0xfe8>
   82820:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82822:	3b02      	subs	r3, #2
   82824:	9311      	str	r3, [sp, #68]	; 0x44
   82826:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82828:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   8282c:	3b01      	subs	r3, #1
   8282e:	2b00      	cmp	r3, #0
   82830:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   82834:	bfb4      	ite	lt
   82836:	222d      	movlt	r2, #45	; 0x2d
   82838:	222b      	movge	r2, #43	; 0x2b
   8283a:	931f      	str	r3, [sp, #124]	; 0x7c
   8283c:	bfb8      	it	lt
   8283e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   82840:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   82844:	bfb8      	it	lt
   82846:	f1c3 0301 	rsblt	r3, r3, #1
   8284a:	2b09      	cmp	r3, #9
   8284c:	f340 811f 	ble.w	82a8e <_svfprintf_r+0x139a>
   82850:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   82854:	4601      	mov	r1, r0
   82856:	4c68      	ldr	r4, [pc, #416]	; (829f8 <_svfprintf_r+0x1304>)
   82858:	e000      	b.n	8285c <_svfprintf_r+0x1168>
   8285a:	4611      	mov	r1, r2
   8285c:	fb84 5203 	smull	r5, r2, r4, r3
   82860:	17dd      	asrs	r5, r3, #31
   82862:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   82866:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   8286a:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   8286e:	3230      	adds	r2, #48	; 0x30
   82870:	2d09      	cmp	r5, #9
   82872:	f801 2c01 	strb.w	r2, [r1, #-1]
   82876:	462b      	mov	r3, r5
   82878:	f101 32ff 	add.w	r2, r1, #4294967295
   8287c:	dced      	bgt.n	8285a <_svfprintf_r+0x1166>
   8287e:	3330      	adds	r3, #48	; 0x30
   82880:	3902      	subs	r1, #2
   82882:	b2dc      	uxtb	r4, r3
   82884:	4288      	cmp	r0, r1
   82886:	f802 4c01 	strb.w	r4, [r2, #-1]
   8288a:	f240 8191 	bls.w	82bb0 <_svfprintf_r+0x14bc>
   8288e:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   82892:	4613      	mov	r3, r2
   82894:	e001      	b.n	8289a <_svfprintf_r+0x11a6>
   82896:	f813 4b01 	ldrb.w	r4, [r3], #1
   8289a:	4283      	cmp	r3, r0
   8289c:	f801 4b01 	strb.w	r4, [r1], #1
   828a0:	d1f9      	bne.n	82896 <_svfprintf_r+0x11a2>
   828a2:	3301      	adds	r3, #1
   828a4:	1a9b      	subs	r3, r3, r2
   828a6:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   828aa:	4413      	add	r3, r2
   828ac:	aa21      	add	r2, sp, #132	; 0x84
   828ae:	1a9b      	subs	r3, r3, r2
   828b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   828b2:	931b      	str	r3, [sp, #108]	; 0x6c
   828b4:	2a01      	cmp	r2, #1
   828b6:	4413      	add	r3, r2
   828b8:	930e      	str	r3, [sp, #56]	; 0x38
   828ba:	f340 8147 	ble.w	82b4c <_svfprintf_r+0x1458>
   828be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   828c0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   828c2:	4413      	add	r3, r2
   828c4:	930e      	str	r3, [sp, #56]	; 0x38
   828c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   828ca:	9308      	str	r3, [sp, #32]
   828cc:	2300      	movs	r3, #0
   828ce:	9312      	str	r3, [sp, #72]	; 0x48
   828d0:	e714      	b.n	826fc <_svfprintf_r+0x1008>
   828d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   828d6:	f7ff b87a 	b.w	819ce <_svfprintf_r+0x2da>
   828da:	aa25      	add	r2, sp, #148	; 0x94
   828dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828de:	980c      	ldr	r0, [sp, #48]	; 0x30
   828e0:	f001 ffe4 	bl	848ac <__ssprint_r>
   828e4:	2800      	cmp	r0, #0
   828e6:	f47e afe2 	bne.w	818ae <_svfprintf_r+0x1ba>
   828ea:	46c8      	mov	r8, r9
   828ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828ee:	e4fb      	b.n	822e8 <_svfprintf_r+0xbf4>
   828f0:	4623      	mov	r3, r4
   828f2:	e6e3      	b.n	826bc <_svfprintf_r+0xfc8>
   828f4:	aa25      	add	r2, sp, #148	; 0x94
   828f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828f8:	980c      	ldr	r0, [sp, #48]	; 0x30
   828fa:	f001 ffd7 	bl	848ac <__ssprint_r>
   828fe:	2800      	cmp	r0, #0
   82900:	f47e afd5 	bne.w	818ae <_svfprintf_r+0x1ba>
   82904:	46c8      	mov	r8, r9
   82906:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82908:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8290a:	e5d3      	b.n	824b4 <_svfprintf_r+0xdc0>
   8290c:	aa25      	add	r2, sp, #148	; 0x94
   8290e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82910:	980c      	ldr	r0, [sp, #48]	; 0x30
   82912:	f001 ffcb 	bl	848ac <__ssprint_r>
   82916:	2800      	cmp	r0, #0
   82918:	f47e afc9 	bne.w	818ae <_svfprintf_r+0x1ba>
   8291c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8291e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82920:	46c8      	mov	r8, r9
   82922:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82924:	1a9a      	subs	r2, r3, r2
   82926:	e5dd      	b.n	824e4 <_svfprintf_r+0xdf0>
   82928:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8292a:	f7ff b902 	b.w	81b32 <_svfprintf_r+0x43e>
   8292e:	aa25      	add	r2, sp, #148	; 0x94
   82930:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82932:	980c      	ldr	r0, [sp, #48]	; 0x30
   82934:	f001 ffba 	bl	848ac <__ssprint_r>
   82938:	2800      	cmp	r0, #0
   8293a:	f47e afb8 	bne.w	818ae <_svfprintf_r+0x1ba>
   8293e:	46c8      	mov	r8, r9
   82940:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82942:	e5b0      	b.n	824a6 <_svfprintf_r+0xdb2>
   82944:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82946:	4637      	mov	r7, r6
   82948:	2b06      	cmp	r3, #6
   8294a:	bf28      	it	cs
   8294c:	2306      	movcs	r3, #6
   8294e:	960a      	str	r6, [sp, #40]	; 0x28
   82950:	9612      	str	r6, [sp, #72]	; 0x48
   82952:	9308      	str	r3, [sp, #32]
   82954:	940f      	str	r4, [sp, #60]	; 0x3c
   82956:	f8cd b01c 	str.w	fp, [sp, #28]
   8295a:	930e      	str	r3, [sp, #56]	; 0x38
   8295c:	4e27      	ldr	r6, [pc, #156]	; (829fc <_svfprintf_r+0x1308>)
   8295e:	f7fe bfed 	b.w	8193c <_svfprintf_r+0x248>
   82962:	2306      	movs	r3, #6
   82964:	930a      	str	r3, [sp, #40]	; 0x28
   82966:	e663      	b.n	82630 <_svfprintf_r+0xf3c>
   82968:	232d      	movs	r3, #45	; 0x2d
   8296a:	461f      	mov	r7, r3
   8296c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82970:	f7ff ba2b 	b.w	81dca <_svfprintf_r+0x6d6>
   82974:	2003      	movs	r0, #3
   82976:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82978:	a923      	add	r1, sp, #140	; 0x8c
   8297a:	e88d 0011 	stmia.w	sp, {r0, r4}
   8297e:	9104      	str	r1, [sp, #16]
   82980:	a820      	add	r0, sp, #128	; 0x80
   82982:	a91f      	add	r1, sp, #124	; 0x7c
   82984:	9003      	str	r0, [sp, #12]
   82986:	9a08      	ldr	r2, [sp, #32]
   82988:	463b      	mov	r3, r7
   8298a:	9102      	str	r1, [sp, #8]
   8298c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8298e:	f000 f9d3 	bl	82d38 <_dtoa_r>
   82992:	4625      	mov	r5, r4
   82994:	4606      	mov	r6, r0
   82996:	1904      	adds	r4, r0, r4
   82998:	e719      	b.n	827ce <_svfprintf_r+0x10da>
   8299a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8299c:	4d15      	ldr	r5, [pc, #84]	; (829f4 <_svfprintf_r+0x1300>)
   8299e:	f7ff bb7f 	b.w	820a0 <_svfprintf_r+0x9ac>
   829a2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   829a4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   829a6:	4413      	add	r3, r2
   829a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
   829aa:	930e      	str	r3, [sp, #56]	; 0x38
   829ac:	2a00      	cmp	r2, #0
   829ae:	f340 80c6 	ble.w	82b3e <_svfprintf_r+0x144a>
   829b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   829b6:	9308      	str	r3, [sp, #32]
   829b8:	2367      	movs	r3, #103	; 0x67
   829ba:	9311      	str	r3, [sp, #68]	; 0x44
   829bc:	e69e      	b.n	826fc <_svfprintf_r+0x1008>
   829be:	2b00      	cmp	r3, #0
   829c0:	f340 80e0 	ble.w	82b84 <_svfprintf_r+0x1490>
   829c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   829c6:	2a00      	cmp	r2, #0
   829c8:	f040 80af 	bne.w	82b2a <_svfprintf_r+0x1436>
   829cc:	f01b 0f01 	tst.w	fp, #1
   829d0:	f040 80ab 	bne.w	82b2a <_svfprintf_r+0x1436>
   829d4:	9308      	str	r3, [sp, #32]
   829d6:	930e      	str	r3, [sp, #56]	; 0x38
   829d8:	e690      	b.n	826fc <_svfprintf_r+0x1008>
   829da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   829dc:	940f      	str	r4, [sp, #60]	; 0x3c
   829de:	9308      	str	r3, [sp, #32]
   829e0:	930e      	str	r3, [sp, #56]	; 0x38
   829e2:	900a      	str	r0, [sp, #40]	; 0x28
   829e4:	f8cd b01c 	str.w	fp, [sp, #28]
   829e8:	9012      	str	r0, [sp, #72]	; 0x48
   829ea:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   829ee:	f7fe bfa5 	b.w	8193c <_svfprintf_r+0x248>
   829f2:	bf00      	nop
   829f4:	00085ee0 	.word	0x00085ee0
   829f8:	66666667 	.word	0x66666667
   829fc:	00085ec4 	.word	0x00085ec4
   82a00:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82a02:	2b47      	cmp	r3, #71	; 0x47
   82a04:	f47f ae46 	bne.w	82694 <_svfprintf_r+0xfa0>
   82a08:	f01b 0f01 	tst.w	fp, #1
   82a0c:	f47f aeda 	bne.w	827c4 <_svfprintf_r+0x10d0>
   82a10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82a12:	1b9b      	subs	r3, r3, r6
   82a14:	9313      	str	r3, [sp, #76]	; 0x4c
   82a16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82a18:	2b47      	cmp	r3, #71	; 0x47
   82a1a:	f43f aef7 	beq.w	8280c <_svfprintf_r+0x1118>
   82a1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82a20:	9312      	str	r3, [sp, #72]	; 0x48
   82a22:	e700      	b.n	82826 <_svfprintf_r+0x1132>
   82a24:	2000      	movs	r0, #0
   82a26:	900a      	str	r0, [sp, #40]	; 0x28
   82a28:	f7fe bec0 	b.w	817ac <_svfprintf_r+0xb8>
   82a2c:	424f      	negs	r7, r1
   82a2e:	3110      	adds	r1, #16
   82a30:	da35      	bge.n	82a9e <_svfprintf_r+0x13aa>
   82a32:	2410      	movs	r4, #16
   82a34:	4d6a      	ldr	r5, [pc, #424]	; (82be0 <_svfprintf_r+0x14ec>)
   82a36:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82a3a:	e004      	b.n	82a46 <_svfprintf_r+0x1352>
   82a3c:	f108 0808 	add.w	r8, r8, #8
   82a40:	3f10      	subs	r7, #16
   82a42:	2f10      	cmp	r7, #16
   82a44:	dd2c      	ble.n	82aa0 <_svfprintf_r+0x13ac>
   82a46:	3301      	adds	r3, #1
   82a48:	3210      	adds	r2, #16
   82a4a:	2b07      	cmp	r3, #7
   82a4c:	9227      	str	r2, [sp, #156]	; 0x9c
   82a4e:	9326      	str	r3, [sp, #152]	; 0x98
   82a50:	f8c8 5000 	str.w	r5, [r8]
   82a54:	f8c8 4004 	str.w	r4, [r8, #4]
   82a58:	ddf0      	ble.n	82a3c <_svfprintf_r+0x1348>
   82a5a:	aa25      	add	r2, sp, #148	; 0x94
   82a5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a5e:	4658      	mov	r0, fp
   82a60:	f001 ff24 	bl	848ac <__ssprint_r>
   82a64:	2800      	cmp	r0, #0
   82a66:	f47e af22 	bne.w	818ae <_svfprintf_r+0x1ba>
   82a6a:	46c8      	mov	r8, r9
   82a6c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82a6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a70:	e7e6      	b.n	82a40 <_svfprintf_r+0x134c>
   82a72:	aa25      	add	r2, sp, #148	; 0x94
   82a74:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a76:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a78:	f001 ff18 	bl	848ac <__ssprint_r>
   82a7c:	2800      	cmp	r0, #0
   82a7e:	f47e af16 	bne.w	818ae <_svfprintf_r+0x1ba>
   82a82:	46c8      	mov	r8, r9
   82a84:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82a86:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82a88:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a8a:	f7ff bbc3 	b.w	82214 <_svfprintf_r+0xb20>
   82a8e:	2230      	movs	r2, #48	; 0x30
   82a90:	4413      	add	r3, r2
   82a92:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   82a96:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   82a9a:	ab22      	add	r3, sp, #136	; 0x88
   82a9c:	e706      	b.n	828ac <_svfprintf_r+0x11b8>
   82a9e:	4d50      	ldr	r5, [pc, #320]	; (82be0 <_svfprintf_r+0x14ec>)
   82aa0:	3301      	adds	r3, #1
   82aa2:	443a      	add	r2, r7
   82aa4:	2b07      	cmp	r3, #7
   82aa6:	e888 00a0 	stmia.w	r8, {r5, r7}
   82aaa:	9227      	str	r2, [sp, #156]	; 0x9c
   82aac:	9326      	str	r3, [sp, #152]	; 0x98
   82aae:	f108 0808 	add.w	r8, r8, #8
   82ab2:	f77f abb2 	ble.w	8221a <_svfprintf_r+0xb26>
   82ab6:	aa25      	add	r2, sp, #148	; 0x94
   82ab8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82aba:	980c      	ldr	r0, [sp, #48]	; 0x30
   82abc:	f001 fef6 	bl	848ac <__ssprint_r>
   82ac0:	2800      	cmp	r0, #0
   82ac2:	f47e aef4 	bne.w	818ae <_svfprintf_r+0x1ba>
   82ac6:	46c8      	mov	r8, r9
   82ac8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82aca:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82acc:	f7ff bba5 	b.w	8221a <_svfprintf_r+0xb26>
   82ad0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82ad2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82ad4:	4413      	add	r3, r2
   82ad6:	930e      	str	r3, [sp, #56]	; 0x38
   82ad8:	e76b      	b.n	829b2 <_svfprintf_r+0x12be>
   82ada:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82adc:	e5ee      	b.n	826bc <_svfprintf_r+0xfc8>
   82ade:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ae0:	4d3f      	ldr	r5, [pc, #252]	; (82be0 <_svfprintf_r+0x14ec>)
   82ae2:	e4bb      	b.n	8245c <_svfprintf_r+0xd68>
   82ae4:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82ae6:	9808      	ldr	r0, [sp, #32]
   82ae8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82aea:	4639      	mov	r1, r7
   82aec:	f002 ff74 	bl	859d8 <__aeabi_dcmpeq>
   82af0:	2800      	cmp	r0, #0
   82af2:	f47f ae70 	bne.w	827d6 <_svfprintf_r+0x10e2>
   82af6:	f1c5 0501 	rsb	r5, r5, #1
   82afa:	951f      	str	r5, [sp, #124]	; 0x7c
   82afc:	442c      	add	r4, r5
   82afe:	e5ca      	b.n	82696 <_svfprintf_r+0xfa2>
   82b00:	2303      	movs	r3, #3
   82b02:	461a      	mov	r2, r3
   82b04:	9308      	str	r3, [sp, #32]
   82b06:	2300      	movs	r3, #0
   82b08:	4619      	mov	r1, r3
   82b0a:	930a      	str	r3, [sp, #40]	; 0x28
   82b0c:	4e35      	ldr	r6, [pc, #212]	; (82be4 <_svfprintf_r+0x14f0>)
   82b0e:	4b36      	ldr	r3, [pc, #216]	; (82be8 <_svfprintf_r+0x14f4>)
   82b10:	920e      	str	r2, [sp, #56]	; 0x38
   82b12:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82b14:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   82b18:	9007      	str	r0, [sp, #28]
   82b1a:	9112      	str	r1, [sp, #72]	; 0x48
   82b1c:	2a47      	cmp	r2, #71	; 0x47
   82b1e:	bfd8      	it	le
   82b20:	461e      	movle	r6, r3
   82b22:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82b26:	f7fe bf09 	b.w	8193c <_svfprintf_r+0x248>
   82b2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82b2c:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82b2e:	4413      	add	r3, r2
   82b30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82b32:	441a      	add	r2, r3
   82b34:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82b38:	920e      	str	r2, [sp, #56]	; 0x38
   82b3a:	9308      	str	r3, [sp, #32]
   82b3c:	e5de      	b.n	826fc <_svfprintf_r+0x1008>
   82b3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82b40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82b42:	f1c3 0301 	rsb	r3, r3, #1
   82b46:	441a      	add	r2, r3
   82b48:	4613      	mov	r3, r2
   82b4a:	e7c4      	b.n	82ad6 <_svfprintf_r+0x13e2>
   82b4c:	f01b 0301 	ands.w	r3, fp, #1
   82b50:	9312      	str	r3, [sp, #72]	; 0x48
   82b52:	f47f aeb4 	bne.w	828be <_svfprintf_r+0x11ca>
   82b56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82b5c:	9308      	str	r3, [sp, #32]
   82b5e:	e5cd      	b.n	826fc <_svfprintf_r+0x1008>
   82b60:	4d1f      	ldr	r5, [pc, #124]	; (82be0 <_svfprintf_r+0x14ec>)
   82b62:	e43d      	b.n	823e0 <_svfprintf_r+0xcec>
   82b64:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82b66:	4d1e      	ldr	r5, [pc, #120]	; (82be0 <_svfprintf_r+0x14ec>)
   82b68:	e492      	b.n	82490 <_svfprintf_r+0xd9c>
   82b6a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82b6c:	f89a 3001 	ldrb.w	r3, [sl, #1]
   82b70:	6828      	ldr	r0, [r5, #0]
   82b72:	46a2      	mov	sl, r4
   82b74:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   82b78:	900a      	str	r0, [sp, #40]	; 0x28
   82b7a:	4628      	mov	r0, r5
   82b7c:	3004      	adds	r0, #4
   82b7e:	900f      	str	r0, [sp, #60]	; 0x3c
   82b80:	f7fe be12 	b.w	817a8 <_svfprintf_r+0xb4>
   82b84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82b86:	b913      	cbnz	r3, 82b8e <_svfprintf_r+0x149a>
   82b88:	f01b 0f01 	tst.w	fp, #1
   82b8c:	d002      	beq.n	82b94 <_svfprintf_r+0x14a0>
   82b8e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82b90:	3301      	adds	r3, #1
   82b92:	e7cd      	b.n	82b30 <_svfprintf_r+0x143c>
   82b94:	2301      	movs	r3, #1
   82b96:	e71d      	b.n	829d4 <_svfprintf_r+0x12e0>
   82b98:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82b9c:	f7ff b984 	b.w	81ea8 <_svfprintf_r+0x7b4>
   82ba0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82ba4:	f7ff b93e 	b.w	81e24 <_svfprintf_r+0x730>
   82ba8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82bac:	f7ff b854 	b.w	81c58 <_svfprintf_r+0x564>
   82bb0:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   82bb4:	e67a      	b.n	828ac <_svfprintf_r+0x11b8>
   82bb6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82bba:	f7ff b9b6 	b.w	81f2a <_svfprintf_r+0x836>
   82bbe:	f04f 32ff 	mov.w	r2, #4294967295
   82bc2:	230c      	movs	r3, #12
   82bc4:	9209      	str	r2, [sp, #36]	; 0x24
   82bc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82bc8:	6013      	str	r3, [r2, #0]
   82bca:	f7fe be79 	b.w	818c0 <_svfprintf_r+0x1cc>
   82bce:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82bd2:	f7ff b8c9 	b.w	81d68 <_svfprintf_r+0x674>
   82bd6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82bda:	f7ff b87d 	b.w	81cd8 <_svfprintf_r+0x5e4>
   82bde:	bf00      	nop
   82be0:	00085ee0 	.word	0x00085ee0
   82be4:	00085e98 	.word	0x00085e98
   82be8:	00085e94 	.word	0x00085e94

00082bec <register_fini>:
   82bec:	4b02      	ldr	r3, [pc, #8]	; (82bf8 <register_fini+0xc>)
   82bee:	b113      	cbz	r3, 82bf6 <register_fini+0xa>
   82bf0:	4802      	ldr	r0, [pc, #8]	; (82bfc <register_fini+0x10>)
   82bf2:	f000 b805 	b.w	82c00 <atexit>
   82bf6:	4770      	bx	lr
   82bf8:	00000000 	.word	0x00000000
   82bfc:	00083b7d 	.word	0x00083b7d

00082c00 <atexit>:
   82c00:	2300      	movs	r3, #0
   82c02:	4601      	mov	r1, r0
   82c04:	461a      	mov	r2, r3
   82c06:	4618      	mov	r0, r3
   82c08:	f001 bece 	b.w	849a8 <__register_exitproc>

00082c0c <quorem>:
   82c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82c10:	6903      	ldr	r3, [r0, #16]
   82c12:	690f      	ldr	r7, [r1, #16]
   82c14:	b083      	sub	sp, #12
   82c16:	429f      	cmp	r7, r3
   82c18:	f300 8088 	bgt.w	82d2c <quorem+0x120>
   82c1c:	3f01      	subs	r7, #1
   82c1e:	f101 0614 	add.w	r6, r1, #20
   82c22:	f100 0a14 	add.w	sl, r0, #20
   82c26:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   82c2a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   82c2e:	3301      	adds	r3, #1
   82c30:	fbb2 f8f3 	udiv	r8, r2, r3
   82c34:	00bb      	lsls	r3, r7, #2
   82c36:	9300      	str	r3, [sp, #0]
   82c38:	eb06 0903 	add.w	r9, r6, r3
   82c3c:	4453      	add	r3, sl
   82c3e:	9301      	str	r3, [sp, #4]
   82c40:	f1b8 0f00 	cmp.w	r8, #0
   82c44:	d03b      	beq.n	82cbe <quorem+0xb2>
   82c46:	2300      	movs	r3, #0
   82c48:	46b4      	mov	ip, r6
   82c4a:	461c      	mov	r4, r3
   82c4c:	46d6      	mov	lr, sl
   82c4e:	f85c 2b04 	ldr.w	r2, [ip], #4
   82c52:	f8de 5000 	ldr.w	r5, [lr]
   82c56:	fa1f fb82 	uxth.w	fp, r2
   82c5a:	fb08 330b 	mla	r3, r8, fp, r3
   82c5e:	0c12      	lsrs	r2, r2, #16
   82c60:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   82c64:	fb08 bb02 	mla	fp, r8, r2, fp
   82c68:	b29a      	uxth	r2, r3
   82c6a:	1aa2      	subs	r2, r4, r2
   82c6c:	b2ab      	uxth	r3, r5
   82c6e:	fa1f f48b 	uxth.w	r4, fp
   82c72:	441a      	add	r2, r3
   82c74:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   82c78:	eb04 4422 	add.w	r4, r4, r2, asr #16
   82c7c:	b292      	uxth	r2, r2
   82c7e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   82c82:	45e1      	cmp	r9, ip
   82c84:	f84e 2b04 	str.w	r2, [lr], #4
   82c88:	ea4f 4424 	mov.w	r4, r4, asr #16
   82c8c:	ea4f 431b 	mov.w	r3, fp, lsr #16
   82c90:	d2dd      	bcs.n	82c4e <quorem+0x42>
   82c92:	9b00      	ldr	r3, [sp, #0]
   82c94:	f85a 3003 	ldr.w	r3, [sl, r3]
   82c98:	b98b      	cbnz	r3, 82cbe <quorem+0xb2>
   82c9a:	9c01      	ldr	r4, [sp, #4]
   82c9c:	1f23      	subs	r3, r4, #4
   82c9e:	459a      	cmp	sl, r3
   82ca0:	d20c      	bcs.n	82cbc <quorem+0xb0>
   82ca2:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82ca6:	b94b      	cbnz	r3, 82cbc <quorem+0xb0>
   82ca8:	f1a4 0308 	sub.w	r3, r4, #8
   82cac:	e002      	b.n	82cb4 <quorem+0xa8>
   82cae:	681a      	ldr	r2, [r3, #0]
   82cb0:	3b04      	subs	r3, #4
   82cb2:	b91a      	cbnz	r2, 82cbc <quorem+0xb0>
   82cb4:	459a      	cmp	sl, r3
   82cb6:	f107 37ff 	add.w	r7, r7, #4294967295
   82cba:	d3f8      	bcc.n	82cae <quorem+0xa2>
   82cbc:	6107      	str	r7, [r0, #16]
   82cbe:	4604      	mov	r4, r0
   82cc0:	f001 fce4 	bl	8468c <__mcmp>
   82cc4:	2800      	cmp	r0, #0
   82cc6:	db2d      	blt.n	82d24 <quorem+0x118>
   82cc8:	4655      	mov	r5, sl
   82cca:	2300      	movs	r3, #0
   82ccc:	f108 0801 	add.w	r8, r8, #1
   82cd0:	f856 1b04 	ldr.w	r1, [r6], #4
   82cd4:	6828      	ldr	r0, [r5, #0]
   82cd6:	b28a      	uxth	r2, r1
   82cd8:	1a9a      	subs	r2, r3, r2
   82cda:	0c0b      	lsrs	r3, r1, #16
   82cdc:	b281      	uxth	r1, r0
   82cde:	440a      	add	r2, r1
   82ce0:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   82ce4:	eb03 4322 	add.w	r3, r3, r2, asr #16
   82ce8:	b292      	uxth	r2, r2
   82cea:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   82cee:	45b1      	cmp	r9, r6
   82cf0:	f845 2b04 	str.w	r2, [r5], #4
   82cf4:	ea4f 4323 	mov.w	r3, r3, asr #16
   82cf8:	d2ea      	bcs.n	82cd0 <quorem+0xc4>
   82cfa:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   82cfe:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   82d02:	b97a      	cbnz	r2, 82d24 <quorem+0x118>
   82d04:	1f1a      	subs	r2, r3, #4
   82d06:	4592      	cmp	sl, r2
   82d08:	d20b      	bcs.n	82d22 <quorem+0x116>
   82d0a:	f853 2c04 	ldr.w	r2, [r3, #-4]
   82d0e:	b942      	cbnz	r2, 82d22 <quorem+0x116>
   82d10:	3b08      	subs	r3, #8
   82d12:	e002      	b.n	82d1a <quorem+0x10e>
   82d14:	681a      	ldr	r2, [r3, #0]
   82d16:	3b04      	subs	r3, #4
   82d18:	b91a      	cbnz	r2, 82d22 <quorem+0x116>
   82d1a:	459a      	cmp	sl, r3
   82d1c:	f107 37ff 	add.w	r7, r7, #4294967295
   82d20:	d3f8      	bcc.n	82d14 <quorem+0x108>
   82d22:	6127      	str	r7, [r4, #16]
   82d24:	4640      	mov	r0, r8
   82d26:	b003      	add	sp, #12
   82d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82d2c:	2000      	movs	r0, #0
   82d2e:	b003      	add	sp, #12
   82d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82d34:	0000      	movs	r0, r0
	...

00082d38 <_dtoa_r>:
   82d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82d3c:	6c05      	ldr	r5, [r0, #64]	; 0x40
   82d3e:	b09b      	sub	sp, #108	; 0x6c
   82d40:	4604      	mov	r4, r0
   82d42:	4692      	mov	sl, r2
   82d44:	469b      	mov	fp, r3
   82d46:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   82d48:	b14d      	cbz	r5, 82d5e <_dtoa_r+0x26>
   82d4a:	2301      	movs	r3, #1
   82d4c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   82d4e:	4629      	mov	r1, r5
   82d50:	4093      	lsls	r3, r2
   82d52:	60ab      	str	r3, [r5, #8]
   82d54:	606a      	str	r2, [r5, #4]
   82d56:	f001 fac1 	bl	842dc <_Bfree>
   82d5a:	2300      	movs	r3, #0
   82d5c:	6423      	str	r3, [r4, #64]	; 0x40
   82d5e:	f1bb 0f00 	cmp.w	fp, #0
   82d62:	465d      	mov	r5, fp
   82d64:	db35      	blt.n	82dd2 <_dtoa_r+0x9a>
   82d66:	2300      	movs	r3, #0
   82d68:	6033      	str	r3, [r6, #0]
   82d6a:	4b9d      	ldr	r3, [pc, #628]	; (82fe0 <_dtoa_r+0x2a8>)
   82d6c:	43ab      	bics	r3, r5
   82d6e:	d015      	beq.n	82d9c <_dtoa_r+0x64>
   82d70:	2200      	movs	r2, #0
   82d72:	2300      	movs	r3, #0
   82d74:	4650      	mov	r0, sl
   82d76:	4659      	mov	r1, fp
   82d78:	f002 fe2e 	bl	859d8 <__aeabi_dcmpeq>
   82d7c:	4680      	mov	r8, r0
   82d7e:	2800      	cmp	r0, #0
   82d80:	d02d      	beq.n	82dde <_dtoa_r+0xa6>
   82d82:	2301      	movs	r3, #1
   82d84:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82d86:	6013      	str	r3, [r2, #0]
   82d88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82d8a:	2b00      	cmp	r3, #0
   82d8c:	f000 80bd 	beq.w	82f0a <_dtoa_r+0x1d2>
   82d90:	4894      	ldr	r0, [pc, #592]	; (82fe4 <_dtoa_r+0x2ac>)
   82d92:	6018      	str	r0, [r3, #0]
   82d94:	3801      	subs	r0, #1
   82d96:	b01b      	add	sp, #108	; 0x6c
   82d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82d9c:	f242 730f 	movw	r3, #9999	; 0x270f
   82da0:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82da2:	6013      	str	r3, [r2, #0]
   82da4:	f1ba 0f00 	cmp.w	sl, #0
   82da8:	d10d      	bne.n	82dc6 <_dtoa_r+0x8e>
   82daa:	f3c5 0513 	ubfx	r5, r5, #0, #20
   82dae:	b955      	cbnz	r5, 82dc6 <_dtoa_r+0x8e>
   82db0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82db2:	488d      	ldr	r0, [pc, #564]	; (82fe8 <_dtoa_r+0x2b0>)
   82db4:	2b00      	cmp	r3, #0
   82db6:	d0ee      	beq.n	82d96 <_dtoa_r+0x5e>
   82db8:	f100 0308 	add.w	r3, r0, #8
   82dbc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   82dbe:	6013      	str	r3, [r2, #0]
   82dc0:	b01b      	add	sp, #108	; 0x6c
   82dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82dc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82dc8:	4888      	ldr	r0, [pc, #544]	; (82fec <_dtoa_r+0x2b4>)
   82dca:	2b00      	cmp	r3, #0
   82dcc:	d0e3      	beq.n	82d96 <_dtoa_r+0x5e>
   82dce:	1cc3      	adds	r3, r0, #3
   82dd0:	e7f4      	b.n	82dbc <_dtoa_r+0x84>
   82dd2:	2301      	movs	r3, #1
   82dd4:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   82dd8:	6033      	str	r3, [r6, #0]
   82dda:	46ab      	mov	fp, r5
   82ddc:	e7c5      	b.n	82d6a <_dtoa_r+0x32>
   82dde:	aa18      	add	r2, sp, #96	; 0x60
   82de0:	ab19      	add	r3, sp, #100	; 0x64
   82de2:	9201      	str	r2, [sp, #4]
   82de4:	9300      	str	r3, [sp, #0]
   82de6:	4652      	mov	r2, sl
   82de8:	465b      	mov	r3, fp
   82dea:	4620      	mov	r0, r4
   82dec:	f001 fcf8 	bl	847e0 <__d2b>
   82df0:	0d2b      	lsrs	r3, r5, #20
   82df2:	4681      	mov	r9, r0
   82df4:	d071      	beq.n	82eda <_dtoa_r+0x1a2>
   82df6:	4650      	mov	r0, sl
   82df8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   82dfc:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   82e00:	9f18      	ldr	r7, [sp, #96]	; 0x60
   82e02:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   82e06:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   82e0a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   82e0e:	2200      	movs	r2, #0
   82e10:	4b77      	ldr	r3, [pc, #476]	; (82ff0 <_dtoa_r+0x2b8>)
   82e12:	f002 f9c5 	bl	851a0 <__aeabi_dsub>
   82e16:	a36c      	add	r3, pc, #432	; (adr r3, 82fc8 <_dtoa_r+0x290>)
   82e18:	e9d3 2300 	ldrd	r2, r3, [r3]
   82e1c:	f002 fb74 	bl	85508 <__aeabi_dmul>
   82e20:	a36b      	add	r3, pc, #428	; (adr r3, 82fd0 <_dtoa_r+0x298>)
   82e22:	e9d3 2300 	ldrd	r2, r3, [r3]
   82e26:	f002 f9bd 	bl	851a4 <__adddf3>
   82e2a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82e2e:	4630      	mov	r0, r6
   82e30:	f002 fb04 	bl	8543c <__aeabi_i2d>
   82e34:	a368      	add	r3, pc, #416	; (adr r3, 82fd8 <_dtoa_r+0x2a0>)
   82e36:	e9d3 2300 	ldrd	r2, r3, [r3]
   82e3a:	f002 fb65 	bl	85508 <__aeabi_dmul>
   82e3e:	4602      	mov	r2, r0
   82e40:	460b      	mov	r3, r1
   82e42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   82e46:	f002 f9ad 	bl	851a4 <__adddf3>
   82e4a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82e4e:	f002 fe0b 	bl	85a68 <__aeabi_d2iz>
   82e52:	2200      	movs	r2, #0
   82e54:	9002      	str	r0, [sp, #8]
   82e56:	2300      	movs	r3, #0
   82e58:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82e5c:	f002 fdc6 	bl	859ec <__aeabi_dcmplt>
   82e60:	2800      	cmp	r0, #0
   82e62:	f040 816d 	bne.w	83140 <_dtoa_r+0x408>
   82e66:	9d02      	ldr	r5, [sp, #8]
   82e68:	2d16      	cmp	r5, #22
   82e6a:	f200 8157 	bhi.w	8311c <_dtoa_r+0x3e4>
   82e6e:	4961      	ldr	r1, [pc, #388]	; (82ff4 <_dtoa_r+0x2bc>)
   82e70:	4652      	mov	r2, sl
   82e72:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   82e76:	465b      	mov	r3, fp
   82e78:	e9d1 0100 	ldrd	r0, r1, [r1]
   82e7c:	f002 fdd4 	bl	85a28 <__aeabi_dcmpgt>
   82e80:	2800      	cmp	r0, #0
   82e82:	f000 81be 	beq.w	83202 <_dtoa_r+0x4ca>
   82e86:	1e6b      	subs	r3, r5, #1
   82e88:	9302      	str	r3, [sp, #8]
   82e8a:	2300      	movs	r3, #0
   82e8c:	930e      	str	r3, [sp, #56]	; 0x38
   82e8e:	1bbf      	subs	r7, r7, r6
   82e90:	1e7b      	subs	r3, r7, #1
   82e92:	9308      	str	r3, [sp, #32]
   82e94:	f100 814e 	bmi.w	83134 <_dtoa_r+0x3fc>
   82e98:	2300      	movs	r3, #0
   82e9a:	930a      	str	r3, [sp, #40]	; 0x28
   82e9c:	9b02      	ldr	r3, [sp, #8]
   82e9e:	2b00      	cmp	r3, #0
   82ea0:	f2c0 813f 	blt.w	83122 <_dtoa_r+0x3ea>
   82ea4:	9a08      	ldr	r2, [sp, #32]
   82ea6:	930d      	str	r3, [sp, #52]	; 0x34
   82ea8:	4611      	mov	r1, r2
   82eaa:	4419      	add	r1, r3
   82eac:	2300      	movs	r3, #0
   82eae:	9108      	str	r1, [sp, #32]
   82eb0:	930c      	str	r3, [sp, #48]	; 0x30
   82eb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82eb4:	2b09      	cmp	r3, #9
   82eb6:	d82a      	bhi.n	82f0e <_dtoa_r+0x1d6>
   82eb8:	2b05      	cmp	r3, #5
   82eba:	f340 8658 	ble.w	83b6e <_dtoa_r+0xe36>
   82ebe:	2500      	movs	r5, #0
   82ec0:	3b04      	subs	r3, #4
   82ec2:	9324      	str	r3, [sp, #144]	; 0x90
   82ec4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82ec6:	3b02      	subs	r3, #2
   82ec8:	2b03      	cmp	r3, #3
   82eca:	f200 863f 	bhi.w	83b4c <_dtoa_r+0xe14>
   82ece:	e8df f013 	tbh	[pc, r3, lsl #1]
   82ed2:	03ce      	.short	0x03ce
   82ed4:	03d902c3 	.word	0x03d902c3
   82ed8:	045b      	.short	0x045b
   82eda:	9f18      	ldr	r7, [sp, #96]	; 0x60
   82edc:	9e19      	ldr	r6, [sp, #100]	; 0x64
   82ede:	443e      	add	r6, r7
   82ee0:	f206 4332 	addw	r3, r6, #1074	; 0x432
   82ee4:	2b20      	cmp	r3, #32
   82ee6:	f340 8187 	ble.w	831f8 <_dtoa_r+0x4c0>
   82eea:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   82eee:	f206 4012 	addw	r0, r6, #1042	; 0x412
   82ef2:	409d      	lsls	r5, r3
   82ef4:	fa2a f000 	lsr.w	r0, sl, r0
   82ef8:	4328      	orrs	r0, r5
   82efa:	f002 fa8f 	bl	8541c <__aeabi_ui2d>
   82efe:	2301      	movs	r3, #1
   82f00:	3e01      	subs	r6, #1
   82f02:	9314      	str	r3, [sp, #80]	; 0x50
   82f04:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   82f08:	e781      	b.n	82e0e <_dtoa_r+0xd6>
   82f0a:	483b      	ldr	r0, [pc, #236]	; (82ff8 <_dtoa_r+0x2c0>)
   82f0c:	e743      	b.n	82d96 <_dtoa_r+0x5e>
   82f0e:	2100      	movs	r1, #0
   82f10:	4620      	mov	r0, r4
   82f12:	6461      	str	r1, [r4, #68]	; 0x44
   82f14:	9125      	str	r1, [sp, #148]	; 0x94
   82f16:	f001 f9bb 	bl	84290 <_Balloc>
   82f1a:	f04f 33ff 	mov.w	r3, #4294967295
   82f1e:	9307      	str	r3, [sp, #28]
   82f20:	930f      	str	r3, [sp, #60]	; 0x3c
   82f22:	2301      	movs	r3, #1
   82f24:	9a25      	ldr	r2, [sp, #148]	; 0x94
   82f26:	9004      	str	r0, [sp, #16]
   82f28:	6420      	str	r0, [r4, #64]	; 0x40
   82f2a:	9224      	str	r2, [sp, #144]	; 0x90
   82f2c:	930b      	str	r3, [sp, #44]	; 0x2c
   82f2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82f30:	2b00      	cmp	r3, #0
   82f32:	f2c0 80d3 	blt.w	830dc <_dtoa_r+0x3a4>
   82f36:	9a02      	ldr	r2, [sp, #8]
   82f38:	2a0e      	cmp	r2, #14
   82f3a:	f300 80cf 	bgt.w	830dc <_dtoa_r+0x3a4>
   82f3e:	4b2d      	ldr	r3, [pc, #180]	; (82ff4 <_dtoa_r+0x2bc>)
   82f40:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82f44:	e9d3 2300 	ldrd	r2, r3, [r3]
   82f48:	e9cd 2308 	strd	r2, r3, [sp, #32]
   82f4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82f4e:	2b00      	cmp	r3, #0
   82f50:	f2c0 83b4 	blt.w	836bc <_dtoa_r+0x984>
   82f54:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   82f58:	4650      	mov	r0, sl
   82f5a:	462a      	mov	r2, r5
   82f5c:	4633      	mov	r3, r6
   82f5e:	4659      	mov	r1, fp
   82f60:	f002 fbfc 	bl	8575c <__aeabi_ddiv>
   82f64:	f002 fd80 	bl	85a68 <__aeabi_d2iz>
   82f68:	4680      	mov	r8, r0
   82f6a:	f002 fa67 	bl	8543c <__aeabi_i2d>
   82f6e:	462a      	mov	r2, r5
   82f70:	4633      	mov	r3, r6
   82f72:	f002 fac9 	bl	85508 <__aeabi_dmul>
   82f76:	4602      	mov	r2, r0
   82f78:	460b      	mov	r3, r1
   82f7a:	4650      	mov	r0, sl
   82f7c:	4659      	mov	r1, fp
   82f7e:	f002 f90f 	bl	851a0 <__aeabi_dsub>
   82f82:	9e07      	ldr	r6, [sp, #28]
   82f84:	9f04      	ldr	r7, [sp, #16]
   82f86:	f108 0530 	add.w	r5, r8, #48	; 0x30
   82f8a:	2e01      	cmp	r6, #1
   82f8c:	703d      	strb	r5, [r7, #0]
   82f8e:	4602      	mov	r2, r0
   82f90:	460b      	mov	r3, r1
   82f92:	f107 0501 	add.w	r5, r7, #1
   82f96:	d064      	beq.n	83062 <_dtoa_r+0x32a>
   82f98:	2200      	movs	r2, #0
   82f9a:	4b18      	ldr	r3, [pc, #96]	; (82ffc <_dtoa_r+0x2c4>)
   82f9c:	f002 fab4 	bl	85508 <__aeabi_dmul>
   82fa0:	2200      	movs	r2, #0
   82fa2:	2300      	movs	r3, #0
   82fa4:	4606      	mov	r6, r0
   82fa6:	460f      	mov	r7, r1
   82fa8:	f002 fd16 	bl	859d8 <__aeabi_dcmpeq>
   82fac:	2800      	cmp	r0, #0
   82fae:	f040 8082 	bne.w	830b6 <_dtoa_r+0x37e>
   82fb2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   82fb6:	f04f 0a00 	mov.w	sl, #0
   82fba:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   82fbe:	f04f 0b00 	mov.w	fp, #0
   82fc2:	940b      	str	r4, [sp, #44]	; 0x2c
   82fc4:	e029      	b.n	8301a <_dtoa_r+0x2e2>
   82fc6:	bf00      	nop
   82fc8:	636f4361 	.word	0x636f4361
   82fcc:	3fd287a7 	.word	0x3fd287a7
   82fd0:	8b60c8b3 	.word	0x8b60c8b3
   82fd4:	3fc68a28 	.word	0x3fc68a28
   82fd8:	509f79fb 	.word	0x509f79fb
   82fdc:	3fd34413 	.word	0x3fd34413
   82fe0:	7ff00000 	.word	0x7ff00000
   82fe4:	00085ecd 	.word	0x00085ecd
   82fe8:	00085ef0 	.word	0x00085ef0
   82fec:	00085efc 	.word	0x00085efc
   82ff0:	3ff80000 	.word	0x3ff80000
   82ff4:	00085f28 	.word	0x00085f28
   82ff8:	00085ecc 	.word	0x00085ecc
   82ffc:	40240000 	.word	0x40240000
   83000:	2200      	movs	r2, #0
   83002:	4b81      	ldr	r3, [pc, #516]	; (83208 <_dtoa_r+0x4d0>)
   83004:	f002 fa80 	bl	85508 <__aeabi_dmul>
   83008:	4652      	mov	r2, sl
   8300a:	465b      	mov	r3, fp
   8300c:	4606      	mov	r6, r0
   8300e:	460f      	mov	r7, r1
   83010:	f002 fce2 	bl	859d8 <__aeabi_dcmpeq>
   83014:	2800      	cmp	r0, #0
   83016:	f040 83ba 	bne.w	8378e <_dtoa_r+0xa56>
   8301a:	4642      	mov	r2, r8
   8301c:	464b      	mov	r3, r9
   8301e:	4630      	mov	r0, r6
   83020:	4639      	mov	r1, r7
   83022:	f002 fb9b 	bl	8575c <__aeabi_ddiv>
   83026:	f002 fd1f 	bl	85a68 <__aeabi_d2iz>
   8302a:	4604      	mov	r4, r0
   8302c:	f002 fa06 	bl	8543c <__aeabi_i2d>
   83030:	4642      	mov	r2, r8
   83032:	464b      	mov	r3, r9
   83034:	f002 fa68 	bl	85508 <__aeabi_dmul>
   83038:	4602      	mov	r2, r0
   8303a:	460b      	mov	r3, r1
   8303c:	4630      	mov	r0, r6
   8303e:	4639      	mov	r1, r7
   83040:	f002 f8ae 	bl	851a0 <__aeabi_dsub>
   83044:	f104 0630 	add.w	r6, r4, #48	; 0x30
   83048:	f805 6b01 	strb.w	r6, [r5], #1
   8304c:	9e04      	ldr	r6, [sp, #16]
   8304e:	9f07      	ldr	r7, [sp, #28]
   83050:	1bae      	subs	r6, r5, r6
   83052:	42be      	cmp	r6, r7
   83054:	4602      	mov	r2, r0
   83056:	460b      	mov	r3, r1
   83058:	d1d2      	bne.n	83000 <_dtoa_r+0x2c8>
   8305a:	46a0      	mov	r8, r4
   8305c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83060:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83062:	4610      	mov	r0, r2
   83064:	4619      	mov	r1, r3
   83066:	f002 f89d 	bl	851a4 <__adddf3>
   8306a:	4606      	mov	r6, r0
   8306c:	460f      	mov	r7, r1
   8306e:	4602      	mov	r2, r0
   83070:	460b      	mov	r3, r1
   83072:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83076:	f002 fcb9 	bl	859ec <__aeabi_dcmplt>
   8307a:	b948      	cbnz	r0, 83090 <_dtoa_r+0x358>
   8307c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83080:	4632      	mov	r2, r6
   83082:	463b      	mov	r3, r7
   83084:	f002 fca8 	bl	859d8 <__aeabi_dcmpeq>
   83088:	b1a8      	cbz	r0, 830b6 <_dtoa_r+0x37e>
   8308a:	f018 0f01 	tst.w	r8, #1
   8308e:	d012      	beq.n	830b6 <_dtoa_r+0x37e>
   83090:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83094:	1e6b      	subs	r3, r5, #1
   83096:	9a04      	ldr	r2, [sp, #16]
   83098:	e004      	b.n	830a4 <_dtoa_r+0x36c>
   8309a:	429a      	cmp	r2, r3
   8309c:	f000 8402 	beq.w	838a4 <_dtoa_r+0xb6c>
   830a0:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   830a4:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   830a8:	f103 0501 	add.w	r5, r3, #1
   830ac:	d0f5      	beq.n	8309a <_dtoa_r+0x362>
   830ae:	f108 0801 	add.w	r8, r8, #1
   830b2:	f883 8000 	strb.w	r8, [r3]
   830b6:	4649      	mov	r1, r9
   830b8:	4620      	mov	r0, r4
   830ba:	f001 f90f 	bl	842dc <_Bfree>
   830be:	2200      	movs	r2, #0
   830c0:	9b02      	ldr	r3, [sp, #8]
   830c2:	702a      	strb	r2, [r5, #0]
   830c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   830c6:	3301      	adds	r3, #1
   830c8:	6013      	str	r3, [r2, #0]
   830ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   830cc:	2b00      	cmp	r3, #0
   830ce:	f000 839f 	beq.w	83810 <_dtoa_r+0xad8>
   830d2:	9804      	ldr	r0, [sp, #16]
   830d4:	601d      	str	r5, [r3, #0]
   830d6:	b01b      	add	sp, #108	; 0x6c
   830d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   830dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   830de:	2a00      	cmp	r2, #0
   830e0:	d03e      	beq.n	83160 <_dtoa_r+0x428>
   830e2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   830e4:	2a01      	cmp	r2, #1
   830e6:	f340 8311 	ble.w	8370c <_dtoa_r+0x9d4>
   830ea:	9b07      	ldr	r3, [sp, #28]
   830ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   830ee:	1e5f      	subs	r7, r3, #1
   830f0:	42ba      	cmp	r2, r7
   830f2:	f2c0 8390 	blt.w	83816 <_dtoa_r+0xade>
   830f6:	1bd7      	subs	r7, r2, r7
   830f8:	9b07      	ldr	r3, [sp, #28]
   830fa:	2b00      	cmp	r3, #0
   830fc:	f2c0 848c 	blt.w	83a18 <_dtoa_r+0xce0>
   83100:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83102:	9b07      	ldr	r3, [sp, #28]
   83104:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83106:	2101      	movs	r1, #1
   83108:	441a      	add	r2, r3
   8310a:	920a      	str	r2, [sp, #40]	; 0x28
   8310c:	9a08      	ldr	r2, [sp, #32]
   8310e:	4620      	mov	r0, r4
   83110:	441a      	add	r2, r3
   83112:	9208      	str	r2, [sp, #32]
   83114:	f001 f97e 	bl	84414 <__i2b>
   83118:	4606      	mov	r6, r0
   8311a:	e023      	b.n	83164 <_dtoa_r+0x42c>
   8311c:	2301      	movs	r3, #1
   8311e:	930e      	str	r3, [sp, #56]	; 0x38
   83120:	e6b5      	b.n	82e8e <_dtoa_r+0x156>
   83122:	2300      	movs	r3, #0
   83124:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83126:	930d      	str	r3, [sp, #52]	; 0x34
   83128:	9b02      	ldr	r3, [sp, #8]
   8312a:	1ad2      	subs	r2, r2, r3
   8312c:	425b      	negs	r3, r3
   8312e:	920a      	str	r2, [sp, #40]	; 0x28
   83130:	930c      	str	r3, [sp, #48]	; 0x30
   83132:	e6be      	b.n	82eb2 <_dtoa_r+0x17a>
   83134:	f1c7 0301 	rsb	r3, r7, #1
   83138:	930a      	str	r3, [sp, #40]	; 0x28
   8313a:	2300      	movs	r3, #0
   8313c:	9308      	str	r3, [sp, #32]
   8313e:	e6ad      	b.n	82e9c <_dtoa_r+0x164>
   83140:	9d02      	ldr	r5, [sp, #8]
   83142:	4628      	mov	r0, r5
   83144:	f002 f97a 	bl	8543c <__aeabi_i2d>
   83148:	4602      	mov	r2, r0
   8314a:	460b      	mov	r3, r1
   8314c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83150:	f002 fc42 	bl	859d8 <__aeabi_dcmpeq>
   83154:	2800      	cmp	r0, #0
   83156:	f47f ae86 	bne.w	82e66 <_dtoa_r+0x12e>
   8315a:	1e6b      	subs	r3, r5, #1
   8315c:	9302      	str	r3, [sp, #8]
   8315e:	e682      	b.n	82e66 <_dtoa_r+0x12e>
   83160:	ad0a      	add	r5, sp, #40	; 0x28
   83162:	cde0      	ldmia	r5, {r5, r6, r7}
   83164:	2d00      	cmp	r5, #0
   83166:	dd0c      	ble.n	83182 <_dtoa_r+0x44a>
   83168:	9908      	ldr	r1, [sp, #32]
   8316a:	2900      	cmp	r1, #0
   8316c:	460b      	mov	r3, r1
   8316e:	dd08      	ble.n	83182 <_dtoa_r+0x44a>
   83170:	42a9      	cmp	r1, r5
   83172:	bfa8      	it	ge
   83174:	462b      	movge	r3, r5
   83176:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83178:	1aed      	subs	r5, r5, r3
   8317a:	1ad2      	subs	r2, r2, r3
   8317c:	1acb      	subs	r3, r1, r3
   8317e:	920a      	str	r2, [sp, #40]	; 0x28
   83180:	9308      	str	r3, [sp, #32]
   83182:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83184:	b1d3      	cbz	r3, 831bc <_dtoa_r+0x484>
   83186:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83188:	2b00      	cmp	r3, #0
   8318a:	f000 82b8 	beq.w	836fe <_dtoa_r+0x9c6>
   8318e:	2f00      	cmp	r7, #0
   83190:	dd10      	ble.n	831b4 <_dtoa_r+0x47c>
   83192:	4631      	mov	r1, r6
   83194:	463a      	mov	r2, r7
   83196:	4620      	mov	r0, r4
   83198:	f001 f9d8 	bl	8454c <__pow5mult>
   8319c:	464a      	mov	r2, r9
   8319e:	4601      	mov	r1, r0
   831a0:	4606      	mov	r6, r0
   831a2:	4620      	mov	r0, r4
   831a4:	f001 f940 	bl	84428 <__multiply>
   831a8:	4603      	mov	r3, r0
   831aa:	4649      	mov	r1, r9
   831ac:	4620      	mov	r0, r4
   831ae:	4699      	mov	r9, r3
   831b0:	f001 f894 	bl	842dc <_Bfree>
   831b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   831b6:	1bda      	subs	r2, r3, r7
   831b8:	f040 82a2 	bne.w	83700 <_dtoa_r+0x9c8>
   831bc:	2101      	movs	r1, #1
   831be:	4620      	mov	r0, r4
   831c0:	f001 f928 	bl	84414 <__i2b>
   831c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   831c6:	4680      	mov	r8, r0
   831c8:	2b00      	cmp	r3, #0
   831ca:	dd1f      	ble.n	8320c <_dtoa_r+0x4d4>
   831cc:	4601      	mov	r1, r0
   831ce:	461a      	mov	r2, r3
   831d0:	4620      	mov	r0, r4
   831d2:	f001 f9bb 	bl	8454c <__pow5mult>
   831d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   831d8:	4680      	mov	r8, r0
   831da:	2b01      	cmp	r3, #1
   831dc:	f340 8255 	ble.w	8368a <_dtoa_r+0x952>
   831e0:	2300      	movs	r3, #0
   831e2:	930c      	str	r3, [sp, #48]	; 0x30
   831e4:	f8d8 3010 	ldr.w	r3, [r8, #16]
   831e8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   831ec:	6918      	ldr	r0, [r3, #16]
   831ee:	f001 f8c1 	bl	84374 <__hi0bits>
   831f2:	f1c0 0020 	rsb	r0, r0, #32
   831f6:	e013      	b.n	83220 <_dtoa_r+0x4e8>
   831f8:	f1c3 0520 	rsb	r5, r3, #32
   831fc:	fa0a f005 	lsl.w	r0, sl, r5
   83200:	e67b      	b.n	82efa <_dtoa_r+0x1c2>
   83202:	900e      	str	r0, [sp, #56]	; 0x38
   83204:	e643      	b.n	82e8e <_dtoa_r+0x156>
   83206:	bf00      	nop
   83208:	40240000 	.word	0x40240000
   8320c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8320e:	2b01      	cmp	r3, #1
   83210:	f340 8285 	ble.w	8371e <_dtoa_r+0x9e6>
   83214:	2300      	movs	r3, #0
   83216:	930c      	str	r3, [sp, #48]	; 0x30
   83218:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8321a:	2001      	movs	r0, #1
   8321c:	2b00      	cmp	r3, #0
   8321e:	d1e1      	bne.n	831e4 <_dtoa_r+0x4ac>
   83220:	9a08      	ldr	r2, [sp, #32]
   83222:	4410      	add	r0, r2
   83224:	f010 001f 	ands.w	r0, r0, #31
   83228:	f000 80a1 	beq.w	8336e <_dtoa_r+0x636>
   8322c:	f1c0 0320 	rsb	r3, r0, #32
   83230:	2b04      	cmp	r3, #4
   83232:	f340 8486 	ble.w	83b42 <_dtoa_r+0xe0a>
   83236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83238:	f1c0 001c 	rsb	r0, r0, #28
   8323c:	4403      	add	r3, r0
   8323e:	930a      	str	r3, [sp, #40]	; 0x28
   83240:	4613      	mov	r3, r2
   83242:	4403      	add	r3, r0
   83244:	4405      	add	r5, r0
   83246:	9308      	str	r3, [sp, #32]
   83248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8324a:	2b00      	cmp	r3, #0
   8324c:	dd05      	ble.n	8325a <_dtoa_r+0x522>
   8324e:	4649      	mov	r1, r9
   83250:	461a      	mov	r2, r3
   83252:	4620      	mov	r0, r4
   83254:	f001 f9ca 	bl	845ec <__lshift>
   83258:	4681      	mov	r9, r0
   8325a:	9b08      	ldr	r3, [sp, #32]
   8325c:	2b00      	cmp	r3, #0
   8325e:	dd05      	ble.n	8326c <_dtoa_r+0x534>
   83260:	4641      	mov	r1, r8
   83262:	461a      	mov	r2, r3
   83264:	4620      	mov	r0, r4
   83266:	f001 f9c1 	bl	845ec <__lshift>
   8326a:	4680      	mov	r8, r0
   8326c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8326e:	2b00      	cmp	r3, #0
   83270:	f040 8086 	bne.w	83380 <_dtoa_r+0x648>
   83274:	9b07      	ldr	r3, [sp, #28]
   83276:	2b00      	cmp	r3, #0
   83278:	f340 8264 	ble.w	83744 <_dtoa_r+0xa0c>
   8327c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8327e:	2b00      	cmp	r3, #0
   83280:	f000 8098 	beq.w	833b4 <_dtoa_r+0x67c>
   83284:	2d00      	cmp	r5, #0
   83286:	dd05      	ble.n	83294 <_dtoa_r+0x55c>
   83288:	4631      	mov	r1, r6
   8328a:	462a      	mov	r2, r5
   8328c:	4620      	mov	r0, r4
   8328e:	f001 f9ad 	bl	845ec <__lshift>
   83292:	4606      	mov	r6, r0
   83294:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83296:	2b00      	cmp	r3, #0
   83298:	f040 8336 	bne.w	83908 <_dtoa_r+0xbd0>
   8329c:	9608      	str	r6, [sp, #32]
   8329e:	9b07      	ldr	r3, [sp, #28]
   832a0:	9a04      	ldr	r2, [sp, #16]
   832a2:	3b01      	subs	r3, #1
   832a4:	18d3      	adds	r3, r2, r3
   832a6:	930b      	str	r3, [sp, #44]	; 0x2c
   832a8:	4617      	mov	r7, r2
   832aa:	f00a 0301 	and.w	r3, sl, #1
   832ae:	46c2      	mov	sl, r8
   832b0:	f8dd b020 	ldr.w	fp, [sp, #32]
   832b4:	930c      	str	r3, [sp, #48]	; 0x30
   832b6:	4651      	mov	r1, sl
   832b8:	4648      	mov	r0, r9
   832ba:	f7ff fca7 	bl	82c0c <quorem>
   832be:	4631      	mov	r1, r6
   832c0:	4605      	mov	r5, r0
   832c2:	4648      	mov	r0, r9
   832c4:	f001 f9e2 	bl	8468c <__mcmp>
   832c8:	465a      	mov	r2, fp
   832ca:	9007      	str	r0, [sp, #28]
   832cc:	4651      	mov	r1, sl
   832ce:	4620      	mov	r0, r4
   832d0:	f001 f9f8 	bl	846c4 <__mdiff>
   832d4:	68c2      	ldr	r2, [r0, #12]
   832d6:	4680      	mov	r8, r0
   832d8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   832dc:	2a00      	cmp	r2, #0
   832de:	f040 8229 	bne.w	83734 <_dtoa_r+0x9fc>
   832e2:	4601      	mov	r1, r0
   832e4:	4648      	mov	r0, r9
   832e6:	930a      	str	r3, [sp, #40]	; 0x28
   832e8:	f001 f9d0 	bl	8468c <__mcmp>
   832ec:	4641      	mov	r1, r8
   832ee:	9008      	str	r0, [sp, #32]
   832f0:	4620      	mov	r0, r4
   832f2:	f000 fff3 	bl	842dc <_Bfree>
   832f6:	9a08      	ldr	r2, [sp, #32]
   832f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   832fa:	b932      	cbnz	r2, 8330a <_dtoa_r+0x5d2>
   832fc:	9924      	ldr	r1, [sp, #144]	; 0x90
   832fe:	b921      	cbnz	r1, 8330a <_dtoa_r+0x5d2>
   83300:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83302:	2a00      	cmp	r2, #0
   83304:	f000 83ee 	beq.w	83ae4 <_dtoa_r+0xdac>
   83308:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8330a:	9907      	ldr	r1, [sp, #28]
   8330c:	2900      	cmp	r1, #0
   8330e:	f2c0 829f 	blt.w	83850 <_dtoa_r+0xb18>
   83312:	d105      	bne.n	83320 <_dtoa_r+0x5e8>
   83314:	9924      	ldr	r1, [sp, #144]	; 0x90
   83316:	b919      	cbnz	r1, 83320 <_dtoa_r+0x5e8>
   83318:	990c      	ldr	r1, [sp, #48]	; 0x30
   8331a:	2900      	cmp	r1, #0
   8331c:	f000 8298 	beq.w	83850 <_dtoa_r+0xb18>
   83320:	2a00      	cmp	r2, #0
   83322:	f300 8305 	bgt.w	83930 <_dtoa_r+0xbf8>
   83326:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83328:	f107 0801 	add.w	r8, r7, #1
   8332c:	4297      	cmp	r7, r2
   8332e:	703b      	strb	r3, [r7, #0]
   83330:	4645      	mov	r5, r8
   83332:	f000 830b 	beq.w	8394c <_dtoa_r+0xc14>
   83336:	4649      	mov	r1, r9
   83338:	2300      	movs	r3, #0
   8333a:	220a      	movs	r2, #10
   8333c:	4620      	mov	r0, r4
   8333e:	f000 ffd7 	bl	842f0 <__multadd>
   83342:	455e      	cmp	r6, fp
   83344:	4681      	mov	r9, r0
   83346:	4631      	mov	r1, r6
   83348:	f04f 0300 	mov.w	r3, #0
   8334c:	f04f 020a 	mov.w	r2, #10
   83350:	4620      	mov	r0, r4
   83352:	f000 81e9 	beq.w	83728 <_dtoa_r+0x9f0>
   83356:	f000 ffcb 	bl	842f0 <__multadd>
   8335a:	4659      	mov	r1, fp
   8335c:	4606      	mov	r6, r0
   8335e:	2300      	movs	r3, #0
   83360:	220a      	movs	r2, #10
   83362:	4620      	mov	r0, r4
   83364:	f000 ffc4 	bl	842f0 <__multadd>
   83368:	4647      	mov	r7, r8
   8336a:	4683      	mov	fp, r0
   8336c:	e7a3      	b.n	832b6 <_dtoa_r+0x57e>
   8336e:	201c      	movs	r0, #28
   83370:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83372:	4405      	add	r5, r0
   83374:	4403      	add	r3, r0
   83376:	930a      	str	r3, [sp, #40]	; 0x28
   83378:	9b08      	ldr	r3, [sp, #32]
   8337a:	4403      	add	r3, r0
   8337c:	9308      	str	r3, [sp, #32]
   8337e:	e763      	b.n	83248 <_dtoa_r+0x510>
   83380:	4641      	mov	r1, r8
   83382:	4648      	mov	r0, r9
   83384:	f001 f982 	bl	8468c <__mcmp>
   83388:	2800      	cmp	r0, #0
   8338a:	f6bf af73 	bge.w	83274 <_dtoa_r+0x53c>
   8338e:	9f02      	ldr	r7, [sp, #8]
   83390:	4649      	mov	r1, r9
   83392:	2300      	movs	r3, #0
   83394:	220a      	movs	r2, #10
   83396:	4620      	mov	r0, r4
   83398:	3f01      	subs	r7, #1
   8339a:	9702      	str	r7, [sp, #8]
   8339c:	f000 ffa8 	bl	842f0 <__multadd>
   833a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   833a2:	4681      	mov	r9, r0
   833a4:	2b00      	cmp	r3, #0
   833a6:	f040 83b5 	bne.w	83b14 <_dtoa_r+0xddc>
   833aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   833ac:	2b00      	cmp	r3, #0
   833ae:	f340 83be 	ble.w	83b2e <_dtoa_r+0xdf6>
   833b2:	9307      	str	r3, [sp, #28]
   833b4:	f8dd a010 	ldr.w	sl, [sp, #16]
   833b8:	9f07      	ldr	r7, [sp, #28]
   833ba:	4655      	mov	r5, sl
   833bc:	e006      	b.n	833cc <_dtoa_r+0x694>
   833be:	4649      	mov	r1, r9
   833c0:	2300      	movs	r3, #0
   833c2:	220a      	movs	r2, #10
   833c4:	4620      	mov	r0, r4
   833c6:	f000 ff93 	bl	842f0 <__multadd>
   833ca:	4681      	mov	r9, r0
   833cc:	4641      	mov	r1, r8
   833ce:	4648      	mov	r0, r9
   833d0:	f7ff fc1c 	bl	82c0c <quorem>
   833d4:	3030      	adds	r0, #48	; 0x30
   833d6:	f805 0b01 	strb.w	r0, [r5], #1
   833da:	eba5 030a 	sub.w	r3, r5, sl
   833de:	42bb      	cmp	r3, r7
   833e0:	dbed      	blt.n	833be <_dtoa_r+0x686>
   833e2:	9b04      	ldr	r3, [sp, #16]
   833e4:	9a07      	ldr	r2, [sp, #28]
   833e6:	4682      	mov	sl, r0
   833e8:	2a01      	cmp	r2, #1
   833ea:	bfac      	ite	ge
   833ec:	189b      	addge	r3, r3, r2
   833ee:	3301      	addlt	r3, #1
   833f0:	f04f 0b00 	mov.w	fp, #0
   833f4:	461d      	mov	r5, r3
   833f6:	4649      	mov	r1, r9
   833f8:	2201      	movs	r2, #1
   833fa:	4620      	mov	r0, r4
   833fc:	f001 f8f6 	bl	845ec <__lshift>
   83400:	4641      	mov	r1, r8
   83402:	4681      	mov	r9, r0
   83404:	f001 f942 	bl	8468c <__mcmp>
   83408:	2800      	cmp	r0, #0
   8340a:	f340 823f 	ble.w	8388c <_dtoa_r+0xb54>
   8340e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   83412:	1e6b      	subs	r3, r5, #1
   83414:	9904      	ldr	r1, [sp, #16]
   83416:	e004      	b.n	83422 <_dtoa_r+0x6ea>
   83418:	428b      	cmp	r3, r1
   8341a:	f000 81ae 	beq.w	8377a <_dtoa_r+0xa42>
   8341e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   83422:	2a39      	cmp	r2, #57	; 0x39
   83424:	f103 0501 	add.w	r5, r3, #1
   83428:	d0f6      	beq.n	83418 <_dtoa_r+0x6e0>
   8342a:	3201      	adds	r2, #1
   8342c:	701a      	strb	r2, [r3, #0]
   8342e:	4641      	mov	r1, r8
   83430:	4620      	mov	r0, r4
   83432:	f000 ff53 	bl	842dc <_Bfree>
   83436:	2e00      	cmp	r6, #0
   83438:	f43f ae3d 	beq.w	830b6 <_dtoa_r+0x37e>
   8343c:	f1bb 0f00 	cmp.w	fp, #0
   83440:	d005      	beq.n	8344e <_dtoa_r+0x716>
   83442:	45b3      	cmp	fp, r6
   83444:	d003      	beq.n	8344e <_dtoa_r+0x716>
   83446:	4659      	mov	r1, fp
   83448:	4620      	mov	r0, r4
   8344a:	f000 ff47 	bl	842dc <_Bfree>
   8344e:	4631      	mov	r1, r6
   83450:	4620      	mov	r0, r4
   83452:	f000 ff43 	bl	842dc <_Bfree>
   83456:	e62e      	b.n	830b6 <_dtoa_r+0x37e>
   83458:	2300      	movs	r3, #0
   8345a:	930b      	str	r3, [sp, #44]	; 0x2c
   8345c:	9b02      	ldr	r3, [sp, #8]
   8345e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83460:	4413      	add	r3, r2
   83462:	930f      	str	r3, [sp, #60]	; 0x3c
   83464:	3301      	adds	r3, #1
   83466:	2b01      	cmp	r3, #1
   83468:	461f      	mov	r7, r3
   8346a:	461e      	mov	r6, r3
   8346c:	bfb8      	it	lt
   8346e:	2701      	movlt	r7, #1
   83470:	9307      	str	r3, [sp, #28]
   83472:	2100      	movs	r1, #0
   83474:	2f17      	cmp	r7, #23
   83476:	6461      	str	r1, [r4, #68]	; 0x44
   83478:	d90a      	bls.n	83490 <_dtoa_r+0x758>
   8347a:	2201      	movs	r2, #1
   8347c:	2304      	movs	r3, #4
   8347e:	005b      	lsls	r3, r3, #1
   83480:	f103 0014 	add.w	r0, r3, #20
   83484:	4287      	cmp	r7, r0
   83486:	4611      	mov	r1, r2
   83488:	f102 0201 	add.w	r2, r2, #1
   8348c:	d2f7      	bcs.n	8347e <_dtoa_r+0x746>
   8348e:	6461      	str	r1, [r4, #68]	; 0x44
   83490:	4620      	mov	r0, r4
   83492:	f000 fefd 	bl	84290 <_Balloc>
   83496:	2e0e      	cmp	r6, #14
   83498:	9004      	str	r0, [sp, #16]
   8349a:	6420      	str	r0, [r4, #64]	; 0x40
   8349c:	f63f ad47 	bhi.w	82f2e <_dtoa_r+0x1f6>
   834a0:	2d00      	cmp	r5, #0
   834a2:	f43f ad44 	beq.w	82f2e <_dtoa_r+0x1f6>
   834a6:	9902      	ldr	r1, [sp, #8]
   834a8:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   834ac:	2900      	cmp	r1, #0
   834ae:	f340 8203 	ble.w	838b8 <_dtoa_r+0xb80>
   834b2:	4bb9      	ldr	r3, [pc, #740]	; (83798 <_dtoa_r+0xa60>)
   834b4:	f001 020f 	and.w	r2, r1, #15
   834b8:	110d      	asrs	r5, r1, #4
   834ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   834be:	06e9      	lsls	r1, r5, #27
   834c0:	e9d3 6700 	ldrd	r6, r7, [r3]
   834c4:	f140 81af 	bpl.w	83826 <_dtoa_r+0xaee>
   834c8:	4bb4      	ldr	r3, [pc, #720]	; (8379c <_dtoa_r+0xa64>)
   834ca:	4650      	mov	r0, sl
   834cc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   834d0:	4659      	mov	r1, fp
   834d2:	f002 f943 	bl	8575c <__aeabi_ddiv>
   834d6:	f04f 0a03 	mov.w	sl, #3
   834da:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   834de:	f005 050f 	and.w	r5, r5, #15
   834e2:	b18d      	cbz	r5, 83508 <_dtoa_r+0x7d0>
   834e4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8379c <_dtoa_r+0xa64>
   834e8:	07ea      	lsls	r2, r5, #31
   834ea:	d509      	bpl.n	83500 <_dtoa_r+0x7c8>
   834ec:	e9d8 2300 	ldrd	r2, r3, [r8]
   834f0:	4630      	mov	r0, r6
   834f2:	4639      	mov	r1, r7
   834f4:	f002 f808 	bl	85508 <__aeabi_dmul>
   834f8:	4606      	mov	r6, r0
   834fa:	460f      	mov	r7, r1
   834fc:	f10a 0a01 	add.w	sl, sl, #1
   83500:	106d      	asrs	r5, r5, #1
   83502:	f108 0808 	add.w	r8, r8, #8
   83506:	d1ef      	bne.n	834e8 <_dtoa_r+0x7b0>
   83508:	463b      	mov	r3, r7
   8350a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8350e:	4632      	mov	r2, r6
   83510:	f002 f924 	bl	8575c <__aeabi_ddiv>
   83514:	4607      	mov	r7, r0
   83516:	4688      	mov	r8, r1
   83518:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8351a:	b143      	cbz	r3, 8352e <_dtoa_r+0x7f6>
   8351c:	2200      	movs	r2, #0
   8351e:	4ba0      	ldr	r3, [pc, #640]	; (837a0 <_dtoa_r+0xa68>)
   83520:	4638      	mov	r0, r7
   83522:	4641      	mov	r1, r8
   83524:	f002 fa62 	bl	859ec <__aeabi_dcmplt>
   83528:	2800      	cmp	r0, #0
   8352a:	f040 8287 	bne.w	83a3c <_dtoa_r+0xd04>
   8352e:	4650      	mov	r0, sl
   83530:	f001 ff84 	bl	8543c <__aeabi_i2d>
   83534:	463a      	mov	r2, r7
   83536:	4643      	mov	r3, r8
   83538:	f001 ffe6 	bl	85508 <__aeabi_dmul>
   8353c:	4b99      	ldr	r3, [pc, #612]	; (837a4 <_dtoa_r+0xa6c>)
   8353e:	2200      	movs	r2, #0
   83540:	f001 fe30 	bl	851a4 <__adddf3>
   83544:	9b07      	ldr	r3, [sp, #28]
   83546:	4605      	mov	r5, r0
   83548:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8354c:	2b00      	cmp	r3, #0
   8354e:	f000 813f 	beq.w	837d0 <_dtoa_r+0xa98>
   83552:	9b02      	ldr	r3, [sp, #8]
   83554:	9315      	str	r3, [sp, #84]	; 0x54
   83556:	9b07      	ldr	r3, [sp, #28]
   83558:	9312      	str	r3, [sp, #72]	; 0x48
   8355a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8355c:	2b00      	cmp	r3, #0
   8355e:	f000 81fb 	beq.w	83958 <_dtoa_r+0xc20>
   83562:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83564:	4b8c      	ldr	r3, [pc, #560]	; (83798 <_dtoa_r+0xa60>)
   83566:	2000      	movs	r0, #0
   83568:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8356c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83570:	498d      	ldr	r1, [pc, #564]	; (837a8 <_dtoa_r+0xa70>)
   83572:	f002 f8f3 	bl	8575c <__aeabi_ddiv>
   83576:	462a      	mov	r2, r5
   83578:	4633      	mov	r3, r6
   8357a:	f001 fe11 	bl	851a0 <__aeabi_dsub>
   8357e:	4682      	mov	sl, r0
   83580:	468b      	mov	fp, r1
   83582:	4638      	mov	r0, r7
   83584:	4641      	mov	r1, r8
   83586:	f002 fa6f 	bl	85a68 <__aeabi_d2iz>
   8358a:	4605      	mov	r5, r0
   8358c:	f001 ff56 	bl	8543c <__aeabi_i2d>
   83590:	4602      	mov	r2, r0
   83592:	460b      	mov	r3, r1
   83594:	4638      	mov	r0, r7
   83596:	4641      	mov	r1, r8
   83598:	f001 fe02 	bl	851a0 <__aeabi_dsub>
   8359c:	3530      	adds	r5, #48	; 0x30
   8359e:	fa5f f885 	uxtb.w	r8, r5
   835a2:	9d04      	ldr	r5, [sp, #16]
   835a4:	4606      	mov	r6, r0
   835a6:	460f      	mov	r7, r1
   835a8:	f885 8000 	strb.w	r8, [r5]
   835ac:	4602      	mov	r2, r0
   835ae:	460b      	mov	r3, r1
   835b0:	4650      	mov	r0, sl
   835b2:	4659      	mov	r1, fp
   835b4:	3501      	adds	r5, #1
   835b6:	f002 fa37 	bl	85a28 <__aeabi_dcmpgt>
   835ba:	2800      	cmp	r0, #0
   835bc:	d154      	bne.n	83668 <_dtoa_r+0x930>
   835be:	4632      	mov	r2, r6
   835c0:	463b      	mov	r3, r7
   835c2:	2000      	movs	r0, #0
   835c4:	4976      	ldr	r1, [pc, #472]	; (837a0 <_dtoa_r+0xa68>)
   835c6:	f001 fdeb 	bl	851a0 <__aeabi_dsub>
   835ca:	4602      	mov	r2, r0
   835cc:	460b      	mov	r3, r1
   835ce:	4650      	mov	r0, sl
   835d0:	4659      	mov	r1, fp
   835d2:	f002 fa29 	bl	85a28 <__aeabi_dcmpgt>
   835d6:	2800      	cmp	r0, #0
   835d8:	f040 8270 	bne.w	83abc <_dtoa_r+0xd84>
   835dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
   835de:	2a01      	cmp	r2, #1
   835e0:	f000 8112 	beq.w	83808 <_dtoa_r+0xad0>
   835e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   835e6:	9a04      	ldr	r2, [sp, #16]
   835e8:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   835ec:	4413      	add	r3, r2
   835ee:	4699      	mov	r9, r3
   835f0:	e00f      	b.n	83612 <_dtoa_r+0x8da>
   835f2:	4632      	mov	r2, r6
   835f4:	463b      	mov	r3, r7
   835f6:	2000      	movs	r0, #0
   835f8:	4969      	ldr	r1, [pc, #420]	; (837a0 <_dtoa_r+0xa68>)
   835fa:	f001 fdd1 	bl	851a0 <__aeabi_dsub>
   835fe:	4652      	mov	r2, sl
   83600:	465b      	mov	r3, fp
   83602:	f002 f9f3 	bl	859ec <__aeabi_dcmplt>
   83606:	2800      	cmp	r0, #0
   83608:	f040 8256 	bne.w	83ab8 <_dtoa_r+0xd80>
   8360c:	454d      	cmp	r5, r9
   8360e:	f000 80f9 	beq.w	83804 <_dtoa_r+0xacc>
   83612:	4650      	mov	r0, sl
   83614:	4659      	mov	r1, fp
   83616:	2200      	movs	r2, #0
   83618:	4b64      	ldr	r3, [pc, #400]	; (837ac <_dtoa_r+0xa74>)
   8361a:	f001 ff75 	bl	85508 <__aeabi_dmul>
   8361e:	2200      	movs	r2, #0
   83620:	4b62      	ldr	r3, [pc, #392]	; (837ac <_dtoa_r+0xa74>)
   83622:	4682      	mov	sl, r0
   83624:	468b      	mov	fp, r1
   83626:	4630      	mov	r0, r6
   83628:	4639      	mov	r1, r7
   8362a:	f001 ff6d 	bl	85508 <__aeabi_dmul>
   8362e:	460f      	mov	r7, r1
   83630:	4606      	mov	r6, r0
   83632:	f002 fa19 	bl	85a68 <__aeabi_d2iz>
   83636:	4680      	mov	r8, r0
   83638:	f001 ff00 	bl	8543c <__aeabi_i2d>
   8363c:	4602      	mov	r2, r0
   8363e:	460b      	mov	r3, r1
   83640:	4630      	mov	r0, r6
   83642:	4639      	mov	r1, r7
   83644:	f001 fdac 	bl	851a0 <__aeabi_dsub>
   83648:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8364c:	fa5f f888 	uxtb.w	r8, r8
   83650:	f805 8b01 	strb.w	r8, [r5], #1
   83654:	4652      	mov	r2, sl
   83656:	465b      	mov	r3, fp
   83658:	4606      	mov	r6, r0
   8365a:	460f      	mov	r7, r1
   8365c:	f002 f9c6 	bl	859ec <__aeabi_dcmplt>
   83660:	2800      	cmp	r0, #0
   83662:	d0c6      	beq.n	835f2 <_dtoa_r+0x8ba>
   83664:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83668:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8366a:	9302      	str	r3, [sp, #8]
   8366c:	e523      	b.n	830b6 <_dtoa_r+0x37e>
   8366e:	2300      	movs	r3, #0
   83670:	930b      	str	r3, [sp, #44]	; 0x2c
   83672:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83674:	2b00      	cmp	r3, #0
   83676:	f340 80dd 	ble.w	83834 <_dtoa_r+0xafc>
   8367a:	461f      	mov	r7, r3
   8367c:	461e      	mov	r6, r3
   8367e:	930f      	str	r3, [sp, #60]	; 0x3c
   83680:	9307      	str	r3, [sp, #28]
   83682:	e6f6      	b.n	83472 <_dtoa_r+0x73a>
   83684:	2301      	movs	r3, #1
   83686:	930b      	str	r3, [sp, #44]	; 0x2c
   83688:	e7f3      	b.n	83672 <_dtoa_r+0x93a>
   8368a:	f1ba 0f00 	cmp.w	sl, #0
   8368e:	f47f ada7 	bne.w	831e0 <_dtoa_r+0x4a8>
   83692:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83696:	2b00      	cmp	r3, #0
   83698:	f47f adbc 	bne.w	83214 <_dtoa_r+0x4dc>
   8369c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   836a0:	0d3f      	lsrs	r7, r7, #20
   836a2:	053f      	lsls	r7, r7, #20
   836a4:	2f00      	cmp	r7, #0
   836a6:	f000 820d 	beq.w	83ac4 <_dtoa_r+0xd8c>
   836aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   836ac:	3301      	adds	r3, #1
   836ae:	930a      	str	r3, [sp, #40]	; 0x28
   836b0:	9b08      	ldr	r3, [sp, #32]
   836b2:	3301      	adds	r3, #1
   836b4:	9308      	str	r3, [sp, #32]
   836b6:	2301      	movs	r3, #1
   836b8:	930c      	str	r3, [sp, #48]	; 0x30
   836ba:	e5ad      	b.n	83218 <_dtoa_r+0x4e0>
   836bc:	9b07      	ldr	r3, [sp, #28]
   836be:	2b00      	cmp	r3, #0
   836c0:	f73f ac48 	bgt.w	82f54 <_dtoa_r+0x21c>
   836c4:	f040 8222 	bne.w	83b0c <_dtoa_r+0xdd4>
   836c8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   836cc:	2200      	movs	r2, #0
   836ce:	4b38      	ldr	r3, [pc, #224]	; (837b0 <_dtoa_r+0xa78>)
   836d0:	f001 ff1a 	bl	85508 <__aeabi_dmul>
   836d4:	4652      	mov	r2, sl
   836d6:	465b      	mov	r3, fp
   836d8:	f002 f99c 	bl	85a14 <__aeabi_dcmpge>
   836dc:	f8dd 801c 	ldr.w	r8, [sp, #28]
   836e0:	4646      	mov	r6, r8
   836e2:	2800      	cmp	r0, #0
   836e4:	d041      	beq.n	8376a <_dtoa_r+0xa32>
   836e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   836e8:	9d04      	ldr	r5, [sp, #16]
   836ea:	43db      	mvns	r3, r3
   836ec:	9302      	str	r3, [sp, #8]
   836ee:	4641      	mov	r1, r8
   836f0:	4620      	mov	r0, r4
   836f2:	f000 fdf3 	bl	842dc <_Bfree>
   836f6:	2e00      	cmp	r6, #0
   836f8:	f43f acdd 	beq.w	830b6 <_dtoa_r+0x37e>
   836fc:	e6a7      	b.n	8344e <_dtoa_r+0x716>
   836fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83700:	4649      	mov	r1, r9
   83702:	4620      	mov	r0, r4
   83704:	f000 ff22 	bl	8454c <__pow5mult>
   83708:	4681      	mov	r9, r0
   8370a:	e557      	b.n	831bc <_dtoa_r+0x484>
   8370c:	9a14      	ldr	r2, [sp, #80]	; 0x50
   8370e:	2a00      	cmp	r2, #0
   83710:	f000 8188 	beq.w	83a24 <_dtoa_r+0xcec>
   83714:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83718:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8371a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8371c:	e4f2      	b.n	83104 <_dtoa_r+0x3cc>
   8371e:	f1ba 0f00 	cmp.w	sl, #0
   83722:	f47f ad77 	bne.w	83214 <_dtoa_r+0x4dc>
   83726:	e7b4      	b.n	83692 <_dtoa_r+0x95a>
   83728:	f000 fde2 	bl	842f0 <__multadd>
   8372c:	4647      	mov	r7, r8
   8372e:	4606      	mov	r6, r0
   83730:	4683      	mov	fp, r0
   83732:	e5c0      	b.n	832b6 <_dtoa_r+0x57e>
   83734:	4601      	mov	r1, r0
   83736:	4620      	mov	r0, r4
   83738:	9308      	str	r3, [sp, #32]
   8373a:	f000 fdcf 	bl	842dc <_Bfree>
   8373e:	2201      	movs	r2, #1
   83740:	9b08      	ldr	r3, [sp, #32]
   83742:	e5e2      	b.n	8330a <_dtoa_r+0x5d2>
   83744:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83746:	2b02      	cmp	r3, #2
   83748:	f77f ad98 	ble.w	8327c <_dtoa_r+0x544>
   8374c:	9b07      	ldr	r3, [sp, #28]
   8374e:	2b00      	cmp	r3, #0
   83750:	d1c9      	bne.n	836e6 <_dtoa_r+0x9ae>
   83752:	4641      	mov	r1, r8
   83754:	2205      	movs	r2, #5
   83756:	4620      	mov	r0, r4
   83758:	f000 fdca 	bl	842f0 <__multadd>
   8375c:	4601      	mov	r1, r0
   8375e:	4680      	mov	r8, r0
   83760:	4648      	mov	r0, r9
   83762:	f000 ff93 	bl	8468c <__mcmp>
   83766:	2800      	cmp	r0, #0
   83768:	ddbd      	ble.n	836e6 <_dtoa_r+0x9ae>
   8376a:	2331      	movs	r3, #49	; 0x31
   8376c:	9a02      	ldr	r2, [sp, #8]
   8376e:	9904      	ldr	r1, [sp, #16]
   83770:	3201      	adds	r2, #1
   83772:	9202      	str	r2, [sp, #8]
   83774:	700b      	strb	r3, [r1, #0]
   83776:	1c4d      	adds	r5, r1, #1
   83778:	e7b9      	b.n	836ee <_dtoa_r+0x9b6>
   8377a:	2331      	movs	r3, #49	; 0x31
   8377c:	9a02      	ldr	r2, [sp, #8]
   8377e:	3201      	adds	r2, #1
   83780:	9202      	str	r2, [sp, #8]
   83782:	9a04      	ldr	r2, [sp, #16]
   83784:	7013      	strb	r3, [r2, #0]
   83786:	e652      	b.n	8342e <_dtoa_r+0x6f6>
   83788:	2301      	movs	r3, #1
   8378a:	930b      	str	r3, [sp, #44]	; 0x2c
   8378c:	e666      	b.n	8345c <_dtoa_r+0x724>
   8378e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83792:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83794:	e48f      	b.n	830b6 <_dtoa_r+0x37e>
   83796:	bf00      	nop
   83798:	00085f28 	.word	0x00085f28
   8379c:	00085f00 	.word	0x00085f00
   837a0:	3ff00000 	.word	0x3ff00000
   837a4:	401c0000 	.word	0x401c0000
   837a8:	3fe00000 	.word	0x3fe00000
   837ac:	40240000 	.word	0x40240000
   837b0:	40140000 	.word	0x40140000
   837b4:	4650      	mov	r0, sl
   837b6:	f001 fe41 	bl	8543c <__aeabi_i2d>
   837ba:	463a      	mov	r2, r7
   837bc:	4643      	mov	r3, r8
   837be:	f001 fea3 	bl	85508 <__aeabi_dmul>
   837c2:	2200      	movs	r2, #0
   837c4:	4bc1      	ldr	r3, [pc, #772]	; (83acc <_dtoa_r+0xd94>)
   837c6:	f001 fced 	bl	851a4 <__adddf3>
   837ca:	4605      	mov	r5, r0
   837cc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   837d0:	4641      	mov	r1, r8
   837d2:	2200      	movs	r2, #0
   837d4:	4bbe      	ldr	r3, [pc, #760]	; (83ad0 <_dtoa_r+0xd98>)
   837d6:	4638      	mov	r0, r7
   837d8:	f001 fce2 	bl	851a0 <__aeabi_dsub>
   837dc:	462a      	mov	r2, r5
   837de:	4633      	mov	r3, r6
   837e0:	4682      	mov	sl, r0
   837e2:	468b      	mov	fp, r1
   837e4:	f002 f920 	bl	85a28 <__aeabi_dcmpgt>
   837e8:	4680      	mov	r8, r0
   837ea:	2800      	cmp	r0, #0
   837ec:	f040 8110 	bne.w	83a10 <_dtoa_r+0xcd8>
   837f0:	462a      	mov	r2, r5
   837f2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   837f6:	4650      	mov	r0, sl
   837f8:	4659      	mov	r1, fp
   837fa:	f002 f8f7 	bl	859ec <__aeabi_dcmplt>
   837fe:	b118      	cbz	r0, 83808 <_dtoa_r+0xad0>
   83800:	4646      	mov	r6, r8
   83802:	e770      	b.n	836e6 <_dtoa_r+0x9ae>
   83804:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83808:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   8380c:	f7ff bb8f 	b.w	82f2e <_dtoa_r+0x1f6>
   83810:	9804      	ldr	r0, [sp, #16]
   83812:	f7ff bac0 	b.w	82d96 <_dtoa_r+0x5e>
   83816:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83818:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   8381a:	1afb      	subs	r3, r7, r3
   8381c:	441a      	add	r2, r3
   8381e:	970c      	str	r7, [sp, #48]	; 0x30
   83820:	920d      	str	r2, [sp, #52]	; 0x34
   83822:	2700      	movs	r7, #0
   83824:	e468      	b.n	830f8 <_dtoa_r+0x3c0>
   83826:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   8382a:	f04f 0a02 	mov.w	sl, #2
   8382e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   83832:	e656      	b.n	834e2 <_dtoa_r+0x7aa>
   83834:	2100      	movs	r1, #0
   83836:	2301      	movs	r3, #1
   83838:	4620      	mov	r0, r4
   8383a:	6461      	str	r1, [r4, #68]	; 0x44
   8383c:	9325      	str	r3, [sp, #148]	; 0x94
   8383e:	f000 fd27 	bl	84290 <_Balloc>
   83842:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83844:	9004      	str	r0, [sp, #16]
   83846:	9307      	str	r3, [sp, #28]
   83848:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8384a:	6420      	str	r0, [r4, #64]	; 0x40
   8384c:	930f      	str	r3, [sp, #60]	; 0x3c
   8384e:	e627      	b.n	834a0 <_dtoa_r+0x768>
   83850:	2a00      	cmp	r2, #0
   83852:	46d0      	mov	r8, sl
   83854:	f8cd b020 	str.w	fp, [sp, #32]
   83858:	469a      	mov	sl, r3
   8385a:	dd11      	ble.n	83880 <_dtoa_r+0xb48>
   8385c:	4649      	mov	r1, r9
   8385e:	2201      	movs	r2, #1
   83860:	4620      	mov	r0, r4
   83862:	f000 fec3 	bl	845ec <__lshift>
   83866:	4641      	mov	r1, r8
   83868:	4681      	mov	r9, r0
   8386a:	f000 ff0f 	bl	8468c <__mcmp>
   8386e:	2800      	cmp	r0, #0
   83870:	f340 8145 	ble.w	83afe <_dtoa_r+0xdc6>
   83874:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83878:	f000 8105 	beq.w	83a86 <_dtoa_r+0xd4e>
   8387c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83880:	46b3      	mov	fp, r6
   83882:	f887 a000 	strb.w	sl, [r7]
   83886:	1c7d      	adds	r5, r7, #1
   83888:	9e08      	ldr	r6, [sp, #32]
   8388a:	e5d0      	b.n	8342e <_dtoa_r+0x6f6>
   8388c:	d104      	bne.n	83898 <_dtoa_r+0xb60>
   8388e:	f01a 0f01 	tst.w	sl, #1
   83892:	d001      	beq.n	83898 <_dtoa_r+0xb60>
   83894:	e5bb      	b.n	8340e <_dtoa_r+0x6d6>
   83896:	4615      	mov	r5, r2
   83898:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   8389c:	1e6a      	subs	r2, r5, #1
   8389e:	2b30      	cmp	r3, #48	; 0x30
   838a0:	d0f9      	beq.n	83896 <_dtoa_r+0xb5e>
   838a2:	e5c4      	b.n	8342e <_dtoa_r+0x6f6>
   838a4:	2230      	movs	r2, #48	; 0x30
   838a6:	9904      	ldr	r1, [sp, #16]
   838a8:	700a      	strb	r2, [r1, #0]
   838aa:	9a02      	ldr	r2, [sp, #8]
   838ac:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   838b0:	3201      	adds	r2, #1
   838b2:	9202      	str	r2, [sp, #8]
   838b4:	f7ff bbfb 	b.w	830ae <_dtoa_r+0x376>
   838b8:	f000 80bb 	beq.w	83a32 <_dtoa_r+0xcfa>
   838bc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   838c0:	9b02      	ldr	r3, [sp, #8]
   838c2:	f04f 0a02 	mov.w	sl, #2
   838c6:	425d      	negs	r5, r3
   838c8:	4b82      	ldr	r3, [pc, #520]	; (83ad4 <_dtoa_r+0xd9c>)
   838ca:	f005 020f 	and.w	r2, r5, #15
   838ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   838d2:	e9d3 2300 	ldrd	r2, r3, [r3]
   838d6:	f001 fe17 	bl	85508 <__aeabi_dmul>
   838da:	112d      	asrs	r5, r5, #4
   838dc:	4607      	mov	r7, r0
   838de:	4688      	mov	r8, r1
   838e0:	f43f ae1a 	beq.w	83518 <_dtoa_r+0x7e0>
   838e4:	4e7c      	ldr	r6, [pc, #496]	; (83ad8 <_dtoa_r+0xda0>)
   838e6:	07eb      	lsls	r3, r5, #31
   838e8:	d509      	bpl.n	838fe <_dtoa_r+0xbc6>
   838ea:	e9d6 2300 	ldrd	r2, r3, [r6]
   838ee:	4638      	mov	r0, r7
   838f0:	4641      	mov	r1, r8
   838f2:	f001 fe09 	bl	85508 <__aeabi_dmul>
   838f6:	4607      	mov	r7, r0
   838f8:	4688      	mov	r8, r1
   838fa:	f10a 0a01 	add.w	sl, sl, #1
   838fe:	106d      	asrs	r5, r5, #1
   83900:	f106 0608 	add.w	r6, r6, #8
   83904:	d1ef      	bne.n	838e6 <_dtoa_r+0xbae>
   83906:	e607      	b.n	83518 <_dtoa_r+0x7e0>
   83908:	6871      	ldr	r1, [r6, #4]
   8390a:	4620      	mov	r0, r4
   8390c:	f000 fcc0 	bl	84290 <_Balloc>
   83910:	4605      	mov	r5, r0
   83912:	6933      	ldr	r3, [r6, #16]
   83914:	f106 010c 	add.w	r1, r6, #12
   83918:	3302      	adds	r3, #2
   8391a:	009a      	lsls	r2, r3, #2
   8391c:	300c      	adds	r0, #12
   8391e:	f000 fc3d 	bl	8419c <memcpy>
   83922:	4629      	mov	r1, r5
   83924:	2201      	movs	r2, #1
   83926:	4620      	mov	r0, r4
   83928:	f000 fe60 	bl	845ec <__lshift>
   8392c:	9008      	str	r0, [sp, #32]
   8392e:	e4b6      	b.n	8329e <_dtoa_r+0x566>
   83930:	2b39      	cmp	r3, #57	; 0x39
   83932:	f8cd b020 	str.w	fp, [sp, #32]
   83936:	46d0      	mov	r8, sl
   83938:	f000 80a5 	beq.w	83a86 <_dtoa_r+0xd4e>
   8393c:	f103 0a01 	add.w	sl, r3, #1
   83940:	46b3      	mov	fp, r6
   83942:	f887 a000 	strb.w	sl, [r7]
   83946:	1c7d      	adds	r5, r7, #1
   83948:	9e08      	ldr	r6, [sp, #32]
   8394a:	e570      	b.n	8342e <_dtoa_r+0x6f6>
   8394c:	465a      	mov	r2, fp
   8394e:	46d0      	mov	r8, sl
   83950:	46b3      	mov	fp, r6
   83952:	469a      	mov	sl, r3
   83954:	4616      	mov	r6, r2
   83956:	e54e      	b.n	833f6 <_dtoa_r+0x6be>
   83958:	9812      	ldr	r0, [sp, #72]	; 0x48
   8395a:	495e      	ldr	r1, [pc, #376]	; (83ad4 <_dtoa_r+0xd9c>)
   8395c:	462a      	mov	r2, r5
   8395e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   83962:	4633      	mov	r3, r6
   83964:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   83968:	f001 fdce 	bl	85508 <__aeabi_dmul>
   8396c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   83970:	4638      	mov	r0, r7
   83972:	4641      	mov	r1, r8
   83974:	f002 f878 	bl	85a68 <__aeabi_d2iz>
   83978:	4605      	mov	r5, r0
   8397a:	f001 fd5f 	bl	8543c <__aeabi_i2d>
   8397e:	4602      	mov	r2, r0
   83980:	460b      	mov	r3, r1
   83982:	4638      	mov	r0, r7
   83984:	4641      	mov	r1, r8
   83986:	f001 fc0b 	bl	851a0 <__aeabi_dsub>
   8398a:	4606      	mov	r6, r0
   8398c:	9812      	ldr	r0, [sp, #72]	; 0x48
   8398e:	9a04      	ldr	r2, [sp, #16]
   83990:	3530      	adds	r5, #48	; 0x30
   83992:	2801      	cmp	r0, #1
   83994:	7015      	strb	r5, [r2, #0]
   83996:	460f      	mov	r7, r1
   83998:	f102 0501 	add.w	r5, r2, #1
   8399c:	d026      	beq.n	839ec <_dtoa_r+0xcb4>
   8399e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   839a0:	9a04      	ldr	r2, [sp, #16]
   839a2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   839a6:	4413      	add	r3, r2
   839a8:	f04f 0a00 	mov.w	sl, #0
   839ac:	4699      	mov	r9, r3
   839ae:	f8df b130 	ldr.w	fp, [pc, #304]	; 83ae0 <_dtoa_r+0xda8>
   839b2:	4652      	mov	r2, sl
   839b4:	465b      	mov	r3, fp
   839b6:	4630      	mov	r0, r6
   839b8:	4639      	mov	r1, r7
   839ba:	f001 fda5 	bl	85508 <__aeabi_dmul>
   839be:	460f      	mov	r7, r1
   839c0:	4606      	mov	r6, r0
   839c2:	f002 f851 	bl	85a68 <__aeabi_d2iz>
   839c6:	4680      	mov	r8, r0
   839c8:	f001 fd38 	bl	8543c <__aeabi_i2d>
   839cc:	4602      	mov	r2, r0
   839ce:	460b      	mov	r3, r1
   839d0:	4630      	mov	r0, r6
   839d2:	4639      	mov	r1, r7
   839d4:	f001 fbe4 	bl	851a0 <__aeabi_dsub>
   839d8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   839dc:	f805 8b01 	strb.w	r8, [r5], #1
   839e0:	454d      	cmp	r5, r9
   839e2:	4606      	mov	r6, r0
   839e4:	460f      	mov	r7, r1
   839e6:	d1e4      	bne.n	839b2 <_dtoa_r+0xc7a>
   839e8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   839ec:	2200      	movs	r2, #0
   839ee:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   839f2:	4b3a      	ldr	r3, [pc, #232]	; (83adc <_dtoa_r+0xda4>)
   839f4:	f001 fbd6 	bl	851a4 <__adddf3>
   839f8:	4632      	mov	r2, r6
   839fa:	463b      	mov	r3, r7
   839fc:	f001 fff6 	bl	859ec <__aeabi_dcmplt>
   83a00:	2800      	cmp	r0, #0
   83a02:	d046      	beq.n	83a92 <_dtoa_r+0xd5a>
   83a04:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83a06:	9302      	str	r3, [sp, #8]
   83a08:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83a0c:	f7ff bb42 	b.w	83094 <_dtoa_r+0x35c>
   83a10:	f04f 0800 	mov.w	r8, #0
   83a14:	4646      	mov	r6, r8
   83a16:	e6a8      	b.n	8376a <_dtoa_r+0xa32>
   83a18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83a1a:	9a07      	ldr	r2, [sp, #28]
   83a1c:	1a9d      	subs	r5, r3, r2
   83a1e:	2300      	movs	r3, #0
   83a20:	f7ff bb70 	b.w	83104 <_dtoa_r+0x3cc>
   83a24:	9b18      	ldr	r3, [sp, #96]	; 0x60
   83a26:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83a28:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83a2c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83a2e:	f7ff bb69 	b.w	83104 <_dtoa_r+0x3cc>
   83a32:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   83a36:	f04f 0a02 	mov.w	sl, #2
   83a3a:	e56d      	b.n	83518 <_dtoa_r+0x7e0>
   83a3c:	9b07      	ldr	r3, [sp, #28]
   83a3e:	2b00      	cmp	r3, #0
   83a40:	f43f aeb8 	beq.w	837b4 <_dtoa_r+0xa7c>
   83a44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83a46:	2b00      	cmp	r3, #0
   83a48:	f77f aede 	ble.w	83808 <_dtoa_r+0xad0>
   83a4c:	2200      	movs	r2, #0
   83a4e:	4b24      	ldr	r3, [pc, #144]	; (83ae0 <_dtoa_r+0xda8>)
   83a50:	4638      	mov	r0, r7
   83a52:	4641      	mov	r1, r8
   83a54:	f001 fd58 	bl	85508 <__aeabi_dmul>
   83a58:	4607      	mov	r7, r0
   83a5a:	4688      	mov	r8, r1
   83a5c:	f10a 0001 	add.w	r0, sl, #1
   83a60:	f001 fcec 	bl	8543c <__aeabi_i2d>
   83a64:	463a      	mov	r2, r7
   83a66:	4643      	mov	r3, r8
   83a68:	f001 fd4e 	bl	85508 <__aeabi_dmul>
   83a6c:	2200      	movs	r2, #0
   83a6e:	4b17      	ldr	r3, [pc, #92]	; (83acc <_dtoa_r+0xd94>)
   83a70:	f001 fb98 	bl	851a4 <__adddf3>
   83a74:	9a02      	ldr	r2, [sp, #8]
   83a76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83a78:	3a01      	subs	r2, #1
   83a7a:	4605      	mov	r5, r0
   83a7c:	9215      	str	r2, [sp, #84]	; 0x54
   83a7e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83a82:	9312      	str	r3, [sp, #72]	; 0x48
   83a84:	e569      	b.n	8355a <_dtoa_r+0x822>
   83a86:	2239      	movs	r2, #57	; 0x39
   83a88:	46b3      	mov	fp, r6
   83a8a:	703a      	strb	r2, [r7, #0]
   83a8c:	9e08      	ldr	r6, [sp, #32]
   83a8e:	1c7d      	adds	r5, r7, #1
   83a90:	e4bf      	b.n	83412 <_dtoa_r+0x6da>
   83a92:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   83a96:	2000      	movs	r0, #0
   83a98:	4910      	ldr	r1, [pc, #64]	; (83adc <_dtoa_r+0xda4>)
   83a9a:	f001 fb81 	bl	851a0 <__aeabi_dsub>
   83a9e:	4632      	mov	r2, r6
   83aa0:	463b      	mov	r3, r7
   83aa2:	f001 ffc1 	bl	85a28 <__aeabi_dcmpgt>
   83aa6:	b908      	cbnz	r0, 83aac <_dtoa_r+0xd74>
   83aa8:	e6ae      	b.n	83808 <_dtoa_r+0xad0>
   83aaa:	4615      	mov	r5, r2
   83aac:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83ab0:	1e6a      	subs	r2, r5, #1
   83ab2:	2b30      	cmp	r3, #48	; 0x30
   83ab4:	d0f9      	beq.n	83aaa <_dtoa_r+0xd72>
   83ab6:	e5d7      	b.n	83668 <_dtoa_r+0x930>
   83ab8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83abc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83abe:	9302      	str	r3, [sp, #8]
   83ac0:	f7ff bae8 	b.w	83094 <_dtoa_r+0x35c>
   83ac4:	970c      	str	r7, [sp, #48]	; 0x30
   83ac6:	f7ff bba7 	b.w	83218 <_dtoa_r+0x4e0>
   83aca:	bf00      	nop
   83acc:	401c0000 	.word	0x401c0000
   83ad0:	40140000 	.word	0x40140000
   83ad4:	00085f28 	.word	0x00085f28
   83ad8:	00085f00 	.word	0x00085f00
   83adc:	3fe00000 	.word	0x3fe00000
   83ae0:	40240000 	.word	0x40240000
   83ae4:	2b39      	cmp	r3, #57	; 0x39
   83ae6:	f8cd b020 	str.w	fp, [sp, #32]
   83aea:	46d0      	mov	r8, sl
   83aec:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83af0:	469a      	mov	sl, r3
   83af2:	d0c8      	beq.n	83a86 <_dtoa_r+0xd4e>
   83af4:	f1bb 0f00 	cmp.w	fp, #0
   83af8:	f73f aec0 	bgt.w	8387c <_dtoa_r+0xb44>
   83afc:	e6c0      	b.n	83880 <_dtoa_r+0xb48>
   83afe:	f47f aebf 	bne.w	83880 <_dtoa_r+0xb48>
   83b02:	f01a 0f01 	tst.w	sl, #1
   83b06:	f43f aebb 	beq.w	83880 <_dtoa_r+0xb48>
   83b0a:	e6b3      	b.n	83874 <_dtoa_r+0xb3c>
   83b0c:	f04f 0800 	mov.w	r8, #0
   83b10:	4646      	mov	r6, r8
   83b12:	e5e8      	b.n	836e6 <_dtoa_r+0x9ae>
   83b14:	4631      	mov	r1, r6
   83b16:	2300      	movs	r3, #0
   83b18:	220a      	movs	r2, #10
   83b1a:	4620      	mov	r0, r4
   83b1c:	f000 fbe8 	bl	842f0 <__multadd>
   83b20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83b22:	4606      	mov	r6, r0
   83b24:	2b00      	cmp	r3, #0
   83b26:	dd07      	ble.n	83b38 <_dtoa_r+0xe00>
   83b28:	9307      	str	r3, [sp, #28]
   83b2a:	f7ff bbab 	b.w	83284 <_dtoa_r+0x54c>
   83b2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83b30:	2b02      	cmp	r3, #2
   83b32:	dc1f      	bgt.n	83b74 <_dtoa_r+0xe3c>
   83b34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83b36:	e43c      	b.n	833b2 <_dtoa_r+0x67a>
   83b38:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83b3a:	2b02      	cmp	r3, #2
   83b3c:	dc1a      	bgt.n	83b74 <_dtoa_r+0xe3c>
   83b3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83b40:	e7f2      	b.n	83b28 <_dtoa_r+0xdf0>
   83b42:	f43f ab81 	beq.w	83248 <_dtoa_r+0x510>
   83b46:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   83b4a:	e411      	b.n	83370 <_dtoa_r+0x638>
   83b4c:	2500      	movs	r5, #0
   83b4e:	4620      	mov	r0, r4
   83b50:	6465      	str	r5, [r4, #68]	; 0x44
   83b52:	4629      	mov	r1, r5
   83b54:	f000 fb9c 	bl	84290 <_Balloc>
   83b58:	f04f 33ff 	mov.w	r3, #4294967295
   83b5c:	9307      	str	r3, [sp, #28]
   83b5e:	930f      	str	r3, [sp, #60]	; 0x3c
   83b60:	2301      	movs	r3, #1
   83b62:	9004      	str	r0, [sp, #16]
   83b64:	9525      	str	r5, [sp, #148]	; 0x94
   83b66:	6420      	str	r0, [r4, #64]	; 0x40
   83b68:	930b      	str	r3, [sp, #44]	; 0x2c
   83b6a:	f7ff b9e0 	b.w	82f2e <_dtoa_r+0x1f6>
   83b6e:	2501      	movs	r5, #1
   83b70:	f7ff b9a8 	b.w	82ec4 <_dtoa_r+0x18c>
   83b74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83b76:	9307      	str	r3, [sp, #28]
   83b78:	e5e8      	b.n	8374c <_dtoa_r+0xa14>
   83b7a:	bf00      	nop

00083b7c <__libc_fini_array>:
   83b7c:	b538      	push	{r3, r4, r5, lr}
   83b7e:	4c0a      	ldr	r4, [pc, #40]	; (83ba8 <__libc_fini_array+0x2c>)
   83b80:	4d0a      	ldr	r5, [pc, #40]	; (83bac <__libc_fini_array+0x30>)
   83b82:	1b64      	subs	r4, r4, r5
   83b84:	10a4      	asrs	r4, r4, #2
   83b86:	d00a      	beq.n	83b9e <__libc_fini_array+0x22>
   83b88:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   83b8c:	3b01      	subs	r3, #1
   83b8e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   83b92:	3c01      	subs	r4, #1
   83b94:	f855 3904 	ldr.w	r3, [r5], #-4
   83b98:	4798      	blx	r3
   83b9a:	2c00      	cmp	r4, #0
   83b9c:	d1f9      	bne.n	83b92 <__libc_fini_array+0x16>
   83b9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   83ba2:	f002 babf 	b.w	86124 <_fini>
   83ba6:	bf00      	nop
   83ba8:	00086134 	.word	0x00086134
   83bac:	00086130 	.word	0x00086130

00083bb0 <_localeconv_r>:
   83bb0:	4a04      	ldr	r2, [pc, #16]	; (83bc4 <_localeconv_r+0x14>)
   83bb2:	4b05      	ldr	r3, [pc, #20]	; (83bc8 <_localeconv_r+0x18>)
   83bb4:	6812      	ldr	r2, [r2, #0]
   83bb6:	6b50      	ldr	r0, [r2, #52]	; 0x34
   83bb8:	2800      	cmp	r0, #0
   83bba:	bf08      	it	eq
   83bbc:	4618      	moveq	r0, r3
   83bbe:	30f0      	adds	r0, #240	; 0xf0
   83bc0:	4770      	bx	lr
   83bc2:	bf00      	nop
   83bc4:	20070544 	.word	0x20070544
   83bc8:	20070d80 	.word	0x20070d80

00083bcc <_malloc_r>:
   83bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83bd0:	f101 060b 	add.w	r6, r1, #11
   83bd4:	2e16      	cmp	r6, #22
   83bd6:	b083      	sub	sp, #12
   83bd8:	4605      	mov	r5, r0
   83bda:	f240 809e 	bls.w	83d1a <_malloc_r+0x14e>
   83bde:	f036 0607 	bics.w	r6, r6, #7
   83be2:	f100 80bd 	bmi.w	83d60 <_malloc_r+0x194>
   83be6:	42b1      	cmp	r1, r6
   83be8:	f200 80ba 	bhi.w	83d60 <_malloc_r+0x194>
   83bec:	f000 fb4c 	bl	84288 <__malloc_lock>
   83bf0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83bf4:	f0c0 8285 	bcc.w	84102 <_malloc_r+0x536>
   83bf8:	0a73      	lsrs	r3, r6, #9
   83bfa:	f000 80b8 	beq.w	83d6e <_malloc_r+0x1a2>
   83bfe:	2b04      	cmp	r3, #4
   83c00:	f200 816c 	bhi.w	83edc <_malloc_r+0x310>
   83c04:	09b3      	lsrs	r3, r6, #6
   83c06:	f103 0039 	add.w	r0, r3, #57	; 0x39
   83c0a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   83c0e:	00c1      	lsls	r1, r0, #3
   83c10:	4fb8      	ldr	r7, [pc, #736]	; (83ef4 <_malloc_r+0x328>)
   83c12:	4439      	add	r1, r7
   83c14:	684c      	ldr	r4, [r1, #4]
   83c16:	3908      	subs	r1, #8
   83c18:	42a1      	cmp	r1, r4
   83c1a:	d106      	bne.n	83c2a <_malloc_r+0x5e>
   83c1c:	e00c      	b.n	83c38 <_malloc_r+0x6c>
   83c1e:	2a00      	cmp	r2, #0
   83c20:	f280 80ab 	bge.w	83d7a <_malloc_r+0x1ae>
   83c24:	68e4      	ldr	r4, [r4, #12]
   83c26:	42a1      	cmp	r1, r4
   83c28:	d006      	beq.n	83c38 <_malloc_r+0x6c>
   83c2a:	6863      	ldr	r3, [r4, #4]
   83c2c:	f023 0303 	bic.w	r3, r3, #3
   83c30:	1b9a      	subs	r2, r3, r6
   83c32:	2a0f      	cmp	r2, #15
   83c34:	ddf3      	ble.n	83c1e <_malloc_r+0x52>
   83c36:	4670      	mov	r0, lr
   83c38:	693c      	ldr	r4, [r7, #16]
   83c3a:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 83f08 <_malloc_r+0x33c>
   83c3e:	4574      	cmp	r4, lr
   83c40:	f000 819e 	beq.w	83f80 <_malloc_r+0x3b4>
   83c44:	6863      	ldr	r3, [r4, #4]
   83c46:	f023 0303 	bic.w	r3, r3, #3
   83c4a:	1b9a      	subs	r2, r3, r6
   83c4c:	2a0f      	cmp	r2, #15
   83c4e:	f300 8183 	bgt.w	83f58 <_malloc_r+0x38c>
   83c52:	2a00      	cmp	r2, #0
   83c54:	f8c7 e014 	str.w	lr, [r7, #20]
   83c58:	f8c7 e010 	str.w	lr, [r7, #16]
   83c5c:	f280 8091 	bge.w	83d82 <_malloc_r+0x1b6>
   83c60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83c64:	f080 8154 	bcs.w	83f10 <_malloc_r+0x344>
   83c68:	2201      	movs	r2, #1
   83c6a:	08db      	lsrs	r3, r3, #3
   83c6c:	6879      	ldr	r1, [r7, #4]
   83c6e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   83c72:	4413      	add	r3, r2
   83c74:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   83c78:	fa02 f20c 	lsl.w	r2, r2, ip
   83c7c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   83c80:	430a      	orrs	r2, r1
   83c82:	f1ac 0108 	sub.w	r1, ip, #8
   83c86:	60e1      	str	r1, [r4, #12]
   83c88:	f8c4 8008 	str.w	r8, [r4, #8]
   83c8c:	607a      	str	r2, [r7, #4]
   83c8e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   83c92:	f8c8 400c 	str.w	r4, [r8, #12]
   83c96:	2401      	movs	r4, #1
   83c98:	1083      	asrs	r3, r0, #2
   83c9a:	409c      	lsls	r4, r3
   83c9c:	4294      	cmp	r4, r2
   83c9e:	d87d      	bhi.n	83d9c <_malloc_r+0x1d0>
   83ca0:	4214      	tst	r4, r2
   83ca2:	d106      	bne.n	83cb2 <_malloc_r+0xe6>
   83ca4:	f020 0003 	bic.w	r0, r0, #3
   83ca8:	0064      	lsls	r4, r4, #1
   83caa:	4214      	tst	r4, r2
   83cac:	f100 0004 	add.w	r0, r0, #4
   83cb0:	d0fa      	beq.n	83ca8 <_malloc_r+0xdc>
   83cb2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   83cb6:	46cc      	mov	ip, r9
   83cb8:	4680      	mov	r8, r0
   83cba:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83cbe:	459c      	cmp	ip, r3
   83cc0:	d107      	bne.n	83cd2 <_malloc_r+0x106>
   83cc2:	e15f      	b.n	83f84 <_malloc_r+0x3b8>
   83cc4:	2a00      	cmp	r2, #0
   83cc6:	f280 816d 	bge.w	83fa4 <_malloc_r+0x3d8>
   83cca:	68db      	ldr	r3, [r3, #12]
   83ccc:	459c      	cmp	ip, r3
   83cce:	f000 8159 	beq.w	83f84 <_malloc_r+0x3b8>
   83cd2:	6859      	ldr	r1, [r3, #4]
   83cd4:	f021 0103 	bic.w	r1, r1, #3
   83cd8:	1b8a      	subs	r2, r1, r6
   83cda:	2a0f      	cmp	r2, #15
   83cdc:	ddf2      	ble.n	83cc4 <_malloc_r+0xf8>
   83cde:	68dc      	ldr	r4, [r3, #12]
   83ce0:	f8d3 c008 	ldr.w	ip, [r3, #8]
   83ce4:	f046 0801 	orr.w	r8, r6, #1
   83ce8:	4628      	mov	r0, r5
   83cea:	441e      	add	r6, r3
   83cec:	f042 0501 	orr.w	r5, r2, #1
   83cf0:	f8c3 8004 	str.w	r8, [r3, #4]
   83cf4:	f8cc 400c 	str.w	r4, [ip, #12]
   83cf8:	f8c4 c008 	str.w	ip, [r4, #8]
   83cfc:	617e      	str	r6, [r7, #20]
   83cfe:	613e      	str	r6, [r7, #16]
   83d00:	f8c6 e00c 	str.w	lr, [r6, #12]
   83d04:	f8c6 e008 	str.w	lr, [r6, #8]
   83d08:	6075      	str	r5, [r6, #4]
   83d0a:	505a      	str	r2, [r3, r1]
   83d0c:	9300      	str	r3, [sp, #0]
   83d0e:	f000 fabd 	bl	8428c <__malloc_unlock>
   83d12:	9b00      	ldr	r3, [sp, #0]
   83d14:	f103 0408 	add.w	r4, r3, #8
   83d18:	e01e      	b.n	83d58 <_malloc_r+0x18c>
   83d1a:	2910      	cmp	r1, #16
   83d1c:	d820      	bhi.n	83d60 <_malloc_r+0x194>
   83d1e:	f000 fab3 	bl	84288 <__malloc_lock>
   83d22:	2610      	movs	r6, #16
   83d24:	2318      	movs	r3, #24
   83d26:	2002      	movs	r0, #2
   83d28:	4f72      	ldr	r7, [pc, #456]	; (83ef4 <_malloc_r+0x328>)
   83d2a:	443b      	add	r3, r7
   83d2c:	685c      	ldr	r4, [r3, #4]
   83d2e:	f1a3 0208 	sub.w	r2, r3, #8
   83d32:	4294      	cmp	r4, r2
   83d34:	f000 812f 	beq.w	83f96 <_malloc_r+0x3ca>
   83d38:	6863      	ldr	r3, [r4, #4]
   83d3a:	68e1      	ldr	r1, [r4, #12]
   83d3c:	f023 0303 	bic.w	r3, r3, #3
   83d40:	4423      	add	r3, r4
   83d42:	685a      	ldr	r2, [r3, #4]
   83d44:	68a6      	ldr	r6, [r4, #8]
   83d46:	f042 0201 	orr.w	r2, r2, #1
   83d4a:	60f1      	str	r1, [r6, #12]
   83d4c:	4628      	mov	r0, r5
   83d4e:	608e      	str	r6, [r1, #8]
   83d50:	605a      	str	r2, [r3, #4]
   83d52:	f000 fa9b 	bl	8428c <__malloc_unlock>
   83d56:	3408      	adds	r4, #8
   83d58:	4620      	mov	r0, r4
   83d5a:	b003      	add	sp, #12
   83d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d60:	2400      	movs	r4, #0
   83d62:	230c      	movs	r3, #12
   83d64:	4620      	mov	r0, r4
   83d66:	602b      	str	r3, [r5, #0]
   83d68:	b003      	add	sp, #12
   83d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d6e:	2040      	movs	r0, #64	; 0x40
   83d70:	f44f 7100 	mov.w	r1, #512	; 0x200
   83d74:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   83d78:	e74a      	b.n	83c10 <_malloc_r+0x44>
   83d7a:	4423      	add	r3, r4
   83d7c:	685a      	ldr	r2, [r3, #4]
   83d7e:	68e1      	ldr	r1, [r4, #12]
   83d80:	e7e0      	b.n	83d44 <_malloc_r+0x178>
   83d82:	4423      	add	r3, r4
   83d84:	685a      	ldr	r2, [r3, #4]
   83d86:	4628      	mov	r0, r5
   83d88:	f042 0201 	orr.w	r2, r2, #1
   83d8c:	605a      	str	r2, [r3, #4]
   83d8e:	3408      	adds	r4, #8
   83d90:	f000 fa7c 	bl	8428c <__malloc_unlock>
   83d94:	4620      	mov	r0, r4
   83d96:	b003      	add	sp, #12
   83d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d9c:	68bc      	ldr	r4, [r7, #8]
   83d9e:	6863      	ldr	r3, [r4, #4]
   83da0:	f023 0803 	bic.w	r8, r3, #3
   83da4:	45b0      	cmp	r8, r6
   83da6:	d304      	bcc.n	83db2 <_malloc_r+0x1e6>
   83da8:	eba8 0306 	sub.w	r3, r8, r6
   83dac:	2b0f      	cmp	r3, #15
   83dae:	f300 8085 	bgt.w	83ebc <_malloc_r+0x2f0>
   83db2:	f8df 9158 	ldr.w	r9, [pc, #344]	; 83f0c <_malloc_r+0x340>
   83db6:	4b50      	ldr	r3, [pc, #320]	; (83ef8 <_malloc_r+0x32c>)
   83db8:	f8d9 2000 	ldr.w	r2, [r9]
   83dbc:	681b      	ldr	r3, [r3, #0]
   83dbe:	3201      	adds	r2, #1
   83dc0:	4433      	add	r3, r6
   83dc2:	eb04 0a08 	add.w	sl, r4, r8
   83dc6:	f000 8154 	beq.w	84072 <_malloc_r+0x4a6>
   83dca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83dce:	330f      	adds	r3, #15
   83dd0:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   83dd4:	f02b 0b0f 	bic.w	fp, fp, #15
   83dd8:	4659      	mov	r1, fp
   83dda:	4628      	mov	r0, r5
   83ddc:	f000 fd54 	bl	84888 <_sbrk_r>
   83de0:	1c41      	adds	r1, r0, #1
   83de2:	4602      	mov	r2, r0
   83de4:	f000 80fb 	beq.w	83fde <_malloc_r+0x412>
   83de8:	4582      	cmp	sl, r0
   83dea:	f200 80f6 	bhi.w	83fda <_malloc_r+0x40e>
   83dee:	4b43      	ldr	r3, [pc, #268]	; (83efc <_malloc_r+0x330>)
   83df0:	6819      	ldr	r1, [r3, #0]
   83df2:	4459      	add	r1, fp
   83df4:	6019      	str	r1, [r3, #0]
   83df6:	f000 814c 	beq.w	84092 <_malloc_r+0x4c6>
   83dfa:	f8d9 0000 	ldr.w	r0, [r9]
   83dfe:	3001      	adds	r0, #1
   83e00:	bf1b      	ittet	ne
   83e02:	eba2 0a0a 	subne.w	sl, r2, sl
   83e06:	4451      	addne	r1, sl
   83e08:	f8c9 2000 	streq.w	r2, [r9]
   83e0c:	6019      	strne	r1, [r3, #0]
   83e0e:	f012 0107 	ands.w	r1, r2, #7
   83e12:	f000 8114 	beq.w	8403e <_malloc_r+0x472>
   83e16:	f1c1 0008 	rsb	r0, r1, #8
   83e1a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83e1e:	4402      	add	r2, r0
   83e20:	3108      	adds	r1, #8
   83e22:	eb02 090b 	add.w	r9, r2, fp
   83e26:	f3c9 090b 	ubfx	r9, r9, #0, #12
   83e2a:	eba1 0909 	sub.w	r9, r1, r9
   83e2e:	4649      	mov	r1, r9
   83e30:	4628      	mov	r0, r5
   83e32:	9301      	str	r3, [sp, #4]
   83e34:	9200      	str	r2, [sp, #0]
   83e36:	f000 fd27 	bl	84888 <_sbrk_r>
   83e3a:	1c43      	adds	r3, r0, #1
   83e3c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   83e40:	f000 8142 	beq.w	840c8 <_malloc_r+0x4fc>
   83e44:	1a80      	subs	r0, r0, r2
   83e46:	4448      	add	r0, r9
   83e48:	f040 0001 	orr.w	r0, r0, #1
   83e4c:	6819      	ldr	r1, [r3, #0]
   83e4e:	42bc      	cmp	r4, r7
   83e50:	4449      	add	r1, r9
   83e52:	60ba      	str	r2, [r7, #8]
   83e54:	6019      	str	r1, [r3, #0]
   83e56:	6050      	str	r0, [r2, #4]
   83e58:	d017      	beq.n	83e8a <_malloc_r+0x2be>
   83e5a:	f1b8 0f0f 	cmp.w	r8, #15
   83e5e:	f240 80fa 	bls.w	84056 <_malloc_r+0x48a>
   83e62:	f04f 0c05 	mov.w	ip, #5
   83e66:	6862      	ldr	r2, [r4, #4]
   83e68:	f1a8 000c 	sub.w	r0, r8, #12
   83e6c:	f020 0007 	bic.w	r0, r0, #7
   83e70:	f002 0201 	and.w	r2, r2, #1
   83e74:	eb04 0e00 	add.w	lr, r4, r0
   83e78:	4302      	orrs	r2, r0
   83e7a:	280f      	cmp	r0, #15
   83e7c:	6062      	str	r2, [r4, #4]
   83e7e:	f8ce c004 	str.w	ip, [lr, #4]
   83e82:	f8ce c008 	str.w	ip, [lr, #8]
   83e86:	f200 8116 	bhi.w	840b6 <_malloc_r+0x4ea>
   83e8a:	4b1d      	ldr	r3, [pc, #116]	; (83f00 <_malloc_r+0x334>)
   83e8c:	68bc      	ldr	r4, [r7, #8]
   83e8e:	681a      	ldr	r2, [r3, #0]
   83e90:	4291      	cmp	r1, r2
   83e92:	bf88      	it	hi
   83e94:	6019      	strhi	r1, [r3, #0]
   83e96:	4b1b      	ldr	r3, [pc, #108]	; (83f04 <_malloc_r+0x338>)
   83e98:	681a      	ldr	r2, [r3, #0]
   83e9a:	4291      	cmp	r1, r2
   83e9c:	6862      	ldr	r2, [r4, #4]
   83e9e:	bf88      	it	hi
   83ea0:	6019      	strhi	r1, [r3, #0]
   83ea2:	f022 0203 	bic.w	r2, r2, #3
   83ea6:	4296      	cmp	r6, r2
   83ea8:	eba2 0306 	sub.w	r3, r2, r6
   83eac:	d801      	bhi.n	83eb2 <_malloc_r+0x2e6>
   83eae:	2b0f      	cmp	r3, #15
   83eb0:	dc04      	bgt.n	83ebc <_malloc_r+0x2f0>
   83eb2:	4628      	mov	r0, r5
   83eb4:	f000 f9ea 	bl	8428c <__malloc_unlock>
   83eb8:	2400      	movs	r4, #0
   83eba:	e74d      	b.n	83d58 <_malloc_r+0x18c>
   83ebc:	f046 0201 	orr.w	r2, r6, #1
   83ec0:	f043 0301 	orr.w	r3, r3, #1
   83ec4:	4426      	add	r6, r4
   83ec6:	6062      	str	r2, [r4, #4]
   83ec8:	4628      	mov	r0, r5
   83eca:	60be      	str	r6, [r7, #8]
   83ecc:	3408      	adds	r4, #8
   83ece:	6073      	str	r3, [r6, #4]
   83ed0:	f000 f9dc 	bl	8428c <__malloc_unlock>
   83ed4:	4620      	mov	r0, r4
   83ed6:	b003      	add	sp, #12
   83ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83edc:	2b14      	cmp	r3, #20
   83ede:	d970      	bls.n	83fc2 <_malloc_r+0x3f6>
   83ee0:	2b54      	cmp	r3, #84	; 0x54
   83ee2:	f200 80a2 	bhi.w	8402a <_malloc_r+0x45e>
   83ee6:	0b33      	lsrs	r3, r6, #12
   83ee8:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   83eec:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   83ef0:	00c1      	lsls	r1, r0, #3
   83ef2:	e68d      	b.n	83c10 <_malloc_r+0x44>
   83ef4:	20070970 	.word	0x20070970
   83ef8:	20070fb8 	.word	0x20070fb8
   83efc:	20070f88 	.word	0x20070f88
   83f00:	20070fb0 	.word	0x20070fb0
   83f04:	20070fb4 	.word	0x20070fb4
   83f08:	20070978 	.word	0x20070978
   83f0c:	20070d78 	.word	0x20070d78
   83f10:	0a5a      	lsrs	r2, r3, #9
   83f12:	2a04      	cmp	r2, #4
   83f14:	d95b      	bls.n	83fce <_malloc_r+0x402>
   83f16:	2a14      	cmp	r2, #20
   83f18:	f200 80ae 	bhi.w	84078 <_malloc_r+0x4ac>
   83f1c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   83f20:	00c9      	lsls	r1, r1, #3
   83f22:	325b      	adds	r2, #91	; 0x5b
   83f24:	eb07 0c01 	add.w	ip, r7, r1
   83f28:	5879      	ldr	r1, [r7, r1]
   83f2a:	f1ac 0c08 	sub.w	ip, ip, #8
   83f2e:	458c      	cmp	ip, r1
   83f30:	f000 8088 	beq.w	84044 <_malloc_r+0x478>
   83f34:	684a      	ldr	r2, [r1, #4]
   83f36:	f022 0203 	bic.w	r2, r2, #3
   83f3a:	4293      	cmp	r3, r2
   83f3c:	d273      	bcs.n	84026 <_malloc_r+0x45a>
   83f3e:	6889      	ldr	r1, [r1, #8]
   83f40:	458c      	cmp	ip, r1
   83f42:	d1f7      	bne.n	83f34 <_malloc_r+0x368>
   83f44:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83f48:	687a      	ldr	r2, [r7, #4]
   83f4a:	60e3      	str	r3, [r4, #12]
   83f4c:	f8c4 c008 	str.w	ip, [r4, #8]
   83f50:	609c      	str	r4, [r3, #8]
   83f52:	f8cc 400c 	str.w	r4, [ip, #12]
   83f56:	e69e      	b.n	83c96 <_malloc_r+0xca>
   83f58:	f046 0c01 	orr.w	ip, r6, #1
   83f5c:	f042 0101 	orr.w	r1, r2, #1
   83f60:	4426      	add	r6, r4
   83f62:	f8c4 c004 	str.w	ip, [r4, #4]
   83f66:	4628      	mov	r0, r5
   83f68:	617e      	str	r6, [r7, #20]
   83f6a:	613e      	str	r6, [r7, #16]
   83f6c:	f8c6 e00c 	str.w	lr, [r6, #12]
   83f70:	f8c6 e008 	str.w	lr, [r6, #8]
   83f74:	6071      	str	r1, [r6, #4]
   83f76:	50e2      	str	r2, [r4, r3]
   83f78:	f000 f988 	bl	8428c <__malloc_unlock>
   83f7c:	3408      	adds	r4, #8
   83f7e:	e6eb      	b.n	83d58 <_malloc_r+0x18c>
   83f80:	687a      	ldr	r2, [r7, #4]
   83f82:	e688      	b.n	83c96 <_malloc_r+0xca>
   83f84:	f108 0801 	add.w	r8, r8, #1
   83f88:	f018 0f03 	tst.w	r8, #3
   83f8c:	f10c 0c08 	add.w	ip, ip, #8
   83f90:	f47f ae93 	bne.w	83cba <_malloc_r+0xee>
   83f94:	e02d      	b.n	83ff2 <_malloc_r+0x426>
   83f96:	68dc      	ldr	r4, [r3, #12]
   83f98:	42a3      	cmp	r3, r4
   83f9a:	bf08      	it	eq
   83f9c:	3002      	addeq	r0, #2
   83f9e:	f43f ae4b 	beq.w	83c38 <_malloc_r+0x6c>
   83fa2:	e6c9      	b.n	83d38 <_malloc_r+0x16c>
   83fa4:	461c      	mov	r4, r3
   83fa6:	4419      	add	r1, r3
   83fa8:	684a      	ldr	r2, [r1, #4]
   83faa:	68db      	ldr	r3, [r3, #12]
   83fac:	f854 6f08 	ldr.w	r6, [r4, #8]!
   83fb0:	f042 0201 	orr.w	r2, r2, #1
   83fb4:	604a      	str	r2, [r1, #4]
   83fb6:	4628      	mov	r0, r5
   83fb8:	60f3      	str	r3, [r6, #12]
   83fba:	609e      	str	r6, [r3, #8]
   83fbc:	f000 f966 	bl	8428c <__malloc_unlock>
   83fc0:	e6ca      	b.n	83d58 <_malloc_r+0x18c>
   83fc2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   83fc6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   83fca:	00c1      	lsls	r1, r0, #3
   83fcc:	e620      	b.n	83c10 <_malloc_r+0x44>
   83fce:	099a      	lsrs	r2, r3, #6
   83fd0:	f102 0139 	add.w	r1, r2, #57	; 0x39
   83fd4:	00c9      	lsls	r1, r1, #3
   83fd6:	3238      	adds	r2, #56	; 0x38
   83fd8:	e7a4      	b.n	83f24 <_malloc_r+0x358>
   83fda:	42bc      	cmp	r4, r7
   83fdc:	d054      	beq.n	84088 <_malloc_r+0x4bc>
   83fde:	68bc      	ldr	r4, [r7, #8]
   83fe0:	6862      	ldr	r2, [r4, #4]
   83fe2:	f022 0203 	bic.w	r2, r2, #3
   83fe6:	e75e      	b.n	83ea6 <_malloc_r+0x2da>
   83fe8:	f859 3908 	ldr.w	r3, [r9], #-8
   83fec:	4599      	cmp	r9, r3
   83fee:	f040 8086 	bne.w	840fe <_malloc_r+0x532>
   83ff2:	f010 0f03 	tst.w	r0, #3
   83ff6:	f100 30ff 	add.w	r0, r0, #4294967295
   83ffa:	d1f5      	bne.n	83fe8 <_malloc_r+0x41c>
   83ffc:	687b      	ldr	r3, [r7, #4]
   83ffe:	ea23 0304 	bic.w	r3, r3, r4
   84002:	607b      	str	r3, [r7, #4]
   84004:	0064      	lsls	r4, r4, #1
   84006:	429c      	cmp	r4, r3
   84008:	f63f aec8 	bhi.w	83d9c <_malloc_r+0x1d0>
   8400c:	2c00      	cmp	r4, #0
   8400e:	f43f aec5 	beq.w	83d9c <_malloc_r+0x1d0>
   84012:	421c      	tst	r4, r3
   84014:	4640      	mov	r0, r8
   84016:	f47f ae4c 	bne.w	83cb2 <_malloc_r+0xe6>
   8401a:	0064      	lsls	r4, r4, #1
   8401c:	421c      	tst	r4, r3
   8401e:	f100 0004 	add.w	r0, r0, #4
   84022:	d0fa      	beq.n	8401a <_malloc_r+0x44e>
   84024:	e645      	b.n	83cb2 <_malloc_r+0xe6>
   84026:	468c      	mov	ip, r1
   84028:	e78c      	b.n	83f44 <_malloc_r+0x378>
   8402a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8402e:	d815      	bhi.n	8405c <_malloc_r+0x490>
   84030:	0bf3      	lsrs	r3, r6, #15
   84032:	f103 0078 	add.w	r0, r3, #120	; 0x78
   84036:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   8403a:	00c1      	lsls	r1, r0, #3
   8403c:	e5e8      	b.n	83c10 <_malloc_r+0x44>
   8403e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   84042:	e6ee      	b.n	83e22 <_malloc_r+0x256>
   84044:	2101      	movs	r1, #1
   84046:	687b      	ldr	r3, [r7, #4]
   84048:	1092      	asrs	r2, r2, #2
   8404a:	fa01 f202 	lsl.w	r2, r1, r2
   8404e:	431a      	orrs	r2, r3
   84050:	607a      	str	r2, [r7, #4]
   84052:	4663      	mov	r3, ip
   84054:	e779      	b.n	83f4a <_malloc_r+0x37e>
   84056:	2301      	movs	r3, #1
   84058:	6053      	str	r3, [r2, #4]
   8405a:	e72a      	b.n	83eb2 <_malloc_r+0x2e6>
   8405c:	f240 5254 	movw	r2, #1364	; 0x554
   84060:	4293      	cmp	r3, r2
   84062:	d822      	bhi.n	840aa <_malloc_r+0x4de>
   84064:	0cb3      	lsrs	r3, r6, #18
   84066:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8406a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8406e:	00c1      	lsls	r1, r0, #3
   84070:	e5ce      	b.n	83c10 <_malloc_r+0x44>
   84072:	f103 0b10 	add.w	fp, r3, #16
   84076:	e6af      	b.n	83dd8 <_malloc_r+0x20c>
   84078:	2a54      	cmp	r2, #84	; 0x54
   8407a:	d829      	bhi.n	840d0 <_malloc_r+0x504>
   8407c:	0b1a      	lsrs	r2, r3, #12
   8407e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   84082:	00c9      	lsls	r1, r1, #3
   84084:	326e      	adds	r2, #110	; 0x6e
   84086:	e74d      	b.n	83f24 <_malloc_r+0x358>
   84088:	4b20      	ldr	r3, [pc, #128]	; (8410c <_malloc_r+0x540>)
   8408a:	6819      	ldr	r1, [r3, #0]
   8408c:	4459      	add	r1, fp
   8408e:	6019      	str	r1, [r3, #0]
   84090:	e6b3      	b.n	83dfa <_malloc_r+0x22e>
   84092:	f3ca 000b 	ubfx	r0, sl, #0, #12
   84096:	2800      	cmp	r0, #0
   84098:	f47f aeaf 	bne.w	83dfa <_malloc_r+0x22e>
   8409c:	eb08 030b 	add.w	r3, r8, fp
   840a0:	68ba      	ldr	r2, [r7, #8]
   840a2:	f043 0301 	orr.w	r3, r3, #1
   840a6:	6053      	str	r3, [r2, #4]
   840a8:	e6ef      	b.n	83e8a <_malloc_r+0x2be>
   840aa:	207f      	movs	r0, #127	; 0x7f
   840ac:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   840b0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   840b4:	e5ac      	b.n	83c10 <_malloc_r+0x44>
   840b6:	f104 0108 	add.w	r1, r4, #8
   840ba:	4628      	mov	r0, r5
   840bc:	9300      	str	r3, [sp, #0]
   840be:	f000 fd49 	bl	84b54 <_free_r>
   840c2:	9b00      	ldr	r3, [sp, #0]
   840c4:	6819      	ldr	r1, [r3, #0]
   840c6:	e6e0      	b.n	83e8a <_malloc_r+0x2be>
   840c8:	2001      	movs	r0, #1
   840ca:	f04f 0900 	mov.w	r9, #0
   840ce:	e6bd      	b.n	83e4c <_malloc_r+0x280>
   840d0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   840d4:	d805      	bhi.n	840e2 <_malloc_r+0x516>
   840d6:	0bda      	lsrs	r2, r3, #15
   840d8:	f102 0178 	add.w	r1, r2, #120	; 0x78
   840dc:	00c9      	lsls	r1, r1, #3
   840de:	3277      	adds	r2, #119	; 0x77
   840e0:	e720      	b.n	83f24 <_malloc_r+0x358>
   840e2:	f240 5154 	movw	r1, #1364	; 0x554
   840e6:	428a      	cmp	r2, r1
   840e8:	d805      	bhi.n	840f6 <_malloc_r+0x52a>
   840ea:	0c9a      	lsrs	r2, r3, #18
   840ec:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   840f0:	00c9      	lsls	r1, r1, #3
   840f2:	327c      	adds	r2, #124	; 0x7c
   840f4:	e716      	b.n	83f24 <_malloc_r+0x358>
   840f6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   840fa:	227e      	movs	r2, #126	; 0x7e
   840fc:	e712      	b.n	83f24 <_malloc_r+0x358>
   840fe:	687b      	ldr	r3, [r7, #4]
   84100:	e780      	b.n	84004 <_malloc_r+0x438>
   84102:	08f0      	lsrs	r0, r6, #3
   84104:	f106 0308 	add.w	r3, r6, #8
   84108:	e60e      	b.n	83d28 <_malloc_r+0x15c>
   8410a:	bf00      	nop
   8410c:	20070f88 	.word	0x20070f88

00084110 <memchr>:
   84110:	0783      	lsls	r3, r0, #30
   84112:	b470      	push	{r4, r5, r6}
   84114:	b2cd      	uxtb	r5, r1
   84116:	d03d      	beq.n	84194 <memchr+0x84>
   84118:	1e54      	subs	r4, r2, #1
   8411a:	b30a      	cbz	r2, 84160 <memchr+0x50>
   8411c:	7803      	ldrb	r3, [r0, #0]
   8411e:	42ab      	cmp	r3, r5
   84120:	d01f      	beq.n	84162 <memchr+0x52>
   84122:	1c43      	adds	r3, r0, #1
   84124:	e005      	b.n	84132 <memchr+0x22>
   84126:	f114 34ff 	adds.w	r4, r4, #4294967295
   8412a:	d319      	bcc.n	84160 <memchr+0x50>
   8412c:	7802      	ldrb	r2, [r0, #0]
   8412e:	42aa      	cmp	r2, r5
   84130:	d017      	beq.n	84162 <memchr+0x52>
   84132:	f013 0f03 	tst.w	r3, #3
   84136:	4618      	mov	r0, r3
   84138:	f103 0301 	add.w	r3, r3, #1
   8413c:	d1f3      	bne.n	84126 <memchr+0x16>
   8413e:	2c03      	cmp	r4, #3
   84140:	d811      	bhi.n	84166 <memchr+0x56>
   84142:	b34c      	cbz	r4, 84198 <memchr+0x88>
   84144:	7803      	ldrb	r3, [r0, #0]
   84146:	42ab      	cmp	r3, r5
   84148:	d00b      	beq.n	84162 <memchr+0x52>
   8414a:	4404      	add	r4, r0
   8414c:	1c43      	adds	r3, r0, #1
   8414e:	e002      	b.n	84156 <memchr+0x46>
   84150:	7802      	ldrb	r2, [r0, #0]
   84152:	42aa      	cmp	r2, r5
   84154:	d005      	beq.n	84162 <memchr+0x52>
   84156:	429c      	cmp	r4, r3
   84158:	4618      	mov	r0, r3
   8415a:	f103 0301 	add.w	r3, r3, #1
   8415e:	d1f7      	bne.n	84150 <memchr+0x40>
   84160:	2000      	movs	r0, #0
   84162:	bc70      	pop	{r4, r5, r6}
   84164:	4770      	bx	lr
   84166:	0209      	lsls	r1, r1, #8
   84168:	b289      	uxth	r1, r1
   8416a:	4329      	orrs	r1, r5
   8416c:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   84170:	6803      	ldr	r3, [r0, #0]
   84172:	4606      	mov	r6, r0
   84174:	404b      	eors	r3, r1
   84176:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   8417a:	ea22 0303 	bic.w	r3, r2, r3
   8417e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   84182:	f100 0004 	add.w	r0, r0, #4
   84186:	d103      	bne.n	84190 <memchr+0x80>
   84188:	3c04      	subs	r4, #4
   8418a:	2c03      	cmp	r4, #3
   8418c:	d8f0      	bhi.n	84170 <memchr+0x60>
   8418e:	e7d8      	b.n	84142 <memchr+0x32>
   84190:	4630      	mov	r0, r6
   84192:	e7d7      	b.n	84144 <memchr+0x34>
   84194:	4614      	mov	r4, r2
   84196:	e7d2      	b.n	8413e <memchr+0x2e>
   84198:	4620      	mov	r0, r4
   8419a:	e7e2      	b.n	84162 <memchr+0x52>

0008419c <memcpy>:
   8419c:	4684      	mov	ip, r0
   8419e:	ea41 0300 	orr.w	r3, r1, r0
   841a2:	f013 0303 	ands.w	r3, r3, #3
   841a6:	d149      	bne.n	8423c <memcpy+0xa0>
   841a8:	3a40      	subs	r2, #64	; 0x40
   841aa:	d323      	bcc.n	841f4 <memcpy+0x58>
   841ac:	680b      	ldr	r3, [r1, #0]
   841ae:	6003      	str	r3, [r0, #0]
   841b0:	684b      	ldr	r3, [r1, #4]
   841b2:	6043      	str	r3, [r0, #4]
   841b4:	688b      	ldr	r3, [r1, #8]
   841b6:	6083      	str	r3, [r0, #8]
   841b8:	68cb      	ldr	r3, [r1, #12]
   841ba:	60c3      	str	r3, [r0, #12]
   841bc:	690b      	ldr	r3, [r1, #16]
   841be:	6103      	str	r3, [r0, #16]
   841c0:	694b      	ldr	r3, [r1, #20]
   841c2:	6143      	str	r3, [r0, #20]
   841c4:	698b      	ldr	r3, [r1, #24]
   841c6:	6183      	str	r3, [r0, #24]
   841c8:	69cb      	ldr	r3, [r1, #28]
   841ca:	61c3      	str	r3, [r0, #28]
   841cc:	6a0b      	ldr	r3, [r1, #32]
   841ce:	6203      	str	r3, [r0, #32]
   841d0:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   841d2:	6243      	str	r3, [r0, #36]	; 0x24
   841d4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   841d6:	6283      	str	r3, [r0, #40]	; 0x28
   841d8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   841da:	62c3      	str	r3, [r0, #44]	; 0x2c
   841dc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   841de:	6303      	str	r3, [r0, #48]	; 0x30
   841e0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   841e2:	6343      	str	r3, [r0, #52]	; 0x34
   841e4:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   841e6:	6383      	str	r3, [r0, #56]	; 0x38
   841e8:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   841ea:	63c3      	str	r3, [r0, #60]	; 0x3c
   841ec:	3040      	adds	r0, #64	; 0x40
   841ee:	3140      	adds	r1, #64	; 0x40
   841f0:	3a40      	subs	r2, #64	; 0x40
   841f2:	d2db      	bcs.n	841ac <memcpy+0x10>
   841f4:	3230      	adds	r2, #48	; 0x30
   841f6:	d30b      	bcc.n	84210 <memcpy+0x74>
   841f8:	680b      	ldr	r3, [r1, #0]
   841fa:	6003      	str	r3, [r0, #0]
   841fc:	684b      	ldr	r3, [r1, #4]
   841fe:	6043      	str	r3, [r0, #4]
   84200:	688b      	ldr	r3, [r1, #8]
   84202:	6083      	str	r3, [r0, #8]
   84204:	68cb      	ldr	r3, [r1, #12]
   84206:	60c3      	str	r3, [r0, #12]
   84208:	3010      	adds	r0, #16
   8420a:	3110      	adds	r1, #16
   8420c:	3a10      	subs	r2, #16
   8420e:	d2f3      	bcs.n	841f8 <memcpy+0x5c>
   84210:	320c      	adds	r2, #12
   84212:	d305      	bcc.n	84220 <memcpy+0x84>
   84214:	f851 3b04 	ldr.w	r3, [r1], #4
   84218:	f840 3b04 	str.w	r3, [r0], #4
   8421c:	3a04      	subs	r2, #4
   8421e:	d2f9      	bcs.n	84214 <memcpy+0x78>
   84220:	3204      	adds	r2, #4
   84222:	d008      	beq.n	84236 <memcpy+0x9a>
   84224:	07d2      	lsls	r2, r2, #31
   84226:	bf1c      	itt	ne
   84228:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8422c:	f800 3b01 	strbne.w	r3, [r0], #1
   84230:	d301      	bcc.n	84236 <memcpy+0x9a>
   84232:	880b      	ldrh	r3, [r1, #0]
   84234:	8003      	strh	r3, [r0, #0]
   84236:	4660      	mov	r0, ip
   84238:	4770      	bx	lr
   8423a:	bf00      	nop
   8423c:	2a08      	cmp	r2, #8
   8423e:	d313      	bcc.n	84268 <memcpy+0xcc>
   84240:	078b      	lsls	r3, r1, #30
   84242:	d0b1      	beq.n	841a8 <memcpy+0xc>
   84244:	f010 0303 	ands.w	r3, r0, #3
   84248:	d0ae      	beq.n	841a8 <memcpy+0xc>
   8424a:	f1c3 0304 	rsb	r3, r3, #4
   8424e:	1ad2      	subs	r2, r2, r3
   84250:	07db      	lsls	r3, r3, #31
   84252:	bf1c      	itt	ne
   84254:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84258:	f800 3b01 	strbne.w	r3, [r0], #1
   8425c:	d3a4      	bcc.n	841a8 <memcpy+0xc>
   8425e:	f831 3b02 	ldrh.w	r3, [r1], #2
   84262:	f820 3b02 	strh.w	r3, [r0], #2
   84266:	e79f      	b.n	841a8 <memcpy+0xc>
   84268:	3a04      	subs	r2, #4
   8426a:	d3d9      	bcc.n	84220 <memcpy+0x84>
   8426c:	3a01      	subs	r2, #1
   8426e:	f811 3b01 	ldrb.w	r3, [r1], #1
   84272:	f800 3b01 	strb.w	r3, [r0], #1
   84276:	d2f9      	bcs.n	8426c <memcpy+0xd0>
   84278:	780b      	ldrb	r3, [r1, #0]
   8427a:	7003      	strb	r3, [r0, #0]
   8427c:	784b      	ldrb	r3, [r1, #1]
   8427e:	7043      	strb	r3, [r0, #1]
   84280:	788b      	ldrb	r3, [r1, #2]
   84282:	7083      	strb	r3, [r0, #2]
   84284:	4660      	mov	r0, ip
   84286:	4770      	bx	lr

00084288 <__malloc_lock>:
   84288:	4770      	bx	lr
   8428a:	bf00      	nop

0008428c <__malloc_unlock>:
   8428c:	4770      	bx	lr
   8428e:	bf00      	nop

00084290 <_Balloc>:
   84290:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84292:	b570      	push	{r4, r5, r6, lr}
   84294:	4605      	mov	r5, r0
   84296:	460c      	mov	r4, r1
   84298:	b14b      	cbz	r3, 842ae <_Balloc+0x1e>
   8429a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8429e:	b180      	cbz	r0, 842c2 <_Balloc+0x32>
   842a0:	6802      	ldr	r2, [r0, #0]
   842a2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   842a6:	2300      	movs	r3, #0
   842a8:	6103      	str	r3, [r0, #16]
   842aa:	60c3      	str	r3, [r0, #12]
   842ac:	bd70      	pop	{r4, r5, r6, pc}
   842ae:	2221      	movs	r2, #33	; 0x21
   842b0:	2104      	movs	r1, #4
   842b2:	f000 fbcf 	bl	84a54 <_calloc_r>
   842b6:	64e8      	str	r0, [r5, #76]	; 0x4c
   842b8:	4603      	mov	r3, r0
   842ba:	2800      	cmp	r0, #0
   842bc:	d1ed      	bne.n	8429a <_Balloc+0xa>
   842be:	2000      	movs	r0, #0
   842c0:	bd70      	pop	{r4, r5, r6, pc}
   842c2:	2101      	movs	r1, #1
   842c4:	fa01 f604 	lsl.w	r6, r1, r4
   842c8:	1d72      	adds	r2, r6, #5
   842ca:	4628      	mov	r0, r5
   842cc:	0092      	lsls	r2, r2, #2
   842ce:	f000 fbc1 	bl	84a54 <_calloc_r>
   842d2:	2800      	cmp	r0, #0
   842d4:	d0f3      	beq.n	842be <_Balloc+0x2e>
   842d6:	6044      	str	r4, [r0, #4]
   842d8:	6086      	str	r6, [r0, #8]
   842da:	e7e4      	b.n	842a6 <_Balloc+0x16>

000842dc <_Bfree>:
   842dc:	b131      	cbz	r1, 842ec <_Bfree+0x10>
   842de:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   842e0:	684a      	ldr	r2, [r1, #4]
   842e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   842e6:	6008      	str	r0, [r1, #0]
   842e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   842ec:	4770      	bx	lr
   842ee:	bf00      	nop

000842f0 <__multadd>:
   842f0:	b5f0      	push	{r4, r5, r6, r7, lr}
   842f2:	460c      	mov	r4, r1
   842f4:	4605      	mov	r5, r0
   842f6:	f04f 0e00 	mov.w	lr, #0
   842fa:	690e      	ldr	r6, [r1, #16]
   842fc:	b083      	sub	sp, #12
   842fe:	f101 0714 	add.w	r7, r1, #20
   84302:	6838      	ldr	r0, [r7, #0]
   84304:	f10e 0e01 	add.w	lr, lr, #1
   84308:	b281      	uxth	r1, r0
   8430a:	fb02 3301 	mla	r3, r2, r1, r3
   8430e:	0c01      	lsrs	r1, r0, #16
   84310:	0c18      	lsrs	r0, r3, #16
   84312:	fb02 0101 	mla	r1, r2, r1, r0
   84316:	b29b      	uxth	r3, r3
   84318:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   8431c:	4576      	cmp	r6, lr
   8431e:	f847 3b04 	str.w	r3, [r7], #4
   84322:	ea4f 4311 	mov.w	r3, r1, lsr #16
   84326:	dcec      	bgt.n	84302 <__multadd+0x12>
   84328:	b13b      	cbz	r3, 8433a <__multadd+0x4a>
   8432a:	68a2      	ldr	r2, [r4, #8]
   8432c:	4296      	cmp	r6, r2
   8432e:	da07      	bge.n	84340 <__multadd+0x50>
   84330:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84334:	3601      	adds	r6, #1
   84336:	6153      	str	r3, [r2, #20]
   84338:	6126      	str	r6, [r4, #16]
   8433a:	4620      	mov	r0, r4
   8433c:	b003      	add	sp, #12
   8433e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84340:	6861      	ldr	r1, [r4, #4]
   84342:	4628      	mov	r0, r5
   84344:	3101      	adds	r1, #1
   84346:	9301      	str	r3, [sp, #4]
   84348:	f7ff ffa2 	bl	84290 <_Balloc>
   8434c:	4607      	mov	r7, r0
   8434e:	6922      	ldr	r2, [r4, #16]
   84350:	f104 010c 	add.w	r1, r4, #12
   84354:	3202      	adds	r2, #2
   84356:	0092      	lsls	r2, r2, #2
   84358:	300c      	adds	r0, #12
   8435a:	f7ff ff1f 	bl	8419c <memcpy>
   8435e:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84360:	6861      	ldr	r1, [r4, #4]
   84362:	9b01      	ldr	r3, [sp, #4]
   84364:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84368:	6020      	str	r0, [r4, #0]
   8436a:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8436e:	463c      	mov	r4, r7
   84370:	e7de      	b.n	84330 <__multadd+0x40>
   84372:	bf00      	nop

00084374 <__hi0bits>:
   84374:	0c02      	lsrs	r2, r0, #16
   84376:	0412      	lsls	r2, r2, #16
   84378:	4603      	mov	r3, r0
   8437a:	b9b2      	cbnz	r2, 843aa <__hi0bits+0x36>
   8437c:	0403      	lsls	r3, r0, #16
   8437e:	2010      	movs	r0, #16
   84380:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84384:	bf04      	itt	eq
   84386:	021b      	lsleq	r3, r3, #8
   84388:	3008      	addeq	r0, #8
   8438a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8438e:	bf04      	itt	eq
   84390:	011b      	lsleq	r3, r3, #4
   84392:	3004      	addeq	r0, #4
   84394:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84398:	bf04      	itt	eq
   8439a:	009b      	lsleq	r3, r3, #2
   8439c:	3002      	addeq	r0, #2
   8439e:	2b00      	cmp	r3, #0
   843a0:	db02      	blt.n	843a8 <__hi0bits+0x34>
   843a2:	005b      	lsls	r3, r3, #1
   843a4:	d403      	bmi.n	843ae <__hi0bits+0x3a>
   843a6:	2020      	movs	r0, #32
   843a8:	4770      	bx	lr
   843aa:	2000      	movs	r0, #0
   843ac:	e7e8      	b.n	84380 <__hi0bits+0xc>
   843ae:	3001      	adds	r0, #1
   843b0:	4770      	bx	lr
   843b2:	bf00      	nop

000843b4 <__lo0bits>:
   843b4:	6803      	ldr	r3, [r0, #0]
   843b6:	4601      	mov	r1, r0
   843b8:	f013 0207 	ands.w	r2, r3, #7
   843bc:	d007      	beq.n	843ce <__lo0bits+0x1a>
   843be:	07da      	lsls	r2, r3, #31
   843c0:	d421      	bmi.n	84406 <__lo0bits+0x52>
   843c2:	0798      	lsls	r0, r3, #30
   843c4:	d421      	bmi.n	8440a <__lo0bits+0x56>
   843c6:	089b      	lsrs	r3, r3, #2
   843c8:	600b      	str	r3, [r1, #0]
   843ca:	2002      	movs	r0, #2
   843cc:	4770      	bx	lr
   843ce:	b298      	uxth	r0, r3
   843d0:	b198      	cbz	r0, 843fa <__lo0bits+0x46>
   843d2:	4610      	mov	r0, r2
   843d4:	f013 0fff 	tst.w	r3, #255	; 0xff
   843d8:	bf04      	itt	eq
   843da:	0a1b      	lsreq	r3, r3, #8
   843dc:	3008      	addeq	r0, #8
   843de:	071a      	lsls	r2, r3, #28
   843e0:	bf04      	itt	eq
   843e2:	091b      	lsreq	r3, r3, #4
   843e4:	3004      	addeq	r0, #4
   843e6:	079a      	lsls	r2, r3, #30
   843e8:	bf04      	itt	eq
   843ea:	089b      	lsreq	r3, r3, #2
   843ec:	3002      	addeq	r0, #2
   843ee:	07da      	lsls	r2, r3, #31
   843f0:	d407      	bmi.n	84402 <__lo0bits+0x4e>
   843f2:	085b      	lsrs	r3, r3, #1
   843f4:	d104      	bne.n	84400 <__lo0bits+0x4c>
   843f6:	2020      	movs	r0, #32
   843f8:	4770      	bx	lr
   843fa:	0c1b      	lsrs	r3, r3, #16
   843fc:	2010      	movs	r0, #16
   843fe:	e7e9      	b.n	843d4 <__lo0bits+0x20>
   84400:	3001      	adds	r0, #1
   84402:	600b      	str	r3, [r1, #0]
   84404:	4770      	bx	lr
   84406:	2000      	movs	r0, #0
   84408:	4770      	bx	lr
   8440a:	085b      	lsrs	r3, r3, #1
   8440c:	600b      	str	r3, [r1, #0]
   8440e:	2001      	movs	r0, #1
   84410:	4770      	bx	lr
   84412:	bf00      	nop

00084414 <__i2b>:
   84414:	b510      	push	{r4, lr}
   84416:	460c      	mov	r4, r1
   84418:	2101      	movs	r1, #1
   8441a:	f7ff ff39 	bl	84290 <_Balloc>
   8441e:	2201      	movs	r2, #1
   84420:	6144      	str	r4, [r0, #20]
   84422:	6102      	str	r2, [r0, #16]
   84424:	bd10      	pop	{r4, pc}
   84426:	bf00      	nop

00084428 <__multiply>:
   84428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8442c:	690c      	ldr	r4, [r1, #16]
   8442e:	6915      	ldr	r5, [r2, #16]
   84430:	b083      	sub	sp, #12
   84432:	42ac      	cmp	r4, r5
   84434:	468b      	mov	fp, r1
   84436:	4616      	mov	r6, r2
   84438:	da04      	bge.n	84444 <__multiply+0x1c>
   8443a:	4622      	mov	r2, r4
   8443c:	46b3      	mov	fp, r6
   8443e:	462c      	mov	r4, r5
   84440:	460e      	mov	r6, r1
   84442:	4615      	mov	r5, r2
   84444:	f8db 3008 	ldr.w	r3, [fp, #8]
   84448:	eb04 0805 	add.w	r8, r4, r5
   8444c:	f8db 1004 	ldr.w	r1, [fp, #4]
   84450:	4598      	cmp	r8, r3
   84452:	bfc8      	it	gt
   84454:	3101      	addgt	r1, #1
   84456:	f7ff ff1b 	bl	84290 <_Balloc>
   8445a:	f100 0914 	add.w	r9, r0, #20
   8445e:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   84462:	45d1      	cmp	r9, sl
   84464:	9000      	str	r0, [sp, #0]
   84466:	d205      	bcs.n	84474 <__multiply+0x4c>
   84468:	464b      	mov	r3, r9
   8446a:	2100      	movs	r1, #0
   8446c:	f843 1b04 	str.w	r1, [r3], #4
   84470:	459a      	cmp	sl, r3
   84472:	d8fb      	bhi.n	8446c <__multiply+0x44>
   84474:	f106 0c14 	add.w	ip, r6, #20
   84478:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   8447c:	f10b 0b14 	add.w	fp, fp, #20
   84480:	459c      	cmp	ip, r3
   84482:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84486:	d24b      	bcs.n	84520 <__multiply+0xf8>
   84488:	f8cd a004 	str.w	sl, [sp, #4]
   8448c:	469a      	mov	sl, r3
   8448e:	f8dc 5000 	ldr.w	r5, [ip]
   84492:	b2af      	uxth	r7, r5
   84494:	b1e7      	cbz	r7, 844d0 <__multiply+0xa8>
   84496:	464d      	mov	r5, r9
   84498:	465e      	mov	r6, fp
   8449a:	2100      	movs	r1, #0
   8449c:	f856 2b04 	ldr.w	r2, [r6], #4
   844a0:	6828      	ldr	r0, [r5, #0]
   844a2:	b293      	uxth	r3, r2
   844a4:	b284      	uxth	r4, r0
   844a6:	0c12      	lsrs	r2, r2, #16
   844a8:	fb07 4303 	mla	r3, r7, r3, r4
   844ac:	0c00      	lsrs	r0, r0, #16
   844ae:	fb07 0202 	mla	r2, r7, r2, r0
   844b2:	440b      	add	r3, r1
   844b4:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   844b8:	b29b      	uxth	r3, r3
   844ba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   844be:	45b6      	cmp	lr, r6
   844c0:	f845 3b04 	str.w	r3, [r5], #4
   844c4:	ea4f 4111 	mov.w	r1, r1, lsr #16
   844c8:	d8e8      	bhi.n	8449c <__multiply+0x74>
   844ca:	6029      	str	r1, [r5, #0]
   844cc:	f8dc 5000 	ldr.w	r5, [ip]
   844d0:	0c2d      	lsrs	r5, r5, #16
   844d2:	d01d      	beq.n	84510 <__multiply+0xe8>
   844d4:	f8d9 3000 	ldr.w	r3, [r9]
   844d8:	4648      	mov	r0, r9
   844da:	461c      	mov	r4, r3
   844dc:	4659      	mov	r1, fp
   844de:	2200      	movs	r2, #0
   844e0:	880e      	ldrh	r6, [r1, #0]
   844e2:	0c24      	lsrs	r4, r4, #16
   844e4:	fb05 4406 	mla	r4, r5, r6, r4
   844e8:	b29b      	uxth	r3, r3
   844ea:	4422      	add	r2, r4
   844ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   844f0:	f840 3b04 	str.w	r3, [r0], #4
   844f4:	f851 3b04 	ldr.w	r3, [r1], #4
   844f8:	6804      	ldr	r4, [r0, #0]
   844fa:	0c1b      	lsrs	r3, r3, #16
   844fc:	b2a6      	uxth	r6, r4
   844fe:	fb05 6303 	mla	r3, r5, r3, r6
   84502:	458e      	cmp	lr, r1
   84504:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   84508:	ea4f 4213 	mov.w	r2, r3, lsr #16
   8450c:	d8e8      	bhi.n	844e0 <__multiply+0xb8>
   8450e:	6003      	str	r3, [r0, #0]
   84510:	f10c 0c04 	add.w	ip, ip, #4
   84514:	45e2      	cmp	sl, ip
   84516:	f109 0904 	add.w	r9, r9, #4
   8451a:	d8b8      	bhi.n	8448e <__multiply+0x66>
   8451c:	f8dd a004 	ldr.w	sl, [sp, #4]
   84520:	f1b8 0f00 	cmp.w	r8, #0
   84524:	dd0b      	ble.n	8453e <__multiply+0x116>
   84526:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   8452a:	f1aa 0a04 	sub.w	sl, sl, #4
   8452e:	b11b      	cbz	r3, 84538 <__multiply+0x110>
   84530:	e005      	b.n	8453e <__multiply+0x116>
   84532:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   84536:	b913      	cbnz	r3, 8453e <__multiply+0x116>
   84538:	f1b8 0801 	subs.w	r8, r8, #1
   8453c:	d1f9      	bne.n	84532 <__multiply+0x10a>
   8453e:	9800      	ldr	r0, [sp, #0]
   84540:	f8c0 8010 	str.w	r8, [r0, #16]
   84544:	b003      	add	sp, #12
   84546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8454a:	bf00      	nop

0008454c <__pow5mult>:
   8454c:	f012 0303 	ands.w	r3, r2, #3
   84550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84554:	4614      	mov	r4, r2
   84556:	4607      	mov	r7, r0
   84558:	d12e      	bne.n	845b8 <__pow5mult+0x6c>
   8455a:	460d      	mov	r5, r1
   8455c:	10a4      	asrs	r4, r4, #2
   8455e:	d01c      	beq.n	8459a <__pow5mult+0x4e>
   84560:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   84562:	b396      	cbz	r6, 845ca <__pow5mult+0x7e>
   84564:	07e3      	lsls	r3, r4, #31
   84566:	f04f 0800 	mov.w	r8, #0
   8456a:	d406      	bmi.n	8457a <__pow5mult+0x2e>
   8456c:	1064      	asrs	r4, r4, #1
   8456e:	d014      	beq.n	8459a <__pow5mult+0x4e>
   84570:	6830      	ldr	r0, [r6, #0]
   84572:	b1a8      	cbz	r0, 845a0 <__pow5mult+0x54>
   84574:	4606      	mov	r6, r0
   84576:	07e3      	lsls	r3, r4, #31
   84578:	d5f8      	bpl.n	8456c <__pow5mult+0x20>
   8457a:	4632      	mov	r2, r6
   8457c:	4629      	mov	r1, r5
   8457e:	4638      	mov	r0, r7
   84580:	f7ff ff52 	bl	84428 <__multiply>
   84584:	b1b5      	cbz	r5, 845b4 <__pow5mult+0x68>
   84586:	686a      	ldr	r2, [r5, #4]
   84588:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   8458a:	1064      	asrs	r4, r4, #1
   8458c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84590:	6029      	str	r1, [r5, #0]
   84592:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84596:	4605      	mov	r5, r0
   84598:	d1ea      	bne.n	84570 <__pow5mult+0x24>
   8459a:	4628      	mov	r0, r5
   8459c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   845a0:	4632      	mov	r2, r6
   845a2:	4631      	mov	r1, r6
   845a4:	4638      	mov	r0, r7
   845a6:	f7ff ff3f 	bl	84428 <__multiply>
   845aa:	6030      	str	r0, [r6, #0]
   845ac:	f8c0 8000 	str.w	r8, [r0]
   845b0:	4606      	mov	r6, r0
   845b2:	e7e0      	b.n	84576 <__pow5mult+0x2a>
   845b4:	4605      	mov	r5, r0
   845b6:	e7d9      	b.n	8456c <__pow5mult+0x20>
   845b8:	4a0b      	ldr	r2, [pc, #44]	; (845e8 <__pow5mult+0x9c>)
   845ba:	3b01      	subs	r3, #1
   845bc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   845c0:	2300      	movs	r3, #0
   845c2:	f7ff fe95 	bl	842f0 <__multadd>
   845c6:	4605      	mov	r5, r0
   845c8:	e7c8      	b.n	8455c <__pow5mult+0x10>
   845ca:	2101      	movs	r1, #1
   845cc:	4638      	mov	r0, r7
   845ce:	f7ff fe5f 	bl	84290 <_Balloc>
   845d2:	f240 2171 	movw	r1, #625	; 0x271
   845d6:	2201      	movs	r2, #1
   845d8:	2300      	movs	r3, #0
   845da:	6141      	str	r1, [r0, #20]
   845dc:	6102      	str	r2, [r0, #16]
   845de:	4606      	mov	r6, r0
   845e0:	64b8      	str	r0, [r7, #72]	; 0x48
   845e2:	6003      	str	r3, [r0, #0]
   845e4:	e7be      	b.n	84564 <__pow5mult+0x18>
   845e6:	bf00      	nop
   845e8:	00085ff0 	.word	0x00085ff0

000845ec <__lshift>:
   845ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   845f0:	690b      	ldr	r3, [r1, #16]
   845f2:	1154      	asrs	r4, r2, #5
   845f4:	eb04 0803 	add.w	r8, r4, r3
   845f8:	688b      	ldr	r3, [r1, #8]
   845fa:	f108 0501 	add.w	r5, r8, #1
   845fe:	429d      	cmp	r5, r3
   84600:	460e      	mov	r6, r1
   84602:	4691      	mov	r9, r2
   84604:	4607      	mov	r7, r0
   84606:	6849      	ldr	r1, [r1, #4]
   84608:	dd04      	ble.n	84614 <__lshift+0x28>
   8460a:	005b      	lsls	r3, r3, #1
   8460c:	429d      	cmp	r5, r3
   8460e:	f101 0101 	add.w	r1, r1, #1
   84612:	dcfa      	bgt.n	8460a <__lshift+0x1e>
   84614:	4638      	mov	r0, r7
   84616:	f7ff fe3b 	bl	84290 <_Balloc>
   8461a:	2c00      	cmp	r4, #0
   8461c:	f100 0314 	add.w	r3, r0, #20
   84620:	dd06      	ble.n	84630 <__lshift+0x44>
   84622:	2100      	movs	r1, #0
   84624:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84628:	f843 1b04 	str.w	r1, [r3], #4
   8462c:	429a      	cmp	r2, r3
   8462e:	d1fb      	bne.n	84628 <__lshift+0x3c>
   84630:	6934      	ldr	r4, [r6, #16]
   84632:	f106 0114 	add.w	r1, r6, #20
   84636:	f019 091f 	ands.w	r9, r9, #31
   8463a:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   8463e:	d01d      	beq.n	8467c <__lshift+0x90>
   84640:	2200      	movs	r2, #0
   84642:	f1c9 0c20 	rsb	ip, r9, #32
   84646:	680c      	ldr	r4, [r1, #0]
   84648:	fa04 f409 	lsl.w	r4, r4, r9
   8464c:	4314      	orrs	r4, r2
   8464e:	f843 4b04 	str.w	r4, [r3], #4
   84652:	f851 2b04 	ldr.w	r2, [r1], #4
   84656:	458e      	cmp	lr, r1
   84658:	fa22 f20c 	lsr.w	r2, r2, ip
   8465c:	d8f3      	bhi.n	84646 <__lshift+0x5a>
   8465e:	601a      	str	r2, [r3, #0]
   84660:	b10a      	cbz	r2, 84666 <__lshift+0x7a>
   84662:	f108 0502 	add.w	r5, r8, #2
   84666:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84668:	6872      	ldr	r2, [r6, #4]
   8466a:	3d01      	subs	r5, #1
   8466c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84670:	6105      	str	r5, [r0, #16]
   84672:	6031      	str	r1, [r6, #0]
   84674:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84678:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8467c:	3b04      	subs	r3, #4
   8467e:	f851 2b04 	ldr.w	r2, [r1], #4
   84682:	458e      	cmp	lr, r1
   84684:	f843 2f04 	str.w	r2, [r3, #4]!
   84688:	d8f9      	bhi.n	8467e <__lshift+0x92>
   8468a:	e7ec      	b.n	84666 <__lshift+0x7a>

0008468c <__mcmp>:
   8468c:	b430      	push	{r4, r5}
   8468e:	690b      	ldr	r3, [r1, #16]
   84690:	4605      	mov	r5, r0
   84692:	6900      	ldr	r0, [r0, #16]
   84694:	1ac0      	subs	r0, r0, r3
   84696:	d10f      	bne.n	846b8 <__mcmp+0x2c>
   84698:	009b      	lsls	r3, r3, #2
   8469a:	3514      	adds	r5, #20
   8469c:	3114      	adds	r1, #20
   8469e:	4419      	add	r1, r3
   846a0:	442b      	add	r3, r5
   846a2:	e001      	b.n	846a8 <__mcmp+0x1c>
   846a4:	429d      	cmp	r5, r3
   846a6:	d207      	bcs.n	846b8 <__mcmp+0x2c>
   846a8:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   846ac:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   846b0:	4294      	cmp	r4, r2
   846b2:	d0f7      	beq.n	846a4 <__mcmp+0x18>
   846b4:	d302      	bcc.n	846bc <__mcmp+0x30>
   846b6:	2001      	movs	r0, #1
   846b8:	bc30      	pop	{r4, r5}
   846ba:	4770      	bx	lr
   846bc:	f04f 30ff 	mov.w	r0, #4294967295
   846c0:	e7fa      	b.n	846b8 <__mcmp+0x2c>
   846c2:	bf00      	nop

000846c4 <__mdiff>:
   846c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   846c8:	690c      	ldr	r4, [r1, #16]
   846ca:	4689      	mov	r9, r1
   846cc:	6911      	ldr	r1, [r2, #16]
   846ce:	4692      	mov	sl, r2
   846d0:	1a64      	subs	r4, r4, r1
   846d2:	2c00      	cmp	r4, #0
   846d4:	d117      	bne.n	84706 <__mdiff+0x42>
   846d6:	0089      	lsls	r1, r1, #2
   846d8:	f109 0714 	add.w	r7, r9, #20
   846dc:	f102 0614 	add.w	r6, r2, #20
   846e0:	187b      	adds	r3, r7, r1
   846e2:	4431      	add	r1, r6
   846e4:	e001      	b.n	846ea <__mdiff+0x26>
   846e6:	429f      	cmp	r7, r3
   846e8:	d265      	bcs.n	847b6 <__mdiff+0xf2>
   846ea:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   846ee:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   846f2:	4295      	cmp	r5, r2
   846f4:	d0f7      	beq.n	846e6 <__mdiff+0x22>
   846f6:	d267      	bcs.n	847c8 <__mdiff+0x104>
   846f8:	464b      	mov	r3, r9
   846fa:	46bb      	mov	fp, r7
   846fc:	46d1      	mov	r9, sl
   846fe:	4637      	mov	r7, r6
   84700:	469a      	mov	sl, r3
   84702:	2401      	movs	r4, #1
   84704:	e005      	b.n	84712 <__mdiff+0x4e>
   84706:	db61      	blt.n	847cc <__mdiff+0x108>
   84708:	2400      	movs	r4, #0
   8470a:	f109 0714 	add.w	r7, r9, #20
   8470e:	f10a 0b14 	add.w	fp, sl, #20
   84712:	f8d9 1004 	ldr.w	r1, [r9, #4]
   84716:	f7ff fdbb 	bl	84290 <_Balloc>
   8471a:	465d      	mov	r5, fp
   8471c:	f04f 0800 	mov.w	r8, #0
   84720:	f8d9 e010 	ldr.w	lr, [r9, #16]
   84724:	f8da 3010 	ldr.w	r3, [sl, #16]
   84728:	463e      	mov	r6, r7
   8472a:	60c4      	str	r4, [r0, #12]
   8472c:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   84730:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   84734:	f100 0414 	add.w	r4, r0, #20
   84738:	f856 9b04 	ldr.w	r9, [r6], #4
   8473c:	f855 2b04 	ldr.w	r2, [r5], #4
   84740:	fa1f f389 	uxth.w	r3, r9
   84744:	4443      	add	r3, r8
   84746:	fa1f f882 	uxth.w	r8, r2
   8474a:	0c12      	lsrs	r2, r2, #16
   8474c:	eba3 0308 	sub.w	r3, r3, r8
   84750:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   84754:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84758:	b29b      	uxth	r3, r3
   8475a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8475e:	45ac      	cmp	ip, r5
   84760:	f844 3b04 	str.w	r3, [r4], #4
   84764:	ea4f 4822 	mov.w	r8, r2, asr #16
   84768:	d8e6      	bhi.n	84738 <__mdiff+0x74>
   8476a:	42b7      	cmp	r7, r6
   8476c:	d917      	bls.n	8479e <__mdiff+0xda>
   8476e:	46a4      	mov	ip, r4
   84770:	4635      	mov	r5, r6
   84772:	f855 3b04 	ldr.w	r3, [r5], #4
   84776:	b299      	uxth	r1, r3
   84778:	4441      	add	r1, r8
   8477a:	140a      	asrs	r2, r1, #16
   8477c:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   84780:	b289      	uxth	r1, r1
   84782:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   84786:	42af      	cmp	r7, r5
   84788:	f84c 3b04 	str.w	r3, [ip], #4
   8478c:	ea4f 4822 	mov.w	r8, r2, asr #16
   84790:	d8ef      	bhi.n	84772 <__mdiff+0xae>
   84792:	43f6      	mvns	r6, r6
   84794:	4437      	add	r7, r6
   84796:	f027 0703 	bic.w	r7, r7, #3
   8479a:	3704      	adds	r7, #4
   8479c:	443c      	add	r4, r7
   8479e:	3c04      	subs	r4, #4
   847a0:	b92b      	cbnz	r3, 847ae <__mdiff+0xea>
   847a2:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   847a6:	f10e 3eff 	add.w	lr, lr, #4294967295
   847aa:	2b00      	cmp	r3, #0
   847ac:	d0f9      	beq.n	847a2 <__mdiff+0xde>
   847ae:	f8c0 e010 	str.w	lr, [r0, #16]
   847b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   847b6:	2100      	movs	r1, #0
   847b8:	f7ff fd6a 	bl	84290 <_Balloc>
   847bc:	2201      	movs	r2, #1
   847be:	2300      	movs	r3, #0
   847c0:	6102      	str	r2, [r0, #16]
   847c2:	6143      	str	r3, [r0, #20]
   847c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   847c8:	46b3      	mov	fp, r6
   847ca:	e7a2      	b.n	84712 <__mdiff+0x4e>
   847cc:	464b      	mov	r3, r9
   847ce:	f109 0b14 	add.w	fp, r9, #20
   847d2:	f102 0714 	add.w	r7, r2, #20
   847d6:	4691      	mov	r9, r2
   847d8:	2401      	movs	r4, #1
   847da:	469a      	mov	sl, r3
   847dc:	e799      	b.n	84712 <__mdiff+0x4e>
   847de:	bf00      	nop

000847e0 <__d2b>:
   847e0:	b5f0      	push	{r4, r5, r6, r7, lr}
   847e2:	2101      	movs	r1, #1
   847e4:	b083      	sub	sp, #12
   847e6:	461c      	mov	r4, r3
   847e8:	f3c3 550a 	ubfx	r5, r3, #20, #11
   847ec:	4616      	mov	r6, r2
   847ee:	f7ff fd4f 	bl	84290 <_Balloc>
   847f2:	f3c4 0413 	ubfx	r4, r4, #0, #20
   847f6:	4607      	mov	r7, r0
   847f8:	b10d      	cbz	r5, 847fe <__d2b+0x1e>
   847fa:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   847fe:	9401      	str	r4, [sp, #4]
   84800:	b306      	cbz	r6, 84844 <__d2b+0x64>
   84802:	a802      	add	r0, sp, #8
   84804:	f840 6d08 	str.w	r6, [r0, #-8]!
   84808:	f7ff fdd4 	bl	843b4 <__lo0bits>
   8480c:	2800      	cmp	r0, #0
   8480e:	d130      	bne.n	84872 <__d2b+0x92>
   84810:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84814:	617a      	str	r2, [r7, #20]
   84816:	2b00      	cmp	r3, #0
   84818:	bf0c      	ite	eq
   8481a:	2101      	moveq	r1, #1
   8481c:	2102      	movne	r1, #2
   8481e:	61bb      	str	r3, [r7, #24]
   84820:	6139      	str	r1, [r7, #16]
   84822:	b9d5      	cbnz	r5, 8485a <__d2b+0x7a>
   84824:	9a08      	ldr	r2, [sp, #32]
   84826:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   8482a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   8482e:	6010      	str	r0, [r2, #0]
   84830:	6918      	ldr	r0, [r3, #16]
   84832:	f7ff fd9f 	bl	84374 <__hi0bits>
   84836:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84838:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   8483c:	6018      	str	r0, [r3, #0]
   8483e:	4638      	mov	r0, r7
   84840:	b003      	add	sp, #12
   84842:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84844:	a801      	add	r0, sp, #4
   84846:	f7ff fdb5 	bl	843b4 <__lo0bits>
   8484a:	2201      	movs	r2, #1
   8484c:	9b01      	ldr	r3, [sp, #4]
   8484e:	4611      	mov	r1, r2
   84850:	3020      	adds	r0, #32
   84852:	613a      	str	r2, [r7, #16]
   84854:	617b      	str	r3, [r7, #20]
   84856:	2d00      	cmp	r5, #0
   84858:	d0e4      	beq.n	84824 <__d2b+0x44>
   8485a:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   8485e:	9a08      	ldr	r2, [sp, #32]
   84860:	4403      	add	r3, r0
   84862:	6013      	str	r3, [r2, #0]
   84864:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84866:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   8486a:	6018      	str	r0, [r3, #0]
   8486c:	4638      	mov	r0, r7
   8486e:	b003      	add	sp, #12
   84870:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84872:	9b01      	ldr	r3, [sp, #4]
   84874:	f1c0 0220 	rsb	r2, r0, #32
   84878:	9900      	ldr	r1, [sp, #0]
   8487a:	fa03 f202 	lsl.w	r2, r3, r2
   8487e:	430a      	orrs	r2, r1
   84880:	40c3      	lsrs	r3, r0
   84882:	9301      	str	r3, [sp, #4]
   84884:	617a      	str	r2, [r7, #20]
   84886:	e7c6      	b.n	84816 <__d2b+0x36>

00084888 <_sbrk_r>:
   84888:	b538      	push	{r3, r4, r5, lr}
   8488a:	2300      	movs	r3, #0
   8488c:	4c06      	ldr	r4, [pc, #24]	; (848a8 <_sbrk_r+0x20>)
   8488e:	4605      	mov	r5, r0
   84890:	4608      	mov	r0, r1
   84892:	6023      	str	r3, [r4, #0]
   84894:	f7fc fe0e 	bl	814b4 <_sbrk>
   84898:	1c43      	adds	r3, r0, #1
   8489a:	d000      	beq.n	8489e <_sbrk_r+0x16>
   8489c:	bd38      	pop	{r3, r4, r5, pc}
   8489e:	6823      	ldr	r3, [r4, #0]
   848a0:	2b00      	cmp	r3, #0
   848a2:	d0fb      	beq.n	8489c <_sbrk_r+0x14>
   848a4:	602b      	str	r3, [r5, #0]
   848a6:	bd38      	pop	{r3, r4, r5, pc}
   848a8:	20071430 	.word	0x20071430

000848ac <__ssprint_r>:
   848ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   848b0:	6893      	ldr	r3, [r2, #8]
   848b2:	b083      	sub	sp, #12
   848b4:	4690      	mov	r8, r2
   848b6:	2b00      	cmp	r3, #0
   848b8:	d070      	beq.n	8499c <__ssprint_r+0xf0>
   848ba:	4682      	mov	sl, r0
   848bc:	460c      	mov	r4, r1
   848be:	6817      	ldr	r7, [r2, #0]
   848c0:	688d      	ldr	r5, [r1, #8]
   848c2:	6808      	ldr	r0, [r1, #0]
   848c4:	e042      	b.n	8494c <__ssprint_r+0xa0>
   848c6:	89a3      	ldrh	r3, [r4, #12]
   848c8:	f413 6f90 	tst.w	r3, #1152	; 0x480
   848cc:	d02e      	beq.n	8492c <__ssprint_r+0x80>
   848ce:	6965      	ldr	r5, [r4, #20]
   848d0:	6921      	ldr	r1, [r4, #16]
   848d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   848d6:	eba0 0b01 	sub.w	fp, r0, r1
   848da:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   848de:	f10b 0001 	add.w	r0, fp, #1
   848e2:	106d      	asrs	r5, r5, #1
   848e4:	4430      	add	r0, r6
   848e6:	42a8      	cmp	r0, r5
   848e8:	462a      	mov	r2, r5
   848ea:	bf84      	itt	hi
   848ec:	4605      	movhi	r5, r0
   848ee:	462a      	movhi	r2, r5
   848f0:	055b      	lsls	r3, r3, #21
   848f2:	d538      	bpl.n	84966 <__ssprint_r+0xba>
   848f4:	4611      	mov	r1, r2
   848f6:	4650      	mov	r0, sl
   848f8:	f7ff f968 	bl	83bcc <_malloc_r>
   848fc:	2800      	cmp	r0, #0
   848fe:	d03c      	beq.n	8497a <__ssprint_r+0xce>
   84900:	465a      	mov	r2, fp
   84902:	6921      	ldr	r1, [r4, #16]
   84904:	9001      	str	r0, [sp, #4]
   84906:	f7ff fc49 	bl	8419c <memcpy>
   8490a:	89a2      	ldrh	r2, [r4, #12]
   8490c:	9b01      	ldr	r3, [sp, #4]
   8490e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84912:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84916:	81a2      	strh	r2, [r4, #12]
   84918:	eba5 020b 	sub.w	r2, r5, fp
   8491c:	eb03 000b 	add.w	r0, r3, fp
   84920:	6165      	str	r5, [r4, #20]
   84922:	46b3      	mov	fp, r6
   84924:	4635      	mov	r5, r6
   84926:	6123      	str	r3, [r4, #16]
   84928:	6020      	str	r0, [r4, #0]
   8492a:	60a2      	str	r2, [r4, #8]
   8492c:	465a      	mov	r2, fp
   8492e:	4649      	mov	r1, r9
   84930:	f000 fa0c 	bl	84d4c <memmove>
   84934:	f8d8 3008 	ldr.w	r3, [r8, #8]
   84938:	68a2      	ldr	r2, [r4, #8]
   8493a:	6820      	ldr	r0, [r4, #0]
   8493c:	1b55      	subs	r5, r2, r5
   8493e:	4458      	add	r0, fp
   84940:	1b9e      	subs	r6, r3, r6
   84942:	60a5      	str	r5, [r4, #8]
   84944:	6020      	str	r0, [r4, #0]
   84946:	f8c8 6008 	str.w	r6, [r8, #8]
   8494a:	b33e      	cbz	r6, 8499c <__ssprint_r+0xf0>
   8494c:	687e      	ldr	r6, [r7, #4]
   8494e:	463b      	mov	r3, r7
   84950:	3708      	adds	r7, #8
   84952:	2e00      	cmp	r6, #0
   84954:	d0fa      	beq.n	8494c <__ssprint_r+0xa0>
   84956:	42ae      	cmp	r6, r5
   84958:	f8d3 9000 	ldr.w	r9, [r3]
   8495c:	46ab      	mov	fp, r5
   8495e:	d2b2      	bcs.n	848c6 <__ssprint_r+0x1a>
   84960:	4635      	mov	r5, r6
   84962:	46b3      	mov	fp, r6
   84964:	e7e2      	b.n	8492c <__ssprint_r+0x80>
   84966:	4650      	mov	r0, sl
   84968:	f000 fa54 	bl	84e14 <_realloc_r>
   8496c:	4603      	mov	r3, r0
   8496e:	2800      	cmp	r0, #0
   84970:	d1d2      	bne.n	84918 <__ssprint_r+0x6c>
   84972:	6921      	ldr	r1, [r4, #16]
   84974:	4650      	mov	r0, sl
   84976:	f000 f8ed 	bl	84b54 <_free_r>
   8497a:	230c      	movs	r3, #12
   8497c:	2200      	movs	r2, #0
   8497e:	f04f 30ff 	mov.w	r0, #4294967295
   84982:	f8ca 3000 	str.w	r3, [sl]
   84986:	89a3      	ldrh	r3, [r4, #12]
   84988:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8498c:	81a3      	strh	r3, [r4, #12]
   8498e:	f8c8 2008 	str.w	r2, [r8, #8]
   84992:	f8c8 2004 	str.w	r2, [r8, #4]
   84996:	b003      	add	sp, #12
   84998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8499c:	2000      	movs	r0, #0
   8499e:	f8c8 0004 	str.w	r0, [r8, #4]
   849a2:	b003      	add	sp, #12
   849a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000849a8 <__register_exitproc>:
   849a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   849ac:	4c27      	ldr	r4, [pc, #156]	; (84a4c <__register_exitproc+0xa4>)
   849ae:	4607      	mov	r7, r0
   849b0:	6826      	ldr	r6, [r4, #0]
   849b2:	4688      	mov	r8, r1
   849b4:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   849b8:	4692      	mov	sl, r2
   849ba:	4699      	mov	r9, r3
   849bc:	2c00      	cmp	r4, #0
   849be:	d03c      	beq.n	84a3a <__register_exitproc+0x92>
   849c0:	6865      	ldr	r5, [r4, #4]
   849c2:	2d1f      	cmp	r5, #31
   849c4:	dc1a      	bgt.n	849fc <__register_exitproc+0x54>
   849c6:	f105 0e01 	add.w	lr, r5, #1
   849ca:	b17f      	cbz	r7, 849ec <__register_exitproc+0x44>
   849cc:	2001      	movs	r0, #1
   849ce:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   849d2:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   849d6:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
   849da:	fa00 f205 	lsl.w	r2, r0, r5
   849de:	4311      	orrs	r1, r2
   849e0:	2f02      	cmp	r7, #2
   849e2:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
   849e6:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   849ea:	d020      	beq.n	84a2e <__register_exitproc+0x86>
   849ec:	3502      	adds	r5, #2
   849ee:	f8c4 e004 	str.w	lr, [r4, #4]
   849f2:	2000      	movs	r0, #0
   849f4:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
   849f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   849fc:	4b14      	ldr	r3, [pc, #80]	; (84a50 <__register_exitproc+0xa8>)
   849fe:	b30b      	cbz	r3, 84a44 <__register_exitproc+0x9c>
   84a00:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84a04:	f3af 8000 	nop.w
   84a08:	4604      	mov	r4, r0
   84a0a:	b1d8      	cbz	r0, 84a44 <__register_exitproc+0x9c>
   84a0c:	2000      	movs	r0, #0
   84a0e:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
   84a12:	f04f 0e01 	mov.w	lr, #1
   84a16:	6060      	str	r0, [r4, #4]
   84a18:	6023      	str	r3, [r4, #0]
   84a1a:	4605      	mov	r5, r0
   84a1c:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84a20:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84a24:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84a28:	2f00      	cmp	r7, #0
   84a2a:	d0df      	beq.n	849ec <__register_exitproc+0x44>
   84a2c:	e7ce      	b.n	849cc <__register_exitproc+0x24>
   84a2e:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84a32:	431a      	orrs	r2, r3
   84a34:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   84a38:	e7d8      	b.n	849ec <__register_exitproc+0x44>
   84a3a:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84a3e:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84a42:	e7bd      	b.n	849c0 <__register_exitproc+0x18>
   84a44:	f04f 30ff 	mov.w	r0, #4294967295
   84a48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84a4c:	00085e88 	.word	0x00085e88
   84a50:	00000000 	.word	0x00000000

00084a54 <_calloc_r>:
   84a54:	b510      	push	{r4, lr}
   84a56:	fb02 f101 	mul.w	r1, r2, r1
   84a5a:	f7ff f8b7 	bl	83bcc <_malloc_r>
   84a5e:	4604      	mov	r4, r0
   84a60:	b1d8      	cbz	r0, 84a9a <_calloc_r+0x46>
   84a62:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84a66:	f022 0203 	bic.w	r2, r2, #3
   84a6a:	3a04      	subs	r2, #4
   84a6c:	2a24      	cmp	r2, #36	; 0x24
   84a6e:	d818      	bhi.n	84aa2 <_calloc_r+0x4e>
   84a70:	2a13      	cmp	r2, #19
   84a72:	d914      	bls.n	84a9e <_calloc_r+0x4a>
   84a74:	2300      	movs	r3, #0
   84a76:	2a1b      	cmp	r2, #27
   84a78:	6003      	str	r3, [r0, #0]
   84a7a:	6043      	str	r3, [r0, #4]
   84a7c:	d916      	bls.n	84aac <_calloc_r+0x58>
   84a7e:	2a24      	cmp	r2, #36	; 0x24
   84a80:	6083      	str	r3, [r0, #8]
   84a82:	60c3      	str	r3, [r0, #12]
   84a84:	bf11      	iteee	ne
   84a86:	f100 0210 	addne.w	r2, r0, #16
   84a8a:	6103      	streq	r3, [r0, #16]
   84a8c:	6143      	streq	r3, [r0, #20]
   84a8e:	f100 0218 	addeq.w	r2, r0, #24
   84a92:	2300      	movs	r3, #0
   84a94:	6013      	str	r3, [r2, #0]
   84a96:	6053      	str	r3, [r2, #4]
   84a98:	6093      	str	r3, [r2, #8]
   84a9a:	4620      	mov	r0, r4
   84a9c:	bd10      	pop	{r4, pc}
   84a9e:	4602      	mov	r2, r0
   84aa0:	e7f7      	b.n	84a92 <_calloc_r+0x3e>
   84aa2:	2100      	movs	r1, #0
   84aa4:	f7fc fd4a 	bl	8153c <memset>
   84aa8:	4620      	mov	r0, r4
   84aaa:	bd10      	pop	{r4, pc}
   84aac:	f100 0208 	add.w	r2, r0, #8
   84ab0:	e7ef      	b.n	84a92 <_calloc_r+0x3e>
   84ab2:	bf00      	nop

00084ab4 <_malloc_trim_r>:
   84ab4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84ab6:	460c      	mov	r4, r1
   84ab8:	4f23      	ldr	r7, [pc, #140]	; (84b48 <_malloc_trim_r+0x94>)
   84aba:	4606      	mov	r6, r0
   84abc:	f7ff fbe4 	bl	84288 <__malloc_lock>
   84ac0:	68bb      	ldr	r3, [r7, #8]
   84ac2:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84ac6:	685d      	ldr	r5, [r3, #4]
   84ac8:	310f      	adds	r1, #15
   84aca:	f025 0503 	bic.w	r5, r5, #3
   84ace:	4429      	add	r1, r5
   84ad0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84ad4:	f021 010f 	bic.w	r1, r1, #15
   84ad8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84adc:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84ae0:	db07      	blt.n	84af2 <_malloc_trim_r+0x3e>
   84ae2:	2100      	movs	r1, #0
   84ae4:	4630      	mov	r0, r6
   84ae6:	f7ff fecf 	bl	84888 <_sbrk_r>
   84aea:	68bb      	ldr	r3, [r7, #8]
   84aec:	442b      	add	r3, r5
   84aee:	4298      	cmp	r0, r3
   84af0:	d004      	beq.n	84afc <_malloc_trim_r+0x48>
   84af2:	4630      	mov	r0, r6
   84af4:	f7ff fbca 	bl	8428c <__malloc_unlock>
   84af8:	2000      	movs	r0, #0
   84afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84afc:	4261      	negs	r1, r4
   84afe:	4630      	mov	r0, r6
   84b00:	f7ff fec2 	bl	84888 <_sbrk_r>
   84b04:	3001      	adds	r0, #1
   84b06:	d00d      	beq.n	84b24 <_malloc_trim_r+0x70>
   84b08:	4b10      	ldr	r3, [pc, #64]	; (84b4c <_malloc_trim_r+0x98>)
   84b0a:	68ba      	ldr	r2, [r7, #8]
   84b0c:	6819      	ldr	r1, [r3, #0]
   84b0e:	1b2d      	subs	r5, r5, r4
   84b10:	f045 0501 	orr.w	r5, r5, #1
   84b14:	4630      	mov	r0, r6
   84b16:	1b09      	subs	r1, r1, r4
   84b18:	6055      	str	r5, [r2, #4]
   84b1a:	6019      	str	r1, [r3, #0]
   84b1c:	f7ff fbb6 	bl	8428c <__malloc_unlock>
   84b20:	2001      	movs	r0, #1
   84b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84b24:	2100      	movs	r1, #0
   84b26:	4630      	mov	r0, r6
   84b28:	f7ff feae 	bl	84888 <_sbrk_r>
   84b2c:	68ba      	ldr	r2, [r7, #8]
   84b2e:	1a83      	subs	r3, r0, r2
   84b30:	2b0f      	cmp	r3, #15
   84b32:	ddde      	ble.n	84af2 <_malloc_trim_r+0x3e>
   84b34:	4c06      	ldr	r4, [pc, #24]	; (84b50 <_malloc_trim_r+0x9c>)
   84b36:	4905      	ldr	r1, [pc, #20]	; (84b4c <_malloc_trim_r+0x98>)
   84b38:	6824      	ldr	r4, [r4, #0]
   84b3a:	f043 0301 	orr.w	r3, r3, #1
   84b3e:	1b00      	subs	r0, r0, r4
   84b40:	6053      	str	r3, [r2, #4]
   84b42:	6008      	str	r0, [r1, #0]
   84b44:	e7d5      	b.n	84af2 <_malloc_trim_r+0x3e>
   84b46:	bf00      	nop
   84b48:	20070970 	.word	0x20070970
   84b4c:	20070f88 	.word	0x20070f88
   84b50:	20070d78 	.word	0x20070d78

00084b54 <_free_r>:
   84b54:	2900      	cmp	r1, #0
   84b56:	d044      	beq.n	84be2 <_free_r+0x8e>
   84b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84b5c:	460d      	mov	r5, r1
   84b5e:	4680      	mov	r8, r0
   84b60:	f7ff fb92 	bl	84288 <__malloc_lock>
   84b64:	f855 7c04 	ldr.w	r7, [r5, #-4]
   84b68:	4969      	ldr	r1, [pc, #420]	; (84d10 <_free_r+0x1bc>)
   84b6a:	f1a5 0408 	sub.w	r4, r5, #8
   84b6e:	f027 0301 	bic.w	r3, r7, #1
   84b72:	18e2      	adds	r2, r4, r3
   84b74:	688e      	ldr	r6, [r1, #8]
   84b76:	6850      	ldr	r0, [r2, #4]
   84b78:	42b2      	cmp	r2, r6
   84b7a:	f020 0003 	bic.w	r0, r0, #3
   84b7e:	d05e      	beq.n	84c3e <_free_r+0xea>
   84b80:	07fe      	lsls	r6, r7, #31
   84b82:	6050      	str	r0, [r2, #4]
   84b84:	d40b      	bmi.n	84b9e <_free_r+0x4a>
   84b86:	f855 7c08 	ldr.w	r7, [r5, #-8]
   84b8a:	f101 0e08 	add.w	lr, r1, #8
   84b8e:	1be4      	subs	r4, r4, r7
   84b90:	68a5      	ldr	r5, [r4, #8]
   84b92:	443b      	add	r3, r7
   84b94:	4575      	cmp	r5, lr
   84b96:	d06d      	beq.n	84c74 <_free_r+0x120>
   84b98:	68e7      	ldr	r7, [r4, #12]
   84b9a:	60ef      	str	r7, [r5, #12]
   84b9c:	60bd      	str	r5, [r7, #8]
   84b9e:	1815      	adds	r5, r2, r0
   84ba0:	686d      	ldr	r5, [r5, #4]
   84ba2:	07ed      	lsls	r5, r5, #31
   84ba4:	d53e      	bpl.n	84c24 <_free_r+0xd0>
   84ba6:	f043 0201 	orr.w	r2, r3, #1
   84baa:	6062      	str	r2, [r4, #4]
   84bac:	50e3      	str	r3, [r4, r3]
   84bae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84bb2:	d217      	bcs.n	84be4 <_free_r+0x90>
   84bb4:	2201      	movs	r2, #1
   84bb6:	08db      	lsrs	r3, r3, #3
   84bb8:	1098      	asrs	r0, r3, #2
   84bba:	684d      	ldr	r5, [r1, #4]
   84bbc:	4413      	add	r3, r2
   84bbe:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   84bc2:	4082      	lsls	r2, r0
   84bc4:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   84bc8:	432a      	orrs	r2, r5
   84bca:	3808      	subs	r0, #8
   84bcc:	60e0      	str	r0, [r4, #12]
   84bce:	60a7      	str	r7, [r4, #8]
   84bd0:	604a      	str	r2, [r1, #4]
   84bd2:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   84bd6:	60fc      	str	r4, [r7, #12]
   84bd8:	4640      	mov	r0, r8
   84bda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84bde:	f7ff bb55 	b.w	8428c <__malloc_unlock>
   84be2:	4770      	bx	lr
   84be4:	0a5a      	lsrs	r2, r3, #9
   84be6:	2a04      	cmp	r2, #4
   84be8:	d852      	bhi.n	84c90 <_free_r+0x13c>
   84bea:	099a      	lsrs	r2, r3, #6
   84bec:	f102 0739 	add.w	r7, r2, #57	; 0x39
   84bf0:	00ff      	lsls	r7, r7, #3
   84bf2:	f102 0538 	add.w	r5, r2, #56	; 0x38
   84bf6:	19c8      	adds	r0, r1, r7
   84bf8:	59ca      	ldr	r2, [r1, r7]
   84bfa:	3808      	subs	r0, #8
   84bfc:	4290      	cmp	r0, r2
   84bfe:	d04f      	beq.n	84ca0 <_free_r+0x14c>
   84c00:	6851      	ldr	r1, [r2, #4]
   84c02:	f021 0103 	bic.w	r1, r1, #3
   84c06:	428b      	cmp	r3, r1
   84c08:	d232      	bcs.n	84c70 <_free_r+0x11c>
   84c0a:	6892      	ldr	r2, [r2, #8]
   84c0c:	4290      	cmp	r0, r2
   84c0e:	d1f7      	bne.n	84c00 <_free_r+0xac>
   84c10:	68c3      	ldr	r3, [r0, #12]
   84c12:	60a0      	str	r0, [r4, #8]
   84c14:	60e3      	str	r3, [r4, #12]
   84c16:	609c      	str	r4, [r3, #8]
   84c18:	60c4      	str	r4, [r0, #12]
   84c1a:	4640      	mov	r0, r8
   84c1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84c20:	f7ff bb34 	b.w	8428c <__malloc_unlock>
   84c24:	6895      	ldr	r5, [r2, #8]
   84c26:	4f3b      	ldr	r7, [pc, #236]	; (84d14 <_free_r+0x1c0>)
   84c28:	4403      	add	r3, r0
   84c2a:	42bd      	cmp	r5, r7
   84c2c:	d040      	beq.n	84cb0 <_free_r+0x15c>
   84c2e:	68d0      	ldr	r0, [r2, #12]
   84c30:	f043 0201 	orr.w	r2, r3, #1
   84c34:	60e8      	str	r0, [r5, #12]
   84c36:	6085      	str	r5, [r0, #8]
   84c38:	6062      	str	r2, [r4, #4]
   84c3a:	50e3      	str	r3, [r4, r3]
   84c3c:	e7b7      	b.n	84bae <_free_r+0x5a>
   84c3e:	07ff      	lsls	r7, r7, #31
   84c40:	4403      	add	r3, r0
   84c42:	d407      	bmi.n	84c54 <_free_r+0x100>
   84c44:	f855 5c08 	ldr.w	r5, [r5, #-8]
   84c48:	1b64      	subs	r4, r4, r5
   84c4a:	68e2      	ldr	r2, [r4, #12]
   84c4c:	68a0      	ldr	r0, [r4, #8]
   84c4e:	442b      	add	r3, r5
   84c50:	60c2      	str	r2, [r0, #12]
   84c52:	6090      	str	r0, [r2, #8]
   84c54:	4a30      	ldr	r2, [pc, #192]	; (84d18 <_free_r+0x1c4>)
   84c56:	f043 0001 	orr.w	r0, r3, #1
   84c5a:	6812      	ldr	r2, [r2, #0]
   84c5c:	6060      	str	r0, [r4, #4]
   84c5e:	4293      	cmp	r3, r2
   84c60:	608c      	str	r4, [r1, #8]
   84c62:	d3b9      	bcc.n	84bd8 <_free_r+0x84>
   84c64:	4b2d      	ldr	r3, [pc, #180]	; (84d1c <_free_r+0x1c8>)
   84c66:	4640      	mov	r0, r8
   84c68:	6819      	ldr	r1, [r3, #0]
   84c6a:	f7ff ff23 	bl	84ab4 <_malloc_trim_r>
   84c6e:	e7b3      	b.n	84bd8 <_free_r+0x84>
   84c70:	4610      	mov	r0, r2
   84c72:	e7cd      	b.n	84c10 <_free_r+0xbc>
   84c74:	1811      	adds	r1, r2, r0
   84c76:	6849      	ldr	r1, [r1, #4]
   84c78:	07c9      	lsls	r1, r1, #31
   84c7a:	d444      	bmi.n	84d06 <_free_r+0x1b2>
   84c7c:	6891      	ldr	r1, [r2, #8]
   84c7e:	4403      	add	r3, r0
   84c80:	68d2      	ldr	r2, [r2, #12]
   84c82:	f043 0001 	orr.w	r0, r3, #1
   84c86:	60ca      	str	r2, [r1, #12]
   84c88:	6091      	str	r1, [r2, #8]
   84c8a:	6060      	str	r0, [r4, #4]
   84c8c:	50e3      	str	r3, [r4, r3]
   84c8e:	e7a3      	b.n	84bd8 <_free_r+0x84>
   84c90:	2a14      	cmp	r2, #20
   84c92:	d816      	bhi.n	84cc2 <_free_r+0x16e>
   84c94:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   84c98:	00ff      	lsls	r7, r7, #3
   84c9a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   84c9e:	e7aa      	b.n	84bf6 <_free_r+0xa2>
   84ca0:	2301      	movs	r3, #1
   84ca2:	10aa      	asrs	r2, r5, #2
   84ca4:	684d      	ldr	r5, [r1, #4]
   84ca6:	4093      	lsls	r3, r2
   84ca8:	432b      	orrs	r3, r5
   84caa:	604b      	str	r3, [r1, #4]
   84cac:	4603      	mov	r3, r0
   84cae:	e7b0      	b.n	84c12 <_free_r+0xbe>
   84cb0:	f043 0201 	orr.w	r2, r3, #1
   84cb4:	614c      	str	r4, [r1, #20]
   84cb6:	610c      	str	r4, [r1, #16]
   84cb8:	60e5      	str	r5, [r4, #12]
   84cba:	60a5      	str	r5, [r4, #8]
   84cbc:	6062      	str	r2, [r4, #4]
   84cbe:	50e3      	str	r3, [r4, r3]
   84cc0:	e78a      	b.n	84bd8 <_free_r+0x84>
   84cc2:	2a54      	cmp	r2, #84	; 0x54
   84cc4:	d806      	bhi.n	84cd4 <_free_r+0x180>
   84cc6:	0b1a      	lsrs	r2, r3, #12
   84cc8:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   84ccc:	00ff      	lsls	r7, r7, #3
   84cce:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   84cd2:	e790      	b.n	84bf6 <_free_r+0xa2>
   84cd4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84cd8:	d806      	bhi.n	84ce8 <_free_r+0x194>
   84cda:	0bda      	lsrs	r2, r3, #15
   84cdc:	f102 0778 	add.w	r7, r2, #120	; 0x78
   84ce0:	00ff      	lsls	r7, r7, #3
   84ce2:	f102 0577 	add.w	r5, r2, #119	; 0x77
   84ce6:	e786      	b.n	84bf6 <_free_r+0xa2>
   84ce8:	f240 5054 	movw	r0, #1364	; 0x554
   84cec:	4282      	cmp	r2, r0
   84cee:	d806      	bhi.n	84cfe <_free_r+0x1aa>
   84cf0:	0c9a      	lsrs	r2, r3, #18
   84cf2:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   84cf6:	00ff      	lsls	r7, r7, #3
   84cf8:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   84cfc:	e77b      	b.n	84bf6 <_free_r+0xa2>
   84cfe:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   84d02:	257e      	movs	r5, #126	; 0x7e
   84d04:	e777      	b.n	84bf6 <_free_r+0xa2>
   84d06:	f043 0101 	orr.w	r1, r3, #1
   84d0a:	6061      	str	r1, [r4, #4]
   84d0c:	6013      	str	r3, [r2, #0]
   84d0e:	e763      	b.n	84bd8 <_free_r+0x84>
   84d10:	20070970 	.word	0x20070970
   84d14:	20070978 	.word	0x20070978
   84d18:	20070d7c 	.word	0x20070d7c
   84d1c:	20070fb8 	.word	0x20070fb8

00084d20 <__ascii_mbtowc>:
   84d20:	b082      	sub	sp, #8
   84d22:	b149      	cbz	r1, 84d38 <__ascii_mbtowc+0x18>
   84d24:	b15a      	cbz	r2, 84d3e <__ascii_mbtowc+0x1e>
   84d26:	b16b      	cbz	r3, 84d44 <__ascii_mbtowc+0x24>
   84d28:	7813      	ldrb	r3, [r2, #0]
   84d2a:	600b      	str	r3, [r1, #0]
   84d2c:	7812      	ldrb	r2, [r2, #0]
   84d2e:	1c10      	adds	r0, r2, #0
   84d30:	bf18      	it	ne
   84d32:	2001      	movne	r0, #1
   84d34:	b002      	add	sp, #8
   84d36:	4770      	bx	lr
   84d38:	a901      	add	r1, sp, #4
   84d3a:	2a00      	cmp	r2, #0
   84d3c:	d1f3      	bne.n	84d26 <__ascii_mbtowc+0x6>
   84d3e:	4610      	mov	r0, r2
   84d40:	b002      	add	sp, #8
   84d42:	4770      	bx	lr
   84d44:	f06f 0001 	mvn.w	r0, #1
   84d48:	e7f4      	b.n	84d34 <__ascii_mbtowc+0x14>
   84d4a:	bf00      	nop

00084d4c <memmove>:
   84d4c:	4288      	cmp	r0, r1
   84d4e:	b5f0      	push	{r4, r5, r6, r7, lr}
   84d50:	d90d      	bls.n	84d6e <memmove+0x22>
   84d52:	188b      	adds	r3, r1, r2
   84d54:	4298      	cmp	r0, r3
   84d56:	d20a      	bcs.n	84d6e <memmove+0x22>
   84d58:	1884      	adds	r4, r0, r2
   84d5a:	2a00      	cmp	r2, #0
   84d5c:	d051      	beq.n	84e02 <memmove+0xb6>
   84d5e:	4622      	mov	r2, r4
   84d60:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   84d64:	4299      	cmp	r1, r3
   84d66:	f802 4d01 	strb.w	r4, [r2, #-1]!
   84d6a:	d1f9      	bne.n	84d60 <memmove+0x14>
   84d6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84d6e:	2a0f      	cmp	r2, #15
   84d70:	d948      	bls.n	84e04 <memmove+0xb8>
   84d72:	ea41 0300 	orr.w	r3, r1, r0
   84d76:	079b      	lsls	r3, r3, #30
   84d78:	d146      	bne.n	84e08 <memmove+0xbc>
   84d7a:	4615      	mov	r5, r2
   84d7c:	f100 0410 	add.w	r4, r0, #16
   84d80:	f101 0310 	add.w	r3, r1, #16
   84d84:	f853 6c10 	ldr.w	r6, [r3, #-16]
   84d88:	3d10      	subs	r5, #16
   84d8a:	f844 6c10 	str.w	r6, [r4, #-16]
   84d8e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   84d92:	2d0f      	cmp	r5, #15
   84d94:	f844 6c0c 	str.w	r6, [r4, #-12]
   84d98:	f853 6c08 	ldr.w	r6, [r3, #-8]
   84d9c:	f104 0410 	add.w	r4, r4, #16
   84da0:	f844 6c18 	str.w	r6, [r4, #-24]
   84da4:	f853 6c04 	ldr.w	r6, [r3, #-4]
   84da8:	f103 0310 	add.w	r3, r3, #16
   84dac:	f844 6c14 	str.w	r6, [r4, #-20]
   84db0:	d8e8      	bhi.n	84d84 <memmove+0x38>
   84db2:	f1a2 0310 	sub.w	r3, r2, #16
   84db6:	f023 030f 	bic.w	r3, r3, #15
   84dba:	f002 0e0f 	and.w	lr, r2, #15
   84dbe:	3310      	adds	r3, #16
   84dc0:	f1be 0f03 	cmp.w	lr, #3
   84dc4:	4419      	add	r1, r3
   84dc6:	4403      	add	r3, r0
   84dc8:	d921      	bls.n	84e0e <memmove+0xc2>
   84dca:	460e      	mov	r6, r1
   84dcc:	4674      	mov	r4, lr
   84dce:	1f1d      	subs	r5, r3, #4
   84dd0:	f856 7b04 	ldr.w	r7, [r6], #4
   84dd4:	3c04      	subs	r4, #4
   84dd6:	2c03      	cmp	r4, #3
   84dd8:	f845 7f04 	str.w	r7, [r5, #4]!
   84ddc:	d8f8      	bhi.n	84dd0 <memmove+0x84>
   84dde:	f1ae 0404 	sub.w	r4, lr, #4
   84de2:	f024 0403 	bic.w	r4, r4, #3
   84de6:	3404      	adds	r4, #4
   84de8:	4421      	add	r1, r4
   84dea:	4423      	add	r3, r4
   84dec:	f002 0203 	and.w	r2, r2, #3
   84df0:	b162      	cbz	r2, 84e0c <memmove+0xc0>
   84df2:	3b01      	subs	r3, #1
   84df4:	440a      	add	r2, r1
   84df6:	f811 4b01 	ldrb.w	r4, [r1], #1
   84dfa:	428a      	cmp	r2, r1
   84dfc:	f803 4f01 	strb.w	r4, [r3, #1]!
   84e00:	d1f9      	bne.n	84df6 <memmove+0xaa>
   84e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84e04:	4603      	mov	r3, r0
   84e06:	e7f3      	b.n	84df0 <memmove+0xa4>
   84e08:	4603      	mov	r3, r0
   84e0a:	e7f2      	b.n	84df2 <memmove+0xa6>
   84e0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84e0e:	4672      	mov	r2, lr
   84e10:	e7ee      	b.n	84df0 <memmove+0xa4>
   84e12:	bf00      	nop

00084e14 <_realloc_r>:
   84e14:	2900      	cmp	r1, #0
   84e16:	f000 8094 	beq.w	84f42 <_realloc_r+0x12e>
   84e1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84e1e:	460c      	mov	r4, r1
   84e20:	4615      	mov	r5, r2
   84e22:	b083      	sub	sp, #12
   84e24:	4680      	mov	r8, r0
   84e26:	f105 060b 	add.w	r6, r5, #11
   84e2a:	f7ff fa2d 	bl	84288 <__malloc_lock>
   84e2e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   84e32:	2e16      	cmp	r6, #22
   84e34:	f02e 0703 	bic.w	r7, lr, #3
   84e38:	f1a4 0908 	sub.w	r9, r4, #8
   84e3c:	d83c      	bhi.n	84eb8 <_realloc_r+0xa4>
   84e3e:	2210      	movs	r2, #16
   84e40:	4616      	mov	r6, r2
   84e42:	42b5      	cmp	r5, r6
   84e44:	d83d      	bhi.n	84ec2 <_realloc_r+0xae>
   84e46:	4297      	cmp	r7, r2
   84e48:	da43      	bge.n	84ed2 <_realloc_r+0xbe>
   84e4a:	4bc6      	ldr	r3, [pc, #792]	; (85164 <_realloc_r+0x350>)
   84e4c:	eb09 0007 	add.w	r0, r9, r7
   84e50:	6899      	ldr	r1, [r3, #8]
   84e52:	4288      	cmp	r0, r1
   84e54:	f000 80c3 	beq.w	84fde <_realloc_r+0x1ca>
   84e58:	6843      	ldr	r3, [r0, #4]
   84e5a:	f023 0101 	bic.w	r1, r3, #1
   84e5e:	4401      	add	r1, r0
   84e60:	6849      	ldr	r1, [r1, #4]
   84e62:	07c9      	lsls	r1, r1, #31
   84e64:	d54d      	bpl.n	84f02 <_realloc_r+0xee>
   84e66:	f01e 0f01 	tst.w	lr, #1
   84e6a:	f000 809b 	beq.w	84fa4 <_realloc_r+0x190>
   84e6e:	4629      	mov	r1, r5
   84e70:	4640      	mov	r0, r8
   84e72:	f7fe feab 	bl	83bcc <_malloc_r>
   84e76:	4605      	mov	r5, r0
   84e78:	2800      	cmp	r0, #0
   84e7a:	d03b      	beq.n	84ef4 <_realloc_r+0xe0>
   84e7c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   84e80:	f1a0 0208 	sub.w	r2, r0, #8
   84e84:	f023 0301 	bic.w	r3, r3, #1
   84e88:	444b      	add	r3, r9
   84e8a:	429a      	cmp	r2, r3
   84e8c:	f000 812b 	beq.w	850e6 <_realloc_r+0x2d2>
   84e90:	1f3a      	subs	r2, r7, #4
   84e92:	2a24      	cmp	r2, #36	; 0x24
   84e94:	f200 8118 	bhi.w	850c8 <_realloc_r+0x2b4>
   84e98:	2a13      	cmp	r2, #19
   84e9a:	f200 80eb 	bhi.w	85074 <_realloc_r+0x260>
   84e9e:	4603      	mov	r3, r0
   84ea0:	4622      	mov	r2, r4
   84ea2:	6811      	ldr	r1, [r2, #0]
   84ea4:	6019      	str	r1, [r3, #0]
   84ea6:	6851      	ldr	r1, [r2, #4]
   84ea8:	6059      	str	r1, [r3, #4]
   84eaa:	6892      	ldr	r2, [r2, #8]
   84eac:	609a      	str	r2, [r3, #8]
   84eae:	4621      	mov	r1, r4
   84eb0:	4640      	mov	r0, r8
   84eb2:	f7ff fe4f 	bl	84b54 <_free_r>
   84eb6:	e01d      	b.n	84ef4 <_realloc_r+0xe0>
   84eb8:	f026 0607 	bic.w	r6, r6, #7
   84ebc:	2e00      	cmp	r6, #0
   84ebe:	4632      	mov	r2, r6
   84ec0:	dabf      	bge.n	84e42 <_realloc_r+0x2e>
   84ec2:	2500      	movs	r5, #0
   84ec4:	230c      	movs	r3, #12
   84ec6:	4628      	mov	r0, r5
   84ec8:	f8c8 3000 	str.w	r3, [r8]
   84ecc:	b003      	add	sp, #12
   84ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84ed2:	4625      	mov	r5, r4
   84ed4:	1bbb      	subs	r3, r7, r6
   84ed6:	2b0f      	cmp	r3, #15
   84ed8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   84edc:	d81d      	bhi.n	84f1a <_realloc_r+0x106>
   84ede:	f002 0201 	and.w	r2, r2, #1
   84ee2:	433a      	orrs	r2, r7
   84ee4:	eb09 0107 	add.w	r1, r9, r7
   84ee8:	f8c9 2004 	str.w	r2, [r9, #4]
   84eec:	684b      	ldr	r3, [r1, #4]
   84eee:	f043 0301 	orr.w	r3, r3, #1
   84ef2:	604b      	str	r3, [r1, #4]
   84ef4:	4640      	mov	r0, r8
   84ef6:	f7ff f9c9 	bl	8428c <__malloc_unlock>
   84efa:	4628      	mov	r0, r5
   84efc:	b003      	add	sp, #12
   84efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84f02:	f023 0303 	bic.w	r3, r3, #3
   84f06:	18f9      	adds	r1, r7, r3
   84f08:	4291      	cmp	r1, r2
   84f0a:	db1d      	blt.n	84f48 <_realloc_r+0x134>
   84f0c:	68c3      	ldr	r3, [r0, #12]
   84f0e:	6882      	ldr	r2, [r0, #8]
   84f10:	4625      	mov	r5, r4
   84f12:	60d3      	str	r3, [r2, #12]
   84f14:	460f      	mov	r7, r1
   84f16:	609a      	str	r2, [r3, #8]
   84f18:	e7dc      	b.n	84ed4 <_realloc_r+0xc0>
   84f1a:	f002 0201 	and.w	r2, r2, #1
   84f1e:	eb09 0106 	add.w	r1, r9, r6
   84f22:	f043 0301 	orr.w	r3, r3, #1
   84f26:	4332      	orrs	r2, r6
   84f28:	f8c9 2004 	str.w	r2, [r9, #4]
   84f2c:	444f      	add	r7, r9
   84f2e:	604b      	str	r3, [r1, #4]
   84f30:	687b      	ldr	r3, [r7, #4]
   84f32:	3108      	adds	r1, #8
   84f34:	f043 0301 	orr.w	r3, r3, #1
   84f38:	607b      	str	r3, [r7, #4]
   84f3a:	4640      	mov	r0, r8
   84f3c:	f7ff fe0a 	bl	84b54 <_free_r>
   84f40:	e7d8      	b.n	84ef4 <_realloc_r+0xe0>
   84f42:	4611      	mov	r1, r2
   84f44:	f7fe be42 	b.w	83bcc <_malloc_r>
   84f48:	f01e 0f01 	tst.w	lr, #1
   84f4c:	d18f      	bne.n	84e6e <_realloc_r+0x5a>
   84f4e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   84f52:	eba9 0a01 	sub.w	sl, r9, r1
   84f56:	f8da 1004 	ldr.w	r1, [sl, #4]
   84f5a:	f021 0103 	bic.w	r1, r1, #3
   84f5e:	440b      	add	r3, r1
   84f60:	443b      	add	r3, r7
   84f62:	4293      	cmp	r3, r2
   84f64:	db26      	blt.n	84fb4 <_realloc_r+0x1a0>
   84f66:	4655      	mov	r5, sl
   84f68:	68c1      	ldr	r1, [r0, #12]
   84f6a:	6880      	ldr	r0, [r0, #8]
   84f6c:	1f3a      	subs	r2, r7, #4
   84f6e:	60c1      	str	r1, [r0, #12]
   84f70:	6088      	str	r0, [r1, #8]
   84f72:	f855 0f08 	ldr.w	r0, [r5, #8]!
   84f76:	f8da 100c 	ldr.w	r1, [sl, #12]
   84f7a:	2a24      	cmp	r2, #36	; 0x24
   84f7c:	60c1      	str	r1, [r0, #12]
   84f7e:	6088      	str	r0, [r1, #8]
   84f80:	d826      	bhi.n	84fd0 <_realloc_r+0x1bc>
   84f82:	2a13      	cmp	r2, #19
   84f84:	f240 8081 	bls.w	8508a <_realloc_r+0x276>
   84f88:	6821      	ldr	r1, [r4, #0]
   84f8a:	2a1b      	cmp	r2, #27
   84f8c:	f8ca 1008 	str.w	r1, [sl, #8]
   84f90:	6861      	ldr	r1, [r4, #4]
   84f92:	f8ca 100c 	str.w	r1, [sl, #12]
   84f96:	f200 80ad 	bhi.w	850f4 <_realloc_r+0x2e0>
   84f9a:	f104 0008 	add.w	r0, r4, #8
   84f9e:	f10a 0210 	add.w	r2, sl, #16
   84fa2:	e074      	b.n	8508e <_realloc_r+0x27a>
   84fa4:	f854 3c08 	ldr.w	r3, [r4, #-8]
   84fa8:	eba9 0a03 	sub.w	sl, r9, r3
   84fac:	f8da 1004 	ldr.w	r1, [sl, #4]
   84fb0:	f021 0103 	bic.w	r1, r1, #3
   84fb4:	187b      	adds	r3, r7, r1
   84fb6:	4293      	cmp	r3, r2
   84fb8:	f6ff af59 	blt.w	84e6e <_realloc_r+0x5a>
   84fbc:	4655      	mov	r5, sl
   84fbe:	f8da 100c 	ldr.w	r1, [sl, #12]
   84fc2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   84fc6:	1f3a      	subs	r2, r7, #4
   84fc8:	2a24      	cmp	r2, #36	; 0x24
   84fca:	60c1      	str	r1, [r0, #12]
   84fcc:	6088      	str	r0, [r1, #8]
   84fce:	d9d8      	bls.n	84f82 <_realloc_r+0x16e>
   84fd0:	4621      	mov	r1, r4
   84fd2:	4628      	mov	r0, r5
   84fd4:	461f      	mov	r7, r3
   84fd6:	46d1      	mov	r9, sl
   84fd8:	f7ff feb8 	bl	84d4c <memmove>
   84fdc:	e77a      	b.n	84ed4 <_realloc_r+0xc0>
   84fde:	6841      	ldr	r1, [r0, #4]
   84fe0:	f106 0010 	add.w	r0, r6, #16
   84fe4:	f021 0b03 	bic.w	fp, r1, #3
   84fe8:	44bb      	add	fp, r7
   84fea:	4583      	cmp	fp, r0
   84fec:	da58      	bge.n	850a0 <_realloc_r+0x28c>
   84fee:	f01e 0f01 	tst.w	lr, #1
   84ff2:	f47f af3c 	bne.w	84e6e <_realloc_r+0x5a>
   84ff6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   84ffa:	eba9 0a01 	sub.w	sl, r9, r1
   84ffe:	f8da 1004 	ldr.w	r1, [sl, #4]
   85002:	f021 0103 	bic.w	r1, r1, #3
   85006:	448b      	add	fp, r1
   85008:	4558      	cmp	r0, fp
   8500a:	dcd3      	bgt.n	84fb4 <_realloc_r+0x1a0>
   8500c:	4655      	mov	r5, sl
   8500e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85012:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85016:	1f3a      	subs	r2, r7, #4
   85018:	2a24      	cmp	r2, #36	; 0x24
   8501a:	60c1      	str	r1, [r0, #12]
   8501c:	6088      	str	r0, [r1, #8]
   8501e:	f200 808d 	bhi.w	8513c <_realloc_r+0x328>
   85022:	2a13      	cmp	r2, #19
   85024:	f240 8087 	bls.w	85136 <_realloc_r+0x322>
   85028:	6821      	ldr	r1, [r4, #0]
   8502a:	2a1b      	cmp	r2, #27
   8502c:	f8ca 1008 	str.w	r1, [sl, #8]
   85030:	6861      	ldr	r1, [r4, #4]
   85032:	f8ca 100c 	str.w	r1, [sl, #12]
   85036:	f200 8088 	bhi.w	8514a <_realloc_r+0x336>
   8503a:	f104 0108 	add.w	r1, r4, #8
   8503e:	f10a 0210 	add.w	r2, sl, #16
   85042:	6808      	ldr	r0, [r1, #0]
   85044:	6010      	str	r0, [r2, #0]
   85046:	6848      	ldr	r0, [r1, #4]
   85048:	6050      	str	r0, [r2, #4]
   8504a:	6889      	ldr	r1, [r1, #8]
   8504c:	6091      	str	r1, [r2, #8]
   8504e:	ebab 0206 	sub.w	r2, fp, r6
   85052:	eb0a 0106 	add.w	r1, sl, r6
   85056:	f042 0201 	orr.w	r2, r2, #1
   8505a:	6099      	str	r1, [r3, #8]
   8505c:	604a      	str	r2, [r1, #4]
   8505e:	f8da 3004 	ldr.w	r3, [sl, #4]
   85062:	4640      	mov	r0, r8
   85064:	f003 0301 	and.w	r3, r3, #1
   85068:	431e      	orrs	r6, r3
   8506a:	f8ca 6004 	str.w	r6, [sl, #4]
   8506e:	f7ff f90d 	bl	8428c <__malloc_unlock>
   85072:	e742      	b.n	84efa <_realloc_r+0xe6>
   85074:	6823      	ldr	r3, [r4, #0]
   85076:	2a1b      	cmp	r2, #27
   85078:	6003      	str	r3, [r0, #0]
   8507a:	6863      	ldr	r3, [r4, #4]
   8507c:	6043      	str	r3, [r0, #4]
   8507e:	d827      	bhi.n	850d0 <_realloc_r+0x2bc>
   85080:	f100 0308 	add.w	r3, r0, #8
   85084:	f104 0208 	add.w	r2, r4, #8
   85088:	e70b      	b.n	84ea2 <_realloc_r+0x8e>
   8508a:	4620      	mov	r0, r4
   8508c:	462a      	mov	r2, r5
   8508e:	6801      	ldr	r1, [r0, #0]
   85090:	461f      	mov	r7, r3
   85092:	6011      	str	r1, [r2, #0]
   85094:	6841      	ldr	r1, [r0, #4]
   85096:	46d1      	mov	r9, sl
   85098:	6051      	str	r1, [r2, #4]
   8509a:	6883      	ldr	r3, [r0, #8]
   8509c:	6093      	str	r3, [r2, #8]
   8509e:	e719      	b.n	84ed4 <_realloc_r+0xc0>
   850a0:	ebab 0b06 	sub.w	fp, fp, r6
   850a4:	eb09 0106 	add.w	r1, r9, r6
   850a8:	f04b 0201 	orr.w	r2, fp, #1
   850ac:	6099      	str	r1, [r3, #8]
   850ae:	604a      	str	r2, [r1, #4]
   850b0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   850b4:	4640      	mov	r0, r8
   850b6:	f003 0301 	and.w	r3, r3, #1
   850ba:	431e      	orrs	r6, r3
   850bc:	f844 6c04 	str.w	r6, [r4, #-4]
   850c0:	f7ff f8e4 	bl	8428c <__malloc_unlock>
   850c4:	4625      	mov	r5, r4
   850c6:	e718      	b.n	84efa <_realloc_r+0xe6>
   850c8:	4621      	mov	r1, r4
   850ca:	f7ff fe3f 	bl	84d4c <memmove>
   850ce:	e6ee      	b.n	84eae <_realloc_r+0x9a>
   850d0:	68a3      	ldr	r3, [r4, #8]
   850d2:	2a24      	cmp	r2, #36	; 0x24
   850d4:	6083      	str	r3, [r0, #8]
   850d6:	68e3      	ldr	r3, [r4, #12]
   850d8:	60c3      	str	r3, [r0, #12]
   850da:	d018      	beq.n	8510e <_realloc_r+0x2fa>
   850dc:	f100 0310 	add.w	r3, r0, #16
   850e0:	f104 0210 	add.w	r2, r4, #16
   850e4:	e6dd      	b.n	84ea2 <_realloc_r+0x8e>
   850e6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   850ea:	4625      	mov	r5, r4
   850ec:	f023 0303 	bic.w	r3, r3, #3
   850f0:	441f      	add	r7, r3
   850f2:	e6ef      	b.n	84ed4 <_realloc_r+0xc0>
   850f4:	68a1      	ldr	r1, [r4, #8]
   850f6:	2a24      	cmp	r2, #36	; 0x24
   850f8:	f8ca 1010 	str.w	r1, [sl, #16]
   850fc:	68e1      	ldr	r1, [r4, #12]
   850fe:	f8ca 1014 	str.w	r1, [sl, #20]
   85102:	d00d      	beq.n	85120 <_realloc_r+0x30c>
   85104:	f104 0010 	add.w	r0, r4, #16
   85108:	f10a 0218 	add.w	r2, sl, #24
   8510c:	e7bf      	b.n	8508e <_realloc_r+0x27a>
   8510e:	6922      	ldr	r2, [r4, #16]
   85110:	f100 0318 	add.w	r3, r0, #24
   85114:	6102      	str	r2, [r0, #16]
   85116:	6961      	ldr	r1, [r4, #20]
   85118:	f104 0218 	add.w	r2, r4, #24
   8511c:	6141      	str	r1, [r0, #20]
   8511e:	e6c0      	b.n	84ea2 <_realloc_r+0x8e>
   85120:	6922      	ldr	r2, [r4, #16]
   85122:	f104 0018 	add.w	r0, r4, #24
   85126:	f8ca 2018 	str.w	r2, [sl, #24]
   8512a:	6961      	ldr	r1, [r4, #20]
   8512c:	f10a 0220 	add.w	r2, sl, #32
   85130:	f8ca 101c 	str.w	r1, [sl, #28]
   85134:	e7ab      	b.n	8508e <_realloc_r+0x27a>
   85136:	4621      	mov	r1, r4
   85138:	462a      	mov	r2, r5
   8513a:	e782      	b.n	85042 <_realloc_r+0x22e>
   8513c:	4621      	mov	r1, r4
   8513e:	4628      	mov	r0, r5
   85140:	9301      	str	r3, [sp, #4]
   85142:	f7ff fe03 	bl	84d4c <memmove>
   85146:	9b01      	ldr	r3, [sp, #4]
   85148:	e781      	b.n	8504e <_realloc_r+0x23a>
   8514a:	68a1      	ldr	r1, [r4, #8]
   8514c:	2a24      	cmp	r2, #36	; 0x24
   8514e:	f8ca 1010 	str.w	r1, [sl, #16]
   85152:	68e1      	ldr	r1, [r4, #12]
   85154:	f8ca 1014 	str.w	r1, [sl, #20]
   85158:	d006      	beq.n	85168 <_realloc_r+0x354>
   8515a:	f104 0110 	add.w	r1, r4, #16
   8515e:	f10a 0218 	add.w	r2, sl, #24
   85162:	e76e      	b.n	85042 <_realloc_r+0x22e>
   85164:	20070970 	.word	0x20070970
   85168:	6922      	ldr	r2, [r4, #16]
   8516a:	f104 0118 	add.w	r1, r4, #24
   8516e:	f8ca 2018 	str.w	r2, [sl, #24]
   85172:	6960      	ldr	r0, [r4, #20]
   85174:	f10a 0220 	add.w	r2, sl, #32
   85178:	f8ca 001c 	str.w	r0, [sl, #28]
   8517c:	e761      	b.n	85042 <_realloc_r+0x22e>
   8517e:	bf00      	nop

00085180 <__ascii_wctomb>:
   85180:	b119      	cbz	r1, 8518a <__ascii_wctomb+0xa>
   85182:	2aff      	cmp	r2, #255	; 0xff
   85184:	d803      	bhi.n	8518e <__ascii_wctomb+0xe>
   85186:	700a      	strb	r2, [r1, #0]
   85188:	2101      	movs	r1, #1
   8518a:	4608      	mov	r0, r1
   8518c:	4770      	bx	lr
   8518e:	238a      	movs	r3, #138	; 0x8a
   85190:	f04f 31ff 	mov.w	r1, #4294967295
   85194:	6003      	str	r3, [r0, #0]
   85196:	e7f8      	b.n	8518a <__ascii_wctomb+0xa>

00085198 <__aeabi_drsub>:
   85198:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8519c:	e002      	b.n	851a4 <__adddf3>
   8519e:	bf00      	nop

000851a0 <__aeabi_dsub>:
   851a0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000851a4 <__adddf3>:
   851a4:	b530      	push	{r4, r5, lr}
   851a6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   851aa:	ea4f 0543 	mov.w	r5, r3, lsl #1
   851ae:	ea94 0f05 	teq	r4, r5
   851b2:	bf08      	it	eq
   851b4:	ea90 0f02 	teqeq	r0, r2
   851b8:	bf1f      	itttt	ne
   851ba:	ea54 0c00 	orrsne.w	ip, r4, r0
   851be:	ea55 0c02 	orrsne.w	ip, r5, r2
   851c2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   851c6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   851ca:	f000 80e2 	beq.w	85392 <__adddf3+0x1ee>
   851ce:	ea4f 5454 	mov.w	r4, r4, lsr #21
   851d2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   851d6:	bfb8      	it	lt
   851d8:	426d      	neglt	r5, r5
   851da:	dd0c      	ble.n	851f6 <__adddf3+0x52>
   851dc:	442c      	add	r4, r5
   851de:	ea80 0202 	eor.w	r2, r0, r2
   851e2:	ea81 0303 	eor.w	r3, r1, r3
   851e6:	ea82 0000 	eor.w	r0, r2, r0
   851ea:	ea83 0101 	eor.w	r1, r3, r1
   851ee:	ea80 0202 	eor.w	r2, r0, r2
   851f2:	ea81 0303 	eor.w	r3, r1, r3
   851f6:	2d36      	cmp	r5, #54	; 0x36
   851f8:	bf88      	it	hi
   851fa:	bd30      	pophi	{r4, r5, pc}
   851fc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85200:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85204:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   85208:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8520c:	d002      	beq.n	85214 <__adddf3+0x70>
   8520e:	4240      	negs	r0, r0
   85210:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85214:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   85218:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8521c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   85220:	d002      	beq.n	85228 <__adddf3+0x84>
   85222:	4252      	negs	r2, r2
   85224:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85228:	ea94 0f05 	teq	r4, r5
   8522c:	f000 80a7 	beq.w	8537e <__adddf3+0x1da>
   85230:	f1a4 0401 	sub.w	r4, r4, #1
   85234:	f1d5 0e20 	rsbs	lr, r5, #32
   85238:	db0d      	blt.n	85256 <__adddf3+0xb2>
   8523a:	fa02 fc0e 	lsl.w	ip, r2, lr
   8523e:	fa22 f205 	lsr.w	r2, r2, r5
   85242:	1880      	adds	r0, r0, r2
   85244:	f141 0100 	adc.w	r1, r1, #0
   85248:	fa03 f20e 	lsl.w	r2, r3, lr
   8524c:	1880      	adds	r0, r0, r2
   8524e:	fa43 f305 	asr.w	r3, r3, r5
   85252:	4159      	adcs	r1, r3
   85254:	e00e      	b.n	85274 <__adddf3+0xd0>
   85256:	f1a5 0520 	sub.w	r5, r5, #32
   8525a:	f10e 0e20 	add.w	lr, lr, #32
   8525e:	2a01      	cmp	r2, #1
   85260:	fa03 fc0e 	lsl.w	ip, r3, lr
   85264:	bf28      	it	cs
   85266:	f04c 0c02 	orrcs.w	ip, ip, #2
   8526a:	fa43 f305 	asr.w	r3, r3, r5
   8526e:	18c0      	adds	r0, r0, r3
   85270:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   85274:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85278:	d507      	bpl.n	8528a <__adddf3+0xe6>
   8527a:	f04f 0e00 	mov.w	lr, #0
   8527e:	f1dc 0c00 	rsbs	ip, ip, #0
   85282:	eb7e 0000 	sbcs.w	r0, lr, r0
   85286:	eb6e 0101 	sbc.w	r1, lr, r1
   8528a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   8528e:	d31b      	bcc.n	852c8 <__adddf3+0x124>
   85290:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   85294:	d30c      	bcc.n	852b0 <__adddf3+0x10c>
   85296:	0849      	lsrs	r1, r1, #1
   85298:	ea5f 0030 	movs.w	r0, r0, rrx
   8529c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   852a0:	f104 0401 	add.w	r4, r4, #1
   852a4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   852a8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   852ac:	f080 809a 	bcs.w	853e4 <__adddf3+0x240>
   852b0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   852b4:	bf08      	it	eq
   852b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   852ba:	f150 0000 	adcs.w	r0, r0, #0
   852be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   852c2:	ea41 0105 	orr.w	r1, r1, r5
   852c6:	bd30      	pop	{r4, r5, pc}
   852c8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   852cc:	4140      	adcs	r0, r0
   852ce:	eb41 0101 	adc.w	r1, r1, r1
   852d2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   852d6:	f1a4 0401 	sub.w	r4, r4, #1
   852da:	d1e9      	bne.n	852b0 <__adddf3+0x10c>
   852dc:	f091 0f00 	teq	r1, #0
   852e0:	bf04      	itt	eq
   852e2:	4601      	moveq	r1, r0
   852e4:	2000      	moveq	r0, #0
   852e6:	fab1 f381 	clz	r3, r1
   852ea:	bf08      	it	eq
   852ec:	3320      	addeq	r3, #32
   852ee:	f1a3 030b 	sub.w	r3, r3, #11
   852f2:	f1b3 0220 	subs.w	r2, r3, #32
   852f6:	da0c      	bge.n	85312 <__adddf3+0x16e>
   852f8:	320c      	adds	r2, #12
   852fa:	dd08      	ble.n	8530e <__adddf3+0x16a>
   852fc:	f102 0c14 	add.w	ip, r2, #20
   85300:	f1c2 020c 	rsb	r2, r2, #12
   85304:	fa01 f00c 	lsl.w	r0, r1, ip
   85308:	fa21 f102 	lsr.w	r1, r1, r2
   8530c:	e00c      	b.n	85328 <__adddf3+0x184>
   8530e:	f102 0214 	add.w	r2, r2, #20
   85312:	bfd8      	it	le
   85314:	f1c2 0c20 	rsble	ip, r2, #32
   85318:	fa01 f102 	lsl.w	r1, r1, r2
   8531c:	fa20 fc0c 	lsr.w	ip, r0, ip
   85320:	bfdc      	itt	le
   85322:	ea41 010c 	orrle.w	r1, r1, ip
   85326:	4090      	lslle	r0, r2
   85328:	1ae4      	subs	r4, r4, r3
   8532a:	bfa2      	ittt	ge
   8532c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   85330:	4329      	orrge	r1, r5
   85332:	bd30      	popge	{r4, r5, pc}
   85334:	ea6f 0404 	mvn.w	r4, r4
   85338:	3c1f      	subs	r4, #31
   8533a:	da1c      	bge.n	85376 <__adddf3+0x1d2>
   8533c:	340c      	adds	r4, #12
   8533e:	dc0e      	bgt.n	8535e <__adddf3+0x1ba>
   85340:	f104 0414 	add.w	r4, r4, #20
   85344:	f1c4 0220 	rsb	r2, r4, #32
   85348:	fa20 f004 	lsr.w	r0, r0, r4
   8534c:	fa01 f302 	lsl.w	r3, r1, r2
   85350:	ea40 0003 	orr.w	r0, r0, r3
   85354:	fa21 f304 	lsr.w	r3, r1, r4
   85358:	ea45 0103 	orr.w	r1, r5, r3
   8535c:	bd30      	pop	{r4, r5, pc}
   8535e:	f1c4 040c 	rsb	r4, r4, #12
   85362:	f1c4 0220 	rsb	r2, r4, #32
   85366:	fa20 f002 	lsr.w	r0, r0, r2
   8536a:	fa01 f304 	lsl.w	r3, r1, r4
   8536e:	ea40 0003 	orr.w	r0, r0, r3
   85372:	4629      	mov	r1, r5
   85374:	bd30      	pop	{r4, r5, pc}
   85376:	fa21 f004 	lsr.w	r0, r1, r4
   8537a:	4629      	mov	r1, r5
   8537c:	bd30      	pop	{r4, r5, pc}
   8537e:	f094 0f00 	teq	r4, #0
   85382:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   85386:	bf06      	itte	eq
   85388:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   8538c:	3401      	addeq	r4, #1
   8538e:	3d01      	subne	r5, #1
   85390:	e74e      	b.n	85230 <__adddf3+0x8c>
   85392:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85396:	bf18      	it	ne
   85398:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8539c:	d029      	beq.n	853f2 <__adddf3+0x24e>
   8539e:	ea94 0f05 	teq	r4, r5
   853a2:	bf08      	it	eq
   853a4:	ea90 0f02 	teqeq	r0, r2
   853a8:	d005      	beq.n	853b6 <__adddf3+0x212>
   853aa:	ea54 0c00 	orrs.w	ip, r4, r0
   853ae:	bf04      	itt	eq
   853b0:	4619      	moveq	r1, r3
   853b2:	4610      	moveq	r0, r2
   853b4:	bd30      	pop	{r4, r5, pc}
   853b6:	ea91 0f03 	teq	r1, r3
   853ba:	bf1e      	ittt	ne
   853bc:	2100      	movne	r1, #0
   853be:	2000      	movne	r0, #0
   853c0:	bd30      	popne	{r4, r5, pc}
   853c2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   853c6:	d105      	bne.n	853d4 <__adddf3+0x230>
   853c8:	0040      	lsls	r0, r0, #1
   853ca:	4149      	adcs	r1, r1
   853cc:	bf28      	it	cs
   853ce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   853d2:	bd30      	pop	{r4, r5, pc}
   853d4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   853d8:	bf3c      	itt	cc
   853da:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   853de:	bd30      	popcc	{r4, r5, pc}
   853e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   853e4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   853e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   853ec:	f04f 0000 	mov.w	r0, #0
   853f0:	bd30      	pop	{r4, r5, pc}
   853f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   853f6:	bf1a      	itte	ne
   853f8:	4619      	movne	r1, r3
   853fa:	4610      	movne	r0, r2
   853fc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   85400:	bf1c      	itt	ne
   85402:	460b      	movne	r3, r1
   85404:	4602      	movne	r2, r0
   85406:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8540a:	bf06      	itte	eq
   8540c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   85410:	ea91 0f03 	teqeq	r1, r3
   85414:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   85418:	bd30      	pop	{r4, r5, pc}
   8541a:	bf00      	nop

0008541c <__aeabi_ui2d>:
   8541c:	f090 0f00 	teq	r0, #0
   85420:	bf04      	itt	eq
   85422:	2100      	moveq	r1, #0
   85424:	4770      	bxeq	lr
   85426:	b530      	push	{r4, r5, lr}
   85428:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8542c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85430:	f04f 0500 	mov.w	r5, #0
   85434:	f04f 0100 	mov.w	r1, #0
   85438:	e750      	b.n	852dc <__adddf3+0x138>
   8543a:	bf00      	nop

0008543c <__aeabi_i2d>:
   8543c:	f090 0f00 	teq	r0, #0
   85440:	bf04      	itt	eq
   85442:	2100      	moveq	r1, #0
   85444:	4770      	bxeq	lr
   85446:	b530      	push	{r4, r5, lr}
   85448:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8544c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85450:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85454:	bf48      	it	mi
   85456:	4240      	negmi	r0, r0
   85458:	f04f 0100 	mov.w	r1, #0
   8545c:	e73e      	b.n	852dc <__adddf3+0x138>
   8545e:	bf00      	nop

00085460 <__aeabi_f2d>:
   85460:	0042      	lsls	r2, r0, #1
   85462:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85466:	ea4f 0131 	mov.w	r1, r1, rrx
   8546a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8546e:	bf1f      	itttt	ne
   85470:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85474:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85478:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   8547c:	4770      	bxne	lr
   8547e:	f092 0f00 	teq	r2, #0
   85482:	bf14      	ite	ne
   85484:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85488:	4770      	bxeq	lr
   8548a:	b530      	push	{r4, r5, lr}
   8548c:	f44f 7460 	mov.w	r4, #896	; 0x380
   85490:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85494:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85498:	e720      	b.n	852dc <__adddf3+0x138>
   8549a:	bf00      	nop

0008549c <__aeabi_ul2d>:
   8549c:	ea50 0201 	orrs.w	r2, r0, r1
   854a0:	bf08      	it	eq
   854a2:	4770      	bxeq	lr
   854a4:	b530      	push	{r4, r5, lr}
   854a6:	f04f 0500 	mov.w	r5, #0
   854aa:	e00a      	b.n	854c2 <__aeabi_l2d+0x16>

000854ac <__aeabi_l2d>:
   854ac:	ea50 0201 	orrs.w	r2, r0, r1
   854b0:	bf08      	it	eq
   854b2:	4770      	bxeq	lr
   854b4:	b530      	push	{r4, r5, lr}
   854b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   854ba:	d502      	bpl.n	854c2 <__aeabi_l2d+0x16>
   854bc:	4240      	negs	r0, r0
   854be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   854c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   854c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   854ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   854ce:	f43f aedc 	beq.w	8528a <__adddf3+0xe6>
   854d2:	f04f 0203 	mov.w	r2, #3
   854d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   854da:	bf18      	it	ne
   854dc:	3203      	addne	r2, #3
   854de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   854e2:	bf18      	it	ne
   854e4:	3203      	addne	r2, #3
   854e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   854ea:	f1c2 0320 	rsb	r3, r2, #32
   854ee:	fa00 fc03 	lsl.w	ip, r0, r3
   854f2:	fa20 f002 	lsr.w	r0, r0, r2
   854f6:	fa01 fe03 	lsl.w	lr, r1, r3
   854fa:	ea40 000e 	orr.w	r0, r0, lr
   854fe:	fa21 f102 	lsr.w	r1, r1, r2
   85502:	4414      	add	r4, r2
   85504:	e6c1      	b.n	8528a <__adddf3+0xe6>
   85506:	bf00      	nop

00085508 <__aeabi_dmul>:
   85508:	b570      	push	{r4, r5, r6, lr}
   8550a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8550e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85512:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85516:	bf1d      	ittte	ne
   85518:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8551c:	ea94 0f0c 	teqne	r4, ip
   85520:	ea95 0f0c 	teqne	r5, ip
   85524:	f000 f8de 	bleq	856e4 <__aeabi_dmul+0x1dc>
   85528:	442c      	add	r4, r5
   8552a:	ea81 0603 	eor.w	r6, r1, r3
   8552e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85532:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85536:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8553a:	bf18      	it	ne
   8553c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85540:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85544:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85548:	d038      	beq.n	855bc <__aeabi_dmul+0xb4>
   8554a:	fba0 ce02 	umull	ip, lr, r0, r2
   8554e:	f04f 0500 	mov.w	r5, #0
   85552:	fbe1 e502 	umlal	lr, r5, r1, r2
   85556:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8555a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8555e:	f04f 0600 	mov.w	r6, #0
   85562:	fbe1 5603 	umlal	r5, r6, r1, r3
   85566:	f09c 0f00 	teq	ip, #0
   8556a:	bf18      	it	ne
   8556c:	f04e 0e01 	orrne.w	lr, lr, #1
   85570:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85574:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85578:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8557c:	d204      	bcs.n	85588 <__aeabi_dmul+0x80>
   8557e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85582:	416d      	adcs	r5, r5
   85584:	eb46 0606 	adc.w	r6, r6, r6
   85588:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8558c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85590:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85594:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85598:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8559c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   855a0:	bf88      	it	hi
   855a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   855a6:	d81e      	bhi.n	855e6 <__aeabi_dmul+0xde>
   855a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   855ac:	bf08      	it	eq
   855ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   855b2:	f150 0000 	adcs.w	r0, r0, #0
   855b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   855ba:	bd70      	pop	{r4, r5, r6, pc}
   855bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   855c0:	ea46 0101 	orr.w	r1, r6, r1
   855c4:	ea40 0002 	orr.w	r0, r0, r2
   855c8:	ea81 0103 	eor.w	r1, r1, r3
   855cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   855d0:	bfc2      	ittt	gt
   855d2:	ebd4 050c 	rsbsgt	r5, r4, ip
   855d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   855da:	bd70      	popgt	{r4, r5, r6, pc}
   855dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   855e0:	f04f 0e00 	mov.w	lr, #0
   855e4:	3c01      	subs	r4, #1
   855e6:	f300 80ab 	bgt.w	85740 <__aeabi_dmul+0x238>
   855ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
   855ee:	bfde      	ittt	le
   855f0:	2000      	movle	r0, #0
   855f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   855f6:	bd70      	pople	{r4, r5, r6, pc}
   855f8:	f1c4 0400 	rsb	r4, r4, #0
   855fc:	3c20      	subs	r4, #32
   855fe:	da35      	bge.n	8566c <__aeabi_dmul+0x164>
   85600:	340c      	adds	r4, #12
   85602:	dc1b      	bgt.n	8563c <__aeabi_dmul+0x134>
   85604:	f104 0414 	add.w	r4, r4, #20
   85608:	f1c4 0520 	rsb	r5, r4, #32
   8560c:	fa00 f305 	lsl.w	r3, r0, r5
   85610:	fa20 f004 	lsr.w	r0, r0, r4
   85614:	fa01 f205 	lsl.w	r2, r1, r5
   85618:	ea40 0002 	orr.w	r0, r0, r2
   8561c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85620:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85624:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85628:	fa21 f604 	lsr.w	r6, r1, r4
   8562c:	eb42 0106 	adc.w	r1, r2, r6
   85630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85634:	bf08      	it	eq
   85636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8563a:	bd70      	pop	{r4, r5, r6, pc}
   8563c:	f1c4 040c 	rsb	r4, r4, #12
   85640:	f1c4 0520 	rsb	r5, r4, #32
   85644:	fa00 f304 	lsl.w	r3, r0, r4
   85648:	fa20 f005 	lsr.w	r0, r0, r5
   8564c:	fa01 f204 	lsl.w	r2, r1, r4
   85650:	ea40 0002 	orr.w	r0, r0, r2
   85654:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85658:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8565c:	f141 0100 	adc.w	r1, r1, #0
   85660:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85664:	bf08      	it	eq
   85666:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8566a:	bd70      	pop	{r4, r5, r6, pc}
   8566c:	f1c4 0520 	rsb	r5, r4, #32
   85670:	fa00 f205 	lsl.w	r2, r0, r5
   85674:	ea4e 0e02 	orr.w	lr, lr, r2
   85678:	fa20 f304 	lsr.w	r3, r0, r4
   8567c:	fa01 f205 	lsl.w	r2, r1, r5
   85680:	ea43 0302 	orr.w	r3, r3, r2
   85684:	fa21 f004 	lsr.w	r0, r1, r4
   85688:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8568c:	fa21 f204 	lsr.w	r2, r1, r4
   85690:	ea20 0002 	bic.w	r0, r0, r2
   85694:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8569c:	bf08      	it	eq
   8569e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   856a2:	bd70      	pop	{r4, r5, r6, pc}
   856a4:	f094 0f00 	teq	r4, #0
   856a8:	d10f      	bne.n	856ca <__aeabi_dmul+0x1c2>
   856aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   856ae:	0040      	lsls	r0, r0, #1
   856b0:	eb41 0101 	adc.w	r1, r1, r1
   856b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   856b8:	bf08      	it	eq
   856ba:	3c01      	subeq	r4, #1
   856bc:	d0f7      	beq.n	856ae <__aeabi_dmul+0x1a6>
   856be:	ea41 0106 	orr.w	r1, r1, r6
   856c2:	f095 0f00 	teq	r5, #0
   856c6:	bf18      	it	ne
   856c8:	4770      	bxne	lr
   856ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   856ce:	0052      	lsls	r2, r2, #1
   856d0:	eb43 0303 	adc.w	r3, r3, r3
   856d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   856d8:	bf08      	it	eq
   856da:	3d01      	subeq	r5, #1
   856dc:	d0f7      	beq.n	856ce <__aeabi_dmul+0x1c6>
   856de:	ea43 0306 	orr.w	r3, r3, r6
   856e2:	4770      	bx	lr
   856e4:	ea94 0f0c 	teq	r4, ip
   856e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   856ec:	bf18      	it	ne
   856ee:	ea95 0f0c 	teqne	r5, ip
   856f2:	d00c      	beq.n	8570e <__aeabi_dmul+0x206>
   856f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   856f8:	bf18      	it	ne
   856fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   856fe:	d1d1      	bne.n	856a4 <__aeabi_dmul+0x19c>
   85700:	ea81 0103 	eor.w	r1, r1, r3
   85704:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85708:	f04f 0000 	mov.w	r0, #0
   8570c:	bd70      	pop	{r4, r5, r6, pc}
   8570e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85712:	bf06      	itte	eq
   85714:	4610      	moveq	r0, r2
   85716:	4619      	moveq	r1, r3
   85718:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8571c:	d019      	beq.n	85752 <__aeabi_dmul+0x24a>
   8571e:	ea94 0f0c 	teq	r4, ip
   85722:	d102      	bne.n	8572a <__aeabi_dmul+0x222>
   85724:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85728:	d113      	bne.n	85752 <__aeabi_dmul+0x24a>
   8572a:	ea95 0f0c 	teq	r5, ip
   8572e:	d105      	bne.n	8573c <__aeabi_dmul+0x234>
   85730:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85734:	bf1c      	itt	ne
   85736:	4610      	movne	r0, r2
   85738:	4619      	movne	r1, r3
   8573a:	d10a      	bne.n	85752 <__aeabi_dmul+0x24a>
   8573c:	ea81 0103 	eor.w	r1, r1, r3
   85740:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85744:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85748:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8574c:	f04f 0000 	mov.w	r0, #0
   85750:	bd70      	pop	{r4, r5, r6, pc}
   85752:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85756:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8575a:	bd70      	pop	{r4, r5, r6, pc}

0008575c <__aeabi_ddiv>:
   8575c:	b570      	push	{r4, r5, r6, lr}
   8575e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85762:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85766:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8576a:	bf1d      	ittte	ne
   8576c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85770:	ea94 0f0c 	teqne	r4, ip
   85774:	ea95 0f0c 	teqne	r5, ip
   85778:	f000 f8a7 	bleq	858ca <__aeabi_ddiv+0x16e>
   8577c:	eba4 0405 	sub.w	r4, r4, r5
   85780:	ea81 0e03 	eor.w	lr, r1, r3
   85784:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85788:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8578c:	f000 8088 	beq.w	858a0 <__aeabi_ddiv+0x144>
   85790:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85794:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85798:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8579c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   857a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   857a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   857a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   857ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
   857b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   857b4:	429d      	cmp	r5, r3
   857b6:	bf08      	it	eq
   857b8:	4296      	cmpeq	r6, r2
   857ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   857be:	f504 7440 	add.w	r4, r4, #768	; 0x300
   857c2:	d202      	bcs.n	857ca <__aeabi_ddiv+0x6e>
   857c4:	085b      	lsrs	r3, r3, #1
   857c6:	ea4f 0232 	mov.w	r2, r2, rrx
   857ca:	1ab6      	subs	r6, r6, r2
   857cc:	eb65 0503 	sbc.w	r5, r5, r3
   857d0:	085b      	lsrs	r3, r3, #1
   857d2:	ea4f 0232 	mov.w	r2, r2, rrx
   857d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   857da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   857de:	ebb6 0e02 	subs.w	lr, r6, r2
   857e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   857e6:	bf22      	ittt	cs
   857e8:	1ab6      	subcs	r6, r6, r2
   857ea:	4675      	movcs	r5, lr
   857ec:	ea40 000c 	orrcs.w	r0, r0, ip
   857f0:	085b      	lsrs	r3, r3, #1
   857f2:	ea4f 0232 	mov.w	r2, r2, rrx
   857f6:	ebb6 0e02 	subs.w	lr, r6, r2
   857fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   857fe:	bf22      	ittt	cs
   85800:	1ab6      	subcs	r6, r6, r2
   85802:	4675      	movcs	r5, lr
   85804:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85808:	085b      	lsrs	r3, r3, #1
   8580a:	ea4f 0232 	mov.w	r2, r2, rrx
   8580e:	ebb6 0e02 	subs.w	lr, r6, r2
   85812:	eb75 0e03 	sbcs.w	lr, r5, r3
   85816:	bf22      	ittt	cs
   85818:	1ab6      	subcs	r6, r6, r2
   8581a:	4675      	movcs	r5, lr
   8581c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85820:	085b      	lsrs	r3, r3, #1
   85822:	ea4f 0232 	mov.w	r2, r2, rrx
   85826:	ebb6 0e02 	subs.w	lr, r6, r2
   8582a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8582e:	bf22      	ittt	cs
   85830:	1ab6      	subcs	r6, r6, r2
   85832:	4675      	movcs	r5, lr
   85834:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85838:	ea55 0e06 	orrs.w	lr, r5, r6
   8583c:	d018      	beq.n	85870 <__aeabi_ddiv+0x114>
   8583e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85842:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85846:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8584a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8584e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85852:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85856:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8585a:	d1c0      	bne.n	857de <__aeabi_ddiv+0x82>
   8585c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85860:	d10b      	bne.n	8587a <__aeabi_ddiv+0x11e>
   85862:	ea41 0100 	orr.w	r1, r1, r0
   85866:	f04f 0000 	mov.w	r0, #0
   8586a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8586e:	e7b6      	b.n	857de <__aeabi_ddiv+0x82>
   85870:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85874:	bf04      	itt	eq
   85876:	4301      	orreq	r1, r0
   85878:	2000      	moveq	r0, #0
   8587a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8587e:	bf88      	it	hi
   85880:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85884:	f63f aeaf 	bhi.w	855e6 <__aeabi_dmul+0xde>
   85888:	ebb5 0c03 	subs.w	ip, r5, r3
   8588c:	bf04      	itt	eq
   8588e:	ebb6 0c02 	subseq.w	ip, r6, r2
   85892:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85896:	f150 0000 	adcs.w	r0, r0, #0
   8589a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8589e:	bd70      	pop	{r4, r5, r6, pc}
   858a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   858a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   858a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   858ac:	bfc2      	ittt	gt
   858ae:	ebd4 050c 	rsbsgt	r5, r4, ip
   858b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   858b6:	bd70      	popgt	{r4, r5, r6, pc}
   858b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   858bc:	f04f 0e00 	mov.w	lr, #0
   858c0:	3c01      	subs	r4, #1
   858c2:	e690      	b.n	855e6 <__aeabi_dmul+0xde>
   858c4:	ea45 0e06 	orr.w	lr, r5, r6
   858c8:	e68d      	b.n	855e6 <__aeabi_dmul+0xde>
   858ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   858ce:	ea94 0f0c 	teq	r4, ip
   858d2:	bf08      	it	eq
   858d4:	ea95 0f0c 	teqeq	r5, ip
   858d8:	f43f af3b 	beq.w	85752 <__aeabi_dmul+0x24a>
   858dc:	ea94 0f0c 	teq	r4, ip
   858e0:	d10a      	bne.n	858f8 <__aeabi_ddiv+0x19c>
   858e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   858e6:	f47f af34 	bne.w	85752 <__aeabi_dmul+0x24a>
   858ea:	ea95 0f0c 	teq	r5, ip
   858ee:	f47f af25 	bne.w	8573c <__aeabi_dmul+0x234>
   858f2:	4610      	mov	r0, r2
   858f4:	4619      	mov	r1, r3
   858f6:	e72c      	b.n	85752 <__aeabi_dmul+0x24a>
   858f8:	ea95 0f0c 	teq	r5, ip
   858fc:	d106      	bne.n	8590c <__aeabi_ddiv+0x1b0>
   858fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85902:	f43f aefd 	beq.w	85700 <__aeabi_dmul+0x1f8>
   85906:	4610      	mov	r0, r2
   85908:	4619      	mov	r1, r3
   8590a:	e722      	b.n	85752 <__aeabi_dmul+0x24a>
   8590c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85910:	bf18      	it	ne
   85912:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85916:	f47f aec5 	bne.w	856a4 <__aeabi_dmul+0x19c>
   8591a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8591e:	f47f af0d 	bne.w	8573c <__aeabi_dmul+0x234>
   85922:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85926:	f47f aeeb 	bne.w	85700 <__aeabi_dmul+0x1f8>
   8592a:	e712      	b.n	85752 <__aeabi_dmul+0x24a>

0008592c <__gedf2>:
   8592c:	f04f 3cff 	mov.w	ip, #4294967295
   85930:	e006      	b.n	85940 <__cmpdf2+0x4>
   85932:	bf00      	nop

00085934 <__ledf2>:
   85934:	f04f 0c01 	mov.w	ip, #1
   85938:	e002      	b.n	85940 <__cmpdf2+0x4>
   8593a:	bf00      	nop

0008593c <__cmpdf2>:
   8593c:	f04f 0c01 	mov.w	ip, #1
   85940:	f84d cd04 	str.w	ip, [sp, #-4]!
   85944:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85948:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8594c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85950:	bf18      	it	ne
   85952:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85956:	d01b      	beq.n	85990 <__cmpdf2+0x54>
   85958:	b001      	add	sp, #4
   8595a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8595e:	bf0c      	ite	eq
   85960:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85964:	ea91 0f03 	teqne	r1, r3
   85968:	bf02      	ittt	eq
   8596a:	ea90 0f02 	teqeq	r0, r2
   8596e:	2000      	moveq	r0, #0
   85970:	4770      	bxeq	lr
   85972:	f110 0f00 	cmn.w	r0, #0
   85976:	ea91 0f03 	teq	r1, r3
   8597a:	bf58      	it	pl
   8597c:	4299      	cmppl	r1, r3
   8597e:	bf08      	it	eq
   85980:	4290      	cmpeq	r0, r2
   85982:	bf2c      	ite	cs
   85984:	17d8      	asrcs	r0, r3, #31
   85986:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8598a:	f040 0001 	orr.w	r0, r0, #1
   8598e:	4770      	bx	lr
   85990:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85998:	d102      	bne.n	859a0 <__cmpdf2+0x64>
   8599a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8599e:	d107      	bne.n	859b0 <__cmpdf2+0x74>
   859a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   859a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   859a8:	d1d6      	bne.n	85958 <__cmpdf2+0x1c>
   859aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   859ae:	d0d3      	beq.n	85958 <__cmpdf2+0x1c>
   859b0:	f85d 0b04 	ldr.w	r0, [sp], #4
   859b4:	4770      	bx	lr
   859b6:	bf00      	nop

000859b8 <__aeabi_cdrcmple>:
   859b8:	4684      	mov	ip, r0
   859ba:	4610      	mov	r0, r2
   859bc:	4662      	mov	r2, ip
   859be:	468c      	mov	ip, r1
   859c0:	4619      	mov	r1, r3
   859c2:	4663      	mov	r3, ip
   859c4:	e000      	b.n	859c8 <__aeabi_cdcmpeq>
   859c6:	bf00      	nop

000859c8 <__aeabi_cdcmpeq>:
   859c8:	b501      	push	{r0, lr}
   859ca:	f7ff ffb7 	bl	8593c <__cmpdf2>
   859ce:	2800      	cmp	r0, #0
   859d0:	bf48      	it	mi
   859d2:	f110 0f00 	cmnmi.w	r0, #0
   859d6:	bd01      	pop	{r0, pc}

000859d8 <__aeabi_dcmpeq>:
   859d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   859dc:	f7ff fff4 	bl	859c8 <__aeabi_cdcmpeq>
   859e0:	bf0c      	ite	eq
   859e2:	2001      	moveq	r0, #1
   859e4:	2000      	movne	r0, #0
   859e6:	f85d fb08 	ldr.w	pc, [sp], #8
   859ea:	bf00      	nop

000859ec <__aeabi_dcmplt>:
   859ec:	f84d ed08 	str.w	lr, [sp, #-8]!
   859f0:	f7ff ffea 	bl	859c8 <__aeabi_cdcmpeq>
   859f4:	bf34      	ite	cc
   859f6:	2001      	movcc	r0, #1
   859f8:	2000      	movcs	r0, #0
   859fa:	f85d fb08 	ldr.w	pc, [sp], #8
   859fe:	bf00      	nop

00085a00 <__aeabi_dcmple>:
   85a00:	f84d ed08 	str.w	lr, [sp, #-8]!
   85a04:	f7ff ffe0 	bl	859c8 <__aeabi_cdcmpeq>
   85a08:	bf94      	ite	ls
   85a0a:	2001      	movls	r0, #1
   85a0c:	2000      	movhi	r0, #0
   85a0e:	f85d fb08 	ldr.w	pc, [sp], #8
   85a12:	bf00      	nop

00085a14 <__aeabi_dcmpge>:
   85a14:	f84d ed08 	str.w	lr, [sp, #-8]!
   85a18:	f7ff ffce 	bl	859b8 <__aeabi_cdrcmple>
   85a1c:	bf94      	ite	ls
   85a1e:	2001      	movls	r0, #1
   85a20:	2000      	movhi	r0, #0
   85a22:	f85d fb08 	ldr.w	pc, [sp], #8
   85a26:	bf00      	nop

00085a28 <__aeabi_dcmpgt>:
   85a28:	f84d ed08 	str.w	lr, [sp, #-8]!
   85a2c:	f7ff ffc4 	bl	859b8 <__aeabi_cdrcmple>
   85a30:	bf34      	ite	cc
   85a32:	2001      	movcc	r0, #1
   85a34:	2000      	movcs	r0, #0
   85a36:	f85d fb08 	ldr.w	pc, [sp], #8
   85a3a:	bf00      	nop

00085a3c <__aeabi_dcmpun>:
   85a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85a44:	d102      	bne.n	85a4c <__aeabi_dcmpun+0x10>
   85a46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85a4a:	d10a      	bne.n	85a62 <__aeabi_dcmpun+0x26>
   85a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85a50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85a54:	d102      	bne.n	85a5c <__aeabi_dcmpun+0x20>
   85a56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85a5a:	d102      	bne.n	85a62 <__aeabi_dcmpun+0x26>
   85a5c:	f04f 0000 	mov.w	r0, #0
   85a60:	4770      	bx	lr
   85a62:	f04f 0001 	mov.w	r0, #1
   85a66:	4770      	bx	lr

00085a68 <__aeabi_d2iz>:
   85a68:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85a6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85a70:	d215      	bcs.n	85a9e <__aeabi_d2iz+0x36>
   85a72:	d511      	bpl.n	85a98 <__aeabi_d2iz+0x30>
   85a74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85a78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85a7c:	d912      	bls.n	85aa4 <__aeabi_d2iz+0x3c>
   85a7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85a82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   85a86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   85a8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85a8e:	fa23 f002 	lsr.w	r0, r3, r2
   85a92:	bf18      	it	ne
   85a94:	4240      	negne	r0, r0
   85a96:	4770      	bx	lr
   85a98:	f04f 0000 	mov.w	r0, #0
   85a9c:	4770      	bx	lr
   85a9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85aa2:	d105      	bne.n	85ab0 <__aeabi_d2iz+0x48>
   85aa4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   85aa8:	bf08      	it	eq
   85aaa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85aae:	4770      	bx	lr
   85ab0:	f04f 0000 	mov.w	r0, #0
   85ab4:	4770      	bx	lr
   85ab6:	bf00      	nop

00085ab8 <__aeabi_uldivmod>:
   85ab8:	b953      	cbnz	r3, 85ad0 <__aeabi_uldivmod+0x18>
   85aba:	b94a      	cbnz	r2, 85ad0 <__aeabi_uldivmod+0x18>
   85abc:	2900      	cmp	r1, #0
   85abe:	bf08      	it	eq
   85ac0:	2800      	cmpeq	r0, #0
   85ac2:	bf1c      	itt	ne
   85ac4:	f04f 31ff 	movne.w	r1, #4294967295
   85ac8:	f04f 30ff 	movne.w	r0, #4294967295
   85acc:	f000 b97a 	b.w	85dc4 <__aeabi_idiv0>
   85ad0:	f1ad 0c08 	sub.w	ip, sp, #8
   85ad4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   85ad8:	f000 f806 	bl	85ae8 <__udivmoddi4>
   85adc:	f8dd e004 	ldr.w	lr, [sp, #4]
   85ae0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   85ae4:	b004      	add	sp, #16
   85ae6:	4770      	bx	lr

00085ae8 <__udivmoddi4>:
   85ae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   85aec:	468c      	mov	ip, r1
   85aee:	460e      	mov	r6, r1
   85af0:	4604      	mov	r4, r0
   85af2:	9d08      	ldr	r5, [sp, #32]
   85af4:	2b00      	cmp	r3, #0
   85af6:	d150      	bne.n	85b9a <__udivmoddi4+0xb2>
   85af8:	428a      	cmp	r2, r1
   85afa:	4617      	mov	r7, r2
   85afc:	d96c      	bls.n	85bd8 <__udivmoddi4+0xf0>
   85afe:	fab2 fe82 	clz	lr, r2
   85b02:	f1be 0f00 	cmp.w	lr, #0
   85b06:	d00b      	beq.n	85b20 <__udivmoddi4+0x38>
   85b08:	f1ce 0c20 	rsb	ip, lr, #32
   85b0c:	fa01 f60e 	lsl.w	r6, r1, lr
   85b10:	fa20 fc0c 	lsr.w	ip, r0, ip
   85b14:	fa02 f70e 	lsl.w	r7, r2, lr
   85b18:	ea4c 0c06 	orr.w	ip, ip, r6
   85b1c:	fa00 f40e 	lsl.w	r4, r0, lr
   85b20:	0c3a      	lsrs	r2, r7, #16
   85b22:	fbbc f9f2 	udiv	r9, ip, r2
   85b26:	b2bb      	uxth	r3, r7
   85b28:	fb02 cc19 	mls	ip, r2, r9, ip
   85b2c:	fb09 fa03 	mul.w	sl, r9, r3
   85b30:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85b34:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   85b38:	45b2      	cmp	sl, r6
   85b3a:	d90a      	bls.n	85b52 <__udivmoddi4+0x6a>
   85b3c:	19f6      	adds	r6, r6, r7
   85b3e:	f109 31ff 	add.w	r1, r9, #4294967295
   85b42:	f080 8125 	bcs.w	85d90 <__udivmoddi4+0x2a8>
   85b46:	45b2      	cmp	sl, r6
   85b48:	f240 8122 	bls.w	85d90 <__udivmoddi4+0x2a8>
   85b4c:	f1a9 0902 	sub.w	r9, r9, #2
   85b50:	443e      	add	r6, r7
   85b52:	eba6 060a 	sub.w	r6, r6, sl
   85b56:	fbb6 f0f2 	udiv	r0, r6, r2
   85b5a:	fb02 6610 	mls	r6, r2, r0, r6
   85b5e:	fb00 f303 	mul.w	r3, r0, r3
   85b62:	b2a4      	uxth	r4, r4
   85b64:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   85b68:	42a3      	cmp	r3, r4
   85b6a:	d909      	bls.n	85b80 <__udivmoddi4+0x98>
   85b6c:	19e4      	adds	r4, r4, r7
   85b6e:	f100 32ff 	add.w	r2, r0, #4294967295
   85b72:	f080 810b 	bcs.w	85d8c <__udivmoddi4+0x2a4>
   85b76:	42a3      	cmp	r3, r4
   85b78:	f240 8108 	bls.w	85d8c <__udivmoddi4+0x2a4>
   85b7c:	3802      	subs	r0, #2
   85b7e:	443c      	add	r4, r7
   85b80:	2100      	movs	r1, #0
   85b82:	1ae4      	subs	r4, r4, r3
   85b84:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85b88:	2d00      	cmp	r5, #0
   85b8a:	d062      	beq.n	85c52 <__udivmoddi4+0x16a>
   85b8c:	2300      	movs	r3, #0
   85b8e:	fa24 f40e 	lsr.w	r4, r4, lr
   85b92:	602c      	str	r4, [r5, #0]
   85b94:	606b      	str	r3, [r5, #4]
   85b96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85b9a:	428b      	cmp	r3, r1
   85b9c:	d907      	bls.n	85bae <__udivmoddi4+0xc6>
   85b9e:	2d00      	cmp	r5, #0
   85ba0:	d055      	beq.n	85c4e <__udivmoddi4+0x166>
   85ba2:	2100      	movs	r1, #0
   85ba4:	e885 0041 	stmia.w	r5, {r0, r6}
   85ba8:	4608      	mov	r0, r1
   85baa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85bae:	fab3 f183 	clz	r1, r3
   85bb2:	2900      	cmp	r1, #0
   85bb4:	f040 808f 	bne.w	85cd6 <__udivmoddi4+0x1ee>
   85bb8:	42b3      	cmp	r3, r6
   85bba:	d302      	bcc.n	85bc2 <__udivmoddi4+0xda>
   85bbc:	4282      	cmp	r2, r0
   85bbe:	f200 80fc 	bhi.w	85dba <__udivmoddi4+0x2d2>
   85bc2:	1a84      	subs	r4, r0, r2
   85bc4:	eb66 0603 	sbc.w	r6, r6, r3
   85bc8:	2001      	movs	r0, #1
   85bca:	46b4      	mov	ip, r6
   85bcc:	2d00      	cmp	r5, #0
   85bce:	d040      	beq.n	85c52 <__udivmoddi4+0x16a>
   85bd0:	e885 1010 	stmia.w	r5, {r4, ip}
   85bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85bd8:	b912      	cbnz	r2, 85be0 <__udivmoddi4+0xf8>
   85bda:	2701      	movs	r7, #1
   85bdc:	fbb7 f7f2 	udiv	r7, r7, r2
   85be0:	fab7 fe87 	clz	lr, r7
   85be4:	f1be 0f00 	cmp.w	lr, #0
   85be8:	d135      	bne.n	85c56 <__udivmoddi4+0x16e>
   85bea:	2101      	movs	r1, #1
   85bec:	1bf6      	subs	r6, r6, r7
   85bee:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85bf2:	fa1f f887 	uxth.w	r8, r7
   85bf6:	fbb6 f2fc 	udiv	r2, r6, ip
   85bfa:	fb0c 6612 	mls	r6, ip, r2, r6
   85bfe:	fb08 f002 	mul.w	r0, r8, r2
   85c02:	0c23      	lsrs	r3, r4, #16
   85c04:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   85c08:	42b0      	cmp	r0, r6
   85c0a:	d907      	bls.n	85c1c <__udivmoddi4+0x134>
   85c0c:	19f6      	adds	r6, r6, r7
   85c0e:	f102 33ff 	add.w	r3, r2, #4294967295
   85c12:	d202      	bcs.n	85c1a <__udivmoddi4+0x132>
   85c14:	42b0      	cmp	r0, r6
   85c16:	f200 80d2 	bhi.w	85dbe <__udivmoddi4+0x2d6>
   85c1a:	461a      	mov	r2, r3
   85c1c:	1a36      	subs	r6, r6, r0
   85c1e:	fbb6 f0fc 	udiv	r0, r6, ip
   85c22:	fb0c 6610 	mls	r6, ip, r0, r6
   85c26:	fb08 f800 	mul.w	r8, r8, r0
   85c2a:	b2a3      	uxth	r3, r4
   85c2c:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   85c30:	45a0      	cmp	r8, r4
   85c32:	d907      	bls.n	85c44 <__udivmoddi4+0x15c>
   85c34:	19e4      	adds	r4, r4, r7
   85c36:	f100 33ff 	add.w	r3, r0, #4294967295
   85c3a:	d202      	bcs.n	85c42 <__udivmoddi4+0x15a>
   85c3c:	45a0      	cmp	r8, r4
   85c3e:	f200 80b9 	bhi.w	85db4 <__udivmoddi4+0x2cc>
   85c42:	4618      	mov	r0, r3
   85c44:	eba4 0408 	sub.w	r4, r4, r8
   85c48:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   85c4c:	e79c      	b.n	85b88 <__udivmoddi4+0xa0>
   85c4e:	4629      	mov	r1, r5
   85c50:	4628      	mov	r0, r5
   85c52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85c56:	fa07 f70e 	lsl.w	r7, r7, lr
   85c5a:	f1ce 0320 	rsb	r3, lr, #32
   85c5e:	fa26 f203 	lsr.w	r2, r6, r3
   85c62:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85c66:	fbb2 f1fc 	udiv	r1, r2, ip
   85c6a:	fa1f f887 	uxth.w	r8, r7
   85c6e:	fb0c 2211 	mls	r2, ip, r1, r2
   85c72:	fa06 f60e 	lsl.w	r6, r6, lr
   85c76:	fa20 f303 	lsr.w	r3, r0, r3
   85c7a:	fb01 f908 	mul.w	r9, r1, r8
   85c7e:	4333      	orrs	r3, r6
   85c80:	0c1e      	lsrs	r6, r3, #16
   85c82:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   85c86:	45b1      	cmp	r9, r6
   85c88:	fa00 f40e 	lsl.w	r4, r0, lr
   85c8c:	d909      	bls.n	85ca2 <__udivmoddi4+0x1ba>
   85c8e:	19f6      	adds	r6, r6, r7
   85c90:	f101 32ff 	add.w	r2, r1, #4294967295
   85c94:	f080 808c 	bcs.w	85db0 <__udivmoddi4+0x2c8>
   85c98:	45b1      	cmp	r9, r6
   85c9a:	f240 8089 	bls.w	85db0 <__udivmoddi4+0x2c8>
   85c9e:	3902      	subs	r1, #2
   85ca0:	443e      	add	r6, r7
   85ca2:	eba6 0609 	sub.w	r6, r6, r9
   85ca6:	fbb6 f0fc 	udiv	r0, r6, ip
   85caa:	fb0c 6210 	mls	r2, ip, r0, r6
   85cae:	fb00 f908 	mul.w	r9, r0, r8
   85cb2:	b29e      	uxth	r6, r3
   85cb4:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   85cb8:	45b1      	cmp	r9, r6
   85cba:	d907      	bls.n	85ccc <__udivmoddi4+0x1e4>
   85cbc:	19f6      	adds	r6, r6, r7
   85cbe:	f100 33ff 	add.w	r3, r0, #4294967295
   85cc2:	d271      	bcs.n	85da8 <__udivmoddi4+0x2c0>
   85cc4:	45b1      	cmp	r9, r6
   85cc6:	d96f      	bls.n	85da8 <__udivmoddi4+0x2c0>
   85cc8:	3802      	subs	r0, #2
   85cca:	443e      	add	r6, r7
   85ccc:	eba6 0609 	sub.w	r6, r6, r9
   85cd0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   85cd4:	e78f      	b.n	85bf6 <__udivmoddi4+0x10e>
   85cd6:	f1c1 0720 	rsb	r7, r1, #32
   85cda:	fa22 f807 	lsr.w	r8, r2, r7
   85cde:	408b      	lsls	r3, r1
   85ce0:	ea48 0303 	orr.w	r3, r8, r3
   85ce4:	fa26 f407 	lsr.w	r4, r6, r7
   85ce8:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   85cec:	fbb4 f9fe 	udiv	r9, r4, lr
   85cf0:	fa1f fc83 	uxth.w	ip, r3
   85cf4:	fb0e 4419 	mls	r4, lr, r9, r4
   85cf8:	408e      	lsls	r6, r1
   85cfa:	fa20 f807 	lsr.w	r8, r0, r7
   85cfe:	fb09 fa0c 	mul.w	sl, r9, ip
   85d02:	ea48 0806 	orr.w	r8, r8, r6
   85d06:	ea4f 4618 	mov.w	r6, r8, lsr #16
   85d0a:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   85d0e:	45a2      	cmp	sl, r4
   85d10:	fa02 f201 	lsl.w	r2, r2, r1
   85d14:	fa00 f601 	lsl.w	r6, r0, r1
   85d18:	d908      	bls.n	85d2c <__udivmoddi4+0x244>
   85d1a:	18e4      	adds	r4, r4, r3
   85d1c:	f109 30ff 	add.w	r0, r9, #4294967295
   85d20:	d244      	bcs.n	85dac <__udivmoddi4+0x2c4>
   85d22:	45a2      	cmp	sl, r4
   85d24:	d942      	bls.n	85dac <__udivmoddi4+0x2c4>
   85d26:	f1a9 0902 	sub.w	r9, r9, #2
   85d2a:	441c      	add	r4, r3
   85d2c:	eba4 040a 	sub.w	r4, r4, sl
   85d30:	fbb4 f0fe 	udiv	r0, r4, lr
   85d34:	fb0e 4410 	mls	r4, lr, r0, r4
   85d38:	fb00 fc0c 	mul.w	ip, r0, ip
   85d3c:	fa1f f888 	uxth.w	r8, r8
   85d40:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   85d44:	45a4      	cmp	ip, r4
   85d46:	d907      	bls.n	85d58 <__udivmoddi4+0x270>
   85d48:	18e4      	adds	r4, r4, r3
   85d4a:	f100 3eff 	add.w	lr, r0, #4294967295
   85d4e:	d229      	bcs.n	85da4 <__udivmoddi4+0x2bc>
   85d50:	45a4      	cmp	ip, r4
   85d52:	d927      	bls.n	85da4 <__udivmoddi4+0x2bc>
   85d54:	3802      	subs	r0, #2
   85d56:	441c      	add	r4, r3
   85d58:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85d5c:	fba0 8902 	umull	r8, r9, r0, r2
   85d60:	eba4 0c0c 	sub.w	ip, r4, ip
   85d64:	45cc      	cmp	ip, r9
   85d66:	46c2      	mov	sl, r8
   85d68:	46ce      	mov	lr, r9
   85d6a:	d315      	bcc.n	85d98 <__udivmoddi4+0x2b0>
   85d6c:	d012      	beq.n	85d94 <__udivmoddi4+0x2ac>
   85d6e:	b155      	cbz	r5, 85d86 <__udivmoddi4+0x29e>
   85d70:	ebb6 030a 	subs.w	r3, r6, sl
   85d74:	eb6c 060e 	sbc.w	r6, ip, lr
   85d78:	fa06 f707 	lsl.w	r7, r6, r7
   85d7c:	40cb      	lsrs	r3, r1
   85d7e:	431f      	orrs	r7, r3
   85d80:	40ce      	lsrs	r6, r1
   85d82:	602f      	str	r7, [r5, #0]
   85d84:	606e      	str	r6, [r5, #4]
   85d86:	2100      	movs	r1, #0
   85d88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85d8c:	4610      	mov	r0, r2
   85d8e:	e6f7      	b.n	85b80 <__udivmoddi4+0x98>
   85d90:	4689      	mov	r9, r1
   85d92:	e6de      	b.n	85b52 <__udivmoddi4+0x6a>
   85d94:	4546      	cmp	r6, r8
   85d96:	d2ea      	bcs.n	85d6e <__udivmoddi4+0x286>
   85d98:	ebb8 0a02 	subs.w	sl, r8, r2
   85d9c:	eb69 0e03 	sbc.w	lr, r9, r3
   85da0:	3801      	subs	r0, #1
   85da2:	e7e4      	b.n	85d6e <__udivmoddi4+0x286>
   85da4:	4670      	mov	r0, lr
   85da6:	e7d7      	b.n	85d58 <__udivmoddi4+0x270>
   85da8:	4618      	mov	r0, r3
   85daa:	e78f      	b.n	85ccc <__udivmoddi4+0x1e4>
   85dac:	4681      	mov	r9, r0
   85dae:	e7bd      	b.n	85d2c <__udivmoddi4+0x244>
   85db0:	4611      	mov	r1, r2
   85db2:	e776      	b.n	85ca2 <__udivmoddi4+0x1ba>
   85db4:	3802      	subs	r0, #2
   85db6:	443c      	add	r4, r7
   85db8:	e744      	b.n	85c44 <__udivmoddi4+0x15c>
   85dba:	4608      	mov	r0, r1
   85dbc:	e706      	b.n	85bcc <__udivmoddi4+0xe4>
   85dbe:	3a02      	subs	r2, #2
   85dc0:	443e      	add	r6, r7
   85dc2:	e72b      	b.n	85c1c <__udivmoddi4+0x134>

00085dc4 <__aeabi_idiv0>:
   85dc4:	4770      	bx	lr
   85dc6:	bf00      	nop
   85dc8:	003e0a0d 	.word	0x003e0a0d
   85dcc:	3e3e0a0d 	.word	0x3e3e0a0d
   85dd0:	0000003e 	.word	0x0000003e
   85dd4:	000a0d20 	.word	0x000a0d20
   85dd8:	6e750a0d 	.word	0x6e750a0d
   85ddc:	776f6e6b 	.word	0x776f6e6b
   85de0:	6d63206e 	.word	0x6d63206e
   85de4:	25203a64 	.word	0x25203a64
   85de8:	0d583430 	.word	0x0d583430
   85dec:	0000000a 	.word	0x0000000a

00085df0 <flashSequ>:
   85df0:	00000032 000001f4 00000032 000004b0     2.......2.......
   85e00:	00000000                                ....

00085e04 <_cmdEntries>:
   85e04:	00006cab 0008065d 00000000 00000000     .l..]...........

00085e14 <usart_console_settings>:
   85e14:	0001c200 000000c0 00000800 00000000     ................
	...
   85e2c:	4c505041 454e5f49 000a0d57 6c6c6548     APPLI_NEW...Hell
   85e3c:	6f57206f 21646c72 00000000 2044434c     o World!....LCD 
   85e4c:	6c6c6548 6f57206f 21646c72 00000a0d     Hello World!....
   85e5c:	2064636c 2077656e 00000a0d 090a0a0d     lcd new ........
   85e6c:	454d5441 5441204c 334d4153 54532055     ATMEL ATSAM3U ST
   85e7c:	45545241 0a0a0d44 00000000              ARTED.......

00085e88 <_global_impure_ptr>:
   85e88:	20070548 00464e49 00666e69 004e414e     H.. INF.inf.NAN.
   85e98:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   85ea8:	46454443 00000000 33323130 37363534     CDEF....01234567
   85eb8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   85ec8:	0000296c 00000030                       l)..0...

00085ed0 <blanks.7208>:
   85ed0:	20202020 20202020 20202020 20202020                     

00085ee0 <zeroes.7209>:
   85ee0:	30303030 30303030 30303030 30303030     0000000000000000
   85ef0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

00085f00 <__mprec_bigtens>:
   85f00:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85f10:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85f20:	7f73bf3c 75154fdd                       <.s..O.u

00085f28 <__mprec_tens>:
   85f28:	00000000 3ff00000 00000000 40240000     .......?......$@
   85f38:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85f48:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85f58:	00000000 412e8480 00000000 416312d0     .......A......cA
   85f68:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85f78:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85f88:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85f98:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85fa8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85fb8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85fc8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85fd8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85fe8:	79d99db4 44ea7843                       ...yCx.D

00085ff0 <p05.6040>:
   85ff0:	00000005 00000019 0000007d 00000043     ........}...C...
   86000:	49534f50 00000058 0000002e              POSIX.......

0008600c <_ctype_>:
   8600c:	20202000 20202020 28282020 20282828     .         ((((( 
   8601c:	20202020 20202020 20202020 20202020                     
   8602c:	10108820 10101010 10101010 10101010      ...............
   8603c:	04040410 04040404 10040404 10101010     ................
   8604c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8605c:	01010101 01010101 01010101 10101010     ................
   8606c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8607c:	02020202 02020202 02020202 10101010     ................
   8608c:	00000020 00000000 00000000 00000000      ...............
	...

00086110 <_init>:
   86110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86112:	bf00      	nop
   86114:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86116:	bc08      	pop	{r3}
   86118:	469e      	mov	lr, r3
   8611a:	4770      	bx	lr

0008611c <__init_array_start>:
   8611c:	00082bed 	.word	0x00082bed

00086120 <__frame_dummy_init_array_entry>:
   86120:	00080119                                ....

00086124 <_fini>:
   86124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86126:	bf00      	nop
   86128:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8612a:	bc08      	pop	{r3}
   8612c:	469e      	mov	lr, r3
   8612e:	4770      	bx	lr

00086130 <__fini_array_start>:
   86130:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	20070540 	.word	0x20070540

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <wCRCTable>:
20070138:	00000000 0000c0c1 0000c181 00000140     ............@...
20070148:	0000c301 000003c0 00000280 0000c241     ............A...
20070158:	0000c601 000006c0 00000780 0000c741     ............A...
20070168:	00000500 0000c5c1 0000c481 00000440     ............@...
20070178:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20070188:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
20070198:	00000a00 0000cac1 0000cb81 00000b40     ............@...
200701a8:	0000c901 000009c0 00000880 0000c841     ............A...
200701b8:	0000d801 000018c0 00001980 0000d941     ............A...
200701c8:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200701d8:	00001e00 0000dec1 0000df81 00001f40     ............@...
200701e8:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200701f8:	00001400 0000d4c1 0000d581 00001540     ............@...
20070208:	0000d701 000017c0 00001680 0000d641     ............A...
20070218:	0000d201 000012c0 00001380 0000d341     ............A...
20070228:	00001100 0000d1c1 0000d081 00001040     ............@...
20070238:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20070248:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20070258:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20070268:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20070278:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20070288:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
20070298:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
200702a8:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200702b8:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200702c8:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200702d8:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200702e8:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200702f8:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
20070308:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20070318:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20070328:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20070338:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20070348:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20070358:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20070368:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20070378:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20070388:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
20070398:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
200703a8:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200703b8:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200703c8:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200703d8:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200703e8:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200703f8:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
20070408:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20070418:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20070428:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20070438:	00005000 000090c1 00009181 00005140     .P..........@Q..
20070448:	00009301 000053c0 00005280 00009241     .....S...R..A...
20070458:	00009601 000056c0 00005780 00009741     .....V...W..A...
20070468:	00005500 000095c1 00009481 00005440     .U..........@T..
20070478:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20070488:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
20070498:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
200704a8:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200704b8:	00008801 000048c0 00004980 00008941     .....H...I..A...
200704c8:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200704d8:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200704e8:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200704f8:	00004400 000084c1 00008581 00004540     .D..........@E..
20070508:	00008701 000047c0 00004680 00008641     .....G...F..A...
20070518:	00008201 000042c0 00004380 00008341     .....B...C..A...
20070528:	00004100 000081c1 00008081 00004040     .A..........@@..

20070538 <pErrorFunc>:
20070538:	000802c1                                ....

2007053c <g_interrupt_enabled>:
2007053c:	00000001                                ....

20070540 <SystemCoreClock>:
20070540:	003d0900                                ..=.

20070544 <_impure_ptr>:
20070544:	20070548                                H.. 

20070548 <impure_data>:
20070548:	00000000 20070834 2007089c 20070904     ....4.. ... ... 
	...
200705f0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070600:	0005deec 0000000b 00000000 00000000     ................
	...

20070970 <__malloc_av_>:
	...
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 
20070ae8:	20070ae0 20070ae0 20070ae8 20070ae8     ... ... ... ... 
20070af8:	20070af0 20070af0 20070af8 20070af8     ... ... ... ... 
20070b08:	20070b00 20070b00 20070b08 20070b08     ... ... ... ... 
20070b18:	20070b10 20070b10 20070b18 20070b18     ... ... ... ... 
20070b28:	20070b20 20070b20 20070b28 20070b28      ..  .. (.. (.. 
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 
20070b88:	20070b80 20070b80 20070b88 20070b88     ... ... ... ... 
20070b98:	20070b90 20070b90 20070b98 20070b98     ... ... ... ... 
20070ba8:	20070ba0 20070ba0 20070ba8 20070ba8     ... ... ... ... 
20070bb8:	20070bb0 20070bb0 20070bb8 20070bb8     ... ... ... ... 
20070bc8:	20070bc0 20070bc0 20070bc8 20070bc8     ... ... ... ... 
20070bd8:	20070bd0 20070bd0 20070bd8 20070bd8     ... ... ... ... 
20070be8:	20070be0 20070be0 20070be8 20070be8     ... ... ... ... 
20070bf8:	20070bf0 20070bf0 20070bf8 20070bf8     ... ... ... ... 
20070c08:	20070c00 20070c00 20070c08 20070c08     ... ... ... ... 
20070c18:	20070c10 20070c10 20070c18 20070c18     ... ... ... ... 
20070c28:	20070c20 20070c20 20070c28 20070c28      ..  .. (.. (.. 
20070c38:	20070c30 20070c30 20070c38 20070c38     0.. 0.. 8.. 8.. 
20070c48:	20070c40 20070c40 20070c48 20070c48     @.. @.. H.. H.. 
20070c58:	20070c50 20070c50 20070c58 20070c58     P.. P.. X.. X.. 
20070c68:	20070c60 20070c60 20070c68 20070c68     `.. `.. h.. h.. 
20070c78:	20070c70 20070c70 20070c78 20070c78     p.. p.. x.. x.. 
20070c88:	20070c80 20070c80 20070c88 20070c88     ... ... ... ... 
20070c98:	20070c90 20070c90 20070c98 20070c98     ... ... ... ... 
20070ca8:	20070ca0 20070ca0 20070ca8 20070ca8     ... ... ... ... 
20070cb8:	20070cb0 20070cb0 20070cb8 20070cb8     ... ... ... ... 
20070cc8:	20070cc0 20070cc0 20070cc8 20070cc8     ... ... ... ... 
20070cd8:	20070cd0 20070cd0 20070cd8 20070cd8     ... ... ... ... 
20070ce8:	20070ce0 20070ce0 20070ce8 20070ce8     ... ... ... ... 
20070cf8:	20070cf0 20070cf0 20070cf8 20070cf8     ... ... ... ... 
20070d08:	20070d00 20070d00 20070d08 20070d08     ... ... ... ... 
20070d18:	20070d10 20070d10 20070d18 20070d18     ... ... ... ... 
20070d28:	20070d20 20070d20 20070d28 20070d28      ..  .. (.. (.. 
20070d38:	20070d30 20070d30 20070d38 20070d38     0.. 0.. 8.. 8.. 
20070d48:	20070d40 20070d40 20070d48 20070d48     @.. @.. H.. H.. 
20070d58:	20070d50 20070d50 20070d58 20070d58     P.. P.. X.. X.. 
20070d68:	20070d60 20070d60 20070d68 20070d68     `.. `.. h.. h.. 

20070d78 <__malloc_sbrk_base>:
20070d78:	ffffffff                                ....

20070d7c <__malloc_trim_threshold>:
20070d7c:	00020000                                ....

20070d80 <__global_locale>:
20070d80:	00000043 00000000 00000000 00000000     C...............
	...
20070da0:	00000043 00000000 00000000 00000000     C...............
	...
20070dc0:	00000043 00000000 00000000 00000000     C...............
	...
20070de0:	00000043 00000000 00000000 00000000     C...............
	...
20070e00:	00000043 00000000 00000000 00000000     C...............
	...
20070e20:	00000043 00000000 00000000 00000000     C...............
	...
20070e40:	00000043 00000000 00000000 00000000     C...............
	...
20070e60:	00085181 00084d21 00000000 0008600c     .Q..!M.......`..
20070e70:	00086008 00085e84 00085e84 00085e84     .`...^...^...^..
20070e80:	00085e84 00085e84 00085e84 00085e84     .^...^...^...^..
20070e90:	00085e84 00085e84 ffffffff ffffffff     .^...^..........
20070ea0:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070ec8:	53410000 00494943 00000000 00000000     ..ASCII.........
	...
