
StartUp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009a1c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00089a1c  00089a1c  00019a1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000fd8  20000000  00089a24  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000888  20000fd8  0008a9fc  00020fd8  2**2
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020fd8  2**0
                  CONTENTS, READONLY
  6 .comment      000000b2  00000000  00000000  00021001  2**0
                  CONTENTS, READONLY
  7 .debug_info   00021e96  00000000  00000000  000210b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004ddb  00000000  00000000  00042f49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005770  00000000  00000000  00047d24  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c20  00000000  00000000  0004d494  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a78  00000000  00000000  0004e0b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001a270  00000000  00000000  0004eb2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00017bfa  00000000  00000000  00068d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051c0e  00000000  00000000  00080996  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000282c  00000000  00000000  000d25a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 65 0f 08 00 61 0f 08 00 61 0f 08 00     .@. e...a...a...
   80010:	61 0f 08 00 61 0f 08 00 61 0f 08 00 00 00 00 00     a...a...a.......
	...
   8002c:	61 0f 08 00 61 0f 08 00 00 00 00 00 61 0f 08 00     a...a.......a...
   8003c:	61 0f 08 00 61 0f 08 00 61 0f 08 00 51 1c 08 00     a...a...a...Q...
   8004c:	61 0f 08 00 61 0f 08 00 61 0f 08 00 61 0f 08 00     a...a...a...a...
   8005c:	61 0f 08 00 15 34 08 00 61 0f 08 00 75 06 08 00     a....4..a...u...
   8006c:	89 06 08 00 61 0f 08 00 61 0f 08 00 61 0f 08 00     ....a...a...a...
   8007c:	61 0f 08 00 61 0f 08 00 61 0f 08 00 61 0f 08 00     a...a...a...a...
   8008c:	61 0f 08 00 61 0f 08 00 61 0f 08 00 91 36 08 00     a...a...a....6..
   8009c:	61 0f 08 00 61 0f 08 00 61 0f 08 00 61 0f 08 00     a...a...a...a...
   800ac:	61 0f 08 00 61 0f 08 00 61 0f 08 00 61 0f 08 00     a...a...a...a...

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000fd8 	.word	0x20000fd8
   800d8:	00000000 	.word	0x00000000
   800dc:	00089a24 	.word	0x00089a24

000800e0 <frame_dummy>:
   800e0:	4b0c      	ldr	r3, [pc, #48]	; (80114 <frame_dummy+0x34>)
   800e2:	b143      	cbz	r3, 800f6 <frame_dummy+0x16>
   800e4:	480c      	ldr	r0, [pc, #48]	; (80118 <frame_dummy+0x38>)
   800e6:	b510      	push	{r4, lr}
   800e8:	490c      	ldr	r1, [pc, #48]	; (8011c <frame_dummy+0x3c>)
   800ea:	f3af 8000 	nop.w
   800ee:	480c      	ldr	r0, [pc, #48]	; (80120 <frame_dummy+0x40>)
   800f0:	6803      	ldr	r3, [r0, #0]
   800f2:	b923      	cbnz	r3, 800fe <frame_dummy+0x1e>
   800f4:	bd10      	pop	{r4, pc}
   800f6:	480a      	ldr	r0, [pc, #40]	; (80120 <frame_dummy+0x40>)
   800f8:	6803      	ldr	r3, [r0, #0]
   800fa:	b933      	cbnz	r3, 8010a <frame_dummy+0x2a>
   800fc:	4770      	bx	lr
   800fe:	4b09      	ldr	r3, [pc, #36]	; (80124 <frame_dummy+0x44>)
   80100:	2b00      	cmp	r3, #0
   80102:	d0f7      	beq.n	800f4 <frame_dummy+0x14>
   80104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80108:	4718      	bx	r3
   8010a:	4b06      	ldr	r3, [pc, #24]	; (80124 <frame_dummy+0x44>)
   8010c:	2b00      	cmp	r3, #0
   8010e:	d0f5      	beq.n	800fc <frame_dummy+0x1c>
   80110:	4718      	bx	r3
   80112:	bf00      	nop
   80114:	00000000 	.word	0x00000000
   80118:	00089a24 	.word	0x00089a24
   8011c:	20000fdc 	.word	0x20000fdc
   80120:	00089a24 	.word	0x00089a24
   80124:	00000000 	.word	0x00000000

00080128 <Appli>:

#include "appli.h"


uint32_t Appli(uint32_t sc, ...)
{
   80128:	b40f      	push	{r0, r1, r2, r3}
   8012a:	b538      	push	{r3, r4, r5, lr}
   8012c:	9904      	ldr	r1, [sp, #16]
	switch(sc)
   8012e:	2964      	cmp	r1, #100	; 0x64
   80130:	d007      	beq.n	80142 <Appli+0x1a>
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
		LcdPutstr("www.a-2-s.net",3,4);
		
		break;
	default:
		Error(ERROR_APPLI_SWITCH_BAD_SC,sc);
   80132:	2010      	movs	r0, #16
   80134:	4b27      	ldr	r3, [pc, #156]	; (801d4 <Appli+0xac>)
   80136:	4798      	blx	r3
	}
	return 0;
}
   80138:	2000      	movs	r0, #0
   8013a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8013e:	b004      	add	sp, #16
   80140:	4770      	bx	lr
		gpio_configure_pin(CMD_MOSFET,			CMD_MOSFET_FLAGS);
   80142:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80146:	2020      	movs	r0, #32
   80148:	4c23      	ldr	r4, [pc, #140]	; (801d8 <Appli+0xb0>)
   8014a:	47a0      	blx	r4
		gpio_configure_pin(CMD_MOT_SERRURE,		CMD_MOT_SERRURE_FLAGS);
   8014c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80150:	2021      	movs	r0, #33	; 0x21
   80152:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS,			CMD_RELAIS_FLAGS);
   80154:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80158:	2022      	movs	r0, #34	; 0x22
   8015a:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_1,		CMD_RELAIS_1_FLAGS);
   8015c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80160:	2023      	movs	r0, #35	; 0x23
   80162:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_2,		CMD_RELAIS_2_FLAGS);
   80164:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80168:	2024      	movs	r0, #36	; 0x24
   8016a:	47a0      	blx	r4
		pmc_enable_periph_clk(ID_PIOA);
   8016c:	200a      	movs	r0, #10
   8016e:	4d1b      	ldr	r5, [pc, #108]	; (801dc <Appli+0xb4>)
   80170:	47a8      	blx	r5
		pmc_enable_periph_clk(ID_PIOB);
   80172:	200b      	movs	r0, #11
   80174:	47a8      	blx	r5
		gpio_configure_pin(PENE_OUVERT,			PENE_OUVERT_FLAGS);
   80176:	4d1a      	ldr	r5, [pc, #104]	; (801e0 <Appli+0xb8>)
   80178:	4629      	mov	r1, r5
   8017a:	200e      	movs	r0, #14
   8017c:	47a0      	blx	r4
		gpio_configure_pin(PENE_FERME,			PENE_FERME_FLAGS);
   8017e:	4629      	mov	r1, r5
   80180:	200f      	movs	r0, #15
   80182:	47a0      	blx	r4
		gpio_configure_pin(IN_ILS,				IN_ILS_FLAGS);
   80184:	4629      	mov	r1, r5
   80186:	2010      	movs	r0, #16
   80188:	47a0      	blx	r4
		gpio_configure_pin(IN_SV,				IN_SV_FLAGS);
   8018a:	4629      	mov	r1, r5
   8018c:	2011      	movs	r0, #17
   8018e:	47a0      	blx	r4
		gpio_configure_pin(IN_RADAR,			IN_RADAR_FLAGS);
   80190:	4629      	mov	r1, r5
   80192:	2018      	movs	r0, #24
   80194:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU,				IN_DVU_FLAGS);
   80196:	4629      	mov	r1, r5
   80198:	2019      	movs	r0, #25
   8019a:	47a0      	blx	r4
		gpio_configure_pin(IN_PREMIERE_ENTREE,	IN_PREMIERE_ENTREE_FLAGS);
   8019c:	4629      	mov	r1, r5
   8019e:	201a      	movs	r0, #26
   801a0:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU_GENERAL,		IN_DVU_GENERAL_FLAGS);
   801a2:	4629      	mov	r1, r5
   801a4:	201b      	movs	r0, #27
   801a6:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_LIBRE,		IN_ENTREE_OPTION_FLAGS);
   801a8:	4629      	mov	r1, r5
   801aa:	201c      	movs	r0, #28
   801ac:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_OPTION,	IN_ENTREE_OPTION_FLAGS);
   801ae:	4629      	mov	r1, r5
   801b0:	201d      	movs	r0, #29
   801b2:	47a0      	blx	r4
		Putstr("\r\n\n\t*______________ CPU.ACX-ATSAM3U4CA-AU ______________*\r\n\n");
   801b4:	490b      	ldr	r1, [pc, #44]	; (801e4 <Appli+0xbc>)
   801b6:	2067      	movs	r0, #103	; 0x67
   801b8:	4b0b      	ldr	r3, [pc, #44]	; (801e8 <Appli+0xc0>)
   801ba:	4798      	blx	r3
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   801bc:	2301      	movs	r3, #1
   801be:	2202      	movs	r2, #2
   801c0:	490a      	ldr	r1, [pc, #40]	; (801ec <Appli+0xc4>)
   801c2:	2067      	movs	r0, #103	; 0x67
   801c4:	4c0a      	ldr	r4, [pc, #40]	; (801f0 <Appli+0xc8>)
   801c6:	47a0      	blx	r4
		LcdPutstr("www.a-2-s.net",3,4);
   801c8:	2304      	movs	r3, #4
   801ca:	2203      	movs	r2, #3
   801cc:	4909      	ldr	r1, [pc, #36]	; (801f4 <Appli+0xcc>)
   801ce:	2067      	movs	r0, #103	; 0x67
   801d0:	47a0      	blx	r4
		break;
   801d2:	e7b1      	b.n	80138 <Appli+0x10>
   801d4:	00081761 	.word	0x00081761
   801d8:	00080859 	.word	0x00080859
   801dc:	00080a59 	.word	0x00080a59
   801e0:	28000001 	.word	0x28000001
   801e4:	00088768 	.word	0x00088768
   801e8:	00083255 	.word	0x00083255
   801ec:	000887a8 	.word	0x000887a8
   801f0:	00081c81 	.word	0x00081c81
   801f4:	000887bc 	.word	0x000887bc

000801f8 <chipid_read>:
   801f8:	b311      	cbz	r1, 80240 <chipid_read+0x48>
   801fa:	6802      	ldr	r2, [r0, #0]
   801fc:	f002 021f 	and.w	r2, r2, #31
   80200:	600a      	str	r2, [r1, #0]
   80202:	6802      	ldr	r2, [r0, #0]
   80204:	f3c2 1242 	ubfx	r2, r2, #5, #3
   80208:	604a      	str	r2, [r1, #4]
   8020a:	6802      	ldr	r2, [r0, #0]
   8020c:	f3c2 2203 	ubfx	r2, r2, #8, #4
   80210:	608a      	str	r2, [r1, #8]
   80212:	6802      	ldr	r2, [r0, #0]
   80214:	2200      	movs	r2, #0
   80216:	60ca      	str	r2, [r1, #12]
   80218:	6802      	ldr	r2, [r0, #0]
   8021a:	f3c2 4203 	ubfx	r2, r2, #16, #4
   8021e:	610a      	str	r2, [r1, #16]
   80220:	6802      	ldr	r2, [r0, #0]
   80222:	f3c2 5207 	ubfx	r2, r2, #20, #8
   80226:	614a      	str	r2, [r1, #20]
   80228:	6802      	ldr	r2, [r0, #0]
   8022a:	f3c2 7202 	ubfx	r2, r2, #28, #3
   8022e:	618a      	str	r2, [r1, #24]
   80230:	6802      	ldr	r2, [r0, #0]
   80232:	0fd2      	lsrs	r2, r2, #31
   80234:	61ca      	str	r2, [r1, #28]
   80236:	b132      	cbz	r2, 80246 <chipid_read+0x4e>
   80238:	6842      	ldr	r2, [r0, #4]
   8023a:	620a      	str	r2, [r1, #32]
   8023c:	2000      	movs	r0, #0
   8023e:	4770      	bx	lr
   80240:	f04f 30ff 	mov.w	r0, #4294967295
   80244:	4770      	bx	lr
   80246:	2000      	movs	r0, #0
   80248:	4770      	bx	lr
	...

0008024c <_menuPorteFermer1>:

	return 0;
 }

uint32_t _menuPorteFermer1(uint32_t sc, ...)
{
   8024c:	b40f      	push	{r0, r1, r2, r3}
   8024e:	b508      	push	{r3, lr}
	switch(sc)
	{
		default:
		Putstr("_menuPorteFermer1: BAD SC");
   80250:	4904      	ldr	r1, [pc, #16]	; (80264 <_menuPorteFermer1+0x18>)
   80252:	2067      	movs	r0, #103	; 0x67
   80254:	4b04      	ldr	r3, [pc, #16]	; (80268 <_menuPorteFermer1+0x1c>)
   80256:	4798      	blx	r3
		break;
	}

	return 0;
}
   80258:	2000      	movs	r0, #0
   8025a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8025e:	b004      	add	sp, #16
   80260:	4770      	bx	lr
   80262:	bf00      	nop
   80264:	000888f8 	.word	0x000888f8
   80268:	00083255 	.word	0x00083255

0008026c <_menuPorteFermer2>:

uint32_t _menuPorteFermer2(uint32_t sc, ...)
{
   8026c:	b40f      	push	{r0, r1, r2, r3}
   8026e:	b508      	push	{r3, lr}
	switch(sc)
	{
		default:
		Putstr("_menuPorteFermer2: BAD SC");
   80270:	4904      	ldr	r1, [pc, #16]	; (80284 <_menuPorteFermer2+0x18>)
   80272:	2067      	movs	r0, #103	; 0x67
   80274:	4b04      	ldr	r3, [pc, #16]	; (80288 <_menuPorteFermer2+0x1c>)
   80276:	4798      	blx	r3
		break;
	}

	return 0;
}
   80278:	2000      	movs	r0, #0
   8027a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8027e:	b004      	add	sp, #16
   80280:	4770      	bx	lr
   80282:	bf00      	nop
   80284:	00088914 	.word	0x00088914
   80288:	00083255 	.word	0x00083255

0008028c <_menuOptionSasFunc>:
 {
   8028c:	b40f      	push	{r0, r1, r2, r3}
   8028e:	b510      	push	{r4, lr}
		Putstr("_menuOptionSasFunc: BAD SC");
   80290:	4909      	ldr	r1, [pc, #36]	; (802b8 <_menuOptionSasFunc+0x2c>)
   80292:	2067      	movs	r0, #103	; 0x67
   80294:	4b09      	ldr	r3, [pc, #36]	; (802bc <_menuOptionSasFunc+0x30>)
   80296:	4798      	blx	r3
		LcdPutstr("                     ", 3, 0);
   80298:	2300      	movs	r3, #0
   8029a:	2203      	movs	r2, #3
   8029c:	4908      	ldr	r1, [pc, #32]	; (802c0 <_menuOptionSasFunc+0x34>)
   8029e:	2067      	movs	r0, #103	; 0x67
   802a0:	4c08      	ldr	r4, [pc, #32]	; (802c4 <_menuOptionSasFunc+0x38>)
   802a2:	47a0      	blx	r4
		LcdPutstr("FERMETURE SAS",3,0);
   802a4:	2300      	movs	r3, #0
   802a6:	2203      	movs	r2, #3
   802a8:	4907      	ldr	r1, [pc, #28]	; (802c8 <_menuOptionSasFunc+0x3c>)
   802aa:	2067      	movs	r0, #103	; 0x67
   802ac:	47a0      	blx	r4
 }
   802ae:	2000      	movs	r0, #0
   802b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   802b4:	b004      	add	sp, #16
   802b6:	4770      	bx	lr
   802b8:	000888b4 	.word	0x000888b4
   802bc:	00083255 	.word	0x00083255
   802c0:	000888d0 	.word	0x000888d0
   802c4:	00081c81 	.word	0x00081c81
   802c8:	000888e8 	.word	0x000888e8

000802cc <_menuEtatPorte1>:

uint32_t _menuEtatPorte1(uint32_t sc, ...)
{
   802cc:	b40f      	push	{r0, r1, r2, r3}
   802ce:	b510      	push	{r4, lr}
	switch(sc)
	{
		default:
		Putstr("_menuOptionSasFunc: BAD SC");
   802d0:	4909      	ldr	r1, [pc, #36]	; (802f8 <_menuEtatPorte1+0x2c>)
   802d2:	2067      	movs	r0, #103	; 0x67
   802d4:	4b09      	ldr	r3, [pc, #36]	; (802fc <_menuEtatPorte1+0x30>)
   802d6:	4798      	blx	r3
		LcdPutstr("                     ", 3, 0);
   802d8:	2300      	movs	r3, #0
   802da:	2203      	movs	r2, #3
   802dc:	4908      	ldr	r1, [pc, #32]	; (80300 <_menuEtatPorte1+0x34>)
   802de:	2067      	movs	r0, #103	; 0x67
   802e0:	4c08      	ldr	r4, [pc, #32]	; (80304 <_menuEtatPorte1+0x38>)
   802e2:	47a0      	blx	r4
		LcdPutstr("ETAT PORTE 1",3,0);
   802e4:	2300      	movs	r3, #0
   802e6:	2203      	movs	r2, #3
   802e8:	4907      	ldr	r1, [pc, #28]	; (80308 <_menuEtatPorte1+0x3c>)
   802ea:	2067      	movs	r0, #103	; 0x67
   802ec:	47a0      	blx	r4
		break;
	}

	return 0;
}
   802ee:	2000      	movs	r0, #0
   802f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   802f4:	b004      	add	sp, #16
   802f6:	4770      	bx	lr
   802f8:	000888b4 	.word	0x000888b4
   802fc:	00083255 	.word	0x00083255
   80300:	000888d0 	.word	0x000888d0
   80304:	00081c81 	.word	0x00081c81
   80308:	00088898 	.word	0x00088898

0008030c <_menuEtatPorte2>:

uint32_t _menuEtatPorte2(uint32_t sc, ...)
{
   8030c:	b40f      	push	{r0, r1, r2, r3}
   8030e:	b510      	push	{r4, lr}
	switch(sc)
	{
		default:
		Putstr("_menuOptionSasFunc: BAD SC");
   80310:	4909      	ldr	r1, [pc, #36]	; (80338 <_menuEtatPorte2+0x2c>)
   80312:	2067      	movs	r0, #103	; 0x67
   80314:	4b09      	ldr	r3, [pc, #36]	; (8033c <_menuEtatPorte2+0x30>)
   80316:	4798      	blx	r3
		LcdPutstr("                     ", 3, 0);
   80318:	2300      	movs	r3, #0
   8031a:	2203      	movs	r2, #3
   8031c:	4908      	ldr	r1, [pc, #32]	; (80340 <_menuEtatPorte2+0x34>)
   8031e:	2067      	movs	r0, #103	; 0x67
   80320:	4c08      	ldr	r4, [pc, #32]	; (80344 <_menuEtatPorte2+0x38>)
   80322:	47a0      	blx	r4
		LcdPutstr("ETAT PORTE 1",3,0);
   80324:	2300      	movs	r3, #0
   80326:	2203      	movs	r2, #3
   80328:	4907      	ldr	r1, [pc, #28]	; (80348 <_menuEtatPorte2+0x3c>)
   8032a:	2067      	movs	r0, #103	; 0x67
   8032c:	47a0      	blx	r4
		break;
	}

	return 0;
}
   8032e:	2000      	movs	r0, #0
   80330:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80334:	b004      	add	sp, #16
   80336:	4770      	bx	lr
   80338:	000888b4 	.word	0x000888b4
   8033c:	00083255 	.word	0x00083255
   80340:	000888d0 	.word	0x000888d0
   80344:	00081c81 	.word	0x00081c81
   80348:	00088898 	.word	0x00088898

0008034c <_menuEtatPortes>:

uint32_t _menuEtatPortes(uint32_t sc, ...)
{
   8034c:	b40f      	push	{r0, r1, r2, r3}
   8034e:	b510      	push	{r4, lr}
	switch(sc)
	{
		default:
		Putstr("_menuOptionSasFunc: BAD SC");
   80350:	4909      	ldr	r1, [pc, #36]	; (80378 <_menuEtatPortes+0x2c>)
   80352:	2067      	movs	r0, #103	; 0x67
   80354:	4b09      	ldr	r3, [pc, #36]	; (8037c <_menuEtatPortes+0x30>)
   80356:	4798      	blx	r3
		LcdPutstr("                     ", 3, 0);
   80358:	2300      	movs	r3, #0
   8035a:	2203      	movs	r2, #3
   8035c:	4908      	ldr	r1, [pc, #32]	; (80380 <_menuEtatPortes+0x34>)
   8035e:	2067      	movs	r0, #103	; 0x67
   80360:	4c08      	ldr	r4, [pc, #32]	; (80384 <_menuEtatPortes+0x38>)
   80362:	47a0      	blx	r4
		LcdPutstr("ETAT PORTES",3,0);
   80364:	2300      	movs	r3, #0
   80366:	2203      	movs	r2, #3
   80368:	4907      	ldr	r1, [pc, #28]	; (80388 <_menuEtatPortes+0x3c>)
   8036a:	2067      	movs	r0, #103	; 0x67
   8036c:	47a0      	blx	r4
		break;
	}

	return 0;
   8036e:	2000      	movs	r0, #0
   80370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80374:	b004      	add	sp, #16
   80376:	4770      	bx	lr
   80378:	000888b4 	.word	0x000888b4
   8037c:	00083255 	.word	0x00083255
   80380:	000888d0 	.word	0x000888d0
   80384:	00081c81 	.word	0x00081c81
   80388:	000888a8 	.word	0x000888a8

0008038c <Menu>:
{
   8038c:	b40f      	push	{r0, r1, r2, r3}
   8038e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80392:	b082      	sub	sp, #8
   80394:	9908      	ldr	r1, [sp, #32]
	switch(sc)
   80396:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   8039a:	2b07      	cmp	r3, #7
   8039c:	f200 80b0 	bhi.w	80500 <Menu+0x174>
   803a0:	e8df f003 	tbb	[pc, r3]
   803a4:	826d5d04 	.word	0x826d5d04
   803a8:	57ae91ae 	.word	0x57ae91ae
			Putstr("MENU_NEW\r");
   803ac:	4956      	ldr	r1, [pc, #344]	; (80508 <Menu+0x17c>)
   803ae:	2067      	movs	r0, #103	; 0x67
   803b0:	f8df 8190 	ldr.w	r8, [pc, #400]	; 80544 <Menu+0x1b8>
   803b4:	47c0      	blx	r8
			pio_set_input(PIOA, PIN_BUTTON_SWITCH, PIO_PULLUP); //A0 (Bouton Gauche)
   803b6:	4c55      	ldr	r4, [pc, #340]	; (8050c <Menu+0x180>)
   803b8:	2201      	movs	r2, #1
   803ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
   803be:	4620      	mov	r0, r4
   803c0:	4f53      	ldr	r7, [pc, #332]	; (80510 <Menu+0x184>)
   803c2:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SWITCH, PIO_IT_FALL_EDGE, ButtonSwitch_ISR_Handler);
   803c4:	4b53      	ldr	r3, [pc, #332]	; (80514 <Menu+0x188>)
   803c6:	9300      	str	r3, [sp, #0]
   803c8:	2350      	movs	r3, #80	; 0x50
   803ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
   803ce:	210a      	movs	r1, #10
   803d0:	4620      	mov	r0, r4
   803d2:	4e51      	ldr	r6, [pc, #324]	; (80518 <Menu+0x18c>)
   803d4:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SWITCH);
   803d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
   803da:	4620      	mov	r0, r4
   803dc:	4d4f      	ldr	r5, [pc, #316]	; (8051c <Menu+0x190>)
   803de:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_SELECT, PIO_PULLUP); //A1 (Bouton Milieu)
   803e0:	2201      	movs	r2, #1
   803e2:	f44f 7100 	mov.w	r1, #512	; 0x200
   803e6:	4620      	mov	r0, r4
   803e8:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SELECT, PIO_IT_FALL_EDGE, ButtonSelect_ISR_Handler);
   803ea:	4b4d      	ldr	r3, [pc, #308]	; (80520 <Menu+0x194>)
   803ec:	9300      	str	r3, [sp, #0]
   803ee:	2350      	movs	r3, #80	; 0x50
   803f0:	f44f 7200 	mov.w	r2, #512	; 0x200
   803f4:	210a      	movs	r1, #10
   803f6:	4620      	mov	r0, r4
   803f8:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SELECT);
   803fa:	f44f 7100 	mov.w	r1, #512	; 0x200
   803fe:	4620      	mov	r0, r4
   80400:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_CLEAR, PIO_PULLUP); //A1 (Bouton Droite)
   80402:	2201      	movs	r2, #1
   80404:	f44f 7180 	mov.w	r1, #256	; 0x100
   80408:	4620      	mov	r0, r4
   8040a:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_CLEAR, PIO_IT_FALL_EDGE, ButtonClear_ISR_Handler);
   8040c:	4b45      	ldr	r3, [pc, #276]	; (80524 <Menu+0x198>)
   8040e:	9300      	str	r3, [sp, #0]
   80410:	2350      	movs	r3, #80	; 0x50
   80412:	f44f 7280 	mov.w	r2, #256	; 0x100
   80416:	210a      	movs	r1, #10
   80418:	4620      	mov	r0, r4
   8041a:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_CLEAR);
   8041c:	f44f 7180 	mov.w	r1, #256	; 0x100
   80420:	4620      	mov	r0, r4
   80422:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80424:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80428:	4b3f      	ldr	r3, [pc, #252]	; (80528 <Menu+0x19c>)
   8042a:	601a      	str	r2, [r3, #0]
			sprintf(buf, "MENU NEW FINISHED \r\n");
   8042c:	4d3f      	ldr	r5, [pc, #252]	; (8052c <Menu+0x1a0>)
   8042e:	4c40      	ldr	r4, [pc, #256]	; (80530 <Menu+0x1a4>)
   80430:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   80432:	6028      	str	r0, [r5, #0]
   80434:	6069      	str	r1, [r5, #4]
   80436:	60aa      	str	r2, [r5, #8]
   80438:	60eb      	str	r3, [r5, #12]
   8043a:	6820      	ldr	r0, [r4, #0]
   8043c:	6128      	str	r0, [r5, #16]
   8043e:	7923      	ldrb	r3, [r4, #4]
   80440:	752b      	strb	r3, [r5, #20]
			Putstr(buf);
   80442:	4629      	mov	r1, r5
   80444:	2067      	movs	r0, #103	; 0x67
   80446:	47c0      	blx	r8
			menu.iIndexMenu = 0;
   80448:	4b3a      	ldr	r3, [pc, #232]	; (80534 <Menu+0x1a8>)
   8044a:	2200      	movs	r2, #0
   8044c:	601a      	str	r2, [r3, #0]
			menu.pCurrentMenu = _mainMenu;
   8044e:	4a3a      	ldr	r2, [pc, #232]	; (80538 <Menu+0x1ac>)
   80450:	605a      	str	r2, [r3, #4]
}
   80452:	2000      	movs	r0, #0
   80454:	b002      	add	sp, #8
   80456:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8045a:	b004      	add	sp, #16
   8045c:	4770      	bx	lr
			menu.iIndexMenu++;
   8045e:	4a35      	ldr	r2, [pc, #212]	; (80534 <Menu+0x1a8>)
   80460:	6813      	ldr	r3, [r2, #0]
   80462:	3301      	adds	r3, #1
   80464:	6013      	str	r3, [r2, #0]
			if(menu.pCurrentMenu[menu.iIndexMenu].pMenuLabel == NULL) menu.iIndexMenu = 0;
   80466:	6852      	ldr	r2, [r2, #4]
   80468:	011b      	lsls	r3, r3, #4
   8046a:	58d3      	ldr	r3, [r2, r3]
   8046c:	b11b      	cbz	r3, 80476 <Menu+0xea>
			Menu(MENU_PROMPT);
   8046e:	2069      	movs	r0, #105	; 0x69
   80470:	f7ff ff8c 	bl	8038c <Menu>
			break;
   80474:	e7ed      	b.n	80452 <Menu+0xc6>
			if(menu.pCurrentMenu[menu.iIndexMenu].pMenuLabel == NULL) menu.iIndexMenu = 0;
   80476:	2200      	movs	r2, #0
   80478:	4b2e      	ldr	r3, [pc, #184]	; (80534 <Menu+0x1a8>)
   8047a:	601a      	str	r2, [r3, #0]
   8047c:	e7f7      	b.n	8046e <Menu+0xe2>
			if(menu.pCurrentMenu[menu.iIndexMenu].pMenuFunc)
   8047e:	4a2d      	ldr	r2, [pc, #180]	; (80534 <Menu+0x1a8>)
   80480:	6811      	ldr	r1, [r2, #0]
   80482:	6853      	ldr	r3, [r2, #4]
   80484:	eb03 1301 	add.w	r3, r3, r1, lsl #4
   80488:	68da      	ldr	r2, [r3, #12]
   8048a:	b112      	cbz	r2, 80492 <Menu+0x106>
				menu.pCurrentMenu[menu.iIndexMenu].pMenuFunc(0);
   8048c:	2000      	movs	r0, #0
   8048e:	4790      	blx	r2
   80490:	e7df      	b.n	80452 <Menu+0xc6>
			else if(menu.pCurrentMenu[menu.iIndexMenu].pSubMenu)
   80492:	689b      	ldr	r3, [r3, #8]
   80494:	2b00      	cmp	r3, #0
   80496:	d0dc      	beq.n	80452 <Menu+0xc6>
				menu.pCurrentMenu = menu.pCurrentMenu[menu.iIndexMenu].pSubMenu;
   80498:	4a26      	ldr	r2, [pc, #152]	; (80534 <Menu+0x1a8>)
   8049a:	6053      	str	r3, [r2, #4]
				menu.iIndexMenu = 0;
   8049c:	2300      	movs	r3, #0
   8049e:	6013      	str	r3, [r2, #0]
				Menu(MENU_PROMPT);
   804a0:	2069      	movs	r0, #105	; 0x69
   804a2:	f7ff ff73 	bl	8038c <Menu>
   804a6:	e7d4      	b.n	80452 <Menu+0xc6>
			if(menu.pCurrentMenu[menu.iIndexMenu].pParentMenu)
   804a8:	4a22      	ldr	r2, [pc, #136]	; (80534 <Menu+0x1a8>)
   804aa:	6811      	ldr	r1, [r2, #0]
   804ac:	6853      	ldr	r3, [r2, #4]
   804ae:	eb03 1301 	add.w	r3, r3, r1, lsl #4
   804b2:	685b      	ldr	r3, [r3, #4]
   804b4:	2b00      	cmp	r3, #0
   804b6:	d0cc      	beq.n	80452 <Menu+0xc6>
				menu.pCurrentMenu = menu.pCurrentMenu[menu.iIndexMenu].pParentMenu;
   804b8:	6053      	str	r3, [r2, #4]
				menu.iIndexMenu = 0;
   804ba:	2300      	movs	r3, #0
   804bc:	6013      	str	r3, [r2, #0]
				Menu(MENU_PROMPT);
   804be:	2069      	movs	r0, #105	; 0x69
   804c0:	f7ff ff64 	bl	8038c <Menu>
   804c4:	e7c5      	b.n	80452 <Menu+0xc6>
			LcdPutstr("                    ", 2, 0);
   804c6:	2300      	movs	r3, #0
   804c8:	2202      	movs	r2, #2
   804ca:	491c      	ldr	r1, [pc, #112]	; (8053c <Menu+0x1b0>)
   804cc:	2067      	movs	r0, #103	; 0x67
   804ce:	4d1c      	ldr	r5, [pc, #112]	; (80540 <Menu+0x1b4>)
   804d0:	47a8      	blx	r5
			Putstr(menu.pCurrentMenu[menu.iIndexMenu].pMenuLabel);
   804d2:	4c18      	ldr	r4, [pc, #96]	; (80534 <Menu+0x1a8>)
   804d4:	6823      	ldr	r3, [r4, #0]
   804d6:	6862      	ldr	r2, [r4, #4]
   804d8:	011b      	lsls	r3, r3, #4
   804da:	58d1      	ldr	r1, [r2, r3]
   804dc:	2067      	movs	r0, #103	; 0x67
   804de:	4b19      	ldr	r3, [pc, #100]	; (80544 <Menu+0x1b8>)
   804e0:	4798      	blx	r3
			LcdPutstr(menu.pCurrentMenu[menu.iIndexMenu].pMenuLabel,2,LcdFindHalf(strlen(menu.pCurrentMenu[menu.iIndexMenu].pMenuLabel)));
   804e2:	6823      	ldr	r3, [r4, #0]
   804e4:	6862      	ldr	r2, [r4, #4]
   804e6:	011b      	lsls	r3, r3, #4
   804e8:	58d4      	ldr	r4, [r2, r3]
   804ea:	4620      	mov	r0, r4
   804ec:	4b16      	ldr	r3, [pc, #88]	; (80548 <Menu+0x1bc>)
   804ee:	4798      	blx	r3
   804f0:	4b16      	ldr	r3, [pc, #88]	; (8054c <Menu+0x1c0>)
   804f2:	4798      	blx	r3
   804f4:	4603      	mov	r3, r0
   804f6:	2202      	movs	r2, #2
   804f8:	4621      	mov	r1, r4
   804fa:	2067      	movs	r0, #103	; 0x67
   804fc:	47a8      	blx	r5
			break;
   804fe:	e7a8      	b.n	80452 <Menu+0xc6>
			Error(ERROR_MENU_SWITCH_BAD_SC, sc);
   80500:	2011      	movs	r0, #17
   80502:	4b13      	ldr	r3, [pc, #76]	; (80550 <Menu+0x1c4>)
   80504:	4798      	blx	r3
   80506:	e7a4      	b.n	80452 <Menu+0xc6>
   80508:	000887cc 	.word	0x000887cc
   8050c:	400e0c00 	.word	0x400e0c00
   80510:	00080757 	.word	0x00080757
   80514:	00080555 	.word	0x00080555
   80518:	00080605 	.word	0x00080605
   8051c:	000807dd 	.word	0x000807dd
   80520:	00080575 	.word	0x00080575
   80524:	00080595 	.word	0x00080595
   80528:	e000e100 	.word	0xe000e100
   8052c:	200012a8 	.word	0x200012a8
   80530:	000887d8 	.word	0x000887d8
   80534:	200010b4 	.word	0x200010b4
   80538:	00088848 	.word	0x00088848
   8053c:	000887f0 	.word	0x000887f0
   80540:	00081c81 	.word	0x00081c81
   80544:	00083255 	.word	0x00083255
   80548:	00083e35 	.word	0x00083e35
   8054c:	00082099 	.word	0x00082099
   80550:	00081761 	.word	0x00081761

00080554 <ButtonSwitch_ISR_Handler>:
{
   80554:	b510      	push	{r4, lr}
   80556:	b082      	sub	sp, #8
	PushTask(Menu, MENU_SWITCH_BUTTON,0,0);
   80558:	2300      	movs	r3, #0
   8055a:	9300      	str	r3, [sp, #0]
   8055c:	2265      	movs	r2, #101	; 0x65
   8055e:	4903      	ldr	r1, [pc, #12]	; (8056c <ButtonSwitch_ISR_Handler+0x18>)
   80560:	2066      	movs	r0, #102	; 0x66
   80562:	4c03      	ldr	r4, [pc, #12]	; (80570 <ButtonSwitch_ISR_Handler+0x1c>)
   80564:	47a0      	blx	r4
}
   80566:	b002      	add	sp, #8
   80568:	bd10      	pop	{r4, pc}
   8056a:	bf00      	nop
   8056c:	0008038d 	.word	0x0008038d
   80570:	00083491 	.word	0x00083491

00080574 <ButtonSelect_ISR_Handler>:
{
   80574:	b510      	push	{r4, lr}
   80576:	b082      	sub	sp, #8
	PushTask(Menu, MENU_SELECT_BUTTON,0,0);
   80578:	2300      	movs	r3, #0
   8057a:	9300      	str	r3, [sp, #0]
   8057c:	2266      	movs	r2, #102	; 0x66
   8057e:	4903      	ldr	r1, [pc, #12]	; (8058c <ButtonSelect_ISR_Handler+0x18>)
   80580:	4610      	mov	r0, r2
   80582:	4c03      	ldr	r4, [pc, #12]	; (80590 <ButtonSelect_ISR_Handler+0x1c>)
   80584:	47a0      	blx	r4
}
   80586:	b002      	add	sp, #8
   80588:	bd10      	pop	{r4, pc}
   8058a:	bf00      	nop
   8058c:	0008038d 	.word	0x0008038d
   80590:	00083491 	.word	0x00083491

00080594 <ButtonClear_ISR_Handler>:
{
   80594:	b510      	push	{r4, lr}
   80596:	b082      	sub	sp, #8
	PushTask(Menu, MENU_CLEAR_BUTTON,0,0);
   80598:	2300      	movs	r3, #0
   8059a:	9300      	str	r3, [sp, #0]
   8059c:	2267      	movs	r2, #103	; 0x67
   8059e:	4903      	ldr	r1, [pc, #12]	; (805ac <ButtonClear_ISR_Handler+0x18>)
   805a0:	2066      	movs	r0, #102	; 0x66
   805a2:	4c03      	ldr	r4, [pc, #12]	; (805b0 <ButtonClear_ISR_Handler+0x1c>)
   805a4:	47a0      	blx	r4
}
   805a6:	b002      	add	sp, #8
   805a8:	bd10      	pop	{r4, pc}
   805aa:	bf00      	nop
   805ac:	0008038d 	.word	0x0008038d
   805b0:	00083491 	.word	0x00083491

000805b4 <pio_handler_process>:
   805b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   805b8:	4604      	mov	r4, r0
   805ba:	4688      	mov	r8, r1
   805bc:	4b0e      	ldr	r3, [pc, #56]	; (805f8 <pio_handler_process+0x44>)
   805be:	4798      	blx	r3
   805c0:	4605      	mov	r5, r0
   805c2:	4620      	mov	r0, r4
   805c4:	4b0d      	ldr	r3, [pc, #52]	; (805fc <pio_handler_process+0x48>)
   805c6:	4798      	blx	r3
   805c8:	4005      	ands	r5, r0
   805ca:	d013      	beq.n	805f4 <pio_handler_process+0x40>
   805cc:	4c0c      	ldr	r4, [pc, #48]	; (80600 <pio_handler_process+0x4c>)
   805ce:	f104 0660 	add.w	r6, r4, #96	; 0x60
   805d2:	e003      	b.n	805dc <pio_handler_process+0x28>
   805d4:	42b4      	cmp	r4, r6
   805d6:	d00d      	beq.n	805f4 <pio_handler_process+0x40>
   805d8:	3410      	adds	r4, #16
   805da:	b15d      	cbz	r5, 805f4 <pio_handler_process+0x40>
   805dc:	6820      	ldr	r0, [r4, #0]
   805de:	4540      	cmp	r0, r8
   805e0:	d1f8      	bne.n	805d4 <pio_handler_process+0x20>
   805e2:	6861      	ldr	r1, [r4, #4]
   805e4:	4229      	tst	r1, r5
   805e6:	d0f5      	beq.n	805d4 <pio_handler_process+0x20>
   805e8:	68e3      	ldr	r3, [r4, #12]
   805ea:	4798      	blx	r3
   805ec:	6863      	ldr	r3, [r4, #4]
   805ee:	ea25 0503 	bic.w	r5, r5, r3
   805f2:	e7ef      	b.n	805d4 <pio_handler_process+0x20>
   805f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   805f8:	000807e1 	.word	0x000807e1
   805fc:	000807e5 	.word	0x000807e5
   80600:	20000ff4 	.word	0x20000ff4

00080604 <pio_handler_set>:
   80604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80606:	4c18      	ldr	r4, [pc, #96]	; (80668 <pio_handler_set+0x64>)
   80608:	6826      	ldr	r6, [r4, #0]
   8060a:	2e06      	cmp	r6, #6
   8060c:	d829      	bhi.n	80662 <pio_handler_set+0x5e>
   8060e:	f04f 0c00 	mov.w	ip, #0
   80612:	4664      	mov	r4, ip
   80614:	4f15      	ldr	r7, [pc, #84]	; (8066c <pio_handler_set+0x68>)
   80616:	e004      	b.n	80622 <pio_handler_set+0x1e>
   80618:	3401      	adds	r4, #1
   8061a:	b2e4      	uxtb	r4, r4
   8061c:	46a4      	mov	ip, r4
   8061e:	42a6      	cmp	r6, r4
   80620:	d309      	bcc.n	80636 <pio_handler_set+0x32>
   80622:	46a6      	mov	lr, r4
   80624:	0125      	lsls	r5, r4, #4
   80626:	597d      	ldr	r5, [r7, r5]
   80628:	428d      	cmp	r5, r1
   8062a:	d1f5      	bne.n	80618 <pio_handler_set+0x14>
   8062c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   80630:	686d      	ldr	r5, [r5, #4]
   80632:	4295      	cmp	r5, r2
   80634:	d1f0      	bne.n	80618 <pio_handler_set+0x14>
   80636:	4d0d      	ldr	r5, [pc, #52]	; (8066c <pio_handler_set+0x68>)
   80638:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   8063c:	eb05 040e 	add.w	r4, r5, lr
   80640:	f845 100e 	str.w	r1, [r5, lr]
   80644:	6062      	str	r2, [r4, #4]
   80646:	60a3      	str	r3, [r4, #8]
   80648:	9906      	ldr	r1, [sp, #24]
   8064a:	60e1      	str	r1, [r4, #12]
   8064c:	3601      	adds	r6, #1
   8064e:	4566      	cmp	r6, ip
   80650:	bf04      	itt	eq
   80652:	4905      	ldreq	r1, [pc, #20]	; (80668 <pio_handler_set+0x64>)
   80654:	600e      	streq	r6, [r1, #0]
   80656:	4611      	mov	r1, r2
   80658:	461a      	mov	r2, r3
   8065a:	4b05      	ldr	r3, [pc, #20]	; (80670 <pio_handler_set+0x6c>)
   8065c:	4798      	blx	r3
   8065e:	2000      	movs	r0, #0
   80660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80662:	2001      	movs	r0, #1
   80664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80666:	bf00      	nop
   80668:	20001064 	.word	0x20001064
   8066c:	20000ff4 	.word	0x20000ff4
   80670:	000807af 	.word	0x000807af

00080674 <PIOA_Handler>:
   80674:	b508      	push	{r3, lr}
   80676:	210a      	movs	r1, #10
   80678:	4801      	ldr	r0, [pc, #4]	; (80680 <PIOA_Handler+0xc>)
   8067a:	4b02      	ldr	r3, [pc, #8]	; (80684 <PIOA_Handler+0x10>)
   8067c:	4798      	blx	r3
   8067e:	bd08      	pop	{r3, pc}
   80680:	400e0c00 	.word	0x400e0c00
   80684:	000805b5 	.word	0x000805b5

00080688 <PIOB_Handler>:
   80688:	b508      	push	{r3, lr}
   8068a:	210b      	movs	r1, #11
   8068c:	4801      	ldr	r0, [pc, #4]	; (80694 <PIOB_Handler+0xc>)
   8068e:	4b02      	ldr	r3, [pc, #8]	; (80698 <PIOB_Handler+0x10>)
   80690:	4798      	blx	r3
   80692:	bd08      	pop	{r3, pc}
   80694:	400e0e00 	.word	0x400e0e00
   80698:	000805b5 	.word	0x000805b5

0008069c <sysclk_init>:
   8069c:	b510      	push	{r4, lr}
   8069e:	4812      	ldr	r0, [pc, #72]	; (806e8 <sysclk_init+0x4c>)
   806a0:	4b12      	ldr	r3, [pc, #72]	; (806ec <sysclk_init+0x50>)
   806a2:	4798      	blx	r3
   806a4:	203e      	movs	r0, #62	; 0x3e
   806a6:	4b12      	ldr	r3, [pc, #72]	; (806f0 <sysclk_init+0x54>)
   806a8:	4798      	blx	r3
   806aa:	4c12      	ldr	r4, [pc, #72]	; (806f4 <sysclk_init+0x58>)
   806ac:	47a0      	blx	r4
   806ae:	2800      	cmp	r0, #0
   806b0:	d0fc      	beq.n	806ac <sysclk_init+0x10>
   806b2:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   806b6:	4b10      	ldr	r3, [pc, #64]	; (806f8 <sysclk_init+0x5c>)
   806b8:	4798      	blx	r3
   806ba:	4c10      	ldr	r4, [pc, #64]	; (806fc <sysclk_init+0x60>)
   806bc:	47a0      	blx	r4
   806be:	2800      	cmp	r0, #0
   806c0:	d0fc      	beq.n	806bc <sysclk_init+0x20>
   806c2:	4b0f      	ldr	r3, [pc, #60]	; (80700 <sysclk_init+0x64>)
   806c4:	4798      	blx	r3
   806c6:	4a0f      	ldr	r2, [pc, #60]	; (80704 <sysclk_init+0x68>)
   806c8:	4b0f      	ldr	r3, [pc, #60]	; (80708 <sysclk_init+0x6c>)
   806ca:	629a      	str	r2, [r3, #40]	; 0x28
   806cc:	4c0f      	ldr	r4, [pc, #60]	; (8070c <sysclk_init+0x70>)
   806ce:	47a0      	blx	r4
   806d0:	2800      	cmp	r0, #0
   806d2:	d0fc      	beq.n	806ce <sysclk_init+0x32>
   806d4:	2010      	movs	r0, #16
   806d6:	4b0e      	ldr	r3, [pc, #56]	; (80710 <sysclk_init+0x74>)
   806d8:	4798      	blx	r3
   806da:	4b0e      	ldr	r3, [pc, #56]	; (80714 <sysclk_init+0x78>)
   806dc:	4798      	blx	r3
   806de:	4802      	ldr	r0, [pc, #8]	; (806e8 <sysclk_init+0x4c>)
   806e0:	4b02      	ldr	r3, [pc, #8]	; (806ec <sysclk_init+0x50>)
   806e2:	4798      	blx	r3
   806e4:	bd10      	pop	{r4, pc}
   806e6:	bf00      	nop
   806e8:	05b8d800 	.word	0x05b8d800
   806ec:	200000b5 	.word	0x200000b5
   806f0:	000809d1 	.word	0x000809d1
   806f4:	000809f9 	.word	0x000809f9
   806f8:	00080a19 	.word	0x00080a19
   806fc:	00080a09 	.word	0x00080a09
   80700:	00080a39 	.word	0x00080a39
   80704:	200f3f01 	.word	0x200f3f01
   80708:	400e0400 	.word	0x400e0400
   8070c:	00080a49 	.word	0x00080a49
   80710:	00080929 	.word	0x00080929
   80714:	00080ffd 	.word	0x00080ffd

00080718 <pio_set_peripheral>:
   80718:	6442      	str	r2, [r0, #68]	; 0x44
   8071a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8071e:	d016      	beq.n	8074e <pio_set_peripheral+0x36>
   80720:	d80b      	bhi.n	8073a <pio_set_peripheral+0x22>
   80722:	b149      	cbz	r1, 80738 <pio_set_peripheral+0x20>
   80724:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80728:	d105      	bne.n	80736 <pio_set_peripheral+0x1e>
   8072a:	6f03      	ldr	r3, [r0, #112]	; 0x70
   8072c:	6f01      	ldr	r1, [r0, #112]	; 0x70
   8072e:	400b      	ands	r3, r1
   80730:	ea23 0302 	bic.w	r3, r3, r2
   80734:	6703      	str	r3, [r0, #112]	; 0x70
   80736:	6042      	str	r2, [r0, #4]
   80738:	4770      	bx	lr
   8073a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8073e:	d0fb      	beq.n	80738 <pio_set_peripheral+0x20>
   80740:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80744:	d0f8      	beq.n	80738 <pio_set_peripheral+0x20>
   80746:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   8074a:	d1f4      	bne.n	80736 <pio_set_peripheral+0x1e>
   8074c:	4770      	bx	lr
   8074e:	6f03      	ldr	r3, [r0, #112]	; 0x70
   80750:	4313      	orrs	r3, r2
   80752:	6703      	str	r3, [r0, #112]	; 0x70
   80754:	e7ef      	b.n	80736 <pio_set_peripheral+0x1e>

00080756 <pio_set_input>:
   80756:	6441      	str	r1, [r0, #68]	; 0x44
   80758:	f012 0f01 	tst.w	r2, #1
   8075c:	bf14      	ite	ne
   8075e:	6641      	strne	r1, [r0, #100]	; 0x64
   80760:	6601      	streq	r1, [r0, #96]	; 0x60
   80762:	f012 0f0a 	tst.w	r2, #10
   80766:	bf14      	ite	ne
   80768:	6201      	strne	r1, [r0, #32]
   8076a:	6241      	streq	r1, [r0, #36]	; 0x24
   8076c:	f012 0f02 	tst.w	r2, #2
   80770:	d107      	bne.n	80782 <pio_set_input+0x2c>
   80772:	f012 0f08 	tst.w	r2, #8
   80776:	bf18      	it	ne
   80778:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   8077c:	6141      	str	r1, [r0, #20]
   8077e:	6001      	str	r1, [r0, #0]
   80780:	4770      	bx	lr
   80782:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80786:	e7f9      	b.n	8077c <pio_set_input+0x26>

00080788 <pio_set_output>:
   80788:	b410      	push	{r4}
   8078a:	9c01      	ldr	r4, [sp, #4]
   8078c:	6441      	str	r1, [r0, #68]	; 0x44
   8078e:	b944      	cbnz	r4, 807a2 <pio_set_output+0x1a>
   80790:	6601      	str	r1, [r0, #96]	; 0x60
   80792:	b143      	cbz	r3, 807a6 <pio_set_output+0x1e>
   80794:	6501      	str	r1, [r0, #80]	; 0x50
   80796:	b942      	cbnz	r2, 807aa <pio_set_output+0x22>
   80798:	6341      	str	r1, [r0, #52]	; 0x34
   8079a:	6101      	str	r1, [r0, #16]
   8079c:	6001      	str	r1, [r0, #0]
   8079e:	bc10      	pop	{r4}
   807a0:	4770      	bx	lr
   807a2:	6641      	str	r1, [r0, #100]	; 0x64
   807a4:	e7f5      	b.n	80792 <pio_set_output+0xa>
   807a6:	6541      	str	r1, [r0, #84]	; 0x54
   807a8:	e7f5      	b.n	80796 <pio_set_output+0xe>
   807aa:	6301      	str	r1, [r0, #48]	; 0x30
   807ac:	e7f5      	b.n	8079a <pio_set_output+0x12>

000807ae <pio_configure_interrupt>:
   807ae:	f012 0f10 	tst.w	r2, #16
   807b2:	d010      	beq.n	807d6 <pio_configure_interrupt+0x28>
   807b4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
   807b8:	f012 0f20 	tst.w	r2, #32
   807bc:	bf14      	ite	ne
   807be:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
   807c2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
   807c6:	f012 0f40 	tst.w	r2, #64	; 0x40
   807ca:	bf14      	ite	ne
   807cc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
   807d0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   807d4:	4770      	bx	lr
   807d6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   807da:	4770      	bx	lr

000807dc <pio_enable_interrupt>:
   807dc:	6401      	str	r1, [r0, #64]	; 0x40
   807de:	4770      	bx	lr

000807e0 <pio_get_interrupt_status>:
   807e0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   807e2:	4770      	bx	lr

000807e4 <pio_get_interrupt_mask>:
   807e4:	6c80      	ldr	r0, [r0, #72]	; 0x48
   807e6:	4770      	bx	lr

000807e8 <pio_get_pin_value>:
   807e8:	0943      	lsrs	r3, r0, #5
   807ea:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   807ee:	f203 7306 	addw	r3, r3, #1798	; 0x706
   807f2:	025b      	lsls	r3, r3, #9
   807f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   807f6:	f000 001f 	and.w	r0, r0, #31
   807fa:	fa23 f000 	lsr.w	r0, r3, r0
   807fe:	f000 0001 	and.w	r0, r0, #1
   80802:	4770      	bx	lr

00080804 <pio_set_pin_high>:
   80804:	0943      	lsrs	r3, r0, #5
   80806:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8080a:	f203 7306 	addw	r3, r3, #1798	; 0x706
   8080e:	025b      	lsls	r3, r3, #9
   80810:	f000 001f 	and.w	r0, r0, #31
   80814:	2201      	movs	r2, #1
   80816:	fa02 f000 	lsl.w	r0, r2, r0
   8081a:	6318      	str	r0, [r3, #48]	; 0x30
   8081c:	4770      	bx	lr

0008081e <pio_set_pin_low>:
   8081e:	0943      	lsrs	r3, r0, #5
   80820:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80824:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80828:	025b      	lsls	r3, r3, #9
   8082a:	f000 001f 	and.w	r0, r0, #31
   8082e:	2201      	movs	r2, #1
   80830:	fa02 f000 	lsl.w	r0, r2, r0
   80834:	6358      	str	r0, [r3, #52]	; 0x34
   80836:	4770      	bx	lr

00080838 <pio_toggle_pin>:
   80838:	0943      	lsrs	r3, r0, #5
   8083a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8083e:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80842:	025b      	lsls	r3, r3, #9
   80844:	6b99      	ldr	r1, [r3, #56]	; 0x38
   80846:	f000 021f 	and.w	r2, r0, #31
   8084a:	2001      	movs	r0, #1
   8084c:	4090      	lsls	r0, r2
   8084e:	4201      	tst	r1, r0
   80850:	bf14      	ite	ne
   80852:	6358      	strne	r0, [r3, #52]	; 0x34
   80854:	6318      	streq	r0, [r3, #48]	; 0x30
   80856:	4770      	bx	lr

00080858 <pio_configure_pin>:
   80858:	b570      	push	{r4, r5, r6, lr}
   8085a:	b082      	sub	sp, #8
   8085c:	460d      	mov	r5, r1
   8085e:	0943      	lsrs	r3, r0, #5
   80860:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80864:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80868:	025c      	lsls	r4, r3, #9
   8086a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   8086e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80872:	d031      	beq.n	808d8 <pio_configure_pin+0x80>
   80874:	d816      	bhi.n	808a4 <pio_configure_pin+0x4c>
   80876:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8087a:	d01b      	beq.n	808b4 <pio_configure_pin+0x5c>
   8087c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80880:	d116      	bne.n	808b0 <pio_configure_pin+0x58>
   80882:	f000 001f 	and.w	r0, r0, #31
   80886:	2601      	movs	r6, #1
   80888:	4086      	lsls	r6, r0
   8088a:	4632      	mov	r2, r6
   8088c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80890:	4620      	mov	r0, r4
   80892:	4b22      	ldr	r3, [pc, #136]	; (8091c <pio_configure_pin+0xc4>)
   80894:	4798      	blx	r3
   80896:	f015 0f01 	tst.w	r5, #1
   8089a:	bf14      	ite	ne
   8089c:	6666      	strne	r6, [r4, #100]	; 0x64
   8089e:	6626      	streq	r6, [r4, #96]	; 0x60
   808a0:	2001      	movs	r0, #1
   808a2:	e017      	b.n	808d4 <pio_configure_pin+0x7c>
   808a4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   808a8:	d021      	beq.n	808ee <pio_configure_pin+0x96>
   808aa:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   808ae:	d01e      	beq.n	808ee <pio_configure_pin+0x96>
   808b0:	2000      	movs	r0, #0
   808b2:	e00f      	b.n	808d4 <pio_configure_pin+0x7c>
   808b4:	f000 001f 	and.w	r0, r0, #31
   808b8:	2601      	movs	r6, #1
   808ba:	4086      	lsls	r6, r0
   808bc:	4632      	mov	r2, r6
   808be:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   808c2:	4620      	mov	r0, r4
   808c4:	4b15      	ldr	r3, [pc, #84]	; (8091c <pio_configure_pin+0xc4>)
   808c6:	4798      	blx	r3
   808c8:	f015 0f01 	tst.w	r5, #1
   808cc:	bf14      	ite	ne
   808ce:	6666      	strne	r6, [r4, #100]	; 0x64
   808d0:	6626      	streq	r6, [r4, #96]	; 0x60
   808d2:	2001      	movs	r0, #1
   808d4:	b002      	add	sp, #8
   808d6:	bd70      	pop	{r4, r5, r6, pc}
   808d8:	f000 011f 	and.w	r1, r0, #31
   808dc:	2601      	movs	r6, #1
   808de:	462a      	mov	r2, r5
   808e0:	fa06 f101 	lsl.w	r1, r6, r1
   808e4:	4620      	mov	r0, r4
   808e6:	4b0e      	ldr	r3, [pc, #56]	; (80920 <pio_configure_pin+0xc8>)
   808e8:	4798      	blx	r3
   808ea:	4630      	mov	r0, r6
   808ec:	e7f2      	b.n	808d4 <pio_configure_pin+0x7c>
   808ee:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   808f2:	f000 011f 	and.w	r1, r0, #31
   808f6:	2601      	movs	r6, #1
   808f8:	ea05 0306 	and.w	r3, r5, r6
   808fc:	9300      	str	r3, [sp, #0]
   808fe:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80902:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80906:	bf14      	ite	ne
   80908:	2200      	movne	r2, #0
   8090a:	2201      	moveq	r2, #1
   8090c:	fa06 f101 	lsl.w	r1, r6, r1
   80910:	4620      	mov	r0, r4
   80912:	4c04      	ldr	r4, [pc, #16]	; (80924 <pio_configure_pin+0xcc>)
   80914:	47a0      	blx	r4
   80916:	4630      	mov	r0, r6
   80918:	e7dc      	b.n	808d4 <pio_configure_pin+0x7c>
   8091a:	bf00      	nop
   8091c:	00080719 	.word	0x00080719
   80920:	00080757 	.word	0x00080757
   80924:	00080789 	.word	0x00080789

00080928 <pmc_switch_mck_to_pllack>:
   80928:	4a17      	ldr	r2, [pc, #92]	; (80988 <pmc_switch_mck_to_pllack+0x60>)
   8092a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8092c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80930:	4318      	orrs	r0, r3
   80932:	6310      	str	r0, [r2, #48]	; 0x30
   80934:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80936:	f013 0f08 	tst.w	r3, #8
   8093a:	d10a      	bne.n	80952 <pmc_switch_mck_to_pllack+0x2a>
   8093c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80940:	4911      	ldr	r1, [pc, #68]	; (80988 <pmc_switch_mck_to_pllack+0x60>)
   80942:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80944:	f012 0f08 	tst.w	r2, #8
   80948:	d103      	bne.n	80952 <pmc_switch_mck_to_pllack+0x2a>
   8094a:	3b01      	subs	r3, #1
   8094c:	d1f9      	bne.n	80942 <pmc_switch_mck_to_pllack+0x1a>
   8094e:	2001      	movs	r0, #1
   80950:	4770      	bx	lr
   80952:	4a0d      	ldr	r2, [pc, #52]	; (80988 <pmc_switch_mck_to_pllack+0x60>)
   80954:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80956:	f023 0303 	bic.w	r3, r3, #3
   8095a:	f043 0302 	orr.w	r3, r3, #2
   8095e:	6313      	str	r3, [r2, #48]	; 0x30
   80960:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80962:	f013 0f08 	tst.w	r3, #8
   80966:	d10a      	bne.n	8097e <pmc_switch_mck_to_pllack+0x56>
   80968:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8096c:	4906      	ldr	r1, [pc, #24]	; (80988 <pmc_switch_mck_to_pllack+0x60>)
   8096e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80970:	f012 0f08 	tst.w	r2, #8
   80974:	d105      	bne.n	80982 <pmc_switch_mck_to_pllack+0x5a>
   80976:	3b01      	subs	r3, #1
   80978:	d1f9      	bne.n	8096e <pmc_switch_mck_to_pllack+0x46>
   8097a:	2001      	movs	r0, #1
   8097c:	4770      	bx	lr
   8097e:	2000      	movs	r0, #0
   80980:	4770      	bx	lr
   80982:	2000      	movs	r0, #0
   80984:	4770      	bx	lr
   80986:	bf00      	nop
   80988:	400e0400 	.word	0x400e0400

0008098c <pmc_switch_sclk_to_32kxtal>:
   8098c:	2801      	cmp	r0, #1
   8098e:	d003      	beq.n	80998 <pmc_switch_sclk_to_32kxtal+0xc>
   80990:	4a05      	ldr	r2, [pc, #20]	; (809a8 <pmc_switch_sclk_to_32kxtal+0x1c>)
   80992:	4b06      	ldr	r3, [pc, #24]	; (809ac <pmc_switch_sclk_to_32kxtal+0x20>)
   80994:	601a      	str	r2, [r3, #0]
   80996:	4770      	bx	lr
   80998:	4a04      	ldr	r2, [pc, #16]	; (809ac <pmc_switch_sclk_to_32kxtal+0x20>)
   8099a:	6893      	ldr	r3, [r2, #8]
   8099c:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   809a0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   809a4:	6093      	str	r3, [r2, #8]
   809a6:	e7f3      	b.n	80990 <pmc_switch_sclk_to_32kxtal+0x4>
   809a8:	a5000008 	.word	0xa5000008
   809ac:	400e1210 	.word	0x400e1210

000809b0 <pmc_osc_is_ready_32kxtal>:
   809b0:	4b05      	ldr	r3, [pc, #20]	; (809c8 <pmc_osc_is_ready_32kxtal+0x18>)
   809b2:	695b      	ldr	r3, [r3, #20]
   809b4:	f013 0f80 	tst.w	r3, #128	; 0x80
   809b8:	bf1d      	ittte	ne
   809ba:	4b04      	ldrne	r3, [pc, #16]	; (809cc <pmc_osc_is_ready_32kxtal+0x1c>)
   809bc:	6e98      	ldrne	r0, [r3, #104]	; 0x68
   809be:	f3c0 10c0 	ubfxne	r0, r0, #7, #1
   809c2:	2000      	moveq	r0, #0
   809c4:	4770      	bx	lr
   809c6:	bf00      	nop
   809c8:	400e1210 	.word	0x400e1210
   809cc:	400e0400 	.word	0x400e0400

000809d0 <pmc_osc_enable_main_xtal>:
   809d0:	4a08      	ldr	r2, [pc, #32]	; (809f4 <pmc_osc_enable_main_xtal+0x24>)
   809d2:	6a13      	ldr	r3, [r2, #32]
   809d4:	f023 0303 	bic.w	r3, r3, #3
   809d8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   809dc:	f043 0301 	orr.w	r3, r3, #1
   809e0:	0200      	lsls	r0, r0, #8
   809e2:	b280      	uxth	r0, r0
   809e4:	4303      	orrs	r3, r0
   809e6:	6213      	str	r3, [r2, #32]
   809e8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809ea:	f013 0f01 	tst.w	r3, #1
   809ee:	d0fb      	beq.n	809e8 <pmc_osc_enable_main_xtal+0x18>
   809f0:	4770      	bx	lr
   809f2:	bf00      	nop
   809f4:	400e0400 	.word	0x400e0400

000809f8 <pmc_osc_is_ready_main_xtal>:
   809f8:	4b02      	ldr	r3, [pc, #8]	; (80a04 <pmc_osc_is_ready_main_xtal+0xc>)
   809fa:	6e98      	ldr	r0, [r3, #104]	; 0x68
   809fc:	f000 0001 	and.w	r0, r0, #1
   80a00:	4770      	bx	lr
   80a02:	bf00      	nop
   80a04:	400e0400 	.word	0x400e0400

00080a08 <pmc_osc_is_ready_mainck>:
   80a08:	4b02      	ldr	r3, [pc, #8]	; (80a14 <pmc_osc_is_ready_mainck+0xc>)
   80a0a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80a0c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80a10:	4770      	bx	lr
   80a12:	bf00      	nop
   80a14:	400e0400 	.word	0x400e0400

00080a18 <pmc_mainck_osc_select>:
   80a18:	4b06      	ldr	r3, [pc, #24]	; (80a34 <pmc_mainck_osc_select+0x1c>)
   80a1a:	6a1b      	ldr	r3, [r3, #32]
   80a1c:	b930      	cbnz	r0, 80a2c <pmc_mainck_osc_select+0x14>
   80a1e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
   80a22:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80a26:	4a03      	ldr	r2, [pc, #12]	; (80a34 <pmc_mainck_osc_select+0x1c>)
   80a28:	6213      	str	r3, [r2, #32]
   80a2a:	4770      	bx	lr
   80a2c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   80a30:	e7f7      	b.n	80a22 <pmc_mainck_osc_select+0xa>
   80a32:	bf00      	nop
   80a34:	400e0400 	.word	0x400e0400

00080a38 <pmc_disable_pllack>:
   80a38:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80a3c:	4b01      	ldr	r3, [pc, #4]	; (80a44 <pmc_disable_pllack+0xc>)
   80a3e:	629a      	str	r2, [r3, #40]	; 0x28
   80a40:	4770      	bx	lr
   80a42:	bf00      	nop
   80a44:	400e0400 	.word	0x400e0400

00080a48 <pmc_is_locked_pllack>:
   80a48:	4b02      	ldr	r3, [pc, #8]	; (80a54 <pmc_is_locked_pllack+0xc>)
   80a4a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80a4c:	f000 0002 	and.w	r0, r0, #2
   80a50:	4770      	bx	lr
   80a52:	bf00      	nop
   80a54:	400e0400 	.word	0x400e0400

00080a58 <pmc_enable_periph_clk>:
   80a58:	281d      	cmp	r0, #29
   80a5a:	d80e      	bhi.n	80a7a <pmc_enable_periph_clk+0x22>
   80a5c:	281f      	cmp	r0, #31
   80a5e:	d80e      	bhi.n	80a7e <pmc_enable_periph_clk+0x26>
   80a60:	4b09      	ldr	r3, [pc, #36]	; (80a88 <pmc_enable_periph_clk+0x30>)
   80a62:	699a      	ldr	r2, [r3, #24]
   80a64:	2301      	movs	r3, #1
   80a66:	4083      	lsls	r3, r0
   80a68:	4393      	bics	r3, r2
   80a6a:	d00a      	beq.n	80a82 <pmc_enable_periph_clk+0x2a>
   80a6c:	2301      	movs	r3, #1
   80a6e:	fa03 f000 	lsl.w	r0, r3, r0
   80a72:	4b05      	ldr	r3, [pc, #20]	; (80a88 <pmc_enable_periph_clk+0x30>)
   80a74:	6118      	str	r0, [r3, #16]
   80a76:	2000      	movs	r0, #0
   80a78:	4770      	bx	lr
   80a7a:	2001      	movs	r0, #1
   80a7c:	4770      	bx	lr
   80a7e:	2000      	movs	r0, #0
   80a80:	4770      	bx	lr
   80a82:	2000      	movs	r0, #0
   80a84:	4770      	bx	lr
   80a86:	bf00      	nop
   80a88:	400e0400 	.word	0x400e0400

00080a8c <board_init>:
   80a8c:	4770      	bx	lr
	...

00080a90 <cpu_irq_enter_critical>:
   80a90:	4b0b      	ldr	r3, [pc, #44]	; (80ac0 <cpu_irq_enter_critical+0x30>)
   80a92:	681b      	ldr	r3, [r3, #0]
   80a94:	b92b      	cbnz	r3, 80aa2 <cpu_irq_enter_critical+0x12>
   80a96:	f3ef 8310 	mrs	r3, PRIMASK
   80a9a:	b13b      	cbz	r3, 80aac <cpu_irq_enter_critical+0x1c>
   80a9c:	2200      	movs	r2, #0
   80a9e:	4b09      	ldr	r3, [pc, #36]	; (80ac4 <cpu_irq_enter_critical+0x34>)
   80aa0:	701a      	strb	r2, [r3, #0]
   80aa2:	4a07      	ldr	r2, [pc, #28]	; (80ac0 <cpu_irq_enter_critical+0x30>)
   80aa4:	6813      	ldr	r3, [r2, #0]
   80aa6:	3301      	adds	r3, #1
   80aa8:	6013      	str	r3, [r2, #0]
   80aaa:	4770      	bx	lr
   80aac:	b672      	cpsid	i
   80aae:	f3bf 8f5f 	dmb	sy
   80ab2:	2200      	movs	r2, #0
   80ab4:	4b04      	ldr	r3, [pc, #16]	; (80ac8 <cpu_irq_enter_critical+0x38>)
   80ab6:	701a      	strb	r2, [r3, #0]
   80ab8:	2201      	movs	r2, #1
   80aba:	4b02      	ldr	r3, [pc, #8]	; (80ac4 <cpu_irq_enter_critical+0x34>)
   80abc:	701a      	strb	r2, [r3, #0]
   80abe:	e7f0      	b.n	80aa2 <cpu_irq_enter_critical+0x12>
   80ac0:	20001068 	.word	0x20001068
   80ac4:	2000106c 	.word	0x2000106c
   80ac8:	20000124 	.word	0x20000124

00080acc <cpu_irq_leave_critical>:
   80acc:	4b07      	ldr	r3, [pc, #28]	; (80aec <cpu_irq_leave_critical+0x20>)
   80ace:	681a      	ldr	r2, [r3, #0]
   80ad0:	3a01      	subs	r2, #1
   80ad2:	601a      	str	r2, [r3, #0]
   80ad4:	681b      	ldr	r3, [r3, #0]
   80ad6:	b943      	cbnz	r3, 80aea <cpu_irq_leave_critical+0x1e>
   80ad8:	4b05      	ldr	r3, [pc, #20]	; (80af0 <cpu_irq_leave_critical+0x24>)
   80ada:	781b      	ldrb	r3, [r3, #0]
   80adc:	b12b      	cbz	r3, 80aea <cpu_irq_leave_critical+0x1e>
   80ade:	2201      	movs	r2, #1
   80ae0:	4b04      	ldr	r3, [pc, #16]	; (80af4 <cpu_irq_leave_critical+0x28>)
   80ae2:	701a      	strb	r2, [r3, #0]
   80ae4:	f3bf 8f5f 	dmb	sy
   80ae8:	b662      	cpsie	i
   80aea:	4770      	bx	lr
   80aec:	20001068 	.word	0x20001068
   80af0:	2000106c 	.word	0x2000106c
   80af4:	20000124 	.word	0x20000124

00080af8 <pwm_clocks_generate>:
   80af8:	b4f0      	push	{r4, r5, r6, r7}
   80afa:	b08c      	sub	sp, #48	; 0x30
   80afc:	4607      	mov	r7, r0
   80afe:	460e      	mov	r6, r1
   80b00:	ac01      	add	r4, sp, #4
   80b02:	4d11      	ldr	r5, [pc, #68]	; (80b48 <pwm_clocks_generate+0x50>)
   80b04:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80b06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80b08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80b0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80b0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80b10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80b14:	aa01      	add	r2, sp, #4
   80b16:	2300      	movs	r3, #0
   80b18:	f852 0b04 	ldr.w	r0, [r2], #4
   80b1c:	fbb6 f0f0 	udiv	r0, r6, r0
   80b20:	fbb0 f0f7 	udiv	r0, r0, r7
   80b24:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   80b28:	d907      	bls.n	80b3a <pwm_clocks_generate+0x42>
   80b2a:	3301      	adds	r3, #1
   80b2c:	2b0b      	cmp	r3, #11
   80b2e:	d1f3      	bne.n	80b18 <pwm_clocks_generate+0x20>
   80b30:	f64f 70ff 	movw	r0, #65535	; 0xffff
   80b34:	b00c      	add	sp, #48	; 0x30
   80b36:	bcf0      	pop	{r4, r5, r6, r7}
   80b38:	4770      	bx	lr
   80b3a:	2b0a      	cmp	r3, #10
   80b3c:	bf94      	ite	ls
   80b3e:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
   80b42:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
   80b46:	e7f5      	b.n	80b34 <pwm_clocks_generate+0x3c>
   80b48:	000889f8 	.word	0x000889f8

00080b4c <pwm_init>:
   80b4c:	b570      	push	{r4, r5, r6, lr}
   80b4e:	4606      	mov	r6, r0
   80b50:	460d      	mov	r5, r1
   80b52:	680c      	ldr	r4, [r1, #0]
   80b54:	b144      	cbz	r4, 80b68 <pwm_init+0x1c>
   80b56:	6889      	ldr	r1, [r1, #8]
   80b58:	4620      	mov	r0, r4
   80b5a:	4b0c      	ldr	r3, [pc, #48]	; (80b8c <pwm_init+0x40>)
   80b5c:	4798      	blx	r3
   80b5e:	4604      	mov	r4, r0
   80b60:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80b64:	4298      	cmp	r0, r3
   80b66:	d00c      	beq.n	80b82 <pwm_init+0x36>
   80b68:	6868      	ldr	r0, [r5, #4]
   80b6a:	b140      	cbz	r0, 80b7e <pwm_init+0x32>
   80b6c:	68a9      	ldr	r1, [r5, #8]
   80b6e:	4b07      	ldr	r3, [pc, #28]	; (80b8c <pwm_init+0x40>)
   80b70:	4798      	blx	r3
   80b72:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80b76:	4298      	cmp	r0, r3
   80b78:	d005      	beq.n	80b86 <pwm_init+0x3a>
   80b7a:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
   80b7e:	6034      	str	r4, [r6, #0]
   80b80:	2400      	movs	r4, #0
   80b82:	4620      	mov	r0, r4
   80b84:	bd70      	pop	{r4, r5, r6, pc}
   80b86:	4604      	mov	r4, r0
   80b88:	e7fb      	b.n	80b82 <pwm_init+0x36>
   80b8a:	bf00      	nop
   80b8c:	00080af9 	.word	0x00080af9

00080b90 <pwm_channel_init>:
   80b90:	b470      	push	{r4, r5, r6}
   80b92:	680a      	ldr	r2, [r1, #0]
   80b94:	684b      	ldr	r3, [r1, #4]
   80b96:	f003 030f 	and.w	r3, r3, #15
   80b9a:	8a8c      	ldrh	r4, [r1, #20]
   80b9c:	4323      	orrs	r3, r4
   80b9e:	890c      	ldrh	r4, [r1, #8]
   80ba0:	4323      	orrs	r3, r4
   80ba2:	7a8c      	ldrb	r4, [r1, #10]
   80ba4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
   80ba8:	7d8c      	ldrb	r4, [r1, #22]
   80baa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80bae:	7dcc      	ldrb	r4, [r1, #23]
   80bb0:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
   80bb4:	7e0c      	ldrb	r4, [r1, #24]
   80bb6:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
   80bba:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80bbe:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
   80bc2:	68cb      	ldr	r3, [r1, #12]
   80bc4:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
   80bc8:	690b      	ldr	r3, [r1, #16]
   80bca:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
   80bce:	7d8b      	ldrb	r3, [r1, #22]
   80bd0:	b13b      	cbz	r3, 80be2 <pwm_channel_init+0x52>
   80bd2:	8b8c      	ldrh	r4, [r1, #28]
   80bd4:	8b4b      	ldrh	r3, [r1, #26]
   80bd6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80bda:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80bde:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   80be2:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80be4:	f04f 1301 	mov.w	r3, #65537	; 0x10001
   80be8:	4093      	lsls	r3, r2
   80bea:	43db      	mvns	r3, r3
   80bec:	401d      	ands	r5, r3
   80bee:	7fcc      	ldrb	r4, [r1, #31]
   80bf0:	fa04 f602 	lsl.w	r6, r4, r2
   80bf4:	7f8c      	ldrb	r4, [r1, #30]
   80bf6:	4094      	lsls	r4, r2
   80bf8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80bfc:	432c      	orrs	r4, r5
   80bfe:	6484      	str	r4, [r0, #72]	; 0x48
   80c00:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80c02:	4023      	ands	r3, r4
   80c04:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
   80c08:	fa04 f502 	lsl.w	r5, r4, r2
   80c0c:	f891 4020 	ldrb.w	r4, [r1, #32]
   80c10:	4094      	lsls	r4, r2
   80c12:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   80c16:	4323      	orrs	r3, r4
   80c18:	6443      	str	r3, [r0, #68]	; 0x44
   80c1a:	2301      	movs	r3, #1
   80c1c:	4093      	lsls	r3, r2
   80c1e:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   80c22:	b31c      	cbz	r4, 80c6c <pwm_channel_init+0xdc>
   80c24:	6a04      	ldr	r4, [r0, #32]
   80c26:	431c      	orrs	r4, r3
   80c28:	6204      	str	r4, [r0, #32]
   80c2a:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80c2e:	2c01      	cmp	r4, #1
   80c30:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80c32:	bf0c      	ite	eq
   80c34:	431c      	orreq	r4, r3
   80c36:	439c      	bicne	r4, r3
   80c38:	6684      	str	r4, [r0, #104]	; 0x68
   80c3a:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   80c3e:	2c01      	cmp	r4, #1
   80c40:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80c42:	bf0c      	ite	eq
   80c44:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
   80c48:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
   80c4c:	6683      	str	r3, [r0, #104]	; 0x68
   80c4e:	00d2      	lsls	r2, r2, #3
   80c50:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
   80c52:	23ff      	movs	r3, #255	; 0xff
   80c54:	4093      	lsls	r3, r2
   80c56:	ea24 0403 	bic.w	r4, r4, r3
   80c5a:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   80c5e:	fa03 f202 	lsl.w	r2, r3, r2
   80c62:	4322      	orrs	r2, r4
   80c64:	66c2      	str	r2, [r0, #108]	; 0x6c
   80c66:	2000      	movs	r0, #0
   80c68:	bc70      	pop	{r4, r5, r6}
   80c6a:	4770      	bx	lr
   80c6c:	6a04      	ldr	r4, [r0, #32]
   80c6e:	ea24 0403 	bic.w	r4, r4, r3
   80c72:	6204      	str	r4, [r0, #32]
   80c74:	e7d9      	b.n	80c2a <pwm_channel_init+0x9a>

00080c76 <pwm_channel_enable>:
   80c76:	2301      	movs	r3, #1
   80c78:	fa03 f101 	lsl.w	r1, r3, r1
   80c7c:	6041      	str	r1, [r0, #4]
   80c7e:	4770      	bx	lr

00080c80 <pwm_channel_disable>:
   80c80:	2301      	movs	r3, #1
   80c82:	fa03 f101 	lsl.w	r1, r3, r1
   80c86:	6081      	str	r1, [r0, #8]
   80c88:	4770      	bx	lr
	...

00080c8c <rstc_start_software_reset>:
   80c8c:	4b01      	ldr	r3, [pc, #4]	; (80c94 <rstc_start_software_reset+0x8>)
   80c8e:	6003      	str	r3, [r0, #0]
   80c90:	4770      	bx	lr
   80c92:	bf00      	nop
   80c94:	a5000005 	.word	0xa5000005

00080c98 <rtc_enable_interrupt>:
   80c98:	6201      	str	r1, [r0, #32]
   80c9a:	4770      	bx	lr

00080c9c <rtc_get_time>:
   80c9c:	b430      	push	{r4, r5}
   80c9e:	6885      	ldr	r5, [r0, #8]
   80ca0:	6884      	ldr	r4, [r0, #8]
   80ca2:	42a5      	cmp	r5, r4
   80ca4:	d003      	beq.n	80cae <rtc_get_time+0x12>
   80ca6:	6885      	ldr	r5, [r0, #8]
   80ca8:	6884      	ldr	r4, [r0, #8]
   80caa:	42ac      	cmp	r4, r5
   80cac:	d1fb      	bne.n	80ca6 <rtc_get_time+0xa>
   80cae:	b161      	cbz	r1, 80cca <rtc_get_time+0x2e>
   80cb0:	f3c4 5001 	ubfx	r0, r4, #20, #2
   80cb4:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80cb8:	f3c4 4003 	ubfx	r0, r4, #16, #4
   80cbc:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80cc0:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
   80cc4:	bf18      	it	ne
   80cc6:	300c      	addne	r0, #12
   80cc8:	6008      	str	r0, [r1, #0]
   80cca:	b142      	cbz	r2, 80cde <rtc_get_time+0x42>
   80ccc:	f3c4 3102 	ubfx	r1, r4, #12, #3
   80cd0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80cd4:	f3c4 2003 	ubfx	r0, r4, #8, #4
   80cd8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   80cdc:	6011      	str	r1, [r2, #0]
   80cde:	b143      	cbz	r3, 80cf2 <rtc_get_time+0x56>
   80ce0:	f3c4 1202 	ubfx	r2, r4, #4, #3
   80ce4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80ce8:	f004 040f 	and.w	r4, r4, #15
   80cec:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   80cf0:	601c      	str	r4, [r3, #0]
   80cf2:	bc30      	pop	{r4, r5}
   80cf4:	4770      	bx	lr
	...

00080cf8 <rtc_set_time>:
   80cf8:	b4f0      	push	{r4, r5, r6, r7}
   80cfa:	6844      	ldr	r4, [r0, #4]
   80cfc:	f014 0f01 	tst.w	r4, #1
   80d00:	d005      	beq.n	80d0e <rtc_set_time+0x16>
   80d02:	290c      	cmp	r1, #12
   80d04:	d93d      	bls.n	80d82 <rtc_set_time+0x8a>
   80d06:	390c      	subs	r1, #12
   80d08:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   80d0c:	e000      	b.n	80d10 <rtc_set_time+0x18>
   80d0e:	2700      	movs	r7, #0
   80d10:	4c1d      	ldr	r4, [pc, #116]	; (80d88 <rtc_set_time+0x90>)
   80d12:	fba4 5603 	umull	r5, r6, r4, r3
   80d16:	08f6      	lsrs	r6, r6, #3
   80d18:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   80d1c:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   80d20:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
   80d24:	fba4 6502 	umull	r6, r5, r4, r2
   80d28:	08ed      	lsrs	r5, r5, #3
   80d2a:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
   80d2e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80d32:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   80d36:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80d3a:	433b      	orrs	r3, r7
   80d3c:	fba4 4201 	umull	r4, r2, r4, r1
   80d40:	08d2      	lsrs	r2, r2, #3
   80d42:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
   80d46:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80d4a:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
   80d4e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   80d52:	6983      	ldr	r3, [r0, #24]
   80d54:	f013 0f04 	tst.w	r3, #4
   80d58:	d0fb      	beq.n	80d52 <rtc_set_time+0x5a>
   80d5a:	6803      	ldr	r3, [r0, #0]
   80d5c:	f043 0301 	orr.w	r3, r3, #1
   80d60:	6003      	str	r3, [r0, #0]
   80d62:	6983      	ldr	r3, [r0, #24]
   80d64:	f013 0f01 	tst.w	r3, #1
   80d68:	d0fb      	beq.n	80d62 <rtc_set_time+0x6a>
   80d6a:	2301      	movs	r3, #1
   80d6c:	61c3      	str	r3, [r0, #28]
   80d6e:	6081      	str	r1, [r0, #8]
   80d70:	6803      	ldr	r3, [r0, #0]
   80d72:	f023 0301 	bic.w	r3, r3, #1
   80d76:	6003      	str	r3, [r0, #0]
   80d78:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80d7a:	f000 0001 	and.w	r0, r0, #1
   80d7e:	bcf0      	pop	{r4, r5, r6, r7}
   80d80:	4770      	bx	lr
   80d82:	2700      	movs	r7, #0
   80d84:	e7c4      	b.n	80d10 <rtc_set_time+0x18>
   80d86:	bf00      	nop
   80d88:	cccccccd 	.word	0xcccccccd

00080d8c <rtc_get_date>:
   80d8c:	b4f0      	push	{r4, r5, r6, r7}
   80d8e:	9e04      	ldr	r6, [sp, #16]
   80d90:	68c5      	ldr	r5, [r0, #12]
   80d92:	68c4      	ldr	r4, [r0, #12]
   80d94:	42a5      	cmp	r5, r4
   80d96:	d003      	beq.n	80da0 <rtc_get_date+0x14>
   80d98:	68c5      	ldr	r5, [r0, #12]
   80d9a:	68c4      	ldr	r4, [r0, #12]
   80d9c:	42ac      	cmp	r4, r5
   80d9e:	d1fb      	bne.n	80d98 <rtc_get_date+0xc>
   80da0:	b199      	cbz	r1, 80dca <rtc_get_date+0x3e>
   80da2:	f3c4 3003 	ubfx	r0, r4, #12, #4
   80da6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80daa:	f3c4 2703 	ubfx	r7, r4, #8, #4
   80dae:	eb07 0740 	add.w	r7, r7, r0, lsl #1
   80db2:	f3c4 1002 	ubfx	r0, r4, #4, #3
   80db6:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80dba:	f004 000f 	and.w	r0, r4, #15
   80dbe:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80dc2:	2564      	movs	r5, #100	; 0x64
   80dc4:	fb05 7000 	mla	r0, r5, r0, r7
   80dc8:	6008      	str	r0, [r1, #0]
   80dca:	b142      	cbz	r2, 80dde <rtc_get_date+0x52>
   80dcc:	f3c4 5000 	ubfx	r0, r4, #20, #1
   80dd0:	0081      	lsls	r1, r0, #2
   80dd2:	4408      	add	r0, r1
   80dd4:	f3c4 4103 	ubfx	r1, r4, #16, #4
   80dd8:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   80ddc:	6011      	str	r1, [r2, #0]
   80dde:	b143      	cbz	r3, 80df2 <rtc_get_date+0x66>
   80de0:	f3c4 7201 	ubfx	r2, r4, #28, #2
   80de4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80de8:	f3c4 6103 	ubfx	r1, r4, #24, #4
   80dec:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   80df0:	601a      	str	r2, [r3, #0]
   80df2:	b116      	cbz	r6, 80dfa <rtc_get_date+0x6e>
   80df4:	f3c4 5442 	ubfx	r4, r4, #21, #3
   80df8:	6034      	str	r4, [r6, #0]
   80dfa:	bcf0      	pop	{r4, r5, r6, r7}
   80dfc:	4770      	bx	lr
	...

00080e00 <rtc_set_date>:
   80e00:	b470      	push	{r4, r5, r6}
   80e02:	4d2a      	ldr	r5, [pc, #168]	; (80eac <rtc_set_date+0xac>)
   80e04:	fba5 4603 	umull	r4, r6, r5, r3
   80e08:	08f6      	lsrs	r6, r6, #3
   80e0a:	9c03      	ldr	r4, [sp, #12]
   80e0c:	0564      	lsls	r4, r4, #21
   80e0e:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
   80e12:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   80e16:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
   80e1a:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
   80e1e:	fba5 6402 	umull	r6, r4, r5, r2
   80e22:	08e4      	lsrs	r4, r4, #3
   80e24:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
   80e28:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80e2c:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
   80e30:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   80e34:	4b1e      	ldr	r3, [pc, #120]	; (80eb0 <rtc_set_date+0xb0>)
   80e36:	fba3 4301 	umull	r4, r3, r3, r1
   80e3a:	099b      	lsrs	r3, r3, #6
   80e3c:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
   80e40:	4b1c      	ldr	r3, [pc, #112]	; (80eb4 <rtc_set_date+0xb4>)
   80e42:	fba3 4301 	umull	r4, r3, r3, r1
   80e46:	095b      	lsrs	r3, r3, #5
   80e48:	fba5 6403 	umull	r6, r4, r5, r3
   80e4c:	08e4      	lsrs	r4, r4, #3
   80e4e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80e52:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
   80e56:	431a      	orrs	r2, r3
   80e58:	fba5 4301 	umull	r4, r3, r5, r1
   80e5c:	08db      	lsrs	r3, r3, #3
   80e5e:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   80e62:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
   80e66:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   80e6a:	fba5 1503 	umull	r1, r5, r5, r3
   80e6e:	08ed      	lsrs	r5, r5, #3
   80e70:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80e74:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
   80e78:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
   80e7c:	6983      	ldr	r3, [r0, #24]
   80e7e:	f013 0f04 	tst.w	r3, #4
   80e82:	d0fb      	beq.n	80e7c <rtc_set_date+0x7c>
   80e84:	6803      	ldr	r3, [r0, #0]
   80e86:	f043 0302 	orr.w	r3, r3, #2
   80e8a:	6003      	str	r3, [r0, #0]
   80e8c:	6983      	ldr	r3, [r0, #24]
   80e8e:	f013 0f01 	tst.w	r3, #1
   80e92:	d0fb      	beq.n	80e8c <rtc_set_date+0x8c>
   80e94:	2301      	movs	r3, #1
   80e96:	61c3      	str	r3, [r0, #28]
   80e98:	60c2      	str	r2, [r0, #12]
   80e9a:	6803      	ldr	r3, [r0, #0]
   80e9c:	f023 0302 	bic.w	r3, r3, #2
   80ea0:	6003      	str	r3, [r0, #0]
   80ea2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80ea4:	f000 0002 	and.w	r0, r0, #2
   80ea8:	bc70      	pop	{r4, r5, r6}
   80eaa:	4770      	bx	lr
   80eac:	cccccccd 	.word	0xcccccccd
   80eb0:	10624dd3 	.word	0x10624dd3
   80eb4:	51eb851f 	.word	0x51eb851f

00080eb8 <rtc_clear_status>:
   80eb8:	61c1      	str	r1, [r0, #28]
   80eba:	4770      	bx	lr

00080ebc <tc_init>:
   80ebc:	b410      	push	{r4}
   80ebe:	0189      	lsls	r1, r1, #6
   80ec0:	1843      	adds	r3, r0, r1
   80ec2:	2402      	movs	r4, #2
   80ec4:	5044      	str	r4, [r0, r1]
   80ec6:	f04f 31ff 	mov.w	r1, #4294967295
   80eca:	6299      	str	r1, [r3, #40]	; 0x28
   80ecc:	6a19      	ldr	r1, [r3, #32]
   80ece:	605a      	str	r2, [r3, #4]
   80ed0:	bc10      	pop	{r4}
   80ed2:	4770      	bx	lr

00080ed4 <tc_start>:
   80ed4:	0189      	lsls	r1, r1, #6
   80ed6:	2305      	movs	r3, #5
   80ed8:	5043      	str	r3, [r0, r1]
   80eda:	4770      	bx	lr

00080edc <tc_write_ra>:
   80edc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80ee0:	614a      	str	r2, [r1, #20]
   80ee2:	4770      	bx	lr

00080ee4 <tc_write_rc>:
   80ee4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80ee8:	61ca      	str	r2, [r1, #28]
   80eea:	4770      	bx	lr

00080eec <tc_enable_interrupt>:
   80eec:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80ef0:	624a      	str	r2, [r1, #36]	; 0x24
   80ef2:	4770      	bx	lr

00080ef4 <tc_get_status>:
   80ef4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80ef8:	6a08      	ldr	r0, [r1, #32]
   80efa:	4770      	bx	lr

00080efc <uart_init>:
   80efc:	b410      	push	{r4}
   80efe:	23ac      	movs	r3, #172	; 0xac
   80f00:	6003      	str	r3, [r0, #0]
   80f02:	680b      	ldr	r3, [r1, #0]
   80f04:	684a      	ldr	r2, [r1, #4]
   80f06:	fbb3 f3f2 	udiv	r3, r3, r2
   80f0a:	091b      	lsrs	r3, r3, #4
   80f0c:	1e5c      	subs	r4, r3, #1
   80f0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80f12:	4294      	cmp	r4, r2
   80f14:	d80b      	bhi.n	80f2e <uart_init+0x32>
   80f16:	6203      	str	r3, [r0, #32]
   80f18:	688b      	ldr	r3, [r1, #8]
   80f1a:	6043      	str	r3, [r0, #4]
   80f1c:	f240 2302 	movw	r3, #514	; 0x202
   80f20:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   80f24:	2350      	movs	r3, #80	; 0x50
   80f26:	6003      	str	r3, [r0, #0]
   80f28:	2000      	movs	r0, #0
   80f2a:	bc10      	pop	{r4}
   80f2c:	4770      	bx	lr
   80f2e:	2001      	movs	r0, #1
   80f30:	e7fb      	b.n	80f2a <uart_init+0x2e>

00080f32 <uart_enable_interrupt>:
   80f32:	6081      	str	r1, [r0, #8]
   80f34:	4770      	bx	lr

00080f36 <uart_disable_interrupt>:
   80f36:	60c1      	str	r1, [r0, #12]
   80f38:	4770      	bx	lr

00080f3a <uart_get_status>:
   80f3a:	6940      	ldr	r0, [r0, #20]
   80f3c:	4770      	bx	lr

00080f3e <uart_is_rx_ready>:
   80f3e:	6940      	ldr	r0, [r0, #20]
   80f40:	f000 0001 	and.w	r0, r0, #1
   80f44:	4770      	bx	lr

00080f46 <uart_read>:
   80f46:	6943      	ldr	r3, [r0, #20]
   80f48:	f013 0f01 	tst.w	r3, #1
   80f4c:	bf1d      	ittte	ne
   80f4e:	6983      	ldrne	r3, [r0, #24]
   80f50:	700b      	strbne	r3, [r1, #0]
   80f52:	2000      	movne	r0, #0
   80f54:	2001      	moveq	r0, #1
   80f56:	4770      	bx	lr

00080f58 <wdt_disable>:
   80f58:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80f5c:	6043      	str	r3, [r0, #4]
   80f5e:	4770      	bx	lr

00080f60 <Dummy_Handler>:
   80f60:	e7fe      	b.n	80f60 <Dummy_Handler>
	...

00080f64 <Reset_Handler>:
   80f64:	b508      	push	{r3, lr}
   80f66:	4b1c      	ldr	r3, [pc, #112]	; (80fd8 <Reset_Handler+0x74>)
   80f68:	4a1c      	ldr	r2, [pc, #112]	; (80fdc <Reset_Handler+0x78>)
   80f6a:	429a      	cmp	r2, r3
   80f6c:	d010      	beq.n	80f90 <Reset_Handler+0x2c>
   80f6e:	4b1c      	ldr	r3, [pc, #112]	; (80fe0 <Reset_Handler+0x7c>)
   80f70:	4a19      	ldr	r2, [pc, #100]	; (80fd8 <Reset_Handler+0x74>)
   80f72:	429a      	cmp	r2, r3
   80f74:	d20c      	bcs.n	80f90 <Reset_Handler+0x2c>
   80f76:	3b01      	subs	r3, #1
   80f78:	1a9b      	subs	r3, r3, r2
   80f7a:	f023 0303 	bic.w	r3, r3, #3
   80f7e:	3304      	adds	r3, #4
   80f80:	4413      	add	r3, r2
   80f82:	4916      	ldr	r1, [pc, #88]	; (80fdc <Reset_Handler+0x78>)
   80f84:	f851 0b04 	ldr.w	r0, [r1], #4
   80f88:	f842 0b04 	str.w	r0, [r2], #4
   80f8c:	429a      	cmp	r2, r3
   80f8e:	d1f9      	bne.n	80f84 <Reset_Handler+0x20>
   80f90:	4b14      	ldr	r3, [pc, #80]	; (80fe4 <Reset_Handler+0x80>)
   80f92:	4a15      	ldr	r2, [pc, #84]	; (80fe8 <Reset_Handler+0x84>)
   80f94:	429a      	cmp	r2, r3
   80f96:	d20a      	bcs.n	80fae <Reset_Handler+0x4a>
   80f98:	3b01      	subs	r3, #1
   80f9a:	1a9b      	subs	r3, r3, r2
   80f9c:	f023 0303 	bic.w	r3, r3, #3
   80fa0:	3304      	adds	r3, #4
   80fa2:	4413      	add	r3, r2
   80fa4:	2100      	movs	r1, #0
   80fa6:	f842 1b04 	str.w	r1, [r2], #4
   80faa:	4293      	cmp	r3, r2
   80fac:	d1fb      	bne.n	80fa6 <Reset_Handler+0x42>
   80fae:	4b0f      	ldr	r3, [pc, #60]	; (80fec <Reset_Handler+0x88>)
   80fb0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80fb4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80fb8:	490d      	ldr	r1, [pc, #52]	; (80ff0 <Reset_Handler+0x8c>)
   80fba:	608a      	str	r2, [r1, #8]
   80fbc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80fc0:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
   80fc4:	d203      	bcs.n	80fce <Reset_Handler+0x6a>
   80fc6:	688b      	ldr	r3, [r1, #8]
   80fc8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80fcc:	608b      	str	r3, [r1, #8]
   80fce:	4b09      	ldr	r3, [pc, #36]	; (80ff4 <Reset_Handler+0x90>)
   80fd0:	4798      	blx	r3
   80fd2:	4b09      	ldr	r3, [pc, #36]	; (80ff8 <Reset_Handler+0x94>)
   80fd4:	4798      	blx	r3
   80fd6:	e7fe      	b.n	80fd6 <Reset_Handler+0x72>
   80fd8:	20000000 	.word	0x20000000
   80fdc:	00089a24 	.word	0x00089a24
   80fe0:	20000fd8 	.word	0x20000fd8
   80fe4:	20001860 	.word	0x20001860
   80fe8:	20000fd8 	.word	0x20000fd8
   80fec:	00080000 	.word	0x00080000
   80ff0:	e000ed00 	.word	0xe000ed00
   80ff4:	00083cfd 	.word	0x00083cfd
   80ff8:	0008378d 	.word	0x0008378d

00080ffc <SystemCoreClockUpdate>:
   80ffc:	4b3d      	ldr	r3, [pc, #244]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   80ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81000:	f003 0303 	and.w	r3, r3, #3
   81004:	2b03      	cmp	r3, #3
   81006:	d80e      	bhi.n	81026 <SystemCoreClockUpdate+0x2a>
   81008:	e8df f003 	tbb	[pc, r3]
   8100c:	38381c02 	.word	0x38381c02
   81010:	4b39      	ldr	r3, [pc, #228]	; (810f8 <SystemCoreClockUpdate+0xfc>)
   81012:	695b      	ldr	r3, [r3, #20]
   81014:	f013 0f80 	tst.w	r3, #128	; 0x80
   81018:	bf14      	ite	ne
   8101a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   8101e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   81022:	4b36      	ldr	r3, [pc, #216]	; (810fc <SystemCoreClockUpdate+0x100>)
   81024:	601a      	str	r2, [r3, #0]
   81026:	4b33      	ldr	r3, [pc, #204]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   81028:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8102a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8102e:	2b70      	cmp	r3, #112	; 0x70
   81030:	d057      	beq.n	810e2 <SystemCoreClockUpdate+0xe6>
   81032:	4b30      	ldr	r3, [pc, #192]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   81034:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81036:	4931      	ldr	r1, [pc, #196]	; (810fc <SystemCoreClockUpdate+0x100>)
   81038:	f3c2 1202 	ubfx	r2, r2, #4, #3
   8103c:	680b      	ldr	r3, [r1, #0]
   8103e:	40d3      	lsrs	r3, r2
   81040:	600b      	str	r3, [r1, #0]
   81042:	4770      	bx	lr
   81044:	4b2b      	ldr	r3, [pc, #172]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   81046:	6a1b      	ldr	r3, [r3, #32]
   81048:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8104c:	d003      	beq.n	81056 <SystemCoreClockUpdate+0x5a>
   8104e:	4a2c      	ldr	r2, [pc, #176]	; (81100 <SystemCoreClockUpdate+0x104>)
   81050:	4b2a      	ldr	r3, [pc, #168]	; (810fc <SystemCoreClockUpdate+0x100>)
   81052:	601a      	str	r2, [r3, #0]
   81054:	e7e7      	b.n	81026 <SystemCoreClockUpdate+0x2a>
   81056:	4a2b      	ldr	r2, [pc, #172]	; (81104 <SystemCoreClockUpdate+0x108>)
   81058:	4b28      	ldr	r3, [pc, #160]	; (810fc <SystemCoreClockUpdate+0x100>)
   8105a:	601a      	str	r2, [r3, #0]
   8105c:	4b25      	ldr	r3, [pc, #148]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   8105e:	6a1b      	ldr	r3, [r3, #32]
   81060:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81064:	2b10      	cmp	r3, #16
   81066:	d005      	beq.n	81074 <SystemCoreClockUpdate+0x78>
   81068:	2b20      	cmp	r3, #32
   8106a:	d1dc      	bne.n	81026 <SystemCoreClockUpdate+0x2a>
   8106c:	4a24      	ldr	r2, [pc, #144]	; (81100 <SystemCoreClockUpdate+0x104>)
   8106e:	4b23      	ldr	r3, [pc, #140]	; (810fc <SystemCoreClockUpdate+0x100>)
   81070:	601a      	str	r2, [r3, #0]
   81072:	e7d8      	b.n	81026 <SystemCoreClockUpdate+0x2a>
   81074:	4a24      	ldr	r2, [pc, #144]	; (81108 <SystemCoreClockUpdate+0x10c>)
   81076:	4b21      	ldr	r3, [pc, #132]	; (810fc <SystemCoreClockUpdate+0x100>)
   81078:	601a      	str	r2, [r3, #0]
   8107a:	e7d4      	b.n	81026 <SystemCoreClockUpdate+0x2a>
   8107c:	4b1d      	ldr	r3, [pc, #116]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   8107e:	6a1b      	ldr	r3, [r3, #32]
   81080:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81084:	d00c      	beq.n	810a0 <SystemCoreClockUpdate+0xa4>
   81086:	4a1e      	ldr	r2, [pc, #120]	; (81100 <SystemCoreClockUpdate+0x104>)
   81088:	4b1c      	ldr	r3, [pc, #112]	; (810fc <SystemCoreClockUpdate+0x100>)
   8108a:	601a      	str	r2, [r3, #0]
   8108c:	4b19      	ldr	r3, [pc, #100]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   8108e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81090:	f003 0303 	and.w	r3, r3, #3
   81094:	2b02      	cmp	r3, #2
   81096:	d016      	beq.n	810c6 <SystemCoreClockUpdate+0xca>
   81098:	4a1c      	ldr	r2, [pc, #112]	; (8110c <SystemCoreClockUpdate+0x110>)
   8109a:	4b18      	ldr	r3, [pc, #96]	; (810fc <SystemCoreClockUpdate+0x100>)
   8109c:	601a      	str	r2, [r3, #0]
   8109e:	e7c2      	b.n	81026 <SystemCoreClockUpdate+0x2a>
   810a0:	4a18      	ldr	r2, [pc, #96]	; (81104 <SystemCoreClockUpdate+0x108>)
   810a2:	4b16      	ldr	r3, [pc, #88]	; (810fc <SystemCoreClockUpdate+0x100>)
   810a4:	601a      	str	r2, [r3, #0]
   810a6:	4b13      	ldr	r3, [pc, #76]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   810a8:	6a1b      	ldr	r3, [r3, #32]
   810aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
   810ae:	2b10      	cmp	r3, #16
   810b0:	d005      	beq.n	810be <SystemCoreClockUpdate+0xc2>
   810b2:	2b20      	cmp	r3, #32
   810b4:	d1ea      	bne.n	8108c <SystemCoreClockUpdate+0x90>
   810b6:	4a12      	ldr	r2, [pc, #72]	; (81100 <SystemCoreClockUpdate+0x104>)
   810b8:	4b10      	ldr	r3, [pc, #64]	; (810fc <SystemCoreClockUpdate+0x100>)
   810ba:	601a      	str	r2, [r3, #0]
   810bc:	e7e6      	b.n	8108c <SystemCoreClockUpdate+0x90>
   810be:	4a12      	ldr	r2, [pc, #72]	; (81108 <SystemCoreClockUpdate+0x10c>)
   810c0:	4b0e      	ldr	r3, [pc, #56]	; (810fc <SystemCoreClockUpdate+0x100>)
   810c2:	601a      	str	r2, [r3, #0]
   810c4:	e7e2      	b.n	8108c <SystemCoreClockUpdate+0x90>
   810c6:	4a0b      	ldr	r2, [pc, #44]	; (810f4 <SystemCoreClockUpdate+0xf8>)
   810c8:	6a91      	ldr	r1, [r2, #40]	; 0x28
   810ca:	6a92      	ldr	r2, [r2, #40]	; 0x28
   810cc:	480b      	ldr	r0, [pc, #44]	; (810fc <SystemCoreClockUpdate+0x100>)
   810ce:	f3c1 410a 	ubfx	r1, r1, #16, #11
   810d2:	6803      	ldr	r3, [r0, #0]
   810d4:	fb01 3303 	mla	r3, r1, r3, r3
   810d8:	b2d2      	uxtb	r2, r2
   810da:	fbb3 f3f2 	udiv	r3, r3, r2
   810de:	6003      	str	r3, [r0, #0]
   810e0:	e7a1      	b.n	81026 <SystemCoreClockUpdate+0x2a>
   810e2:	4a06      	ldr	r2, [pc, #24]	; (810fc <SystemCoreClockUpdate+0x100>)
   810e4:	6813      	ldr	r3, [r2, #0]
   810e6:	490a      	ldr	r1, [pc, #40]	; (81110 <SystemCoreClockUpdate+0x114>)
   810e8:	fba1 1303 	umull	r1, r3, r1, r3
   810ec:	085b      	lsrs	r3, r3, #1
   810ee:	6013      	str	r3, [r2, #0]
   810f0:	4770      	bx	lr
   810f2:	bf00      	nop
   810f4:	400e0400 	.word	0x400e0400
   810f8:	400e1210 	.word	0x400e1210
   810fc:	20000128 	.word	0x20000128
   81100:	00b71b00 	.word	0x00b71b00
   81104:	003d0900 	.word	0x003d0900
   81108:	007a1200 	.word	0x007a1200
   8110c:	0e4e1c00 	.word	0x0e4e1c00
   81110:	aaaaaaab 	.word	0xaaaaaaab

00081114 <_sbrk>:
   81114:	4b0a      	ldr	r3, [pc, #40]	; (81140 <_sbrk+0x2c>)
   81116:	681b      	ldr	r3, [r3, #0]
   81118:	b153      	cbz	r3, 81130 <_sbrk+0x1c>
   8111a:	4b09      	ldr	r3, [pc, #36]	; (81140 <_sbrk+0x2c>)
   8111c:	681b      	ldr	r3, [r3, #0]
   8111e:	181a      	adds	r2, r3, r0
   81120:	4908      	ldr	r1, [pc, #32]	; (81144 <_sbrk+0x30>)
   81122:	4291      	cmp	r1, r2
   81124:	db08      	blt.n	81138 <_sbrk+0x24>
   81126:	4610      	mov	r0, r2
   81128:	4a05      	ldr	r2, [pc, #20]	; (81140 <_sbrk+0x2c>)
   8112a:	6010      	str	r0, [r2, #0]
   8112c:	4618      	mov	r0, r3
   8112e:	4770      	bx	lr
   81130:	4a05      	ldr	r2, [pc, #20]	; (81148 <_sbrk+0x34>)
   81132:	4b03      	ldr	r3, [pc, #12]	; (81140 <_sbrk+0x2c>)
   81134:	601a      	str	r2, [r3, #0]
   81136:	e7f0      	b.n	8111a <_sbrk+0x6>
   81138:	f04f 30ff 	mov.w	r0, #4294967295
   8113c:	4770      	bx	lr
   8113e:	bf00      	nop
   81140:	20001070 	.word	0x20001070
   81144:	20083ffc 	.word	0x20083ffc
   81148:	20084000 	.word	0x20084000

0008114c <Test>:
	PH_CMD_RELAIS_1,
	PH_CMD_RELAIS_2
};

void Test(uint32_t sc, uint32_t phase)
{
   8114c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81150:	b084      	sub	sp, #16
   81152:	9103      	str	r1, [sp, #12]
	switch(sc)
   81154:	2864      	cmp	r0, #100	; 0x64
   81156:	f000 80dc 	beq.w	81312 <Test+0x1c6>
   8115a:	2866      	cmp	r0, #102	; 0x66
   8115c:	f040 8123 	bne.w	813a6 <Test+0x25a>
		phase<<=8;
		phase&=0xFF00;
		phase|=PH_CMD_MOSFET;
		//no break;
	case TEST_RUN:
		sprintf(buf,"\r\nPH:%d--%d\r\n",*((char*)&phase+1),*((char*)&phase+0));
   81160:	f89d 700d 	ldrb.w	r7, [sp, #13]
   81164:	4c9c      	ldr	r4, [pc, #624]	; (813d8 <Test+0x28c>)
   81166:	f89d 300c 	ldrb.w	r3, [sp, #12]
   8116a:	463a      	mov	r2, r7
   8116c:	499b      	ldr	r1, [pc, #620]	; (813dc <Test+0x290>)
   8116e:	4620      	mov	r0, r4
   81170:	4d9b      	ldr	r5, [pc, #620]	; (813e0 <Test+0x294>)
   81172:	47a8      	blx	r5
		Putstr(buf);
   81174:	4621      	mov	r1, r4
   81176:	2067      	movs	r0, #103	; 0x67
   81178:	4c9a      	ldr	r4, [pc, #616]	; (813e4 <Test+0x298>)
   8117a:	47a0      	blx	r4

		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   8117c:	499a      	ldr	r1, [pc, #616]	; (813e8 <Test+0x29c>)
   8117e:	2067      	movs	r0, #103	; 0x67
   81180:	47a0      	blx	r4
   81182:	4d9a      	ldr	r5, [pc, #616]	; (813ec <Test+0x2a0>)
   81184:	4629      	mov	r1, r5
   81186:	2067      	movs	r0, #103	; 0x67
   81188:	47a0      	blx	r4
   8118a:	200e      	movs	r0, #14
   8118c:	4b98      	ldr	r3, [pc, #608]	; (813f0 <Test+0x2a4>)
   8118e:	4798      	blx	r3
   81190:	2800      	cmp	r0, #0
   81192:	f040 80c9 	bne.w	81328 <Test+0x1dc>
   81196:	4997      	ldr	r1, [pc, #604]	; (813f4 <Test+0x2a8>)
   81198:	2067      	movs	r0, #103	; 0x67
   8119a:	47a0      	blx	r4
   8119c:	4c96      	ldr	r4, [pc, #600]	; (813f8 <Test+0x2ac>)
   8119e:	4621      	mov	r1, r4
   811a0:	2067      	movs	r0, #103	; 0x67
   811a2:	4e90      	ldr	r6, [pc, #576]	; (813e4 <Test+0x298>)
   811a4:	47b0      	blx	r6
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   811a6:	4995      	ldr	r1, [pc, #596]	; (813fc <Test+0x2b0>)
   811a8:	2067      	movs	r0, #103	; 0x67
   811aa:	47b0      	blx	r6
   811ac:	4629      	mov	r1, r5
   811ae:	2067      	movs	r0, #103	; 0x67
   811b0:	47b0      	blx	r6
   811b2:	200f      	movs	r0, #15
   811b4:	4b8e      	ldr	r3, [pc, #568]	; (813f0 <Test+0x2a4>)
   811b6:	4798      	blx	r3
   811b8:	2800      	cmp	r0, #0
   811ba:	f040 80ba 	bne.w	81332 <Test+0x1e6>
   811be:	498d      	ldr	r1, [pc, #564]	; (813f4 <Test+0x2a8>)
   811c0:	2067      	movs	r0, #103	; 0x67
   811c2:	47b0      	blx	r6
   811c4:	4621      	mov	r1, r4
   811c6:	2067      	movs	r0, #103	; 0x67
   811c8:	f8df 8218 	ldr.w	r8, [pc, #536]	; 813e4 <Test+0x298>
   811cc:	47c0      	blx	r8
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   811ce:	498c      	ldr	r1, [pc, #560]	; (81400 <Test+0x2b4>)
   811d0:	2067      	movs	r0, #103	; 0x67
   811d2:	47c0      	blx	r8
   811d4:	4e8b      	ldr	r6, [pc, #556]	; (81404 <Test+0x2b8>)
   811d6:	4631      	mov	r1, r6
   811d8:	2067      	movs	r0, #103	; 0x67
   811da:	47c0      	blx	r8
   811dc:	2010      	movs	r0, #16
   811de:	4b84      	ldr	r3, [pc, #528]	; (813f0 <Test+0x2a4>)
   811e0:	4798      	blx	r3
   811e2:	2800      	cmp	r0, #0
   811e4:	f040 80aa 	bne.w	8133c <Test+0x1f0>
   811e8:	4982      	ldr	r1, [pc, #520]	; (813f4 <Test+0x2a8>)
   811ea:	2067      	movs	r0, #103	; 0x67
   811ec:	47c0      	blx	r8
   811ee:	4621      	mov	r1, r4
   811f0:	2067      	movs	r0, #103	; 0x67
   811f2:	f8df 81f0 	ldr.w	r8, [pc, #496]	; 813e4 <Test+0x298>
   811f6:	47c0      	blx	r8
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   811f8:	4983      	ldr	r1, [pc, #524]	; (81408 <Test+0x2bc>)
   811fa:	2067      	movs	r0, #103	; 0x67
   811fc:	47c0      	blx	r8
   811fe:	4631      	mov	r1, r6
   81200:	2067      	movs	r0, #103	; 0x67
   81202:	47c0      	blx	r8
   81204:	2011      	movs	r0, #17
   81206:	4b7a      	ldr	r3, [pc, #488]	; (813f0 <Test+0x2a4>)
   81208:	4798      	blx	r3
   8120a:	2800      	cmp	r0, #0
   8120c:	f040 809b 	bne.w	81346 <Test+0x1fa>
   81210:	4978      	ldr	r1, [pc, #480]	; (813f4 <Test+0x2a8>)
   81212:	2067      	movs	r0, #103	; 0x67
   81214:	47c0      	blx	r8
   81216:	4621      	mov	r1, r4
   81218:	2067      	movs	r0, #103	; 0x67
   8121a:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 813e4 <Test+0x298>
   8121e:	47c0      	blx	r8
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81220:	497a      	ldr	r1, [pc, #488]	; (8140c <Test+0x2c0>)
   81222:	2067      	movs	r0, #103	; 0x67
   81224:	47c0      	blx	r8
   81226:	4631      	mov	r1, r6
   81228:	2067      	movs	r0, #103	; 0x67
   8122a:	47c0      	blx	r8
   8122c:	2018      	movs	r0, #24
   8122e:	4b70      	ldr	r3, [pc, #448]	; (813f0 <Test+0x2a4>)
   81230:	4798      	blx	r3
   81232:	2800      	cmp	r0, #0
   81234:	f040 808c 	bne.w	81350 <Test+0x204>
   81238:	496e      	ldr	r1, [pc, #440]	; (813f4 <Test+0x2a8>)
   8123a:	2067      	movs	r0, #103	; 0x67
   8123c:	47c0      	blx	r8
   8123e:	4621      	mov	r1, r4
   81240:	2067      	movs	r0, #103	; 0x67
   81242:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 813e4 <Test+0x298>
   81246:	47c0      	blx	r8
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   81248:	4971      	ldr	r1, [pc, #452]	; (81410 <Test+0x2c4>)
   8124a:	2067      	movs	r0, #103	; 0x67
   8124c:	47c0      	blx	r8
   8124e:	4631      	mov	r1, r6
   81250:	2067      	movs	r0, #103	; 0x67
   81252:	47c0      	blx	r8
   81254:	2019      	movs	r0, #25
   81256:	4b66      	ldr	r3, [pc, #408]	; (813f0 <Test+0x2a4>)
   81258:	4798      	blx	r3
   8125a:	2800      	cmp	r0, #0
   8125c:	d17d      	bne.n	8135a <Test+0x20e>
   8125e:	4965      	ldr	r1, [pc, #404]	; (813f4 <Test+0x2a8>)
   81260:	2067      	movs	r0, #103	; 0x67
   81262:	47c0      	blx	r8
   81264:	4621      	mov	r1, r4
   81266:	2067      	movs	r0, #103	; 0x67
   81268:	4e5e      	ldr	r6, [pc, #376]	; (813e4 <Test+0x298>)
   8126a:	47b0      	blx	r6
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   8126c:	4969      	ldr	r1, [pc, #420]	; (81414 <Test+0x2c8>)
   8126e:	2067      	movs	r0, #103	; 0x67
   81270:	47b0      	blx	r6
   81272:	4629      	mov	r1, r5
   81274:	2067      	movs	r0, #103	; 0x67
   81276:	47b0      	blx	r6
   81278:	201a      	movs	r0, #26
   8127a:	4b5d      	ldr	r3, [pc, #372]	; (813f0 <Test+0x2a4>)
   8127c:	4798      	blx	r3
   8127e:	2800      	cmp	r0, #0
   81280:	d170      	bne.n	81364 <Test+0x218>
   81282:	495c      	ldr	r1, [pc, #368]	; (813f4 <Test+0x2a8>)
   81284:	2067      	movs	r0, #103	; 0x67
   81286:	47b0      	blx	r6
   81288:	4621      	mov	r1, r4
   8128a:	2067      	movs	r0, #103	; 0x67
   8128c:	4e55      	ldr	r6, [pc, #340]	; (813e4 <Test+0x298>)
   8128e:	47b0      	blx	r6
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   81290:	4961      	ldr	r1, [pc, #388]	; (81418 <Test+0x2cc>)
   81292:	2067      	movs	r0, #103	; 0x67
   81294:	47b0      	blx	r6
   81296:	4629      	mov	r1, r5
   81298:	2067      	movs	r0, #103	; 0x67
   8129a:	47b0      	blx	r6
   8129c:	201b      	movs	r0, #27
   8129e:	4b54      	ldr	r3, [pc, #336]	; (813f0 <Test+0x2a4>)
   812a0:	4798      	blx	r3
   812a2:	2800      	cmp	r0, #0
   812a4:	d163      	bne.n	8136e <Test+0x222>
   812a6:	4953      	ldr	r1, [pc, #332]	; (813f4 <Test+0x2a8>)
   812a8:	2067      	movs	r0, #103	; 0x67
   812aa:	47b0      	blx	r6
   812ac:	4621      	mov	r1, r4
   812ae:	2067      	movs	r0, #103	; 0x67
   812b0:	4e4c      	ldr	r6, [pc, #304]	; (813e4 <Test+0x298>)
   812b2:	47b0      	blx	r6
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   812b4:	4959      	ldr	r1, [pc, #356]	; (8141c <Test+0x2d0>)
   812b6:	2067      	movs	r0, #103	; 0x67
   812b8:	47b0      	blx	r6
   812ba:	4629      	mov	r1, r5
   812bc:	2067      	movs	r0, #103	; 0x67
   812be:	47b0      	blx	r6
   812c0:	201c      	movs	r0, #28
   812c2:	4b4b      	ldr	r3, [pc, #300]	; (813f0 <Test+0x2a4>)
   812c4:	4798      	blx	r3
   812c6:	2800      	cmp	r0, #0
   812c8:	d156      	bne.n	81378 <Test+0x22c>
   812ca:	494a      	ldr	r1, [pc, #296]	; (813f4 <Test+0x2a8>)
   812cc:	2067      	movs	r0, #103	; 0x67
   812ce:	47b0      	blx	r6
   812d0:	4621      	mov	r1, r4
   812d2:	2067      	movs	r0, #103	; 0x67
   812d4:	4e43      	ldr	r6, [pc, #268]	; (813e4 <Test+0x298>)
   812d6:	47b0      	blx	r6
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   812d8:	4951      	ldr	r1, [pc, #324]	; (81420 <Test+0x2d4>)
   812da:	2067      	movs	r0, #103	; 0x67
   812dc:	47b0      	blx	r6
   812de:	4629      	mov	r1, r5
   812e0:	2067      	movs	r0, #103	; 0x67
   812e2:	47b0      	blx	r6
   812e4:	201d      	movs	r0, #29
   812e6:	4b42      	ldr	r3, [pc, #264]	; (813f0 <Test+0x2a4>)
   812e8:	4798      	blx	r3
   812ea:	2800      	cmp	r0, #0
   812ec:	d149      	bne.n	81382 <Test+0x236>
   812ee:	4941      	ldr	r1, [pc, #260]	; (813f4 <Test+0x2a8>)
   812f0:	2067      	movs	r0, #103	; 0x67
   812f2:	47b0      	blx	r6
   812f4:	4621      	mov	r1, r4
   812f6:	2067      	movs	r0, #103	; 0x67
   812f8:	4b3a      	ldr	r3, [pc, #232]	; (813e4 <Test+0x298>)
   812fa:	4798      	blx	r3

		switch(mBitsMsk(phase,0xFF))
   812fc:	f89d 300c 	ldrb.w	r3, [sp, #12]
   81300:	3b01      	subs	r3, #1
   81302:	2b04      	cmp	r3, #4
   81304:	f200 80a1 	bhi.w	8144a <Test+0x2fe>
   81308:	e8df f003 	tbb	[pc, r3]
   8130c:	5e575040 	.word	0x5e575040
   81310:	98          	.byte	0x98
   81311:	00          	.byte	0x00
		Putstr("\r\nTest started...\r\n");
   81312:	4944      	ldr	r1, [pc, #272]	; (81424 <Test+0x2d8>)
   81314:	2067      	movs	r0, #103	; 0x67
   81316:	4b33      	ldr	r3, [pc, #204]	; (813e4 <Test+0x298>)
   81318:	4798      	blx	r3
		phase<<=8;
   8131a:	9b03      	ldr	r3, [sp, #12]
   8131c:	021b      	lsls	r3, r3, #8
		phase&=0xFF00;
   8131e:	b29b      	uxth	r3, r3
		phase|=PH_CMD_MOSFET;
   81320:	f043 0301 	orr.w	r3, r3, #1
   81324:	9303      	str	r3, [sp, #12]
   81326:	e71b      	b.n	81160 <Test+0x14>
		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   81328:	493f      	ldr	r1, [pc, #252]	; (81428 <Test+0x2dc>)
   8132a:	2067      	movs	r0, #103	; 0x67
   8132c:	4b2d      	ldr	r3, [pc, #180]	; (813e4 <Test+0x298>)
   8132e:	4798      	blx	r3
   81330:	e734      	b.n	8119c <Test+0x50>
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81332:	493d      	ldr	r1, [pc, #244]	; (81428 <Test+0x2dc>)
   81334:	2067      	movs	r0, #103	; 0x67
   81336:	4b2b      	ldr	r3, [pc, #172]	; (813e4 <Test+0x298>)
   81338:	4798      	blx	r3
   8133a:	e743      	b.n	811c4 <Test+0x78>
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8133c:	493a      	ldr	r1, [pc, #232]	; (81428 <Test+0x2dc>)
   8133e:	2067      	movs	r0, #103	; 0x67
   81340:	4b28      	ldr	r3, [pc, #160]	; (813e4 <Test+0x298>)
   81342:	4798      	blx	r3
   81344:	e753      	b.n	811ee <Test+0xa2>
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   81346:	4938      	ldr	r1, [pc, #224]	; (81428 <Test+0x2dc>)
   81348:	2067      	movs	r0, #103	; 0x67
   8134a:	4b26      	ldr	r3, [pc, #152]	; (813e4 <Test+0x298>)
   8134c:	4798      	blx	r3
   8134e:	e762      	b.n	81216 <Test+0xca>
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81350:	4935      	ldr	r1, [pc, #212]	; (81428 <Test+0x2dc>)
   81352:	2067      	movs	r0, #103	; 0x67
   81354:	4b23      	ldr	r3, [pc, #140]	; (813e4 <Test+0x298>)
   81356:	4798      	blx	r3
   81358:	e771      	b.n	8123e <Test+0xf2>
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8135a:	4933      	ldr	r1, [pc, #204]	; (81428 <Test+0x2dc>)
   8135c:	2067      	movs	r0, #103	; 0x67
   8135e:	4b21      	ldr	r3, [pc, #132]	; (813e4 <Test+0x298>)
   81360:	4798      	blx	r3
   81362:	e77f      	b.n	81264 <Test+0x118>
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81364:	4930      	ldr	r1, [pc, #192]	; (81428 <Test+0x2dc>)
   81366:	2067      	movs	r0, #103	; 0x67
   81368:	4b1e      	ldr	r3, [pc, #120]	; (813e4 <Test+0x298>)
   8136a:	4798      	blx	r3
   8136c:	e78c      	b.n	81288 <Test+0x13c>
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   8136e:	492e      	ldr	r1, [pc, #184]	; (81428 <Test+0x2dc>)
   81370:	2067      	movs	r0, #103	; 0x67
   81372:	4b1c      	ldr	r3, [pc, #112]	; (813e4 <Test+0x298>)
   81374:	4798      	blx	r3
   81376:	e799      	b.n	812ac <Test+0x160>
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81378:	492b      	ldr	r1, [pc, #172]	; (81428 <Test+0x2dc>)
   8137a:	2067      	movs	r0, #103	; 0x67
   8137c:	4b19      	ldr	r3, [pc, #100]	; (813e4 <Test+0x298>)
   8137e:	4798      	blx	r3
   81380:	e7a6      	b.n	812d0 <Test+0x184>
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81382:	4929      	ldr	r1, [pc, #164]	; (81428 <Test+0x2dc>)
   81384:	2067      	movs	r0, #103	; 0x67
   81386:	4b17      	ldr	r3, [pc, #92]	; (813e4 <Test+0x298>)
   81388:	4798      	blx	r3
   8138a:	e7b3      	b.n	812f4 <Test+0x1a8>
		{
		case PH_CMD_MOSFET:
			gpio_set_pin_high(CMD_MOSFET);
   8138c:	2020      	movs	r0, #32
   8138e:	4b27      	ldr	r3, [pc, #156]	; (8142c <Test+0x2e0>)
   81390:	4798      	blx	r3
		}
		break;
	default:
		return;
	}
	PushTask(Test,TEST_RUN,++phase,1000);
   81392:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   81396:	9300      	str	r3, [sp, #0]
   81398:	9b03      	ldr	r3, [sp, #12]
   8139a:	3301      	adds	r3, #1
   8139c:	2266      	movs	r2, #102	; 0x66
   8139e:	4924      	ldr	r1, [pc, #144]	; (81430 <Test+0x2e4>)
   813a0:	4610      	mov	r0, r2
   813a2:	4c24      	ldr	r4, [pc, #144]	; (81434 <Test+0x2e8>)
   813a4:	47a0      	blx	r4
}
   813a6:	b004      	add	sp, #16
   813a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			gpio_set_pin_low(CMD_MOSFET);
   813ac:	2020      	movs	r0, #32
   813ae:	4b22      	ldr	r3, [pc, #136]	; (81438 <Test+0x2ec>)
   813b0:	4798      	blx	r3
			gpio_set_pin_high(CMD_MOT_SERRURE);
   813b2:	2021      	movs	r0, #33	; 0x21
   813b4:	4b1d      	ldr	r3, [pc, #116]	; (8142c <Test+0x2e0>)
   813b6:	4798      	blx	r3
			break;
   813b8:	e7eb      	b.n	81392 <Test+0x246>
			gpio_set_pin_low(CMD_MOT_SERRURE);
   813ba:	2021      	movs	r0, #33	; 0x21
   813bc:	4b1e      	ldr	r3, [pc, #120]	; (81438 <Test+0x2ec>)
   813be:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS);
   813c0:	2022      	movs	r0, #34	; 0x22
   813c2:	4b1a      	ldr	r3, [pc, #104]	; (8142c <Test+0x2e0>)
   813c4:	4798      	blx	r3
			break;
   813c6:	e7e4      	b.n	81392 <Test+0x246>
			gpio_set_pin_low(CMD_RELAIS);
   813c8:	2022      	movs	r0, #34	; 0x22
   813ca:	4b1b      	ldr	r3, [pc, #108]	; (81438 <Test+0x2ec>)
   813cc:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_1);
   813ce:	2023      	movs	r0, #35	; 0x23
   813d0:	4b16      	ldr	r3, [pc, #88]	; (8142c <Test+0x2e0>)
   813d2:	4798      	blx	r3
			break;
   813d4:	e7dd      	b.n	81392 <Test+0x246>
   813d6:	bf00      	nop
   813d8:	200012a8 	.word	0x200012a8
   813dc:	00088a44 	.word	0x00088a44
   813e0:	00083de9 	.word	0x00083de9
   813e4:	00083255 	.word	0x00083255
   813e8:	00088a54 	.word	0x00088a54
   813ec:	00088a60 	.word	0x00088a60
   813f0:	000807e9 	.word	0x000807e9
   813f4:	00088a64 	.word	0x00088a64
   813f8:	00088ca0 	.word	0x00088ca0
   813fc:	00088a6c 	.word	0x00088a6c
   81400:	00088a78 	.word	0x00088a78
   81404:	00088a7c 	.word	0x00088a7c
   81408:	00088a84 	.word	0x00088a84
   8140c:	00088a88 	.word	0x00088a88
   81410:	00088a90 	.word	0x00088a90
   81414:	00088a94 	.word	0x00088a94
   81418:	00088aa4 	.word	0x00088aa4
   8141c:	00088ab0 	.word	0x00088ab0
   81420:	00088ac0 	.word	0x00088ac0
   81424:	00088a30 	.word	0x00088a30
   81428:	00088a68 	.word	0x00088a68
   8142c:	00080805 	.word	0x00080805
   81430:	0008114d 	.word	0x0008114d
   81434:	00083491 	.word	0x00083491
   81438:	0008081f 	.word	0x0008081f
			gpio_set_pin_low(CMD_RELAIS_1);
   8143c:	2023      	movs	r0, #35	; 0x23
   8143e:	4b13      	ldr	r3, [pc, #76]	; (8148c <Test+0x340>)
   81440:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_2);
   81442:	2024      	movs	r0, #36	; 0x24
   81444:	4b12      	ldr	r3, [pc, #72]	; (81490 <Test+0x344>)
   81446:	4798      	blx	r3
			break;
   81448:	e7a3      	b.n	81392 <Test+0x246>
			gpio_set_pin_low(CMD_MOSFET);
   8144a:	2020      	movs	r0, #32
   8144c:	4c0f      	ldr	r4, [pc, #60]	; (8148c <Test+0x340>)
   8144e:	47a0      	blx	r4
			gpio_set_pin_low(CMD_MOT_SERRURE);
   81450:	2021      	movs	r0, #33	; 0x21
   81452:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS);
   81454:	2022      	movs	r0, #34	; 0x22
   81456:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_1);
   81458:	2023      	movs	r0, #35	; 0x23
   8145a:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_2);
   8145c:	2024      	movs	r0, #36	; 0x24
   8145e:	47a0      	blx	r4
			if(*((char*)&phase+1))
   81460:	b127      	cbz	r7, 8146c <Test+0x320>
				if(--(*((char*)&phase+1)))
   81462:	3f01      	subs	r7, #1
   81464:	b2ff      	uxtb	r7, r7
   81466:	f88d 700d 	strb.w	r7, [sp, #13]
   8146a:	b927      	cbnz	r7, 81476 <Test+0x32a>
			Putstr("\r\nTest terminated...\r\n");
   8146c:	4909      	ldr	r1, [pc, #36]	; (81494 <Test+0x348>)
   8146e:	2067      	movs	r0, #103	; 0x67
   81470:	4b09      	ldr	r3, [pc, #36]	; (81498 <Test+0x34c>)
   81472:	4798      	blx	r3
			return;
   81474:	e797      	b.n	813a6 <Test+0x25a>
					PushTask(Test,TEST_NEW,phase>>8,0);
   81476:	2300      	movs	r3, #0
   81478:	9300      	str	r3, [sp, #0]
   8147a:	9b03      	ldr	r3, [sp, #12]
   8147c:	0a1b      	lsrs	r3, r3, #8
   8147e:	2264      	movs	r2, #100	; 0x64
   81480:	4906      	ldr	r1, [pc, #24]	; (8149c <Test+0x350>)
   81482:	2066      	movs	r0, #102	; 0x66
   81484:	4c06      	ldr	r4, [pc, #24]	; (814a0 <Test+0x354>)
   81486:	47a0      	blx	r4
   81488:	e7f0      	b.n	8146c <Test+0x320>
   8148a:	bf00      	nop
   8148c:	0008081f 	.word	0x0008081f
   81490:	00080805 	.word	0x00080805
   81494:	00088ad0 	.word	0x00088ad0
   81498:	00083255 	.word	0x00083255
   8149c:	0008114d 	.word	0x0008114d
   814a0:	00083491 	.word	0x00083491

000814a4 <stop>:
	}
	mstrtokRestore();
}

void stop(uint32_t sc, void*pParam)
{
   814a4:	b510      	push	{r4, lr}
	char *pToken;
	switch(sc)
   814a6:	f242 6316 	movw	r3, #9750	; 0x2616
   814aa:	4298      	cmp	r0, r3
   814ac:	d01e      	beq.n	814ec <stop+0x48>
//#else
		//gpio_set_pin_high(BUZZER_PWR);
//#endif
		break;
	default:
		pToken = mstrtok(NULL," \r\n");
   814ae:	491c      	ldr	r1, [pc, #112]	; (81520 <stop+0x7c>)
   814b0:	2000      	movs	r0, #0
   814b2:	4b1c      	ldr	r3, [pc, #112]	; (81524 <stop+0x80>)
   814b4:	4798      	blx	r3
		if(pToken)
   814b6:	4604      	mov	r4, r0
   814b8:	b1a8      	cbz	r0, 814e6 <stop+0x42>
		{
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   814ba:	4b1b      	ldr	r3, [pc, #108]	; (81528 <stop+0x84>)
   814bc:	4798      	blx	r3
   814be:	4601      	mov	r1, r0
   814c0:	4620      	mov	r0, r4
   814c2:	4b1a      	ldr	r3, [pc, #104]	; (8152c <stop+0x88>)
   814c4:	4798      	blx	r3
   814c6:	f242 6316 	movw	r3, #9750	; 0x2616
   814ca:	4298      	cmp	r0, r3
   814cc:	d020      	beq.n	81510 <stop+0x6c>
   814ce:	d912      	bls.n	814f6 <stop+0x52>
   814d0:	f243 132b 	movw	r3, #12587	; 0x312b
   814d4:	4298      	cmp	r0, r3
   814d6:	d017      	beq.n	81508 <stop+0x64>
   814d8:	f24c 6398 	movw	r3, #50840	; 0xc698
   814dc:	4298      	cmp	r0, r3
   814de:	d102      	bne.n	814e6 <stop+0x42>
			{
			case 0xC698:	//lcd
				Lcd(LCD_DEL);
   814e0:	2065      	movs	r0, #101	; 0x65
   814e2:	4b13      	ldr	r3, [pc, #76]	; (81530 <stop+0x8c>)
   814e4:	4798      	blx	r3
				break;
			default:
				break;
			}
		}
		mstrtokRestore();
   814e6:	4b13      	ldr	r3, [pc, #76]	; (81534 <stop+0x90>)
   814e8:	4798      	blx	r3
   814ea:	bd10      	pop	{r4, pc}
		Putstr("\r\nBuzzer off...\r\n");
   814ec:	4912      	ldr	r1, [pc, #72]	; (81538 <stop+0x94>)
   814ee:	2067      	movs	r0, #103	; 0x67
   814f0:	4b12      	ldr	r3, [pc, #72]	; (8153c <stop+0x98>)
   814f2:	4798      	blx	r3
		break;
   814f4:	bd10      	pop	{r4, pc}
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   814f6:	f240 6334 	movw	r3, #1588	; 0x634
   814fa:	4298      	cmp	r0, r3
   814fc:	d1f3      	bne.n	814e6 <stop+0x42>
				LcdBacklight(false);
   814fe:	2100      	movs	r1, #0
   81500:	2066      	movs	r0, #102	; 0x66
   81502:	4b0b      	ldr	r3, [pc, #44]	; (81530 <stop+0x8c>)
   81504:	4798      	blx	r3
				break;
   81506:	e7ee      	b.n	814e6 <stop+0x42>
				gpio_set_pin_high(BLUETOOTH_PWR);
   81508:	2035      	movs	r0, #53	; 0x35
   8150a:	4b0d      	ldr	r3, [pc, #52]	; (81540 <stop+0x9c>)
   8150c:	4798      	blx	r3
				break;
   8150e:	e7ea      	b.n	814e6 <stop+0x42>
				Putstr("\r\nBuzzer off...\r\n");
   81510:	4909      	ldr	r1, [pc, #36]	; (81538 <stop+0x94>)
   81512:	2067      	movs	r0, #103	; 0x67
   81514:	4b09      	ldr	r3, [pc, #36]	; (8153c <stop+0x98>)
   81516:	4798      	blx	r3
				gpio_set_pin_low(BUZZER_PWR);
   81518:	2030      	movs	r0, #48	; 0x30
   8151a:	4b0a      	ldr	r3, [pc, #40]	; (81544 <stop+0xa0>)
   8151c:	4798      	blx	r3
				break;
   8151e:	e7e2      	b.n	814e6 <stop+0x42>
   81520:	00088b44 	.word	0x00088b44
   81524:	000836fd 	.word	0x000836fd
   81528:	00083e35 	.word	0x00083e35
   8152c:	00081719 	.word	0x00081719
   81530:	00081c81 	.word	0x00081c81
   81534:	000836b9 	.word	0x000836b9
   81538:	00088b30 	.word	0x00088b30
   8153c:	00083255 	.word	0x00083255
   81540:	00080805 	.word	0x00080805
   81544:	0008081f 	.word	0x0008081f

00081548 <start>:
{
   81548:	b570      	push	{r4, r5, r6, lr}
   8154a:	b090      	sub	sp, #64	; 0x40
	pToken = mstrtok(NULL," \r\n");
   8154c:	4957      	ldr	r1, [pc, #348]	; (816ac <start+0x164>)
   8154e:	2000      	movs	r0, #0
   81550:	4b57      	ldr	r3, [pc, #348]	; (816b0 <start+0x168>)
   81552:	4798      	blx	r3
	if(pToken)
   81554:	2800      	cmp	r0, #0
   81556:	f000 8094 	beq.w	81682 <start+0x13a>
   8155a:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   8155c:	4b55      	ldr	r3, [pc, #340]	; (816b4 <start+0x16c>)
   8155e:	4798      	blx	r3
   81560:	4601      	mov	r1, r0
   81562:	4620      	mov	r0, r4
   81564:	4b54      	ldr	r3, [pc, #336]	; (816b8 <start+0x170>)
   81566:	4798      	blx	r3
   81568:	f243 132b 	movw	r3, #12587	; 0x312b
   8156c:	4298      	cmp	r0, r3
   8156e:	f000 8093 	beq.w	81698 <start+0x150>
   81572:	d851      	bhi.n	81618 <start+0xd0>
   81574:	f240 6334 	movw	r3, #1588	; 0x634
   81578:	4298      	cmp	r0, r3
   8157a:	f000 8086 	beq.w	8168a <start+0x142>
   8157e:	f242 6316 	movw	r3, #9750	; 0x2616
   81582:	4298      	cmp	r0, r3
   81584:	d17d      	bne.n	81682 <start+0x13a>
			mstrtokRestore();
   81586:	4b4d      	ldr	r3, [pc, #308]	; (816bc <start+0x174>)
   81588:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   8158a:	4948      	ldr	r1, [pc, #288]	; (816ac <start+0x164>)
   8158c:	2000      	movs	r0, #0
   8158e:	4b48      	ldr	r3, [pc, #288]	; (816b0 <start+0x168>)
   81590:	4798      	blx	r3
			pParam=atoi((char*)pToken);
   81592:	4b4b      	ldr	r3, [pc, #300]	; (816c0 <start+0x178>)
   81594:	4798      	blx	r3
			if(pParam)
   81596:	4606      	mov	r6, r0
   81598:	2800      	cmp	r0, #0
   8159a:	d072      	beq.n	81682 <start+0x13a>
				Putstr("\r\nBuzzer on for ");
   8159c:	4949      	ldr	r1, [pc, #292]	; (816c4 <start+0x17c>)
   8159e:	2067      	movs	r0, #103	; 0x67
   815a0:	4c49      	ldr	r4, [pc, #292]	; (816c8 <start+0x180>)
   815a2:	47a0      	blx	r4
				sprintf(buf,"%d ms...\r\n",(int)pParam);
   815a4:	4d49      	ldr	r5, [pc, #292]	; (816cc <start+0x184>)
   815a6:	4632      	mov	r2, r6
   815a8:	4949      	ldr	r1, [pc, #292]	; (816d0 <start+0x188>)
   815aa:	4628      	mov	r0, r5
   815ac:	4b49      	ldr	r3, [pc, #292]	; (816d4 <start+0x18c>)
   815ae:	4798      	blx	r3
				Putstr(buf);
   815b0:	4629      	mov	r1, r5
   815b2:	2067      	movs	r0, #103	; 0x67
   815b4:	47a0      	blx	r4
				gpio_configure_pin(BUZZER_PWR,BUZZER_FLAGS);
   815b6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   815ba:	2030      	movs	r0, #48	; 0x30
   815bc:	4b46      	ldr	r3, [pc, #280]	; (816d8 <start+0x190>)
   815be:	4798      	blx	r3
					const pwm_clock_t clockSetting ={
   815c0:	4b46      	ldr	r3, [pc, #280]	; (816dc <start+0x194>)
   815c2:	ad03      	add	r5, sp, #12
   815c4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   815c8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
					pmc_enable_periph_clk(ID_PWM);
   815cc:	2019      	movs	r0, #25
   815ce:	4b44      	ldr	r3, [pc, #272]	; (816e0 <start+0x198>)
   815d0:	4798      	blx	r3
					pwm_channel_disable(PWM,PWM_CHANNEL_3);
   815d2:	4c44      	ldr	r4, [pc, #272]	; (816e4 <start+0x19c>)
   815d4:	2103      	movs	r1, #3
   815d6:	4620      	mov	r0, r4
   815d8:	4b43      	ldr	r3, [pc, #268]	; (816e8 <start+0x1a0>)
   815da:	4798      	blx	r3
					pwm_init(PWM,(pwm_clock_t*)&clockSetting);
   815dc:	4629      	mov	r1, r5
   815de:	4620      	mov	r0, r4
   815e0:	4b42      	ldr	r3, [pc, #264]	; (816ec <start+0x1a4>)
   815e2:	4798      	blx	r3
					pwmChannelInstance.ul_prescaler=PWM_CMR_CPRE_CLKB;
   815e4:	230c      	movs	r3, #12
   815e6:	9307      	str	r3, [sp, #28]
					pwmChannelInstance.ul_period=100;
   815e8:	2364      	movs	r3, #100	; 0x64
   815ea:	930a      	str	r3, [sp, #40]	; 0x28
					pwmChannelInstance.ul_duty=50;
   815ec:	2332      	movs	r3, #50	; 0x32
   815ee:	9309      	str	r3, [sp, #36]	; 0x24
					pwmChannelInstance.channel=PWM_CHANNEL_3;
   815f0:	2503      	movs	r5, #3
   815f2:	a910      	add	r1, sp, #64	; 0x40
   815f4:	f841 5d28 	str.w	r5, [r1, #-40]!
					pwm_channel_init(PWM,&pwmChannelInstance);
   815f8:	4620      	mov	r0, r4
   815fa:	4b3d      	ldr	r3, [pc, #244]	; (816f0 <start+0x1a8>)
   815fc:	4798      	blx	r3
					pwm_channel_enable(PWM,PWM_CHANNEL_3);
   815fe:	4629      	mov	r1, r5
   81600:	4620      	mov	r0, r4
   81602:	4b3c      	ldr	r3, [pc, #240]	; (816f4 <start+0x1ac>)
   81604:	4798      	blx	r3
				PushTask(stop,0x2616,0,(uint32_t)pParam);
   81606:	9600      	str	r6, [sp, #0]
   81608:	2300      	movs	r3, #0
   8160a:	f242 6216 	movw	r2, #9750	; 0x2616
   8160e:	493a      	ldr	r1, [pc, #232]	; (816f8 <start+0x1b0>)
   81610:	2066      	movs	r0, #102	; 0x66
   81612:	4c3a      	ldr	r4, [pc, #232]	; (816fc <start+0x1b4>)
   81614:	47a0      	blx	r4
   81616:	e034      	b.n	81682 <start+0x13a>
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   81618:	f24c 6398 	movw	r3, #50840	; 0xc698
   8161c:	4298      	cmp	r0, r3
   8161e:	d021      	beq.n	81664 <start+0x11c>
   81620:	f64d 432e 	movw	r3, #56366	; 0xdc2e
   81624:	4298      	cmp	r0, r3
   81626:	d12c      	bne.n	81682 <start+0x13a>
			mstrtokRestore();
   81628:	4b24      	ldr	r3, [pc, #144]	; (816bc <start+0x174>)
   8162a:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   8162c:	491f      	ldr	r1, [pc, #124]	; (816ac <start+0x164>)
   8162e:	2000      	movs	r0, #0
   81630:	4b1f      	ldr	r3, [pc, #124]	; (816b0 <start+0x168>)
   81632:	4798      	blx	r3
			if(pToken)
   81634:	2800      	cmp	r0, #0
   81636:	d02d      	beq.n	81694 <start+0x14c>
				 sc=atoi((char*)pToken);
   81638:	4b21      	ldr	r3, [pc, #132]	; (816c0 <start+0x178>)
   8163a:	4798      	blx	r3
   8163c:	4604      	mov	r4, r0
				 sprintf(buf,"\r\nNbTest: %d\r\n",(int)sc);
   8163e:	4d23      	ldr	r5, [pc, #140]	; (816cc <start+0x184>)
   81640:	4602      	mov	r2, r0
   81642:	492f      	ldr	r1, [pc, #188]	; (81700 <start+0x1b8>)
   81644:	4628      	mov	r0, r5
   81646:	4b23      	ldr	r3, [pc, #140]	; (816d4 <start+0x18c>)
   81648:	4798      	blx	r3
				 Putstr(buf);
   8164a:	4629      	mov	r1, r5
   8164c:	2067      	movs	r0, #103	; 0x67
   8164e:	4b1e      	ldr	r3, [pc, #120]	; (816c8 <start+0x180>)
   81650:	4798      	blx	r3
			PushTask(Test,TEST_NEW,sc,0);
   81652:	2300      	movs	r3, #0
   81654:	9300      	str	r3, [sp, #0]
   81656:	4623      	mov	r3, r4
   81658:	2264      	movs	r2, #100	; 0x64
   8165a:	492a      	ldr	r1, [pc, #168]	; (81704 <start+0x1bc>)
   8165c:	2066      	movs	r0, #102	; 0x66
   8165e:	4c27      	ldr	r4, [pc, #156]	; (816fc <start+0x1b4>)
   81660:	47a0      	blx	r4
			break;
   81662:	e00e      	b.n	81682 <start+0x13a>
			Lcd(LCD_DEL);
   81664:	2065      	movs	r0, #101	; 0x65
   81666:	4c28      	ldr	r4, [pc, #160]	; (81708 <start+0x1c0>)
   81668:	47a0      	blx	r4
			Lcd(LCD_NEW);
   8166a:	2064      	movs	r0, #100	; 0x64
   8166c:	47a0      	blx	r4
			LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   8166e:	2301      	movs	r3, #1
   81670:	2202      	movs	r2, #2
   81672:	4926      	ldr	r1, [pc, #152]	; (8170c <start+0x1c4>)
   81674:	2067      	movs	r0, #103	; 0x67
   81676:	47a0      	blx	r4
			LcdPutstr("www.a-2-s.net",3,4);
   81678:	2304      	movs	r3, #4
   8167a:	2203      	movs	r2, #3
   8167c:	4924      	ldr	r1, [pc, #144]	; (81710 <start+0x1c8>)
   8167e:	2067      	movs	r0, #103	; 0x67
   81680:	47a0      	blx	r4
	mstrtokRestore();
   81682:	4b0e      	ldr	r3, [pc, #56]	; (816bc <start+0x174>)
   81684:	4798      	blx	r3
}
   81686:	b010      	add	sp, #64	; 0x40
   81688:	bd70      	pop	{r4, r5, r6, pc}
			LcdBacklight(true);
   8168a:	2101      	movs	r1, #1
   8168c:	2066      	movs	r0, #102	; 0x66
   8168e:	4b1e      	ldr	r3, [pc, #120]	; (81708 <start+0x1c0>)
   81690:	4798      	blx	r3
			break;
   81692:	e7f6      	b.n	81682 <start+0x13a>
				sc=1;
   81694:	2401      	movs	r4, #1
   81696:	e7dc      	b.n	81652 <start+0x10a>
			gpio_configure_pin(BLUETOOTH_PWR,BLUETOOTH_FLAGS);
   81698:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8169c:	2035      	movs	r0, #53	; 0x35
   8169e:	4b0e      	ldr	r3, [pc, #56]	; (816d8 <start+0x190>)
   816a0:	4798      	blx	r3
			gpio_set_pin_low(BLUETOOTH_PWR);
   816a2:	2035      	movs	r0, #53	; 0x35
   816a4:	4b1b      	ldr	r3, [pc, #108]	; (81714 <start+0x1cc>)
   816a6:	4798      	blx	r3
			break;
   816a8:	e7eb      	b.n	81682 <start+0x13a>
   816aa:	bf00      	nop
   816ac:	00088b44 	.word	0x00088b44
   816b0:	000836fd 	.word	0x000836fd
   816b4:	00083e35 	.word	0x00083e35
   816b8:	00081719 	.word	0x00081719
   816bc:	000836b9 	.word	0x000836b9
   816c0:	00083cf5 	.word	0x00083cf5
   816c4:	00088b10 	.word	0x00088b10
   816c8:	00083255 	.word	0x00083255
   816cc:	200012a8 	.word	0x200012a8
   816d0:	00088b24 	.word	0x00088b24
   816d4:	00083de9 	.word	0x00083de9
   816d8:	00080859 	.word	0x00080859
   816dc:	00088a24 	.word	0x00088a24
   816e0:	00080a59 	.word	0x00080a59
   816e4:	4008c000 	.word	0x4008c000
   816e8:	00080c81 	.word	0x00080c81
   816ec:	00080b4d 	.word	0x00080b4d
   816f0:	00080b91 	.word	0x00080b91
   816f4:	00080c77 	.word	0x00080c77
   816f8:	000814a5 	.word	0x000814a5
   816fc:	00083491 	.word	0x00083491
   81700:	00088b00 	.word	0x00088b00
   81704:	0008114d 	.word	0x0008114d
   81708:	00081c81 	.word	0x00081c81
   8170c:	000887a8 	.word	0x000887a8
   81710:	000887bc 	.word	0x000887bc
   81714:	0008081f 	.word	0x0008081f

00081718 <CRC16MODBUSFRAME>:
   81718:	b189      	cbz	r1, 8173e <CRC16MODBUSFRAME+0x26>
   8171a:	b410      	push	{r4}
   8171c:	1841      	adds	r1, r0, r1
   8171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
   81722:	4c09      	ldr	r4, [pc, #36]	; (81748 <CRC16MODBUSFRAME+0x30>)
   81724:	f810 3b01 	ldrb.w	r3, [r0], #1
   81728:	4053      	eors	r3, r2
   8172a:	b2db      	uxtb	r3, r3
   8172c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   81730:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
   81734:	4281      	cmp	r1, r0
   81736:	d1f5      	bne.n	81724 <CRC16MODBUSFRAME+0xc>
   81738:	4610      	mov	r0, r2
   8173a:	bc10      	pop	{r4}
   8173c:	4770      	bx	lr
   8173e:	f64f 72ff 	movw	r2, #65535	; 0xffff
   81742:	4610      	mov	r0, r2
   81744:	4770      	bx	lr
   81746:	bf00      	nop
   81748:	2000012c 	.word	0x2000012c

0008174c <CRC16MODBUS>:
   8174c:	4048      	eors	r0, r1
   8174e:	b2c0      	uxtb	r0, r0
   81750:	4b02      	ldr	r3, [pc, #8]	; (8175c <CRC16MODBUS+0x10>)
   81752:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   81756:	ea80 2011 	eor.w	r0, r0, r1, lsr #8
   8175a:	4770      	bx	lr
   8175c:	2000012c 	.word	0x2000012c

00081760 <Error>:




void Error(uint32_t sc, ...)
{
   81760:	b40f      	push	{r0, r1, r2, r3}
   81762:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   81766:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   81768:	f3bf 8f5f 	dmb	sy
	uint32_t i,k;
#define er sc
	cpu_irq_disable();
   8176c:	2200      	movs	r2, #0
   8176e:	4b65      	ldr	r3, [pc, #404]	; (81904 <Error+0x1a4>)
   81770:	701a      	strb	r2, [r3, #0]
	gpio_configure_pin(ERROR_LED, ERROR_LED_FLAGS);
   81772:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81776:	2033      	movs	r0, #51	; 0x33
   81778:	4b63      	ldr	r3, [pc, #396]	; (81908 <Error+0x1a8>)
   8177a:	4798      	blx	r3
   8177c:	f04f 0805 	mov.w	r8, #5
//#if HEART_LED_ACTIVE_LEVEL==1	
	
	for(k=0;k<5;k++)
	{
		gpio_set_pin_high(ERROR_LED);
		delay_ms(3000);
   81780:	4c62      	ldr	r4, [pc, #392]	; (8190c <Error+0x1ac>)
			delay_ms(1500);
			gpio_set_pin_low(ERROR_LED);
		}
		else
		{
			for(i=0;i<(er/10)*2;i++)
   81782:	4f63      	ldr	r7, [pc, #396]	; (81910 <Error+0x1b0>)
   81784:	e031      	b.n	817ea <Error+0x8a>
			gpio_set_pin_high(ERROR_LED);
   81786:	2033      	movs	r0, #51	; 0x33
   81788:	4b62      	ldr	r3, [pc, #392]	; (81914 <Error+0x1b4>)
   8178a:	4798      	blx	r3
			delay_ms(1500);
   8178c:	4862      	ldr	r0, [pc, #392]	; (81918 <Error+0x1b8>)
   8178e:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81790:	2033      	movs	r0, #51	; 0x33
   81792:	4b62      	ldr	r3, [pc, #392]	; (8191c <Error+0x1bc>)
   81794:	4798      	blx	r3
   81796:	e048      	b.n	8182a <Error+0xca>
		}
		delay_ms(800);

		if((er%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   81798:	2033      	movs	r0, #51	; 0x33
   8179a:	4b5e      	ldr	r3, [pc, #376]	; (81914 <Error+0x1b4>)
   8179c:	4798      	blx	r3
			delay_ms(1500);
   8179e:	485e      	ldr	r0, [pc, #376]	; (81918 <Error+0x1b8>)
   817a0:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   817a2:	2033      	movs	r0, #51	; 0x33
   817a4:	4b5d      	ldr	r3, [pc, #372]	; (8191c <Error+0x1bc>)
   817a6:	4798      	blx	r3
   817a8:	e057      	b.n	8185a <Error+0xfa>
		delay_ms(1000);
#undef er
#define _param	pa1
		if((_param/100)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   817aa:	2033      	movs	r0, #51	; 0x33
   817ac:	4b59      	ldr	r3, [pc, #356]	; (81914 <Error+0x1b4>)
   817ae:	4798      	blx	r3
			delay_ms(1500);
   817b0:	4859      	ldr	r0, [pc, #356]	; (81918 <Error+0x1b8>)
   817b2:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   817b4:	2033      	movs	r0, #51	; 0x33
   817b6:	4b59      	ldr	r3, [pc, #356]	; (8191c <Error+0x1bc>)
   817b8:	4798      	blx	r3
   817ba:	e067      	b.n	8188c <Error+0x12c>
		}
		delay_ms(800);

		if(((_param/10)%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   817bc:	2033      	movs	r0, #51	; 0x33
   817be:	4b55      	ldr	r3, [pc, #340]	; (81914 <Error+0x1b4>)
   817c0:	4798      	blx	r3
			delay_ms(1500);
   817c2:	4855      	ldr	r0, [pc, #340]	; (81918 <Error+0x1b8>)
   817c4:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   817c6:	2033      	movs	r0, #51	; 0x33
   817c8:	4b54      	ldr	r3, [pc, #336]	; (8191c <Error+0x1bc>)
   817ca:	4798      	blx	r3
   817cc:	e079      	b.n	818c2 <Error+0x162>
		delay_ms(800);


		if((_param%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   817ce:	2033      	movs	r0, #51	; 0x33
   817d0:	4b50      	ldr	r3, [pc, #320]	; (81914 <Error+0x1b4>)
   817d2:	4798      	blx	r3
			delay_ms(1500);
   817d4:	4850      	ldr	r0, [pc, #320]	; (81918 <Error+0x1b8>)
   817d6:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   817d8:	2033      	movs	r0, #51	; 0x33
   817da:	4b50      	ldr	r3, [pc, #320]	; (8191c <Error+0x1bc>)
   817dc:	4798      	blx	r3
				gpio_toggle_pin(ERROR_LED);
				delay_ms(200);
			}
		}
		
		delay_ms(1000);
   817de:	4850      	ldr	r0, [pc, #320]	; (81920 <Error+0x1c0>)
   817e0:	47a0      	blx	r4
	for(k=0;k<5;k++)
   817e2:	f1b8 0801 	subs.w	r8, r8, #1
   817e6:	f000 8086 	beq.w	818f6 <Error+0x196>
		gpio_set_pin_high(ERROR_LED);
   817ea:	2033      	movs	r0, #51	; 0x33
   817ec:	4b49      	ldr	r3, [pc, #292]	; (81914 <Error+0x1b4>)
   817ee:	4798      	blx	r3
		delay_ms(3000);
   817f0:	484c      	ldr	r0, [pc, #304]	; (81924 <Error+0x1c4>)
   817f2:	47a0      	blx	r4
		gpio_set_pin_low(ERROR_LED);
   817f4:	2033      	movs	r0, #51	; 0x33
   817f6:	4b49      	ldr	r3, [pc, #292]	; (8191c <Error+0x1bc>)
   817f8:	4798      	blx	r3
		delay_ms(800);
   817fa:	484b      	ldr	r0, [pc, #300]	; (81928 <Error+0x1c8>)
   817fc:	47a0      	blx	r4
		if((er/10)==0)
   817fe:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81802:	f1b9 0f09 	cmp.w	r9, #9
   81806:	d9be      	bls.n	81786 <Error+0x26>
			for(i=0;i<(er/10)*2;i++)
   81808:	fba7 2309 	umull	r2, r3, r7, r9
   8180c:	08db      	lsrs	r3, r3, #3
   8180e:	005e      	lsls	r6, r3, #1
   81810:	b15b      	cbz	r3, 8182a <Error+0xca>
   81812:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81814:	f8df b120 	ldr.w	fp, [pc, #288]	; 81938 <Error+0x1d8>
				delay_ms(200);
   81818:	f8df a120 	ldr.w	sl, [pc, #288]	; 8193c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8181c:	2033      	movs	r0, #51	; 0x33
   8181e:	47d8      	blx	fp
				delay_ms(200);
   81820:	4650      	mov	r0, sl
   81822:	47a0      	blx	r4
			for(i=0;i<(er/10)*2;i++)
   81824:	3501      	adds	r5, #1
   81826:	42b5      	cmp	r5, r6
   81828:	d1f8      	bne.n	8181c <Error+0xbc>
		delay_ms(800);
   8182a:	483f      	ldr	r0, [pc, #252]	; (81928 <Error+0x1c8>)
   8182c:	47a0      	blx	r4
		if((er%10)==0)
   8182e:	fba7 3609 	umull	r3, r6, r7, r9
   81832:	08f6      	lsrs	r6, r6, #3
   81834:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   81838:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   8183c:	d0ac      	beq.n	81798 <Error+0x38>
			for(i=0;i<(er%10)*2;i++)
   8183e:	0076      	lsls	r6, r6, #1
   81840:	d00b      	beq.n	8185a <Error+0xfa>
   81842:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81844:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 81938 <Error+0x1d8>
				delay_ms(200);
   81848:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 8193c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8184c:	2033      	movs	r0, #51	; 0x33
   8184e:	47d0      	blx	sl
				delay_ms(200);
   81850:	4648      	mov	r0, r9
   81852:	47a0      	blx	r4
			for(i=0;i<(er%10)*2;i++)
   81854:	3501      	adds	r5, #1
   81856:	42b5      	cmp	r5, r6
   81858:	d1f8      	bne.n	8184c <Error+0xec>
		delay_ms(1000);
   8185a:	4831      	ldr	r0, [pc, #196]	; (81920 <Error+0x1c0>)
   8185c:	47a0      	blx	r4
		if((_param/100)==0)
   8185e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   81862:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
   81866:	d9a0      	bls.n	817aa <Error+0x4a>
			for(i=0;i<(_param/100)*2;i++)
   81868:	4b30      	ldr	r3, [pc, #192]	; (8192c <Error+0x1cc>)
   8186a:	fba3 2309 	umull	r2, r3, r3, r9
   8186e:	095b      	lsrs	r3, r3, #5
   81870:	005e      	lsls	r6, r3, #1
   81872:	b15b      	cbz	r3, 8188c <Error+0x12c>
   81874:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81876:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 81938 <Error+0x1d8>
				delay_ms(200);
   8187a:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8193c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8187e:	2033      	movs	r0, #51	; 0x33
   81880:	47d8      	blx	fp
				delay_ms(200);
   81882:	4650      	mov	r0, sl
   81884:	47a0      	blx	r4
			for(i=0;i<(_param/100)*2;i++)
   81886:	3501      	adds	r5, #1
   81888:	42b5      	cmp	r5, r6
   8188a:	d1f8      	bne.n	8187e <Error+0x11e>
		delay_ms(800);
   8188c:	4826      	ldr	r0, [pc, #152]	; (81928 <Error+0x1c8>)
   8188e:	47a0      	blx	r4
		if(((_param/10)%10)==0)
   81890:	fba7 2309 	umull	r2, r3, r7, r9
   81894:	08db      	lsrs	r3, r3, #3
   81896:	fba7 2603 	umull	r2, r6, r7, r3
   8189a:	08f6      	lsrs	r6, r6, #3
   8189c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   818a0:	ebb3 0646 	subs.w	r6, r3, r6, lsl #1
   818a4:	d08a      	beq.n	817bc <Error+0x5c>
			for(i=0;i<((_param/10)%10)*2;i++)
   818a6:	0076      	lsls	r6, r6, #1
   818a8:	d00b      	beq.n	818c2 <Error+0x162>
   818aa:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   818ac:	f8df b088 	ldr.w	fp, [pc, #136]	; 81938 <Error+0x1d8>
				delay_ms(200);
   818b0:	f8df a088 	ldr.w	sl, [pc, #136]	; 8193c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   818b4:	2033      	movs	r0, #51	; 0x33
   818b6:	47d8      	blx	fp
				delay_ms(200);
   818b8:	4650      	mov	r0, sl
   818ba:	47a0      	blx	r4
			for(i=0;i<((_param/10)%10)*2;i++)
   818bc:	3501      	adds	r5, #1
   818be:	42b5      	cmp	r5, r6
   818c0:	d1f8      	bne.n	818b4 <Error+0x154>
		delay_ms(800);
   818c2:	4819      	ldr	r0, [pc, #100]	; (81928 <Error+0x1c8>)
   818c4:	47a0      	blx	r4
		if((_param%10)==0)
   818c6:	fba7 3609 	umull	r3, r6, r7, r9
   818ca:	08f6      	lsrs	r6, r6, #3
   818cc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   818d0:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   818d4:	f43f af7b 	beq.w	817ce <Error+0x6e>
			for(i=0;i<(_param%10)*2;i++)
   818d8:	0076      	lsls	r6, r6, #1
   818da:	d080      	beq.n	817de <Error+0x7e>
   818dc:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   818de:	f8df a058 	ldr.w	sl, [pc, #88]	; 81938 <Error+0x1d8>
				delay_ms(200);
   818e2:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8193c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   818e6:	2033      	movs	r0, #51	; 0x33
   818e8:	47d0      	blx	sl
				delay_ms(200);
   818ea:	4648      	mov	r0, r9
   818ec:	47a0      	blx	r4
			for(i=0;i<(_param%10)*2;i++)
   818ee:	3501      	adds	r5, #1
   818f0:	42b5      	cmp	r5, r6
   818f2:	d1f8      	bne.n	818e6 <Error+0x186>
   818f4:	e773      	b.n	817de <Error+0x7e>

#undef _param
	}
	rstc_start_software_reset(RSTC);
   818f6:	480e      	ldr	r0, [pc, #56]	; (81930 <Error+0x1d0>)
   818f8:	4b0e      	ldr	r3, [pc, #56]	; (81934 <Error+0x1d4>)
   818fa:	4798      	blx	r3
   818fc:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81900:	b004      	add	sp, #16
   81902:	4770      	bx	lr
   81904:	20000124 	.word	0x20000124
   81908:	00080859 	.word	0x00080859
   8190c:	20000001 	.word	0x20000001
   81910:	cccccccd 	.word	0xcccccccd
   81914:	00080805 	.word	0x00080805
   81918:	009cf293 	.word	0x009cf293
   8191c:	0008081f 	.word	0x0008081f
   81920:	0068a1b7 	.word	0x0068a1b7
   81924:	0139e525 	.word	0x0139e525
   81928:	0053b493 	.word	0x0053b493
   8192c:	51eb851f 	.word	0x51eb851f
   81930:	400e1200 	.word	0x400e1200
   81934:	00080c8d 	.word	0x00080c8d
   81938:	00080839 	.word	0x00080839
   8193c:	0014ed25 	.word	0x0014ed25

00081940 <kRtc>:
#define _rtcCalr	((t_RTC_CALR*)&RTC->RTC_CALR)
#define _rtcTimr	((t_RTC_TIMR*)&RTC->RTC_TIMR)


uint32_t kRtc(uint32_t sc,...)
{
   81940:	b40f      	push	{r0, r1, r2, r3}
   81942:	b5f0      	push	{r4, r5, r6, r7, lr}
   81944:	b087      	sub	sp, #28
	uint32_t u1,u2,u3,u4;
	
	switch(sc)
   81946:	990c      	ldr	r1, [sp, #48]	; 0x30
   81948:	2964      	cmp	r1, #100	; 0x64
   8194a:	d021      	beq.n	81990 <kRtc+0x50>
   8194c:	d814      	bhi.n	81978 <kRtc+0x38>
   8194e:	2901      	cmp	r1, #1
   81950:	f000 810e 	beq.w	81b70 <kRtc+0x230>
   81954:	2900      	cmp	r1, #0
   81956:	f000 80bb 	beq.w	81ad0 <kRtc+0x190>
   8195a:	2902      	cmp	r1, #2
   8195c:	d113      	bne.n	81986 <kRtc+0x46>
	case _KRTC_IS_SUMMER_TIME:
#define _day	pa1
#define _date	pa2
#define _month	pa3
#define _hour	pa4
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   8195e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   81960:	1f1a      	subs	r2, r3, #4
   81962:	2a05      	cmp	r2, #5
   81964:	f240 8148 	bls.w	81bf8 <kRtc+0x2b8>
		else
		{
			if(_month==MARCH)
   81968:	2b03      	cmp	r3, #3
   8196a:	f000 811b 	beq.w	81ba4 <kRtc+0x264>
					{
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
					}
				}
			}
			else if(_month==OCTOBER)
   8196e:	2b0a      	cmp	r3, #10
   81970:	f000 812d 	beq.w	81bce <kRtc+0x28e>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
					}
				}
			}
		}
		return 0;
   81974:	2400      	movs	r4, #0
   81976:	e0d1      	b.n	81b1c <kRtc+0x1dc>
	switch(sc)
   81978:	2967      	cmp	r1, #103	; 0x67
   8197a:	d040      	beq.n	819fe <kRtc+0xbe>
   8197c:	2968      	cmp	r1, #104	; 0x68
   8197e:	f000 808d 	beq.w	81a9c <kRtc+0x15c>
   81982:	2966      	cmp	r1, #102	; 0x66
   81984:	d01a      	beq.n	819bc <kRtc+0x7c>
		//no break;


	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_KRTC_SWITCH_BAD_SC,sc);
   81986:	200e      	movs	r0, #14
   81988:	4b9e      	ldr	r3, [pc, #632]	; (81c04 <kRtc+0x2c4>)
   8198a:	4798      	blx	r3
}
	return 0;
   8198c:	2400      	movs	r4, #0
   8198e:	e0c5      	b.n	81b1c <kRtc+0x1dc>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   81990:	2000      	movs	r0, #0
   81992:	4b9d      	ldr	r3, [pc, #628]	; (81c08 <kRtc+0x2c8>)
   81994:	4798      	blx	r3
		while (!pmc_osc_is_ready_32kxtal());
   81996:	4c9d      	ldr	r4, [pc, #628]	; (81c0c <kRtc+0x2cc>)
   81998:	47a0      	blx	r4
   8199a:	2800      	cmp	r0, #0
   8199c:	d0fc      	beq.n	81998 <kRtc+0x58>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   8199e:	4b9c      	ldr	r3, [pc, #624]	; (81c10 <kRtc+0x2d0>)
   819a0:	2104      	movs	r1, #4
   819a2:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   819a6:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   819aa:	2210      	movs	r2, #16
   819ac:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   819b0:	6019      	str	r1, [r3, #0]
		rtc_enable_interrupt(RTC,RTC_IER_SECEN);	//Second IRQ enabled
   819b2:	4898      	ldr	r0, [pc, #608]	; (81c14 <kRtc+0x2d4>)
   819b4:	4b98      	ldr	r3, [pc, #608]	; (81c18 <kRtc+0x2d8>)
   819b6:	4798      	blx	r3
	return 0;
   819b8:	2400      	movs	r4, #0
		break;
   819ba:	e0af      	b.n	81b1c <kRtc+0x1dc>
		_res = rtc_set_time(RTC,_hour,_minute,_second);
   819bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   819be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   819c0:	990d      	ldr	r1, [sp, #52]	; 0x34
   819c2:	4894      	ldr	r0, [pc, #592]	; (81c14 <kRtc+0x2d4>)
   819c4:	4c95      	ldr	r4, [pc, #596]	; (81c1c <kRtc+0x2dc>)
   819c6:	47a0      	blx	r4
   819c8:	4604      	mov	r4, r0
   819ca:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res	== 0)
   819cc:	2800      	cmp	r0, #0
   819ce:	f040 80a5 	bne.w	81b1c <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   819d2:	4b93      	ldr	r3, [pc, #588]	; (81c20 <kRtc+0x2e0>)
   819d4:	7899      	ldrb	r1, [r3, #2]
   819d6:	78da      	ldrb	r2, [r3, #3]
   819d8:	3b04      	subs	r3, #4
   819da:	789b      	ldrb	r3, [r3, #2]
   819dc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   819e0:	9300      	str	r3, [sp, #0]
   819e2:	f001 031f 	and.w	r3, r1, #31
   819e6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   819ea:	0949      	lsrs	r1, r1, #5
   819ec:	2002      	movs	r0, #2
   819ee:	f7ff ffa7 	bl	81940 <kRtc>
   819f2:	4b8c      	ldr	r3, [pc, #560]	; (81c24 <kRtc+0x2e4>)
   819f4:	781a      	ldrb	r2, [r3, #0]
   819f6:	f360 0282 	bfi	r2, r0, #2, #1
   819fa:	701a      	strb	r2, [r3, #0]
   819fc:	e08e      	b.n	81b1c <kRtc+0x1dc>
		if((_month==0)||(_month)>12) return -1;
   819fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81a00:	1e63      	subs	r3, r4, #1
   81a02:	2b0b      	cmp	r3, #11
   81a04:	d902      	bls.n	81a0c <kRtc+0xcc>
   81a06:	f04f 34ff 	mov.w	r4, #4294967295
   81a0a:	e087      	b.n	81b1c <kRtc+0x1dc>
		if(_date>nbDaysInMonth[_month-1]+_kRtcIsLeapYear(_centyear)?1:0) return -1;
   81a0c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   81a0e:	4a86      	ldr	r2, [pc, #536]	; (81c28 <kRtc+0x2e8>)
   81a10:	5cd5      	ldrb	r5, [r2, r3]
   81a12:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   81a14:	4631      	mov	r1, r6
   81a16:	2001      	movs	r0, #1
   81a18:	f7ff ff92 	bl	81940 <kRtc>
   81a1c:	4428      	add	r0, r5
   81a1e:	4287      	cmp	r7, r0
   81a20:	d902      	bls.n	81a28 <kRtc+0xe8>
   81a22:	f04f 34ff 	mov.w	r4, #4294967295
   81a26:	e079      	b.n	81b1c <kRtc+0x1dc>
		if((_centyear/100>20)||(_centyear/100<19)||(_centyear%100>99)) return -1;
   81a28:	f2a6 736c 	subw	r3, r6, #1900	; 0x76c
   81a2c:	2bc7      	cmp	r3, #199	; 0xc7
   81a2e:	d902      	bls.n	81a36 <kRtc+0xf6>
   81a30:	f04f 34ff 	mov.w	r4, #4294967295
   81a34:	e072      	b.n	81b1c <kRtc+0x1dc>
   81a36:	4d7d      	ldr	r5, [pc, #500]	; (81c2c <kRtc+0x2ec>)
   81a38:	fba5 3506 	umull	r3, r5, r5, r6
   81a3c:	096d      	lsrs	r5, r5, #5
   81a3e:	2364      	movs	r3, #100	; 0x64
   81a40:	fb03 6515 	mls	r5, r3, r5, r6
   81a44:	2d63      	cmp	r5, #99	; 0x63
   81a46:	d902      	bls.n	81a4e <kRtc+0x10e>
   81a48:	f04f 34ff 	mov.w	r4, #4294967295
   81a4c:	e066      	b.n	81b1c <kRtc+0x1dc>
		_day = _kRtcDayByDate(_date,_month,_centyear);
   81a4e:	4633      	mov	r3, r6
   81a50:	4622      	mov	r2, r4
   81a52:	4639      	mov	r1, r7
   81a54:	2000      	movs	r0, #0
   81a56:	f7ff ff73 	bl	81940 <kRtc>
		_res = rtc_set_date(RTC,_centyear%100,_month,_date,_day);
   81a5a:	9000      	str	r0, [sp, #0]
   81a5c:	463b      	mov	r3, r7
   81a5e:	4622      	mov	r2, r4
   81a60:	4629      	mov	r1, r5
   81a62:	486c      	ldr	r0, [pc, #432]	; (81c14 <kRtc+0x2d4>)
   81a64:	4c72      	ldr	r4, [pc, #456]	; (81c30 <kRtc+0x2f0>)
   81a66:	47a0      	blx	r4
   81a68:	4604      	mov	r4, r0
   81a6a:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res == 0)
   81a6c:	2800      	cmp	r0, #0
   81a6e:	d155      	bne.n	81b1c <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   81a70:	4b6b      	ldr	r3, [pc, #428]	; (81c20 <kRtc+0x2e0>)
   81a72:	7899      	ldrb	r1, [r3, #2]
   81a74:	78da      	ldrb	r2, [r3, #3]
   81a76:	3b04      	subs	r3, #4
   81a78:	789b      	ldrb	r3, [r3, #2]
   81a7a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   81a7e:	9300      	str	r3, [sp, #0]
   81a80:	f001 031f 	and.w	r3, r1, #31
   81a84:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   81a88:	0949      	lsrs	r1, r1, #5
   81a8a:	2002      	movs	r0, #2
   81a8c:	f7ff ff58 	bl	81940 <kRtc>
   81a90:	4b64      	ldr	r3, [pc, #400]	; (81c24 <kRtc+0x2e4>)
   81a92:	781a      	ldrb	r2, [r3, #0]
   81a94:	f360 0282 	bfi	r2, r0, #2, #1
   81a98:	701a      	strb	r2, [r3, #0]
   81a9a:	e03f      	b.n	81b1c <kRtc+0x1dc>
		rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   81a9c:	ab02      	add	r3, sp, #8
   81a9e:	9300      	str	r3, [sp, #0]
   81aa0:	ab03      	add	r3, sp, #12
   81aa2:	aa04      	add	r2, sp, #16
   81aa4:	a905      	add	r1, sp, #20
   81aa6:	485b      	ldr	r0, [pc, #364]	; (81c14 <kRtc+0x2d4>)
   81aa8:	4c62      	ldr	r4, [pc, #392]	; (81c34 <kRtc+0x2f4>)
   81aaa:	47a0      	blx	r4
		sprintf((char*)_pStr,"%s %d %s %4d",daysOfWeek[_day-1],(int)_date,months[_month-1],(int)_year);
   81aac:	9b02      	ldr	r3, [sp, #8]
   81aae:	3b01      	subs	r3, #1
   81ab0:	4a61      	ldr	r2, [pc, #388]	; (81c38 <kRtc+0x2f8>)
   81ab2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81ab6:	9b05      	ldr	r3, [sp, #20]
   81ab8:	9301      	str	r3, [sp, #4]
   81aba:	9b04      	ldr	r3, [sp, #16]
   81abc:	3b01      	subs	r3, #1
   81abe:	495f      	ldr	r1, [pc, #380]	; (81c3c <kRtc+0x2fc>)
   81ac0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
   81ac4:	9300      	str	r3, [sp, #0]
   81ac6:	9b03      	ldr	r3, [sp, #12]
   81ac8:	495d      	ldr	r1, [pc, #372]	; (81c40 <kRtc+0x300>)
   81aca:	980d      	ldr	r0, [sp, #52]	; 0x34
   81acc:	4c5d      	ldr	r4, [pc, #372]	; (81c44 <kRtc+0x304>)
   81ace:	47a0      	blx	r4
		if(_month>=3)
   81ad0:	990e      	ldr	r1, [sp, #56]	; 0x38
   81ad2:	2902      	cmp	r1, #2
   81ad4:	d928      	bls.n	81b28 <kRtc+0x1e8>
			_day = ((_month*23)/9 + _date + 4 + _centyear + _centyear/4 - _centyear/100 + _centyear/400 - 2 ) % 7 + 1;
   81ad6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81ad8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81ada:	1883      	adds	r3, r0, r2
   81adc:	3302      	adds	r3, #2
   81ade:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81ae2:	4a52      	ldr	r2, [pc, #328]	; (81c2c <kRtc+0x2ec>)
   81ae4:	fba2 2000 	umull	r2, r0, r2, r0
   81ae8:	eb03 13d0 	add.w	r3, r3, r0, lsr #7
   81aec:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81af0:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81af4:	4954      	ldr	r1, [pc, #336]	; (81c48 <kRtc+0x308>)
   81af6:	fba1 1202 	umull	r1, r2, r1, r2
   81afa:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81afe:	eba3 1350 	sub.w	r3, r3, r0, lsr #5
   81b02:	4a52      	ldr	r2, [pc, #328]	; (81c4c <kRtc+0x30c>)
   81b04:	fba2 1203 	umull	r1, r2, r2, r3
   81b08:	1a99      	subs	r1, r3, r2
   81b0a:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81b0e:	0892      	lsrs	r2, r2, #2
   81b10:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81b14:	1a9b      	subs	r3, r3, r2
   81b16:	3301      	adds	r3, #1
   81b18:	930c      	str	r3, [sp, #48]	; 0x30
		return _day; //Normally 1 to 7 !!!!
   81b1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
}
   81b1c:	4620      	mov	r0, r4
   81b1e:	b007      	add	sp, #28
   81b20:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81b24:	b004      	add	sp, #16
   81b26:	4770      	bx	lr
			_day = ((_month*23)/9 + _date + 4 + _centyear + (_centyear-1)/4 - (_centyear-1)/100 + (_centyear-1)/400 ) % 7 + 1;
   81b28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81b2a:	1e50      	subs	r0, r2, #1
   81b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81b2e:	4413      	add	r3, r2
   81b30:	3304      	adds	r3, #4
   81b32:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81b36:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81b3a:	4943      	ldr	r1, [pc, #268]	; (81c48 <kRtc+0x308>)
   81b3c:	fba1 1202 	umull	r1, r2, r1, r2
   81b40:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81b44:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81b48:	4a38      	ldr	r2, [pc, #224]	; (81c2c <kRtc+0x2ec>)
   81b4a:	fba2 1200 	umull	r1, r2, r2, r0
   81b4e:	eb03 13d2 	add.w	r3, r3, r2, lsr #7
   81b52:	eba3 1352 	sub.w	r3, r3, r2, lsr #5
   81b56:	4a3d      	ldr	r2, [pc, #244]	; (81c4c <kRtc+0x30c>)
   81b58:	fba2 1203 	umull	r1, r2, r2, r3
   81b5c:	1a99      	subs	r1, r3, r2
   81b5e:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81b62:	0892      	lsrs	r2, r2, #2
   81b64:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81b68:	1a9b      	subs	r3, r3, r2
   81b6a:	3301      	adds	r3, #1
   81b6c:	930c      	str	r3, [sp, #48]	; 0x30
   81b6e:	e7d4      	b.n	81b1a <kRtc+0x1da>
		return (((_centyear%4==0)&&(_centyear%100!=0)) || (_centyear%400==0));
   81b70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81b72:	f013 0f03 	tst.w	r3, #3
   81b76:	d107      	bne.n	81b88 <kRtc+0x248>
   81b78:	4a2c      	ldr	r2, [pc, #176]	; (81c2c <kRtc+0x2ec>)
   81b7a:	fba2 1203 	umull	r1, r2, r2, r3
   81b7e:	0952      	lsrs	r2, r2, #5
   81b80:	2164      	movs	r1, #100	; 0x64
   81b82:	fb01 3212 	mls	r2, r1, r2, r3
   81b86:	b95a      	cbnz	r2, 81ba0 <kRtc+0x260>
   81b88:	4c28      	ldr	r4, [pc, #160]	; (81c2c <kRtc+0x2ec>)
   81b8a:	fba4 2403 	umull	r2, r4, r4, r3
   81b8e:	09e4      	lsrs	r4, r4, #7
   81b90:	f44f 72c8 	mov.w	r2, #400	; 0x190
   81b94:	fb02 3414 	mls	r4, r2, r4, r3
   81b98:	fab4 f484 	clz	r4, r4
   81b9c:	0964      	lsrs	r4, r4, #5
   81b9e:	e7bd      	b.n	81b1c <kRtc+0x1dc>
   81ba0:	2401      	movs	r4, #1
   81ba2:	e7bb      	b.n	81b1c <kRtc+0x1dc>
				if(_date>=25)
   81ba4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81ba6:	2c18      	cmp	r4, #24
   81ba8:	d928      	bls.n	81bfc <kRtc+0x2bc>
					if(_day==SUNDAY)
   81baa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81bac:	2a01      	cmp	r2, #1
   81bae:	d008      	beq.n	81bc2 <kRtc+0x282>
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
   81bb0:	3c18      	subs	r4, #24
   81bb2:	b264      	sxtb	r4, r4
   81bb4:	b252      	sxtb	r2, r2
   81bb6:	1aa4      	subs	r4, r4, r2
   81bb8:	2c00      	cmp	r4, #0
   81bba:	bfd4      	ite	le
   81bbc:	2400      	movle	r4, #0
   81bbe:	2401      	movgt	r4, #1
   81bc0:	e7ac      	b.n	81b1c <kRtc+0x1dc>
						if(_hour>=2) return 1;
   81bc2:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81bc4:	2c01      	cmp	r4, #1
   81bc6:	bf94      	ite	ls
   81bc8:	2400      	movls	r4, #0
   81bca:	2401      	movhi	r4, #1
   81bcc:	e7a6      	b.n	81b1c <kRtc+0x1dc>
				if(_date>=25)
   81bce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81bd0:	2c18      	cmp	r4, #24
   81bd2:	d915      	bls.n	81c00 <kRtc+0x2c0>
					if(_day==SUNDAY)
   81bd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81bd6:	2a01      	cmp	r2, #1
   81bd8:	d008      	beq.n	81bec <kRtc+0x2ac>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
   81bda:	3c18      	subs	r4, #24
   81bdc:	b264      	sxtb	r4, r4
   81bde:	b252      	sxtb	r2, r2
   81be0:	1aa4      	subs	r4, r4, r2
   81be2:	2c00      	cmp	r4, #0
   81be4:	bfcc      	ite	gt
   81be6:	2400      	movgt	r4, #0
   81be8:	2401      	movle	r4, #1
   81bea:	e797      	b.n	81b1c <kRtc+0x1dc>
						if(_hour<2) return 1;
   81bec:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81bee:	2c01      	cmp	r4, #1
   81bf0:	bf8c      	ite	hi
   81bf2:	2400      	movhi	r4, #0
   81bf4:	2401      	movls	r4, #1
   81bf6:	e791      	b.n	81b1c <kRtc+0x1dc>
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   81bf8:	2401      	movs	r4, #1
   81bfa:	e78f      	b.n	81b1c <kRtc+0x1dc>
		return 0;
   81bfc:	2400      	movs	r4, #0
   81bfe:	e78d      	b.n	81b1c <kRtc+0x1dc>
   81c00:	2400      	movs	r4, #0
   81c02:	e78b      	b.n	81b1c <kRtc+0x1dc>
   81c04:	00081761 	.word	0x00081761
   81c08:	0008098d 	.word	0x0008098d
   81c0c:	000809b1 	.word	0x000809b1
   81c10:	e000e100 	.word	0xe000e100
   81c14:	400e1260 	.word	0x400e1260
   81c18:	00080c99 	.word	0x00080c99
   81c1c:	00080cf9 	.word	0x00080cf9
   81c20:	400e126c 	.word	0x400e126c
   81c24:	200010bc 	.word	0x200010bc
   81c28:	00088b58 	.word	0x00088b58
   81c2c:	51eb851f 	.word	0x51eb851f
   81c30:	00080e01 	.word	0x00080e01
   81c34:	00080d8d 	.word	0x00080d8d
   81c38:	2000052c 	.word	0x2000052c
   81c3c:	20000548 	.word	0x20000548
   81c40:	00088b48 	.word	0x00088b48
   81c44:	00083de9 	.word	0x00083de9
   81c48:	38e38e39 	.word	0x38e38e39
   81c4c:	24924925 	.word	0x24924925

00081c50 <RTC_Handler>:
enum{
	_SHELL_PROMPT = 4
};

void RTC_Handler(void)
{
   81c50:	b510      	push	{r4, lr}
   81c52:	b082      	sub	sp, #8
	rtc_clear_status(RTC,RTC_SCCR_SECCLR);
   81c54:	2104      	movs	r1, #4
   81c56:	4806      	ldr	r0, [pc, #24]	; (81c70 <RTC_Handler+0x20>)
   81c58:	4b06      	ldr	r3, [pc, #24]	; (81c74 <RTC_Handler+0x24>)
   81c5a:	4798      	blx	r3
	PushTask(Shell,_SHELL_PROMPT,0,0);
   81c5c:	2300      	movs	r3, #0
   81c5e:	9300      	str	r3, [sp, #0]
   81c60:	2204      	movs	r2, #4
   81c62:	4905      	ldr	r1, [pc, #20]	; (81c78 <RTC_Handler+0x28>)
   81c64:	2066      	movs	r0, #102	; 0x66
   81c66:	4c05      	ldr	r4, [pc, #20]	; (81c7c <RTC_Handler+0x2c>)
   81c68:	47a0      	blx	r4
}
   81c6a:	b002      	add	sp, #8
   81c6c:	bd10      	pop	{r4, pc}
   81c6e:	bf00      	nop
   81c70:	400e1260 	.word	0x400e1260
   81c74:	00080eb9 	.word	0x00080eb9
   81c78:	000820c1 	.word	0x000820c1
   81c7c:	00083491 	.word	0x00083491

00081c80 <Lcd>:

#define ST_LCD_ON		0x0000001


uint32_t Lcd(uint32_t sc, ...)
{
   81c80:	b40f      	push	{r0, r1, r2, r3}
   81c82:	b538      	push	{r3, r4, r5, lr}
	switch(sc)
   81c84:	9904      	ldr	r1, [sp, #16]
   81c86:	1e4b      	subs	r3, r1, #1
   81c88:	2b67      	cmp	r3, #103	; 0x67
   81c8a:	f200 81f4 	bhi.w	82076 <Lcd+0x3f6>
   81c8e:	e8df f013 	tbh	[pc, r3, lsl #1]
   81c92:	0101      	.short	0x0101
   81c94:	015b0151 	.word	0x015b0151
   81c98:	01770165 	.word	0x01770165
   81c9c:	018f0183 	.word	0x018f0183
   81ca0:	019d01f7 	.word	0x019d01f7
   81ca4:	01f201cf 	.word	0x01f201cf
   81ca8:	01f201f2 	.word	0x01f201f2
   81cac:	01f201f2 	.word	0x01f201f2
   81cb0:	01f201f2 	.word	0x01f201f2
   81cb4:	01f201f2 	.word	0x01f201f2
   81cb8:	01f201f2 	.word	0x01f201f2
   81cbc:	01f201f2 	.word	0x01f201f2
   81cc0:	01f201f2 	.word	0x01f201f2
   81cc4:	01f201f2 	.word	0x01f201f2
   81cc8:	01f201f2 	.word	0x01f201f2
   81ccc:	01f201f2 	.word	0x01f201f2
   81cd0:	01f201f2 	.word	0x01f201f2
   81cd4:	01f201f2 	.word	0x01f201f2
   81cd8:	01f201f2 	.word	0x01f201f2
   81cdc:	01f201f2 	.word	0x01f201f2
   81ce0:	01f201f2 	.word	0x01f201f2
   81ce4:	01f201f2 	.word	0x01f201f2
   81ce8:	01f201f2 	.word	0x01f201f2
   81cec:	01f201f2 	.word	0x01f201f2
   81cf0:	01f201f2 	.word	0x01f201f2
   81cf4:	01f201f2 	.word	0x01f201f2
   81cf8:	01f201f2 	.word	0x01f201f2
   81cfc:	01f201f2 	.word	0x01f201f2
   81d00:	01f201f2 	.word	0x01f201f2
   81d04:	01f201f2 	.word	0x01f201f2
   81d08:	01f201f2 	.word	0x01f201f2
   81d0c:	01f201f2 	.word	0x01f201f2
   81d10:	01f201f2 	.word	0x01f201f2
   81d14:	01f201f2 	.word	0x01f201f2
   81d18:	01f201f2 	.word	0x01f201f2
   81d1c:	01f201f2 	.word	0x01f201f2
   81d20:	01f201f2 	.word	0x01f201f2
   81d24:	01f201f2 	.word	0x01f201f2
   81d28:	01f201f2 	.word	0x01f201f2
   81d2c:	01f201f2 	.word	0x01f201f2
   81d30:	01f201f2 	.word	0x01f201f2
   81d34:	01f201f2 	.word	0x01f201f2
   81d38:	01f201f2 	.word	0x01f201f2
   81d3c:	01f201f2 	.word	0x01f201f2
   81d40:	01f201f2 	.word	0x01f201f2
   81d44:	01f201f2 	.word	0x01f201f2
   81d48:	01f201f2 	.word	0x01f201f2
   81d4c:	01f201f2 	.word	0x01f201f2
   81d50:	01f201f2 	.word	0x01f201f2
   81d54:	01f201f2 	.word	0x01f201f2
   81d58:	00b70068 	.word	0x00b70068
   81d5c:	00e100f6 	.word	0x00e100f6
   81d60:	00dc      	.short	0x00dc
	{
	case LCD_NEW:
		_LcdSetDataLineOut();
   81d62:	2009      	movs	r0, #9
   81d64:	f7ff ff8c 	bl	81c80 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81d68:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d6c:	2004      	movs	r0, #4
   81d6e:	4ca9      	ldr	r4, [pc, #676]	; (82014 <Lcd+0x394>)
   81d70:	47a0      	blx	r4
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81d72:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d76:	2005      	movs	r0, #5
   81d78:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81d7a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d7e:	2006      	movs	r0, #6
   81d80:	47a0      	blx	r4
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81d82:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d86:	2007      	movs	r0, #7
   81d88:	47a0      	blx	r4

		gpio_set_pin_low(LCD_E);
   81d8a:	2004      	movs	r0, #4
   81d8c:	4ca2      	ldr	r4, [pc, #648]	; (82018 <Lcd+0x398>)
   81d8e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   81d90:	2006      	movs	r0, #6
   81d92:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RWB);
   81d94:	2005      	movs	r0, #5
   81d96:	47a0      	blx	r4
		gpio_set_pin_high(LCD_BACKLIGHT);
   81d98:	2007      	movs	r0, #7
   81d9a:	4ba0      	ldr	r3, [pc, #640]	; (8201c <Lcd+0x39c>)
   81d9c:	4798      	blx	r3

		delay_ms(500);
   81d9e:	48a0      	ldr	r0, [pc, #640]	; (82020 <Lcd+0x3a0>)
   81da0:	4ca0      	ldr	r4, [pc, #640]	; (82024 <Lcd+0x3a4>)
   81da2:	47a0      	blx	r4

#ifdef LCD_USE_8_BIT_INTERFACE
		//8 bit data interface/////////////////////////////
		_LcdWriteInst(0x30);
   81da4:	2130      	movs	r1, #48	; 0x30
   81da6:	2002      	movs	r0, #2
   81da8:	f7ff ff6a 	bl	81c80 <Lcd>
		delay_ms(6);
   81dac:	f24a 00b7 	movw	r0, #41143	; 0xa0b7
   81db0:	47a0      	blx	r4
		_LcdWriteInst(0x30);
   81db2:	2130      	movs	r1, #48	; 0x30
   81db4:	2002      	movs	r0, #2
   81db6:	f7ff ff63 	bl	81c80 <Lcd>
		delay_ms(2);
   81dba:	f243 5093 	movw	r0, #13715	; 0x3593
   81dbe:	47a0      	blx	r4
		_LcdWriteInst(0x30);
   81dc0:	2130      	movs	r1, #48	; 0x30
   81dc2:	2002      	movs	r0, #2
   81dc4:	f7ff ff5c 	bl	81c80 <Lcd>
		delay_ms(2);
   81dc8:	f243 5093 	movw	r0, #13715	; 0x3593
   81dcc:	47a0      	blx	r4
		_LcdWriteInst(0x38);	//SET FUNCTION : 8 bits interface/2 line display/5x7 dots
   81dce:	2138      	movs	r1, #56	; 0x38
   81dd0:	2002      	movs	r0, #2
   81dd2:	f7ff ff55 	bl	81c80 <Lcd>
		delay_ms(10);
		_LcdWriteByte(0x20);
		delay_ms(10);
		_LcdWriteInst(0x28);	//SET FUNCTION : 4 bits interface/2 line display/5x7 dots
#endif
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81dd6:	2108      	movs	r1, #8
   81dd8:	2002      	movs	r0, #2
   81dda:	f7ff ff51 	bl	81c80 <Lcd>
		_LcdWriteInst(0x01);	//DISPLAY CLEAR
   81dde:	2101      	movs	r1, #1
   81de0:	2002      	movs	r0, #2
   81de2:	f7ff ff4d 	bl	81c80 <Lcd>
		_LcdWriteInst(0x06);	//ENTRY MODE SET : Cursor Increase/Display is not shift
   81de6:	2106      	movs	r1, #6
   81de8:	2002      	movs	r0, #2
   81dea:	f7ff ff49 	bl	81c80 <Lcd>
		_LcdWriteInst(0x0C);	//DISPLAY ON/CURSOR OFF
   81dee:	210c      	movs	r1, #12
   81df0:	2002      	movs	r0, #2
   81df2:	f7ff ff45 	bl	81c80 <Lcd>

		lcd.status = ST_LCD_ON;
   81df6:	2201      	movs	r2, #1
   81df8:	4b8b      	ldr	r3, [pc, #556]	; (82028 <Lcd+0x3a8>)
   81dfa:	601a      	str	r2, [r3, #0]

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
	}
	return 0;
   81dfc:	2400      	movs	r4, #0
		break;
   81dfe:	e140      	b.n	82082 <Lcd+0x402>
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81e00:	2108      	movs	r1, #8
   81e02:	2002      	movs	r0, #2
   81e04:	f7ff ff3c 	bl	81c80 <Lcd>
		_LcdSetDataLineIn();
   81e08:	200a      	movs	r0, #10
   81e0a:	f7ff ff39 	bl	81c80 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81e0e:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e12:	2004      	movs	r0, #4
   81e14:	4c7f      	ldr	r4, [pc, #508]	; (82014 <Lcd+0x394>)
   81e16:	47a0      	blx	r4
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81e18:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e1c:	2005      	movs	r0, #5
   81e1e:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81e20:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e24:	2006      	movs	r0, #6
   81e26:	47a0      	blx	r4
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81e28:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e2c:	2007      	movs	r0, #7
   81e2e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81e30:	2004      	movs	r0, #4
   81e32:	4c79      	ldr	r4, [pc, #484]	; (82018 <Lcd+0x398>)
   81e34:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   81e36:	2006      	movs	r0, #6
   81e38:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RWB);
   81e3a:	2005      	movs	r0, #5
   81e3c:	47a0      	blx	r4
		gpio_set_pin_low(LCD_BACKLIGHT);
   81e3e:	2007      	movs	r0, #7
   81e40:	47a0      	blx	r4
		lcd.status=0;
   81e42:	2400      	movs	r4, #0
   81e44:	4b78      	ldr	r3, [pc, #480]	; (82028 <Lcd+0x3a8>)
   81e46:	601c      	str	r4, [r3, #0]
		break;
   81e48:	e11b      	b.n	82082 <Lcd+0x402>
		return (uint32_t)(mIsBitsSet(lcd.status,ST_LCD_ON));
   81e4a:	4b77      	ldr	r3, [pc, #476]	; (82028 <Lcd+0x3a8>)
   81e4c:	681c      	ldr	r4, [r3, #0]
   81e4e:	f004 0401 	and.w	r4, r4, #1
   81e52:	e116      	b.n	82082 <Lcd+0x402>
		_LcdSetCursor(_line,_col);
   81e54:	9a07      	ldr	r2, [sp, #28]
   81e56:	9906      	ldr	r1, [sp, #24]
   81e58:	2007      	movs	r0, #7
   81e5a:	f7ff ff11 	bl	81c80 <Lcd>
		while(*(char*)_str)
   81e5e:	9c05      	ldr	r4, [sp, #20]
   81e60:	7821      	ldrb	r1, [r4, #0]
   81e62:	2900      	cmp	r1, #0
   81e64:	f000 8112 	beq.w	8208c <Lcd+0x40c>
			_LcdWriteData(*(char*)_str++);
   81e68:	2503      	movs	r5, #3
   81e6a:	3401      	adds	r4, #1
   81e6c:	9405      	str	r4, [sp, #20]
   81e6e:	4628      	mov	r0, r5
   81e70:	f7ff ff06 	bl	81c80 <Lcd>
		while(*(char*)_str)
   81e74:	7821      	ldrb	r1, [r4, #0]
   81e76:	2900      	cmp	r1, #0
   81e78:	d1f7      	bne.n	81e6a <Lcd+0x1ea>
	return 0;
   81e7a:	2400      	movs	r4, #0
   81e7c:	e101      	b.n	82082 <Lcd+0x402>
		if(_onOff)
   81e7e:	9c05      	ldr	r4, [sp, #20]
   81e80:	b124      	cbz	r4, 81e8c <Lcd+0x20c>
			gpio_set_pin_high(LCD_BACKLIGHT);
   81e82:	2007      	movs	r0, #7
   81e84:	4b65      	ldr	r3, [pc, #404]	; (8201c <Lcd+0x39c>)
   81e86:	4798      	blx	r3
	return 0;
   81e88:	2400      	movs	r4, #0
   81e8a:	e0fa      	b.n	82082 <Lcd+0x402>
			gpio_set_pin_low(LCD_BACKLIGHT);
   81e8c:	2007      	movs	r0, #7
   81e8e:	4b62      	ldr	r3, [pc, #392]	; (82018 <Lcd+0x398>)
   81e90:	4798      	blx	r3
   81e92:	e0f6      	b.n	82082 <Lcd+0x402>
		_LcdSetDataLineOut();
   81e94:	2009      	movs	r0, #9
   81e96:	f7ff fef3 	bl	81c80 <Lcd>
		gpio_set_pin_low(LCD_RWB);
   81e9a:	2005      	movs	r0, #5
   81e9c:	4b5e      	ldr	r3, [pc, #376]	; (82018 <Lcd+0x398>)
   81e9e:	4798      	blx	r3
		_LcdEup();
   81ea0:	2005      	movs	r0, #5
   81ea2:	f7ff feed 	bl	81c80 <Lcd>
		(_byte&0x80)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   81ea6:	9c05      	ldr	r4, [sp, #20]
   81ea8:	f014 0f80 	tst.w	r4, #128	; 0x80
   81eac:	f04f 0003 	mov.w	r0, #3
   81eb0:	bf14      	ite	ne
   81eb2:	4b5a      	ldrne	r3, [pc, #360]	; (8201c <Lcd+0x39c>)
   81eb4:	4b58      	ldreq	r3, [pc, #352]	; (82018 <Lcd+0x398>)
   81eb6:	4798      	blx	r3
		(_byte&0x40)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   81eb8:	b2e4      	uxtb	r4, r4
   81eba:	f014 0f40 	tst.w	r4, #64	; 0x40
   81ebe:	f04f 0002 	mov.w	r0, #2
   81ec2:	bf14      	ite	ne
   81ec4:	4b55      	ldrne	r3, [pc, #340]	; (8201c <Lcd+0x39c>)
   81ec6:	4b54      	ldreq	r3, [pc, #336]	; (82018 <Lcd+0x398>)
   81ec8:	4798      	blx	r3
		(_byte&0x20)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   81eca:	f014 0f20 	tst.w	r4, #32
   81ece:	f04f 0001 	mov.w	r0, #1
   81ed2:	bf14      	ite	ne
   81ed4:	4b51      	ldrne	r3, [pc, #324]	; (8201c <Lcd+0x39c>)
   81ed6:	4b50      	ldreq	r3, [pc, #320]	; (82018 <Lcd+0x398>)
   81ed8:	4798      	blx	r3
		(_byte&0x10)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   81eda:	f014 0f10 	tst.w	r4, #16
   81ede:	f04f 0000 	mov.w	r0, #0
   81ee2:	bf14      	ite	ne
   81ee4:	4b4d      	ldrne	r3, [pc, #308]	; (8201c <Lcd+0x39c>)
   81ee6:	4b4c      	ldreq	r3, [pc, #304]	; (82018 <Lcd+0x398>)
   81ee8:	4798      	blx	r3
		(_byte&0x08)?gpio_set_pin_high(LCD_DB3):gpio_set_pin_low(LCD_DB3);
   81eea:	f014 0f08 	tst.w	r4, #8
   81eee:	f04f 002b 	mov.w	r0, #43	; 0x2b
   81ef2:	bf14      	ite	ne
   81ef4:	4b49      	ldrne	r3, [pc, #292]	; (8201c <Lcd+0x39c>)
   81ef6:	4b48      	ldreq	r3, [pc, #288]	; (82018 <Lcd+0x398>)
   81ef8:	4798      	blx	r3
		(_byte&0x04)?gpio_set_pin_high(LCD_DB2):gpio_set_pin_low(LCD_DB2);
   81efa:	f014 0f04 	tst.w	r4, #4
   81efe:	f04f 002a 	mov.w	r0, #42	; 0x2a
   81f02:	bf14      	ite	ne
   81f04:	4b45      	ldrne	r3, [pc, #276]	; (8201c <Lcd+0x39c>)
   81f06:	4b44      	ldreq	r3, [pc, #272]	; (82018 <Lcd+0x398>)
   81f08:	4798      	blx	r3
		(_byte&0x02)?gpio_set_pin_high(LCD_DB1):gpio_set_pin_low(LCD_DB1);
   81f0a:	f014 0f02 	tst.w	r4, #2
   81f0e:	f04f 0029 	mov.w	r0, #41	; 0x29
   81f12:	bf14      	ite	ne
   81f14:	4b41      	ldrne	r3, [pc, #260]	; (8201c <Lcd+0x39c>)
   81f16:	4b40      	ldreq	r3, [pc, #256]	; (82018 <Lcd+0x398>)
   81f18:	4798      	blx	r3
		(_byte&0x01)?gpio_set_pin_high(LCD_DB0):gpio_set_pin_low(LCD_DB0);
   81f1a:	f014 0f01 	tst.w	r4, #1
   81f1e:	f04f 0028 	mov.w	r0, #40	; 0x28
   81f22:	bf14      	ite	ne
   81f24:	4b3d      	ldrne	r3, [pc, #244]	; (8201c <Lcd+0x39c>)
   81f26:	4b3c      	ldreq	r3, [pc, #240]	; (82018 <Lcd+0x398>)
   81f28:	4798      	blx	r3
		_LcdEdown();
   81f2a:	2006      	movs	r0, #6
   81f2c:	f7ff fea8 	bl	81c80 <Lcd>
	return 0;
   81f30:	2400      	movs	r4, #0
		break;
   81f32:	e0a6      	b.n	82082 <Lcd+0x402>
		gpio_set_pin_low(LCD_RS);
   81f34:	2006      	movs	r0, #6
   81f36:	4b38      	ldr	r3, [pc, #224]	; (82018 <Lcd+0x398>)
   81f38:	4798      	blx	r3
		_LcdWriteByte(_inst);
   81f3a:	f89d 1014 	ldrb.w	r1, [sp, #20]
   81f3e:	2001      	movs	r0, #1
   81f40:	f7ff fe9e 	bl	81c80 <Lcd>
	return 0;
   81f44:	2400      	movs	r4, #0
		break;
   81f46:	e09c      	b.n	82082 <Lcd+0x402>
		gpio_set_pin_high(LCD_RS);
   81f48:	2006      	movs	r0, #6
   81f4a:	4b34      	ldr	r3, [pc, #208]	; (8201c <Lcd+0x39c>)
   81f4c:	4798      	blx	r3
		_LcdWriteByte(_data);
   81f4e:	f89d 1014 	ldrb.w	r1, [sp, #20]
   81f52:	2001      	movs	r0, #1
   81f54:	f7ff fe94 	bl	81c80 <Lcd>
	return 0;
   81f58:	2400      	movs	r4, #0
		break;
   81f5a:	e092      	b.n	82082 <Lcd+0x402>
		delay_us(500);
   81f5c:	f640 5065 	movw	r0, #3429	; 0xd65
   81f60:	4c30      	ldr	r4, [pc, #192]	; (82024 <Lcd+0x3a4>)
   81f62:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   81f64:	2004      	movs	r0, #4
   81f66:	4b2d      	ldr	r3, [pc, #180]	; (8201c <Lcd+0x39c>)
   81f68:	4798      	blx	r3
		delay_us(100);
   81f6a:	f240 20ae 	movw	r0, #686	; 0x2ae
   81f6e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81f70:	2004      	movs	r0, #4
   81f72:	4b29      	ldr	r3, [pc, #164]	; (82018 <Lcd+0x398>)
   81f74:	4798      	blx	r3
		delay_us(500);
   81f76:	f640 5065 	movw	r0, #3429	; 0xd65
   81f7a:	47a0      	blx	r4
	return 0;
   81f7c:	2400      	movs	r4, #0
		break;
   81f7e:	e080      	b.n	82082 <Lcd+0x402>
		delay_us(500);
   81f80:	f640 5065 	movw	r0, #3429	; 0xd65
   81f84:	4c27      	ldr	r4, [pc, #156]	; (82024 <Lcd+0x3a4>)
   81f86:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   81f88:	2004      	movs	r0, #4
   81f8a:	4b24      	ldr	r3, [pc, #144]	; (8201c <Lcd+0x39c>)
   81f8c:	4798      	blx	r3
		delay_us(50);
   81f8e:	f240 1057 	movw	r0, #343	; 0x157
   81f92:	47a0      	blx	r4
	return 0;
   81f94:	2400      	movs	r4, #0
		break;
   81f96:	e074      	b.n	82082 <Lcd+0x402>
		delay_us(50);
   81f98:	f240 1057 	movw	r0, #343	; 0x157
   81f9c:	4c21      	ldr	r4, [pc, #132]	; (82024 <Lcd+0x3a4>)
   81f9e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81fa0:	2004      	movs	r0, #4
   81fa2:	4b1d      	ldr	r3, [pc, #116]	; (82018 <Lcd+0x398>)
   81fa4:	4798      	blx	r3
		delay_us(500);
   81fa6:	f640 5065 	movw	r0, #3429	; 0xd65
   81faa:	47a0      	blx	r4
	return 0;
   81fac:	2400      	movs	r4, #0
		break;
   81fae:	e068      	b.n	82082 <Lcd+0x402>
		_LcdWriteInst((line2addr[_nLine&0x03]+_nCol)|0x80);
   81fb0:	9b05      	ldr	r3, [sp, #20]
   81fb2:	f003 0303 	and.w	r3, r3, #3
   81fb6:	4a1d      	ldr	r2, [pc, #116]	; (8202c <Lcd+0x3ac>)
   81fb8:	5cd1      	ldrb	r1, [r2, r3]
   81fba:	9b06      	ldr	r3, [sp, #24]
   81fbc:	4419      	add	r1, r3
   81fbe:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   81fc2:	2002      	movs	r0, #2
   81fc4:	f7ff fe5c 	bl	81c80 <Lcd>
	return 0;
   81fc8:	2400      	movs	r4, #0
		break;
   81fca:	e05a      	b.n	82082 <Lcd+0x402>
		gpio_configure_pin(LCD_DB4,			LCD_PIN_OUT_FLAGS);
   81fcc:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81fd0:	2000      	movs	r0, #0
   81fd2:	4c10      	ldr	r4, [pc, #64]	; (82014 <Lcd+0x394>)
   81fd4:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_OUT_FLAGS);
   81fd6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81fda:	2001      	movs	r0, #1
   81fdc:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_OUT_FLAGS);
   81fde:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81fe2:	2002      	movs	r0, #2
   81fe4:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_OUT_FLAGS);
   81fe6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81fea:	2003      	movs	r0, #3
   81fec:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB0,			LCD_PIN_OUT_FLAGS);
   81fee:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81ff2:	2028      	movs	r0, #40	; 0x28
   81ff4:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB1,			LCD_PIN_OUT_FLAGS);
   81ff6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81ffa:	2029      	movs	r0, #41	; 0x29
   81ffc:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB2,			LCD_PIN_OUT_FLAGS);
   81ffe:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   82002:	202a      	movs	r0, #42	; 0x2a
   82004:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB3,			LCD_PIN_OUT_FLAGS);
   82006:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8200a:	202b      	movs	r0, #43	; 0x2b
   8200c:	47a0      	blx	r4
	return 0;
   8200e:	2400      	movs	r4, #0
		break;
   82010:	e037      	b.n	82082 <Lcd+0x402>
   82012:	bf00      	nop
   82014:	00080859 	.word	0x00080859
   82018:	0008081f 	.word	0x0008081f
   8201c:	00080805 	.word	0x00080805
   82020:	003450dc 	.word	0x003450dc
   82024:	20000001 	.word	0x20000001
   82028:	200010c0 	.word	0x200010c0
   8202c:	00088c14 	.word	0x00088c14
		gpio_configure_pin(LCD_DB4,			LCD_PIN_IN_FLAGS);
   82030:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82034:	2000      	movs	r0, #0
   82036:	4c16      	ldr	r4, [pc, #88]	; (82090 <Lcd+0x410>)
   82038:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_IN_FLAGS);
   8203a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8203e:	2001      	movs	r0, #1
   82040:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_IN_FLAGS);
   82042:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82046:	2002      	movs	r0, #2
   82048:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_IN_FLAGS);
   8204a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8204e:	2003      	movs	r0, #3
   82050:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB0,			LCD_PIN_IN_FLAGS);
   82052:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82056:	2028      	movs	r0, #40	; 0x28
   82058:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB1,			LCD_PIN_IN_FLAGS);
   8205a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8205e:	2029      	movs	r0, #41	; 0x29
   82060:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB2,			LCD_PIN_IN_FLAGS);
   82062:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82066:	202a      	movs	r0, #42	; 0x2a
   82068:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB3,			LCD_PIN_IN_FLAGS);
   8206a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8206e:	202b      	movs	r0, #43	; 0x2b
   82070:	47a0      	blx	r4
	return 0;
   82072:	2400      	movs	r4, #0
		break;
   82074:	e005      	b.n	82082 <Lcd+0x402>
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
   82076:	200f      	movs	r0, #15
   82078:	4b06      	ldr	r3, [pc, #24]	; (82094 <Lcd+0x414>)
   8207a:	4798      	blx	r3
	return 0;
   8207c:	2400      	movs	r4, #0
   8207e:	e000      	b.n	82082 <Lcd+0x402>
   82080:	2400      	movs	r4, #0
}
   82082:	4620      	mov	r0, r4
   82084:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82088:	b004      	add	sp, #16
   8208a:	4770      	bx	lr
	return 0;
   8208c:	2400      	movs	r4, #0
   8208e:	e7f8      	b.n	82082 <Lcd+0x402>
   82090:	00080859 	.word	0x00080859
   82094:	00081761 	.word	0x00081761

00082098 <LcdFindHalf>:

uint8_t LcdFindHalf(uint32_t len)
{
   82098:	b508      	push	{r3, lr}
	float col;
	col = 20 - len;
   8209a:	f1c0 0014 	rsb	r0, r0, #20
   8209e:	4b05      	ldr	r3, [pc, #20]	; (820b4 <LcdFindHalf+0x1c>)
   820a0:	4798      	blx	r3
	col = col/2;
   820a2:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
   820a6:	4b04      	ldr	r3, [pc, #16]	; (820b8 <LcdFindHalf+0x20>)
   820a8:	4798      	blx	r3
	return col;
   820aa:	4b04      	ldr	r3, [pc, #16]	; (820bc <LcdFindHalf+0x24>)
   820ac:	4798      	blx	r3
   820ae:	b2c0      	uxtb	r0, r0
   820b0:	bd08      	pop	{r3, pc}
   820b2:	bf00      	nop
   820b4:	00083965 	.word	0x00083965
   820b8:	00083a15 	.word	0x00083a15
   820bc:	00083cb5 	.word	0x00083cb5

000820c0 <Shell>:

#define EnterEditMode()					mBitsSet(shell.status,ST_SHELL_PROMPT_DISABLED)
#define ExitEditMode()					mBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED)

uint32_t Shell(uint32_t sc, ...)
{
   820c0:	b40f      	push	{r0, r1, r2, r3}
   820c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   820c6:	b087      	sub	sp, #28
	uint32_t u1,u2;
	char*pSt;

	switch(sc)
   820c8:	990e      	ldr	r1, [sp, #56]	; 0x38
   820ca:	2904      	cmp	r1, #4
   820cc:	f000 80a1 	beq.w	82212 <Shell+0x152>
   820d0:	d940      	bls.n	82154 <Shell+0x94>
   820d2:	2906      	cmp	r1, #6
   820d4:	d054      	beq.n	82180 <Shell+0xc0>
   820d6:	d362      	bcc.n	8219e <Shell+0xde>
   820d8:	2907      	cmp	r1, #7
   820da:	f000 85eb 	beq.w	82cb4 <Shell+0xbf4>
   820de:	2964      	cmp	r1, #100	; 0x64
   820e0:	f040 8668 	bne.w	82db4 <Shell+0xcf4>
	{
	case SHELL_NEW:
		shell.editTimer=shell.escapeTimer=0;
   820e4:	4b9d      	ldr	r3, [pc, #628]	; (8235c <Shell+0x29c>)
   820e6:	2400      	movs	r4, #0
   820e8:	619c      	str	r4, [r3, #24]
   820ea:	615c      	str	r4, [r3, #20]
		shell.state=IDLE;
   820ec:	771c      	strb	r4, [r3, #28]
		shell.status=ST_SHELL_SHOW_UNKNOW_CRC;
   820ee:	2202      	movs	r2, #2
   820f0:	801a      	strh	r2, [r3, #0]
		Lcd(LCD_NEW);
   820f2:	2064      	movs	r0, #100	; 0x64
   820f4:	4b9a      	ldr	r3, [pc, #616]	; (82360 <Shell+0x2a0>)
   820f6:	4798      	blx	r3
		gpio_configure_pin(HEART_LED, HEART_LED_FLAGS);
   820f8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   820fc:	2034      	movs	r0, #52	; 0x34
   820fe:	4d99      	ldr	r5, [pc, #612]	; (82364 <Shell+0x2a4>)
   82100:	47a8      	blx	r5
		gpio_configure_pin(POWER_LED, POWER_LED_FLAGS);
   82102:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82106:	2033      	movs	r0, #51	; 0x33
   82108:	47a8      	blx	r5

#if POWER_LED_ACTIVE_LEVEL
		gpio_set_pin_low(POWER_LED);
   8210a:	2033      	movs	r0, #51	; 0x33
   8210c:	4b96      	ldr	r3, [pc, #600]	; (82368 <Shell+0x2a8>)
   8210e:	4798      	blx	r3
#else
		gpio_set_pin_high(POWER_LED);
#endif
		kRtc(KRTC_NEW);
   82110:	2064      	movs	r0, #100	; 0x64
   82112:	4b96      	ldr	r3, [pc, #600]	; (8236c <Shell+0x2ac>)
   82114:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   82116:	2064      	movs	r0, #100	; 0x64
   82118:	4b95      	ldr	r3, [pc, #596]	; (82370 <Shell+0x2b0>)
   8211a:	4798      	blx	r3
		//LcdPutstr("Hello World!",0,0);
		//LcdPutstr("Hello World!",1,1);
		//LcdPutstr("Hello World!",2,2);
		//LcdPutstr("Hello World!",3,3);
		PushTask(Shell,_SHELL_HEART_BEAT,-1,0);
   8211c:	4e95      	ldr	r6, [pc, #596]	; (82374 <Shell+0x2b4>)
   8211e:	9400      	str	r4, [sp, #0]
   82120:	f04f 33ff 	mov.w	r3, #4294967295
   82124:	2201      	movs	r2, #1
   82126:	4631      	mov	r1, r6
   82128:	2066      	movs	r0, #102	; 0x66
   8212a:	4d93      	ldr	r5, [pc, #588]	; (82378 <Shell+0x2b8>)
   8212c:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,0);
   8212e:	9400      	str	r4, [sp, #0]
   82130:	4623      	mov	r3, r4
   82132:	2204      	movs	r2, #4
   82134:	4631      	mov	r1, r6
   82136:	2066      	movs	r0, #102	; 0x66
   82138:	47a8      	blx	r5
		PushTask(Menu,MENU_NEW,0,0);
   8213a:	9400      	str	r4, [sp, #0]
   8213c:	4623      	mov	r3, r4
   8213e:	2264      	movs	r2, #100	; 0x64
   82140:	498e      	ldr	r1, [pc, #568]	; (8237c <Shell+0x2bc>)
   82142:	2066      	movs	r0, #102	; 0x66
   82144:	47a8      	blx	r5

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
	}
	return 0;
   82146:	46a0      	mov	r8, r4
}
   82148:	4640      	mov	r0, r8
   8214a:	b007      	add	sp, #28
   8214c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82150:	b004      	add	sp, #16
   82152:	4770      	bx	lr
	switch(sc)
   82154:	2902      	cmp	r1, #2
   82156:	f000 80a6 	beq.w	822a6 <Shell+0x1e6>
   8215a:	f200 833c 	bhi.w	827d6 <Shell+0x716>
   8215e:	2901      	cmp	r1, #1
   82160:	f040 8628 	bne.w	82db4 <Shell+0xcf4>
		if(heartBeatRhythm[++k]==0) k=0;
   82164:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82166:	3301      	adds	r3, #1
   82168:	930f      	str	r3, [sp, #60]	; 0x3c
   8216a:	4a85      	ldr	r2, [pc, #532]	; (82380 <Shell+0x2c0>)
   8216c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   82170:	2a00      	cmp	r2, #0
   82172:	d13b      	bne.n	821ec <Shell+0x12c>
   82174:	2300      	movs	r3, #0
   82176:	930f      	str	r3, [sp, #60]	; 0x3c
		else gpio_set_pin_low(HEART_LED);
   82178:	2034      	movs	r0, #52	; 0x34
   8217a:	4b7b      	ldr	r3, [pc, #492]	; (82368 <Shell+0x2a8>)
   8217c:	4798      	blx	r3
   8217e:	e03b      	b.n	821f8 <Shell+0x138>
	    while((*(char*)_pSep)&&(*(char*)_pSep!=_ch)) _pSep++;
   82180:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82182:	781a      	ldrb	r2, [r3, #0]
   82184:	b14a      	cbz	r2, 8219a <Shell+0xda>
   82186:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   8218a:	428a      	cmp	r2, r1
   8218c:	d005      	beq.n	8219a <Shell+0xda>
   8218e:	3301      	adds	r3, #1
   82190:	9310      	str	r3, [sp, #64]	; 0x40
   82192:	781a      	ldrb	r2, [r3, #0]
   82194:	b10a      	cbz	r2, 8219a <Shell+0xda>
   82196:	428a      	cmp	r2, r1
   82198:	d1f9      	bne.n	8218e <Shell+0xce>
	    return (uint32_t)*(char*)_pSep;
   8219a:	4690      	mov	r8, r2
   8219c:	e7d4      	b.n	82148 <Shell+0x88>
		while(len--)
   8219e:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   821a2:	f108 33ff 	add.w	r3, r8, #4294967295
   821a6:	9310      	str	r3, [sp, #64]	; 0x40
   821a8:	f1b8 0f00 	cmp.w	r8, #0
   821ac:	d0cc      	beq.n	82148 <Shell+0x88>
			Putc(hexDigits[*(char*)str>>4]);
   821ae:	4e75      	ldr	r6, [pc, #468]	; (82384 <Shell+0x2c4>)
   821b0:	2566      	movs	r5, #102	; 0x66
   821b2:	4c6f      	ldr	r4, [pc, #444]	; (82370 <Shell+0x2b0>)
   821b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821b6:	781b      	ldrb	r3, [r3, #0]
   821b8:	091b      	lsrs	r3, r3, #4
   821ba:	5cf1      	ldrb	r1, [r6, r3]
   821bc:	4628      	mov	r0, r5
   821be:	47a0      	blx	r4
			Putc(hexDigits[*(char*)str&0x0F]);
   821c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821c2:	781b      	ldrb	r3, [r3, #0]
   821c4:	f003 030f 	and.w	r3, r3, #15
   821c8:	5cf1      	ldrb	r1, [r6, r3]
   821ca:	4628      	mov	r0, r5
   821cc:	47a0      	blx	r4
			Putc(' ');
   821ce:	2120      	movs	r1, #32
   821d0:	4628      	mov	r0, r5
   821d2:	47a0      	blx	r4
			str++;
   821d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821d6:	3301      	adds	r3, #1
   821d8:	930f      	str	r3, [sp, #60]	; 0x3c
		while(len--)
   821da:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   821de:	f108 33ff 	add.w	r3, r8, #4294967295
   821e2:	9310      	str	r3, [sp, #64]	; 0x40
   821e4:	f1b8 0f00 	cmp.w	r8, #0
   821e8:	d1e4      	bne.n	821b4 <Shell+0xf4>
   821ea:	e7ad      	b.n	82148 <Shell+0x88>
		if((k%2==0)^(!HEART_LED_ACTIVE_LEVEL)) gpio_set_pin_high(HEART_LED);
   821ec:	f013 0f01 	tst.w	r3, #1
   821f0:	d0c2      	beq.n	82178 <Shell+0xb8>
   821f2:	2034      	movs	r0, #52	; 0x34
   821f4:	4b64      	ldr	r3, [pc, #400]	; (82388 <Shell+0x2c8>)
   821f6:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEART_BEAT,k,heartBeatRhythm[k]);
   821f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821fa:	4a61      	ldr	r2, [pc, #388]	; (82380 <Shell+0x2c0>)
   821fc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   82200:	9200      	str	r2, [sp, #0]
   82202:	2201      	movs	r2, #1
   82204:	495b      	ldr	r1, [pc, #364]	; (82374 <Shell+0x2b4>)
   82206:	2066      	movs	r0, #102	; 0x66
   82208:	4c5b      	ldr	r4, [pc, #364]	; (82378 <Shell+0x2b8>)
   8220a:	47a0      	blx	r4
	return 0;
   8220c:	f04f 0800 	mov.w	r8, #0
		break;
   82210:	e79a      	b.n	82148 <Shell+0x88>
		rtc_get_time(RTC,&_hour,&_minute,&_second);
   82212:	ab05      	add	r3, sp, #20
   82214:	aa0f      	add	r2, sp, #60	; 0x3c
   82216:	a90e      	add	r1, sp, #56	; 0x38
   82218:	485c      	ldr	r0, [pc, #368]	; (8238c <Shell+0x2cc>)
   8221a:	4c5d      	ldr	r4, [pc, #372]	; (82390 <Shell+0x2d0>)
   8221c:	47a0      	blx	r4
		if(mIsBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED))
   8221e:	4b4f      	ldr	r3, [pc, #316]	; (8235c <Shell+0x29c>)
   82220:	881b      	ldrh	r3, [r3, #0]
   82222:	f013 0f04 	tst.w	r3, #4
   82226:	d030      	beq.n	8228a <Shell+0x1ca>
		if(IsLcdOn())
   82228:	2068      	movs	r0, #104	; 0x68
   8222a:	4b4d      	ldr	r3, [pc, #308]	; (82360 <Shell+0x2a0>)
   8222c:	4798      	blx	r3
   8222e:	4680      	mov	r8, r0
   82230:	2800      	cmp	r0, #0
   82232:	d089      	beq.n	82148 <Shell+0x88>
			sprintf(shellTmpBuf,"%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   82234:	ad0e      	add	r5, sp, #56	; 0x38
   82236:	f855 2b04 	ldr.w	r2, [r5], #4
   8223a:	4c56      	ldr	r4, [pc, #344]	; (82394 <Shell+0x2d4>)
   8223c:	ae06      	add	r6, sp, #24
   8223e:	f856 3d04 	ldr.w	r3, [r6, #-4]!
   82242:	9300      	str	r3, [sp, #0]
   82244:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82246:	4954      	ldr	r1, [pc, #336]	; (82398 <Shell+0x2d8>)
   82248:	4620      	mov	r0, r4
   8224a:	f8df 815c 	ldr.w	r8, [pc, #348]	; 823a8 <Shell+0x2e8>
   8224e:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,1,6);
   82250:	2306      	movs	r3, #6
   82252:	2201      	movs	r2, #1
   82254:	4621      	mov	r1, r4
   82256:	2067      	movs	r0, #103	; 0x67
   82258:	4f41      	ldr	r7, [pc, #260]	; (82360 <Shell+0x2a0>)
   8225a:	47b8      	blx	r7
			rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   8225c:	ab04      	add	r3, sp, #16
   8225e:	9300      	str	r3, [sp, #0]
   82260:	4633      	mov	r3, r6
   82262:	462a      	mov	r2, r5
   82264:	a90e      	add	r1, sp, #56	; 0x38
   82266:	4849      	ldr	r0, [pc, #292]	; (8238c <Shell+0x2cc>)
   82268:	4d4c      	ldr	r5, [pc, #304]	; (8239c <Shell+0x2dc>)
   8226a:	47a8      	blx	r5
			sprintf(shellTmpBuf,"%02d/%02d/%04d",(int)_date,(int)_month,(int)_year);
   8226c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8226e:	9300      	str	r3, [sp, #0]
   82270:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82272:	9a05      	ldr	r2, [sp, #20]
   82274:	494a      	ldr	r1, [pc, #296]	; (823a0 <Shell+0x2e0>)
   82276:	4620      	mov	r0, r4
   82278:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,0,5);
   8227a:	2305      	movs	r3, #5
   8227c:	2200      	movs	r2, #0
   8227e:	4621      	mov	r1, r4
   82280:	2067      	movs	r0, #103	; 0x67
   82282:	47b8      	blx	r7
	return 0;
   82284:	f04f 0800 	mov.w	r8, #0
   82288:	e75e      	b.n	82148 <Shell+0x88>
			sprintf(shellTmpBuf,"\r%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   8228a:	4c42      	ldr	r4, [pc, #264]	; (82394 <Shell+0x2d4>)
   8228c:	9b05      	ldr	r3, [sp, #20]
   8228e:	9300      	str	r3, [sp, #0]
   82290:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82292:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82294:	4943      	ldr	r1, [pc, #268]	; (823a4 <Shell+0x2e4>)
   82296:	4620      	mov	r0, r4
   82298:	4d43      	ldr	r5, [pc, #268]	; (823a8 <Shell+0x2e8>)
   8229a:	47a8      	blx	r5
			Putstr(shellTmpBuf);
   8229c:	4621      	mov	r1, r4
   8229e:	2067      	movs	r0, #103	; 0x67
   822a0:	4b33      	ldr	r3, [pc, #204]	; (82370 <Shell+0x2b0>)
   822a2:	4798      	blx	r3
   822a4:	e7c0      	b.n	82228 <Shell+0x168>
		switch(shell.state)
   822a6:	4b2d      	ldr	r3, [pc, #180]	; (8235c <Shell+0x29c>)
   822a8:	7f1b      	ldrb	r3, [r3, #28]
   822aa:	2b06      	cmp	r3, #6
   822ac:	f200 8285 	bhi.w	827ba <Shell+0x6fa>
   822b0:	e8df f013 	tbh	[pc, r3, lsl #1]
   822b4:	00840007 	.word	0x00840007
   822b8:	009b0087 	.word	0x009b0087
   822bc:	026f026c 	.word	0x026f026c
   822c0:	01bc      	.short	0x01bc
			switch(_kbhitchar)
   822c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   822c4:	b2d3      	uxtb	r3, r2
   822c6:	3b08      	subs	r3, #8
   822c8:	2b18      	cmp	r3, #24
   822ca:	d82d      	bhi.n	82328 <Shell+0x268>
   822cc:	e8df f013 	tbh	[pc, r3, lsl #1]
   822d0:	05790579 	.word	0x05790579
   822d4:	002c0579 	.word	0x002c0579
   822d8:	0579002c 	.word	0x0579002c
   822dc:	002c002c 	.word	0x002c002c
   822e0:	002c002c 	.word	0x002c002c
   822e4:	002c002c 	.word	0x002c002c
   822e8:	002c002c 	.word	0x002c002c
   822ec:	002c002c 	.word	0x002c002c
   822f0:	002c002c 	.word	0x002c002c
   822f4:	0019002c 	.word	0x0019002c
   822f8:	002c002c 	.word	0x002c002c
   822fc:	002c002c 	.word	0x002c002c
   82300:	0579      	.short	0x0579
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   82302:	4c16      	ldr	r4, [pc, #88]	; (8235c <Shell+0x29c>)
   82304:	2314      	movs	r3, #20
   82306:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   82308:	4b28      	ldr	r3, [pc, #160]	; (823ac <Shell+0x2ec>)
   8230a:	60a3      	str	r3, [r4, #8]
   8230c:	201b      	movs	r0, #27
   8230e:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   82312:	2501      	movs	r5, #1
   82314:	81e5      	strh	r5, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   82316:	f64f 71ff 	movw	r1, #65535	; 0xffff
   8231a:	4b25      	ldr	r3, [pc, #148]	; (823b0 <Shell+0x2f0>)
   8231c:	4798      	blx	r3
   8231e:	8220      	strh	r0, [r4, #16]
				shell.state=ESCAPE;
   82320:	7725      	strb	r5, [r4, #28]
	return 0;
   82322:	f04f 0800 	mov.w	r8, #0
				break;
   82326:	e70f      	b.n	82148 <Shell+0x88>
				EnterEditMode();
   82328:	4c0c      	ldr	r4, [pc, #48]	; (8235c <Shell+0x29c>)
   8232a:	8823      	ldrh	r3, [r4, #0]
   8232c:	f043 0304 	orr.w	r3, r3, #4
   82330:	8023      	strh	r3, [r4, #0]
				shell.editTimer=SHELL_EDIT_TIMEOUT;
   82332:	2500      	movs	r5, #0
   82334:	6165      	str	r5, [r4, #20]
				*shell.pEdit++=_kbhitchar;
   82336:	4b1f      	ldr	r3, [pc, #124]	; (823b4 <Shell+0x2f4>)
   82338:	6063      	str	r3, [r4, #4]
			switch(_kbhitchar)
   8233a:	f803 2c01 	strb.w	r2, [r3, #-1]
				shell.nChar=1;
   8233e:	2301      	movs	r3, #1
   82340:	81a3      	strh	r3, [r4, #12]
				Putstr("\r\n>"); Putc(_kbhitchar);
   82342:	491d      	ldr	r1, [pc, #116]	; (823b8 <Shell+0x2f8>)
   82344:	2067      	movs	r0, #103	; 0x67
   82346:	4e0a      	ldr	r6, [pc, #40]	; (82370 <Shell+0x2b0>)
   82348:	47b0      	blx	r6
   8234a:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   8234e:	2066      	movs	r0, #102	; 0x66
   82350:	47b0      	blx	r6
				shell.state=EDITION;
   82352:	2303      	movs	r3, #3
   82354:	7723      	strb	r3, [r4, #28]
	return 0;
   82356:	46a8      	mov	r8, r5
				break;
   82358:	e6f6      	b.n	82148 <Shell+0x88>
   8235a:	bf00      	nop
   8235c:	200011c8 	.word	0x200011c8
   82360:	00081c81 	.word	0x00081c81
   82364:	00080859 	.word	0x00080859
   82368:	0008081f 	.word	0x0008081f
   8236c:	00081941 	.word	0x00081941
   82370:	00083255 	.word	0x00083255
   82374:	000820c1 	.word	0x000820c1
   82378:	00083491 	.word	0x00083491
   8237c:	0008038d 	.word	0x0008038d
   82380:	00088cd0 	.word	0x00088cd0
   82384:	00088ce4 	.word	0x00088ce4
   82388:	00080805 	.word	0x00080805
   8238c:	400e1260 	.word	0x400e1260
   82390:	00080c9d 	.word	0x00080c9d
   82394:	20001268 	.word	0x20001268
   82398:	00088c28 	.word	0x00088c28
   8239c:	00080d8d 	.word	0x00080d8d
   823a0:	00088c38 	.word	0x00088c38
   823a4:	00088c18 	.word	0x00088c18
   823a8:	00083de9 	.word	0x00083de9
   823ac:	200011e9 	.word	0x200011e9
   823b0:	0008174d 	.word	0x0008174d
   823b4:	200010c5 	.word	0x200010c5
   823b8:	00088c48 	.word	0x00088c48
				shell.state=ESCAPE_SEQ;
   823bc:	2202      	movs	r2, #2
   823be:	4b91      	ldr	r3, [pc, #580]	; (82604 <Shell+0x544>)
   823c0:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   823c2:	4c90      	ldr	r4, [pc, #576]	; (82604 <Shell+0x544>)
   823c4:	2314      	movs	r3, #20
   823c6:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++=_kbhitchar;
   823c8:	68a3      	ldr	r3, [r4, #8]
   823ca:	1c5a      	adds	r2, r3, #1
   823cc:	60a2      	str	r2, [r4, #8]
   823ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   823d0:	701a      	strb	r2, [r3, #0]
				shell.nEscChar++;
   823d2:	89e3      	ldrh	r3, [r4, #14]
   823d4:	3301      	adds	r3, #1
   823d6:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   823d8:	8a21      	ldrh	r1, [r4, #16]
   823da:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   823de:	4b8a      	ldr	r3, [pc, #552]	; (82608 <Shell+0x548>)
   823e0:	4798      	blx	r3
   823e2:	8220      	strh	r0, [r4, #16]
	return 0;
   823e4:	f04f 0800 	mov.w	r8, #0
			break;
   823e8:	e6ae      	b.n	82148 <Shell+0x88>
			shell.editTimer=SHELL_EDIT_TIMEOUT;
   823ea:	2200      	movs	r2, #0
   823ec:	4b85      	ldr	r3, [pc, #532]	; (82604 <Shell+0x544>)
   823ee:	615a      	str	r2, [r3, #20]
			switch(_kbhitchar)
   823f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   823f2:	b2d1      	uxtb	r1, r2
   823f4:	f1a1 0308 	sub.w	r3, r1, #8
   823f8:	2b13      	cmp	r3, #19
   823fa:	f200 8094 	bhi.w	82526 <Shell+0x466>
   823fe:	e8df f003 	tbb	[pc, r3]
   82402:	1e36      	.short	0x1e36
   82404:	74929274 	.word	0x74929274
   82408:	92929292 	.word	0x92929292
   8240c:	92929292 	.word	0x92929292
   82410:	92929292 	.word	0x92929292
   82414:	0a92      	.short	0x0a92
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   82416:	4c7b      	ldr	r4, [pc, #492]	; (82604 <Shell+0x544>)
   82418:	2314      	movs	r3, #20
   8241a:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   8241c:	4b7b      	ldr	r3, [pc, #492]	; (8260c <Shell+0x54c>)
   8241e:	60a3      	str	r3, [r4, #8]
   82420:	201b      	movs	r0, #27
   82422:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   82426:	2301      	movs	r3, #1
   82428:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   8242a:	f64f 71ff 	movw	r1, #65535	; 0xffff
   8242e:	4b76      	ldr	r3, [pc, #472]	; (82608 <Shell+0x548>)
   82430:	4798      	blx	r3
   82432:	8220      	strh	r0, [r4, #16]
				shell.state=ED_ESCAPE;
   82434:	2304      	movs	r3, #4
   82436:	7723      	strb	r3, [r4, #28]
	return 0;
   82438:	f04f 0800 	mov.w	r8, #0
				break;
   8243c:	e684      	b.n	82148 <Shell+0x88>
				const char ctrl_right_arrow[]="\e[1;5C";
   8243e:	4b74      	ldr	r3, [pc, #464]	; (82610 <Shell+0x550>)
   82440:	e893 0003 	ldmia.w	r3, {r0, r1}
   82444:	9002      	str	r0, [sp, #8]
   82446:	f8ad 100c 	strh.w	r1, [sp, #12]
   8244a:	0c09      	lsrs	r1, r1, #16
   8244c:	f88d 100e 	strb.w	r1, [sp, #14]
				memcpy(shellEscapeBuf,ctrl_right_arrow,6);
   82450:	4b70      	ldr	r3, [pc, #448]	; (82614 <Shell+0x554>)
   82452:	6018      	str	r0, [r3, #0]
   82454:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   82458:	809a      	strh	r2, [r3, #4]
				shell.nEscChar=6;
   8245a:	4b6a      	ldr	r3, [pc, #424]	; (82604 <Shell+0x544>)
   8245c:	2206      	movs	r2, #6
   8245e:	81da      	strh	r2, [r3, #14]
				shell.state=ED_ESCAPE_SEQ;
   82460:	2205      	movs	r2, #5
   82462:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=1;	//Ask a ESC SEQUENCE timeout : treat as a "ctrl+right_arrow" key
   82464:	2201      	movs	r2, #1
   82466:	619a      	str	r2, [r3, #24]
	return 0;
   82468:	f04f 0800 	mov.w	r8, #0
				break;
   8246c:	e66c      	b.n	82148 <Shell+0x88>
                if(shell.nChar)
   8246e:	4b65      	ldr	r3, [pc, #404]	; (82604 <Shell+0x544>)
   82470:	899a      	ldrh	r2, [r3, #12]
   82472:	2a00      	cmp	r2, #0
   82474:	f000 84a9 	beq.w	82dca <Shell+0xd0a>
	                pEnd = (uint32_t)shellEditBuf+shell.nChar;
   82478:	4c67      	ldr	r4, [pc, #412]	; (82618 <Shell+0x558>)
   8247a:	4422      	add	r2, r4
   8247c:	920e      	str	r2, [sp, #56]	; 0x38
	                pSrc = (uint32_t)shell.pEdit;
   8247e:	685b      	ldr	r3, [r3, #4]
   82480:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   82482:	429a      	cmp	r2, r3
   82484:	d908      	bls.n	82498 <Shell+0x3d8>
		                *(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   82486:	781a      	ldrb	r2, [r3, #0]
   82488:	f803 2c01 	strb.w	r2, [r3, #-1]
   8248c:	9b05      	ldr	r3, [sp, #20]
   8248e:	3301      	adds	r3, #1
   82490:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   82492:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82494:	429a      	cmp	r2, r3
   82496:	d8f6      	bhi.n	82486 <Shell+0x3c6>
	                *(char*)pSrc++=' ';
   82498:	2220      	movs	r2, #32
   8249a:	f803 2c01 	strb.w	r2, [r3, #-1]
	                Putstr("\e[D");
   8249e:	4d5f      	ldr	r5, [pc, #380]	; (8261c <Shell+0x55c>)
   824a0:	4629      	mov	r1, r5
   824a2:	2067      	movs	r0, #103	; 0x67
   824a4:	4e5e      	ldr	r6, [pc, #376]	; (82620 <Shell+0x560>)
   824a6:	47b0      	blx	r6
	                shell.pEdit--; shell.nChar--;
   824a8:	4a56      	ldr	r2, [pc, #344]	; (82604 <Shell+0x544>)
   824aa:	6851      	ldr	r1, [r2, #4]
   824ac:	3901      	subs	r1, #1
   824ae:	6051      	str	r1, [r2, #4]
   824b0:	8993      	ldrh	r3, [r2, #12]
   824b2:	3b01      	subs	r3, #1
   824b4:	b29b      	uxth	r3, r3
   824b6:	8193      	strh	r3, [r2, #12]
	                k=Putstrlen(shell.pEdit,shell.nChar-(shell.pEdit-shellEditBuf)+1);
   824b8:	1c62      	adds	r2, r4, #1
   824ba:	441a      	add	r2, r3
   824bc:	1a52      	subs	r2, r2, r1
   824be:	2068      	movs	r0, #104	; 0x68
   824c0:	47b0      	blx	r6
   824c2:	4680      	mov	r8, r0
	                while(k--) Putstr("\e[D");
   824c4:	1e43      	subs	r3, r0, #1
   824c6:	9305      	str	r3, [sp, #20]
   824c8:	2800      	cmp	r0, #0
   824ca:	f43f ae3d 	beq.w	82148 <Shell+0x88>
   824ce:	2667      	movs	r6, #103	; 0x67
   824d0:	4c53      	ldr	r4, [pc, #332]	; (82620 <Shell+0x560>)
   824d2:	4629      	mov	r1, r5
   824d4:	4630      	mov	r0, r6
   824d6:	47a0      	blx	r4
   824d8:	f8dd 8014 	ldr.w	r8, [sp, #20]
   824dc:	f108 33ff 	add.w	r3, r8, #4294967295
   824e0:	9305      	str	r3, [sp, #20]
   824e2:	f1b8 0f00 	cmp.w	r8, #0
   824e6:	d1f4      	bne.n	824d2 <Shell+0x412>
   824e8:	e62e      	b.n	82148 <Shell+0x88>
				if(shell.nChar==0)
   824ea:	4b46      	ldr	r3, [pc, #280]	; (82604 <Shell+0x544>)
   824ec:	899b      	ldrh	r3, [r3, #12]
   824ee:	b96b      	cbnz	r3, 8250c <Shell+0x44c>
					ExitEditMode();
   824f0:	4b44      	ldr	r3, [pc, #272]	; (82604 <Shell+0x544>)
   824f2:	881a      	ldrh	r2, [r3, #0]
   824f4:	f022 0204 	bic.w	r2, r2, #4
   824f8:	801a      	strh	r2, [r3, #0]
					shell.state=IDLE;
   824fa:	f04f 0800 	mov.w	r8, #0
   824fe:	f883 801c 	strb.w	r8, [r3, #28]
					Putc('\r');
   82502:	210d      	movs	r1, #13
   82504:	2066      	movs	r0, #102	; 0x66
   82506:	4b46      	ldr	r3, [pc, #280]	; (82620 <Shell+0x560>)
   82508:	4798      	blx	r3
   8250a:	e61d      	b.n	82148 <Shell+0x88>
					shell.state=EXECUTION;
   8250c:	2206      	movs	r2, #6
   8250e:	4b3d      	ldr	r3, [pc, #244]	; (82604 <Shell+0x544>)
   82510:	771a      	strb	r2, [r3, #28]
					PushTask(Shell,_SHELL_KBHIT,'\r',0);
   82512:	2400      	movs	r4, #0
   82514:	9400      	str	r4, [sp, #0]
   82516:	230d      	movs	r3, #13
   82518:	2202      	movs	r2, #2
   8251a:	4942      	ldr	r1, [pc, #264]	; (82624 <Shell+0x564>)
   8251c:	2066      	movs	r0, #102	; 0x66
   8251e:	4d42      	ldr	r5, [pc, #264]	; (82628 <Shell+0x568>)
   82520:	47a8      	blx	r5
	return 0;
   82522:	46a0      	mov	r8, r4
   82524:	e610      	b.n	82148 <Shell+0x88>
			switch(_kbhitchar)
   82526:	b2d2      	uxtb	r2, r2
				if(shell.nChar==0)
   82528:	4b36      	ldr	r3, [pc, #216]	; (82604 <Shell+0x544>)
   8252a:	899b      	ldrh	r3, [r3, #12]
   8252c:	b983      	cbnz	r3, 82550 <Shell+0x490>
					if(_kbhitchar!=0x20) //Excluding space char
   8252e:	2a20      	cmp	r2, #32
   82530:	f000 844f 	beq.w	82dd2 <Shell+0xd12>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   82534:	4c33      	ldr	r4, [pc, #204]	; (82604 <Shell+0x544>)
   82536:	6863      	ldr	r3, [r4, #4]
   82538:	1c58      	adds	r0, r3, #1
   8253a:	6060      	str	r0, [r4, #4]
   8253c:	701a      	strb	r2, [r3, #0]
   8253e:	2066      	movs	r0, #102	; 0x66
   82540:	4b37      	ldr	r3, [pc, #220]	; (82620 <Shell+0x560>)
   82542:	4798      	blx	r3
   82544:	89a3      	ldrh	r3, [r4, #12]
   82546:	3301      	adds	r3, #1
   82548:	81a3      	strh	r3, [r4, #12]
	return 0;
   8254a:	f04f 0800 	mov.w	r8, #0
   8254e:	e5fb      	b.n	82148 <Shell+0x88>
				else if(shell.nChar<(SHELL_EDITBUF_LEN))
   82550:	2bff      	cmp	r3, #255	; 0xff
   82552:	f200 8451 	bhi.w	82df8 <Shell+0xd38>
					if(mIsBitsClr(shell.status,ST_SHELL_INSERT_MODE))
   82556:	482b      	ldr	r0, [pc, #172]	; (82604 <Shell+0x544>)
   82558:	8800      	ldrh	r0, [r0, #0]
   8255a:	f010 0f01 	tst.w	r0, #1
   8255e:	d112      	bne.n	82586 <Shell+0x4c6>
						if(shell.pEdit==shellEditBuf+shell.nChar)	shell.nChar++;
   82560:	4828      	ldr	r0, [pc, #160]	; (82604 <Shell+0x544>)
   82562:	6840      	ldr	r0, [r0, #4]
   82564:	4c2c      	ldr	r4, [pc, #176]	; (82618 <Shell+0x558>)
   82566:	441c      	add	r4, r3
   82568:	42a0      	cmp	r0, r4
   8256a:	d102      	bne.n	82572 <Shell+0x4b2>
   8256c:	3301      	adds	r3, #1
   8256e:	4c25      	ldr	r4, [pc, #148]	; (82604 <Shell+0x544>)
   82570:	81a3      	strh	r3, [r4, #12]
						Putc((*shell.pEdit++=_kbhitchar));
   82572:	1c44      	adds	r4, r0, #1
   82574:	4b23      	ldr	r3, [pc, #140]	; (82604 <Shell+0x544>)
   82576:	605c      	str	r4, [r3, #4]
   82578:	7002      	strb	r2, [r0, #0]
   8257a:	2066      	movs	r0, #102	; 0x66
   8257c:	4b28      	ldr	r3, [pc, #160]	; (82620 <Shell+0x560>)
   8257e:	4798      	blx	r3
	return 0;
   82580:	f04f 0800 	mov.w	r8, #0
   82584:	e5e0      	b.n	82148 <Shell+0x88>
						if(shell.pEdit!=shellEditBuf+shell.nChar)
   82586:	4a1f      	ldr	r2, [pc, #124]	; (82604 <Shell+0x544>)
   82588:	6851      	ldr	r1, [r2, #4]
   8258a:	4a23      	ldr	r2, [pc, #140]	; (82618 <Shell+0x558>)
   8258c:	441a      	add	r2, r3
   8258e:	4291      	cmp	r1, r2
   82590:	d00f      	beq.n	825b2 <Shell+0x4f2>
							pDst=(uint32_t)shellEditBuf+shell.nChar;
   82592:	4a21      	ldr	r2, [pc, #132]	; (82618 <Shell+0x558>)
   82594:	4413      	add	r3, r2
   82596:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   82598:	1e5a      	subs	r2, r3, #1
   8259a:	4291      	cmp	r1, r2
   8259c:	d809      	bhi.n	825b2 <Shell+0x4f2>
   8259e:	4919      	ldr	r1, [pc, #100]	; (82604 <Shell+0x544>)
								*(char*)pDst=*(char*)(pDst-1); pDst--;
   825a0:	7812      	ldrb	r2, [r2, #0]
   825a2:	701a      	strb	r2, [r3, #0]
   825a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   825a6:	1e53      	subs	r3, r2, #1
   825a8:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   825aa:	3a02      	subs	r2, #2
   825ac:	6848      	ldr	r0, [r1, #4]
   825ae:	4290      	cmp	r0, r2
   825b0:	d9f6      	bls.n	825a0 <Shell+0x4e0>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   825b2:	4c14      	ldr	r4, [pc, #80]	; (82604 <Shell+0x544>)
   825b4:	6863      	ldr	r3, [r4, #4]
   825b6:	1c5a      	adds	r2, r3, #1
   825b8:	6062      	str	r2, [r4, #4]
   825ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
   825bc:	7019      	strb	r1, [r3, #0]
   825be:	b2c9      	uxtb	r1, r1
   825c0:	2066      	movs	r0, #102	; 0x66
   825c2:	4d17      	ldr	r5, [pc, #92]	; (82620 <Shell+0x560>)
   825c4:	47a8      	blx	r5
   825c6:	89a3      	ldrh	r3, [r4, #12]
   825c8:	3301      	adds	r3, #1
   825ca:	b29b      	uxth	r3, r3
   825cc:	81a3      	strh	r3, [r4, #12]
						k=Putstrlen(shell.pEdit,(shellEditBuf+shell.nChar-shell.pEdit));
   825ce:	6861      	ldr	r1, [r4, #4]
   825d0:	4a11      	ldr	r2, [pc, #68]	; (82618 <Shell+0x558>)
   825d2:	441a      	add	r2, r3
   825d4:	1a52      	subs	r2, r2, r1
   825d6:	2068      	movs	r0, #104	; 0x68
   825d8:	47a8      	blx	r5
   825da:	4680      	mov	r8, r0
						while(k--) Putstr("\e[D");
   825dc:	1e43      	subs	r3, r0, #1
   825de:	930e      	str	r3, [sp, #56]	; 0x38
   825e0:	2800      	cmp	r0, #0
   825e2:	f43f adb1 	beq.w	82148 <Shell+0x88>
   825e6:	4e0d      	ldr	r6, [pc, #52]	; (8261c <Shell+0x55c>)
   825e8:	2567      	movs	r5, #103	; 0x67
   825ea:	4c0d      	ldr	r4, [pc, #52]	; (82620 <Shell+0x560>)
   825ec:	4631      	mov	r1, r6
   825ee:	4628      	mov	r0, r5
   825f0:	47a0      	blx	r4
   825f2:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
   825f6:	f108 33ff 	add.w	r3, r8, #4294967295
   825fa:	930e      	str	r3, [sp, #56]	; 0x38
   825fc:	f1b8 0f00 	cmp.w	r8, #0
   82600:	d1f4      	bne.n	825ec <Shell+0x52c>
   82602:	e5a1      	b.n	82148 <Shell+0x88>
   82604:	200011c8 	.word	0x200011c8
   82608:	0008174d 	.word	0x0008174d
   8260c:	200011e9 	.word	0x200011e9
   82610:	00088cc8 	.word	0x00088cc8
   82614:	200011e8 	.word	0x200011e8
   82618:	200010c4 	.word	0x200010c4
   8261c:	00088c4c 	.word	0x00088c4c
   82620:	00083255 	.word	0x00083255
   82624:	000820c1 	.word	0x000820c1
   82628:	00083491 	.word	0x00083491
			k=shell.nChar-(shell.pEdit-shellEditBuf);
   8262c:	4a8f      	ldr	r2, [pc, #572]	; (8286c <Shell+0x7ac>)
   8262e:	8993      	ldrh	r3, [r2, #12]
   82630:	6852      	ldr	r2, [r2, #4]
   82632:	498f      	ldr	r1, [pc, #572]	; (82870 <Shell+0x7b0>)
   82634:	1a52      	subs	r2, r2, r1
   82636:	1a9b      	subs	r3, r3, r2
			while(k--) Putstr("\e[C");
   82638:	1e5a      	subs	r2, r3, #1
   8263a:	9205      	str	r2, [sp, #20]
   8263c:	b153      	cbz	r3, 82654 <Shell+0x594>
   8263e:	4e8d      	ldr	r6, [pc, #564]	; (82874 <Shell+0x7b4>)
   82640:	2567      	movs	r5, #103	; 0x67
   82642:	4c8d      	ldr	r4, [pc, #564]	; (82878 <Shell+0x7b8>)
   82644:	4631      	mov	r1, r6
   82646:	4628      	mov	r0, r5
   82648:	47a0      	blx	r4
   8264a:	9b05      	ldr	r3, [sp, #20]
   8264c:	1e5a      	subs	r2, r3, #1
   8264e:	9205      	str	r2, [sp, #20]
   82650:	2b00      	cmp	r3, #0
   82652:	d1f7      	bne.n	82644 <Shell+0x584>
			shell.pEdit=shellEditBuf+shell.nChar;
   82654:	4d85      	ldr	r5, [pc, #532]	; (8286c <Shell+0x7ac>)
   82656:	89aa      	ldrh	r2, [r5, #12]
   82658:	4c85      	ldr	r4, [pc, #532]	; (82870 <Shell+0x7b0>)
   8265a:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   8265c:	3301      	adds	r3, #1
   8265e:	606b      	str	r3, [r5, #4]
   82660:	2600      	movs	r6, #0
   82662:	5516      	strb	r6, [r2, r4]
			_CleanUp_cmd_Line();
   82664:	2007      	movs	r0, #7
   82666:	f7ff fd2b 	bl	820c0 <Shell>
			shell.pEdit=shellEditBuf+shell.nChar;
   8266a:	89aa      	ldrh	r2, [r5, #12]
   8266c:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   8266e:	3301      	adds	r3, #1
   82670:	606b      	str	r3, [r5, #4]
   82672:	5516      	strb	r6, [r2, r4]
			Putstr("\r\n/>");
   82674:	4981      	ldr	r1, [pc, #516]	; (8287c <Shell+0x7bc>)
   82676:	2067      	movs	r0, #103	; 0x67
   82678:	4d7f      	ldr	r5, [pc, #508]	; (82878 <Shell+0x7b8>)
   8267a:	47a8      	blx	r5
			Putstr(shellEditBuf);
   8267c:	4621      	mov	r1, r4
   8267e:	2067      	movs	r0, #103	; 0x67
   82680:	47a8      	blx	r5
			mstrtokReset();
   82682:	4b7f      	ldr	r3, [pc, #508]	; (82880 <Shell+0x7c0>)
   82684:	4798      	blx	r3
			pToken=mstrtok(shellEditBuf,(char*)" \r\n");
   82686:	497f      	ldr	r1, [pc, #508]	; (82884 <Shell+0x7c4>)
   82688:	4620      	mov	r0, r4
   8268a:	4b7f      	ldr	r3, [pc, #508]	; (82888 <Shell+0x7c8>)
   8268c:	4798      	blx	r3
   8268e:	4604      	mov	r4, r0
   82690:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   82692:	b968      	cbnz	r0, 826b0 <Shell+0x5f0>
			Putstr("\r\n");
   82694:	497d      	ldr	r1, [pc, #500]	; (8288c <Shell+0x7cc>)
   82696:	2067      	movs	r0, #103	; 0x67
   82698:	4b77      	ldr	r3, [pc, #476]	; (82878 <Shell+0x7b8>)
   8269a:	4798      	blx	r3
			shell.state=IDLE;
   8269c:	4b73      	ldr	r3, [pc, #460]	; (8286c <Shell+0x7ac>)
   8269e:	f04f 0800 	mov.w	r8, #0
   826a2:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   826a6:	881a      	ldrh	r2, [r3, #0]
   826a8:	f022 0204 	bic.w	r2, r2, #4
   826ac:	801a      	strh	r2, [r3, #0]
			break;
   826ae:	e54b      	b.n	82148 <Shell+0x88>
				shell.crc=CRC16MODBUSFRAME((unsigned char*)pToken,strlen((char*)pToken));
   826b0:	4b77      	ldr	r3, [pc, #476]	; (82890 <Shell+0x7d0>)
   826b2:	4798      	blx	r3
   826b4:	4601      	mov	r1, r0
   826b6:	4620      	mov	r0, r4
   826b8:	4b76      	ldr	r3, [pc, #472]	; (82894 <Shell+0x7d4>)
   826ba:	4798      	blx	r3
   826bc:	b281      	uxth	r1, r0
   826be:	4b6b      	ldr	r3, [pc, #428]	; (8286c <Shell+0x7ac>)
   826c0:	8219      	strh	r1, [r3, #16]
				k=0;
   826c2:	9605      	str	r6, [sp, #20]
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   826c4:	4b74      	ldr	r3, [pc, #464]	; (82898 <Shell+0x7d8>)
   826c6:	881b      	ldrh	r3, [r3, #0]
   826c8:	b1f3      	cbz	r3, 82708 <Shell+0x648>
   826ca:	4299      	cmp	r1, r3
   826cc:	d01e      	beq.n	8270c <Shell+0x64c>
   826ce:	2301      	movs	r3, #1
   826d0:	4a71      	ldr	r2, [pc, #452]	; (82898 <Shell+0x7d8>)
   826d2:	e000      	b.n	826d6 <Shell+0x616>
   826d4:	462b      	mov	r3, r5
   826d6:	f832 4033 	ldrh.w	r4, [r2, r3, lsl #3]
   826da:	b124      	cbz	r4, 826e6 <Shell+0x626>
   826dc:	1c5d      	adds	r5, r3, #1
   826de:	42a1      	cmp	r1, r4
   826e0:	d1f8      	bne.n	826d4 <Shell+0x614>
   826e2:	9305      	str	r3, [sp, #20]
   826e4:	e000      	b.n	826e8 <Shell+0x628>
   826e6:	9305      	str	r3, [sp, #20]
				if(commands[k].pCmdFunc)
   826e8:	4c6b      	ldr	r4, [pc, #428]	; (82898 <Shell+0x7d8>)
   826ea:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   826ee:	685d      	ldr	r5, [r3, #4]
   826f0:	b175      	cbz	r5, 82710 <Shell+0x650>
					commands[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   826f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   826f4:	4620      	mov	r0, r4
   826f6:	4b66      	ldr	r3, [pc, #408]	; (82890 <Shell+0x7d0>)
   826f8:	4798      	blx	r3
   826fa:	1c61      	adds	r1, r4, #1
   826fc:	4401      	add	r1, r0
   826fe:	485b      	ldr	r0, [pc, #364]	; (8286c <Shell+0x7ac>)
   82700:	47a8      	blx	r5
					mstrtokRestore();
   82702:	4b66      	ldr	r3, [pc, #408]	; (8289c <Shell+0x7dc>)
   82704:	4798      	blx	r3
   82706:	e7c5      	b.n	82694 <Shell+0x5d4>
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   82708:	2300      	movs	r3, #0
   8270a:	e7ed      	b.n	826e8 <Shell+0x628>
   8270c:	2300      	movs	r3, #0
   8270e:	e7eb      	b.n	826e8 <Shell+0x628>
					k=0;
   82710:	2300      	movs	r3, #0
   82712:	9305      	str	r3, [sp, #20]
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   82714:	4b62      	ldr	r3, [pc, #392]	; (828a0 <Shell+0x7e0>)
   82716:	881b      	ldrh	r3, [r3, #0]
   82718:	b313      	cbz	r3, 82760 <Shell+0x6a0>
   8271a:	4299      	cmp	r1, r3
   8271c:	d022      	beq.n	82764 <Shell+0x6a4>
   8271e:	2301      	movs	r3, #1
   82720:	4c5f      	ldr	r4, [pc, #380]	; (828a0 <Shell+0x7e0>)
   82722:	e000      	b.n	82726 <Shell+0x666>
   82724:	462b      	mov	r3, r5
   82726:	f834 2033 	ldrh.w	r2, [r4, r3, lsl #3]
   8272a:	b122      	cbz	r2, 82736 <Shell+0x676>
   8272c:	1c5d      	adds	r5, r3, #1
   8272e:	4291      	cmp	r1, r2
   82730:	d1f8      	bne.n	82724 <Shell+0x664>
   82732:	9305      	str	r3, [sp, #20]
   82734:	e000      	b.n	82738 <Shell+0x678>
   82736:	9305      	str	r3, [sp, #20]
                    if(cmdEntries[k].pCmdFunc)
   82738:	4959      	ldr	r1, [pc, #356]	; (828a0 <Shell+0x7e0>)
   8273a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   8273e:	685d      	ldr	r5, [r3, #4]
   82740:	b195      	cbz	r5, 82768 <Shell+0x6a8>
	                    cmdEntries[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   82742:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82744:	4620      	mov	r0, r4
   82746:	4b52      	ldr	r3, [pc, #328]	; (82890 <Shell+0x7d0>)
   82748:	4798      	blx	r3
   8274a:	1c61      	adds	r1, r4, #1
   8274c:	4401      	add	r1, r0
   8274e:	4847      	ldr	r0, [pc, #284]	; (8286c <Shell+0x7ac>)
   82750:	47a8      	blx	r5
						mstrtokRestore();
   82752:	4b52      	ldr	r3, [pc, #328]	; (8289c <Shell+0x7dc>)
   82754:	4798      	blx	r3
						Putstr("\r\n");
   82756:	494d      	ldr	r1, [pc, #308]	; (8288c <Shell+0x7cc>)
   82758:	2067      	movs	r0, #103	; 0x67
   8275a:	4b47      	ldr	r3, [pc, #284]	; (82878 <Shell+0x7b8>)
   8275c:	4798      	blx	r3
   8275e:	e799      	b.n	82694 <Shell+0x5d4>
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   82760:	2300      	movs	r3, #0
   82762:	e7e9      	b.n	82738 <Shell+0x678>
   82764:	2300      	movs	r3, #0
   82766:	e7e7      	b.n	82738 <Shell+0x678>
                    else if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   82768:	4b40      	ldr	r3, [pc, #256]	; (8286c <Shell+0x7ac>)
   8276a:	881b      	ldrh	r3, [r3, #0]
   8276c:	f013 0f02 	tst.w	r3, #2
   82770:	d090      	beq.n	82694 <Shell+0x5d4>
	                    sprintf(shellTmpBuf,"\tunknown cmd: %04X\r\n",shell.crc);
   82772:	4c4c      	ldr	r4, [pc, #304]	; (828a4 <Shell+0x7e4>)
   82774:	b282      	uxth	r2, r0
   82776:	494c      	ldr	r1, [pc, #304]	; (828a8 <Shell+0x7e8>)
   82778:	4620      	mov	r0, r4
   8277a:	4b4c      	ldr	r3, [pc, #304]	; (828ac <Shell+0x7ec>)
   8277c:	4798      	blx	r3
	                    Putstr(shellTmpBuf);
   8277e:	4621      	mov	r1, r4
   82780:	2067      	movs	r0, #103	; 0x67
   82782:	4b3d      	ldr	r3, [pc, #244]	; (82878 <Shell+0x7b8>)
   82784:	4798      	blx	r3
						mstrtokRestore();
   82786:	4b45      	ldr	r3, [pc, #276]	; (8289c <Shell+0x7dc>)
   82788:	4798      	blx	r3
   8278a:	e783      	b.n	82694 <Shell+0x5d4>
			shell.state=ED_ESCAPE_SEQ;
   8278c:	2205      	movs	r2, #5
   8278e:	4b37      	ldr	r3, [pc, #220]	; (8286c <Shell+0x7ac>)
   82790:	771a      	strb	r2, [r3, #28]
			shell.escapeTimer=SHELL_ESC_TIMEOUT;
   82792:	4c36      	ldr	r4, [pc, #216]	; (8286c <Shell+0x7ac>)
   82794:	2314      	movs	r3, #20
   82796:	61a3      	str	r3, [r4, #24]
			*shell.pEscbuf++=_kbhitchar;
   82798:	68a3      	ldr	r3, [r4, #8]
   8279a:	1c5a      	adds	r2, r3, #1
   8279c:	60a2      	str	r2, [r4, #8]
   8279e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   827a0:	701a      	strb	r2, [r3, #0]
			shell.nEscChar++;
   827a2:	89e3      	ldrh	r3, [r4, #14]
   827a4:	3301      	adds	r3, #1
   827a6:	81e3      	strh	r3, [r4, #14]
			shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   827a8:	8a21      	ldrh	r1, [r4, #16]
   827aa:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   827ae:	4b40      	ldr	r3, [pc, #256]	; (828b0 <Shell+0x7f0>)
   827b0:	4798      	blx	r3
   827b2:	8220      	strh	r0, [r4, #16]
	return 0;
   827b4:	f04f 0800 	mov.w	r8, #0
			break;
   827b8:	e4c6      	b.n	82148 <Shell+0x88>
			Putstr("\r\n\t***** case _SHELL_KBHIT: BAD case! ******\r\n");
   827ba:	493e      	ldr	r1, [pc, #248]	; (828b4 <Shell+0x7f4>)
   827bc:	2067      	movs	r0, #103	; 0x67
   827be:	4b2e      	ldr	r3, [pc, #184]	; (82878 <Shell+0x7b8>)
   827c0:	4798      	blx	r3
			shell.state=IDLE;
   827c2:	4b2a      	ldr	r3, [pc, #168]	; (8286c <Shell+0x7ac>)
   827c4:	f04f 0800 	mov.w	r8, #0
   827c8:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   827cc:	881a      	ldrh	r2, [r3, #0]
   827ce:	f022 0204 	bic.w	r2, r2, #4
   827d2:	801a      	strh	r2, [r3, #0]
			break;
   827d4:	e4b8      	b.n	82148 <Shell+0x88>
		if(shell.escapeTimer)
   827d6:	4b25      	ldr	r3, [pc, #148]	; (8286c <Shell+0x7ac>)
   827d8:	699b      	ldr	r3, [r3, #24]
   827da:	b1b3      	cbz	r3, 8280a <Shell+0x74a>
			if(--shell.escapeTimer==0)
   827dc:	f103 38ff 	add.w	r8, r3, #4294967295
   827e0:	4b22      	ldr	r3, [pc, #136]	; (8286c <Shell+0x7ac>)
   827e2:	f8c3 8018 	str.w	r8, [r3, #24]
   827e6:	f1b8 0f00 	cmp.w	r8, #0
   827ea:	d10e      	bne.n	8280a <Shell+0x74a>
				switch(shell.state)
   827ec:	7f19      	ldrb	r1, [r3, #28]
   827ee:	2905      	cmp	r1, #5
   827f0:	f200 825c 	bhi.w	82cac <Shell+0xbec>
   827f4:	e8df f011 	tbh	[pc, r1, lsl #1]
   827f8:	00060009 	.word	0x00060009
   827fc:	025a0016 	.word	0x025a0016
   82800:	0097008b 	.word	0x0097008b
					shell.state=IDLE;
   82804:	2200      	movs	r2, #0
   82806:	4b19      	ldr	r3, [pc, #100]	; (8286c <Shell+0x7ac>)
   82808:	771a      	strb	r2, [r3, #28]
        if(shell.editTimer)
   8280a:	4b18      	ldr	r3, [pc, #96]	; (8286c <Shell+0x7ac>)
   8280c:	f8d3 8014 	ldr.w	r8, [r3, #20]
   82810:	f1b8 0f00 	cmp.w	r8, #0
   82814:	f43f ac98 	beq.w	82148 <Shell+0x88>
	        if(--shell.editTimer==0)
   82818:	f108 32ff 	add.w	r2, r8, #4294967295
   8281c:	615a      	str	r2, [r3, #20]
	return 0;
   8281e:	f04f 0800 	mov.w	r8, #0
   82822:	e491      	b.n	82148 <Shell+0x88>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   82824:	4c11      	ldr	r4, [pc, #68]	; (8286c <Shell+0x7ac>)
   82826:	89e1      	ldrh	r1, [r4, #14]
   82828:	4823      	ldr	r0, [pc, #140]	; (828b8 <Shell+0x7f8>)
   8282a:	4b1a      	ldr	r3, [pc, #104]	; (82894 <Shell+0x7d4>)
   8282c:	4798      	blx	r3
   8282e:	b280      	uxth	r0, r0
   82830:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   82832:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   82836:	4298      	cmp	r0, r3
   82838:	d00c      	beq.n	82854 <Shell+0x794>
   8283a:	f24c 73fa 	movw	r3, #51194	; 0xc7fa
   8283e:	4298      	cmp	r0, r3
   82840:	d00c      	beq.n	8285c <Shell+0x79c>
						if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   82842:	4b0a      	ldr	r3, [pc, #40]	; (8286c <Shell+0x7ac>)
   82844:	881b      	ldrh	r3, [r3, #0]
   82846:	f013 0f02 	tst.w	r3, #2
   8284a:	d14c      	bne.n	828e6 <Shell+0x826>
						shell.state=IDLE;
   8284c:	2200      	movs	r2, #0
   8284e:	4b07      	ldr	r3, [pc, #28]	; (8286c <Shell+0x7ac>)
   82850:	771a      	strb	r2, [r3, #28]
						break;
   82852:	e7da      	b.n	8280a <Shell+0x74a>
						shell.state=IDLE;
   82854:	2200      	movs	r2, #0
   82856:	4b05      	ldr	r3, [pc, #20]	; (8286c <Shell+0x7ac>)
   82858:	771a      	strb	r2, [r3, #28]
						break;
   8285a:	e7d6      	b.n	8280a <Shell+0x74a>
						if(shell.nChar)
   8285c:	4b03      	ldr	r3, [pc, #12]	; (8286c <Shell+0x7ac>)
   8285e:	899b      	ldrh	r3, [r3, #12]
   82860:	bb63      	cbnz	r3, 828bc <Shell+0x7fc>
							shell.state=IDLE;
   82862:	2200      	movs	r2, #0
   82864:	4b01      	ldr	r3, [pc, #4]	; (8286c <Shell+0x7ac>)
   82866:	771a      	strb	r2, [r3, #28]
   82868:	e7cf      	b.n	8280a <Shell+0x74a>
   8286a:	bf00      	nop
   8286c:	200011c8 	.word	0x200011c8
   82870:	200010c4 	.word	0x200010c4
   82874:	00088c50 	.word	0x00088c50
   82878:	00083255 	.word	0x00083255
   8287c:	00088c54 	.word	0x00088c54
   82880:	000836d1 	.word	0x000836d1
   82884:	00088b44 	.word	0x00088b44
   82888:	000836fd 	.word	0x000836fd
   8288c:	00088ca0 	.word	0x00088ca0
   82890:	00083e35 	.word	0x00083e35
   82894:	00081719 	.word	0x00081719
   82898:	00088ae8 	.word	0x00088ae8
   8289c:	000836b9 	.word	0x000836b9
   828a0:	00088ff0 	.word	0x00088ff0
   828a4:	20001268 	.word	0x20001268
   828a8:	00088c5c 	.word	0x00088c5c
   828ac:	00083de9 	.word	0x00083de9
   828b0:	0008174d 	.word	0x0008174d
   828b4:	00088c74 	.word	0x00088c74
   828b8:	200011e8 	.word	0x200011e8
							EnterEditMode();
   828bc:	4c99      	ldr	r4, [pc, #612]	; (82b24 <Shell+0xa64>)
   828be:	8822      	ldrh	r2, [r4, #0]
   828c0:	f042 0204 	orr.w	r2, r2, #4
   828c4:	8022      	strh	r2, [r4, #0]
							shell.editTimer=SHELL_EDIT_TIMEOUT;
   828c6:	2200      	movs	r2, #0
   828c8:	6162      	str	r2, [r4, #20]
							shell.pEdit=shellEditBuf+shell.nChar;
   828ca:	4e97      	ldr	r6, [pc, #604]	; (82b28 <Shell+0xa68>)
   828cc:	4433      	add	r3, r6
   828ce:	6063      	str	r3, [r4, #4]
							Putstr("\r\n");
   828d0:	4996      	ldr	r1, [pc, #600]	; (82b2c <Shell+0xa6c>)
   828d2:	2067      	movs	r0, #103	; 0x67
   828d4:	4d96      	ldr	r5, [pc, #600]	; (82b30 <Shell+0xa70>)
   828d6:	47a8      	blx	r5
							Putstrlen(shellEditBuf,shell.nChar);
   828d8:	89a2      	ldrh	r2, [r4, #12]
   828da:	4631      	mov	r1, r6
   828dc:	2068      	movs	r0, #104	; 0x68
   828de:	47a8      	blx	r5
							shell.state=EDITION;
   828e0:	2303      	movs	r3, #3
   828e2:	7723      	strb	r3, [r4, #28]
   828e4:	e791      	b.n	8280a <Shell+0x74a>
							Putstr("\r\n   ESC_SEQ: ");
   828e6:	4993      	ldr	r1, [pc, #588]	; (82b34 <Shell+0xa74>)
   828e8:	2067      	movs	r0, #103	; 0x67
   828ea:	4c91      	ldr	r4, [pc, #580]	; (82b30 <Shell+0xa70>)
   828ec:	47a0      	blx	r4
							_PutAscii2Hex(shellEscapeBuf,shell.nEscChar);
   828ee:	4e8d      	ldr	r6, [pc, #564]	; (82b24 <Shell+0xa64>)
   828f0:	89f2      	ldrh	r2, [r6, #14]
   828f2:	4991      	ldr	r1, [pc, #580]	; (82b38 <Shell+0xa78>)
   828f4:	2005      	movs	r0, #5
   828f6:	f7ff fbe3 	bl	820c0 <Shell>
							sprintf(shellTmpBuf," <%04X>\r\n",shell.crc);
   828fa:	4d90      	ldr	r5, [pc, #576]	; (82b3c <Shell+0xa7c>)
   828fc:	8a32      	ldrh	r2, [r6, #16]
   828fe:	4990      	ldr	r1, [pc, #576]	; (82b40 <Shell+0xa80>)
   82900:	4628      	mov	r0, r5
   82902:	4b90      	ldr	r3, [pc, #576]	; (82b44 <Shell+0xa84>)
   82904:	4798      	blx	r3
							Putstr(shellTmpBuf);
   82906:	4629      	mov	r1, r5
   82908:	2067      	movs	r0, #103	; 0x67
   8290a:	47a0      	blx	r4
   8290c:	e79e      	b.n	8284c <Shell+0x78c>
					Putstr("\e[2K\r");
   8290e:	498e      	ldr	r1, [pc, #568]	; (82b48 <Shell+0xa88>)
   82910:	2067      	movs	r0, #103	; 0x67
   82912:	4b87      	ldr	r3, [pc, #540]	; (82b30 <Shell+0xa70>)
   82914:	4798      	blx	r3
					shell.state=IDLE;
   82916:	4b83      	ldr	r3, [pc, #524]	; (82b24 <Shell+0xa64>)
   82918:	2200      	movs	r2, #0
   8291a:	771a      	strb	r2, [r3, #28]
					ExitEditMode();
   8291c:	881a      	ldrh	r2, [r3, #0]
   8291e:	f022 0204 	bic.w	r2, r2, #4
   82922:	801a      	strh	r2, [r3, #0]
					break;
   82924:	e771      	b.n	8280a <Shell+0x74a>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   82926:	4c7f      	ldr	r4, [pc, #508]	; (82b24 <Shell+0xa64>)
   82928:	89e1      	ldrh	r1, [r4, #14]
   8292a:	4883      	ldr	r0, [pc, #524]	; (82b38 <Shell+0xa78>)
   8292c:	4b87      	ldr	r3, [pc, #540]	; (82b4c <Shell+0xa8c>)
   8292e:	4798      	blx	r3
   82930:	b280      	uxth	r0, r0
   82932:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   82934:	f24c 133a 	movw	r3, #49466	; 0xc13a
   82938:	4298      	cmp	r0, r3
   8293a:	f000 810f 	beq.w	82b5c <Shell+0xa9c>
   8293e:	d834      	bhi.n	829aa <Shell+0x8ea>
   82940:	f245 33e2 	movw	r3, #21474	; 0x53e2
   82944:	4298      	cmp	r0, r3
   82946:	f000 80e2 	beq.w	82b0e <Shell+0xa4e>
   8294a:	d81e      	bhi.n	8298a <Shell+0x8ca>
   8294c:	f240 53bb 	movw	r3, #1467	; 0x5bb
   82950:	4298      	cmp	r0, r3
   82952:	f000 811e 	beq.w	82b92 <Shell+0xad2>
   82956:	f240 637b 	movw	r3, #1659	; 0x67b
   8295a:	4298      	cmp	r0, r3
   8295c:	d11e      	bne.n	8299c <Shell+0x8dc>
						if(shell.pEdit<(shellEditBuf+shell.nChar))
   8295e:	4a71      	ldr	r2, [pc, #452]	; (82b24 <Shell+0xa64>)
   82960:	8993      	ldrh	r3, [r2, #12]
   82962:	4971      	ldr	r1, [pc, #452]	; (82b28 <Shell+0xa68>)
   82964:	440b      	add	r3, r1
   82966:	6852      	ldr	r2, [r2, #4]
   82968:	429a      	cmp	r2, r3
   8296a:	d207      	bcs.n	8297c <Shell+0x8bc>
							Putstr("\e[C");
   8296c:	4978      	ldr	r1, [pc, #480]	; (82b50 <Shell+0xa90>)
   8296e:	2067      	movs	r0, #103	; 0x67
   82970:	4b6f      	ldr	r3, [pc, #444]	; (82b30 <Shell+0xa70>)
   82972:	4798      	blx	r3
							shell.pEdit++;
   82974:	4a6b      	ldr	r2, [pc, #428]	; (82b24 <Shell+0xa64>)
   82976:	6853      	ldr	r3, [r2, #4]
   82978:	3301      	adds	r3, #1
   8297a:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   8297c:	4b69      	ldr	r3, [pc, #420]	; (82b24 <Shell+0xa64>)
   8297e:	2200      	movs	r2, #0
   82980:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82982:	2203      	movs	r2, #3
   82984:	771a      	strb	r2, [r3, #28]
						break;
   82986:	f7ff bbdf 	b.w	82148 <Shell+0x88>
					switch(shell.crc)
   8298a:	f646 730e 	movw	r3, #28430	; 0x6f0e
   8298e:	4298      	cmp	r0, r3
   82990:	d034      	beq.n	829fc <Shell+0x93c>
   82992:	f64a 534f 	movw	r3, #44367	; 0xad4f
   82996:	4298      	cmp	r0, r3
   82998:	f000 814a 	beq.w	82c30 <Shell+0xb70>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   8299c:	4b61      	ldr	r3, [pc, #388]	; (82b24 <Shell+0xa64>)
   8299e:	2200      	movs	r2, #0
   829a0:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   829a2:	2203      	movs	r2, #3
   829a4:	771a      	strb	r2, [r3, #28]
						break;
   829a6:	f7ff bbcf 	b.w	82148 <Shell+0x88>
					switch(shell.crc)
   829aa:	f24c 63ba 	movw	r3, #50874	; 0xc6ba
   829ae:	4298      	cmp	r0, r3
   829b0:	d064      	beq.n	82a7c <Shell+0x9bc>
   829b2:	d81b      	bhi.n	829ec <Shell+0x92c>
   829b4:	f24c 33e3 	movw	r3, #50147	; 0xc3e3
   829b8:	4298      	cmp	r0, r3
   829ba:	d072      	beq.n	82aa2 <Shell+0x9e2>
   829bc:	f24c 433a 	movw	r3, #50234	; 0xc43a
   829c0:	4298      	cmp	r0, r3
   829c2:	d1eb      	bne.n	8299c <Shell+0x8dc>
						if(shell.pEdit>shellEditBuf)
   829c4:	4b57      	ldr	r3, [pc, #348]	; (82b24 <Shell+0xa64>)
   829c6:	685a      	ldr	r2, [r3, #4]
   829c8:	4b57      	ldr	r3, [pc, #348]	; (82b28 <Shell+0xa68>)
   829ca:	429a      	cmp	r2, r3
   829cc:	d907      	bls.n	829de <Shell+0x91e>
							Putstr("\e[D");
   829ce:	4961      	ldr	r1, [pc, #388]	; (82b54 <Shell+0xa94>)
   829d0:	2067      	movs	r0, #103	; 0x67
   829d2:	4b57      	ldr	r3, [pc, #348]	; (82b30 <Shell+0xa70>)
   829d4:	4798      	blx	r3
							shell.pEdit--;
   829d6:	4a53      	ldr	r2, [pc, #332]	; (82b24 <Shell+0xa64>)
   829d8:	6853      	ldr	r3, [r2, #4]
   829da:	3b01      	subs	r3, #1
   829dc:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   829de:	4b51      	ldr	r3, [pc, #324]	; (82b24 <Shell+0xa64>)
   829e0:	2200      	movs	r2, #0
   829e2:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   829e4:	2203      	movs	r2, #3
   829e6:	771a      	strb	r2, [r3, #28]
						break;
   829e8:	f7ff bbae 	b.w	82148 <Shell+0x88>
					switch(shell.crc)
   829ec:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   829f0:	4298      	cmp	r0, r3
   829f2:	d04f      	beq.n	82a94 <Shell+0x9d4>
   829f4:	f64c 43ba 	movw	r3, #52410	; 0xccba
   829f8:	4298      	cmp	r0, r3
   829fa:	d1cf      	bne.n	8299c <Shell+0x8dc>
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   829fc:	4b49      	ldr	r3, [pc, #292]	; (82b24 <Shell+0xa64>)
   829fe:	899b      	ldrh	r3, [r3, #12]
   82a00:	b12b      	cbz	r3, 82a0e <Shell+0x94e>
   82a02:	4a49      	ldr	r2, [pc, #292]	; (82b28 <Shell+0xa68>)
   82a04:	4413      	add	r3, r2
   82a06:	4a47      	ldr	r2, [pc, #284]	; (82b24 <Shell+0xa64>)
   82a08:	6852      	ldr	r2, [r2, #4]
   82a0a:	429a      	cmp	r2, r3
   82a0c:	d015      	beq.n	82a3a <Shell+0x97a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82a0e:	4b45      	ldr	r3, [pc, #276]	; (82b24 <Shell+0xa64>)
   82a10:	685b      	ldr	r3, [r3, #4]
   82a12:	1e59      	subs	r1, r3, #1
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   82a14:	4a44      	ldr	r2, [pc, #272]	; (82b28 <Shell+0xa68>)
   82a16:	4291      	cmp	r1, r2
   82a18:	d317      	bcc.n	82a4a <Shell+0x98a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82a1a:	4c4f      	ldr	r4, [pc, #316]	; (82b58 <Shell+0xa98>)
   82a1c:	4622      	mov	r2, r4
   82a1e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82a22:	2006      	movs	r0, #6
   82a24:	f7ff fb4c 	bl	820c0 <Shell>
   82a28:	b178      	cbz	r0, 82a4a <Shell+0x98a>
   82a2a:	4b3e      	ldr	r3, [pc, #248]	; (82b24 <Shell+0xa64>)
   82a2c:	685b      	ldr	r3, [r3, #4]
   82a2e:	4622      	mov	r2, r4
   82a30:	7819      	ldrb	r1, [r3, #0]
   82a32:	2006      	movs	r0, #6
   82a34:	f7ff fb44 	bl	820c0 <Shell>
   82a38:	b938      	cbnz	r0, 82a4a <Shell+0x98a>
							shell.pEdit--; Putstr("\e[D");
   82a3a:	4a3a      	ldr	r2, [pc, #232]	; (82b24 <Shell+0xa64>)
   82a3c:	6853      	ldr	r3, [r2, #4]
   82a3e:	3b01      	subs	r3, #1
   82a40:	6053      	str	r3, [r2, #4]
   82a42:	4944      	ldr	r1, [pc, #272]	; (82b54 <Shell+0xa94>)
   82a44:	2067      	movs	r0, #103	; 0x67
   82a46:	4b3a      	ldr	r3, [pc, #232]	; (82b30 <Shell+0xa70>)
   82a48:	4798      	blx	r3
						if(_IsSeparator(*shell.pEdit,separators))
   82a4a:	4d43      	ldr	r5, [pc, #268]	; (82b58 <Shell+0xa98>)
   82a4c:	4b35      	ldr	r3, [pc, #212]	; (82b24 <Shell+0xa64>)
   82a4e:	685b      	ldr	r3, [r3, #4]
   82a50:	462a      	mov	r2, r5
   82a52:	7819      	ldrb	r1, [r3, #0]
   82a54:	2006      	movs	r0, #6
   82a56:	f7ff fb33 	bl	820c0 <Shell>
   82a5a:	2800      	cmp	r0, #0
   82a5c:	f040 80cb 	bne.w	82bf6 <Shell+0xb36>
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82a60:	4b30      	ldr	r3, [pc, #192]	; (82b24 <Shell+0xa64>)
   82a62:	685b      	ldr	r3, [r3, #4]
   82a64:	1e59      	subs	r1, r3, #1
   82a66:	4a30      	ldr	r2, [pc, #192]	; (82b28 <Shell+0xa68>)
   82a68:	4291      	cmp	r1, r2
   82a6a:	f080 80dd 	bcs.w	82c28 <Shell+0xb68>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82a6e:	4b2d      	ldr	r3, [pc, #180]	; (82b24 <Shell+0xa64>)
   82a70:	2200      	movs	r2, #0
   82a72:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82a74:	2203      	movs	r2, #3
   82a76:	771a      	strb	r2, [r3, #28]
						break;
   82a78:	f7ff bb66 	b.w	82148 <Shell+0x88>
						Putstr("\e[2K\r");
   82a7c:	4932      	ldr	r1, [pc, #200]	; (82b48 <Shell+0xa88>)
   82a7e:	2067      	movs	r0, #103	; 0x67
   82a80:	4b2b      	ldr	r3, [pc, #172]	; (82b30 <Shell+0xa70>)
   82a82:	4798      	blx	r3
						ExitEditMode();
   82a84:	4b27      	ldr	r3, [pc, #156]	; (82b24 <Shell+0xa64>)
   82a86:	881a      	ldrh	r2, [r3, #0]
   82a88:	f022 0204 	bic.w	r2, r2, #4
   82a8c:	801a      	strh	r2, [r3, #0]
						shell.state=IDLE;
   82a8e:	2200      	movs	r2, #0
   82a90:	771a      	strb	r2, [r3, #28]
						break;
   82a92:	e6ba      	b.n	8280a <Shell+0x74a>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82a94:	4b23      	ldr	r3, [pc, #140]	; (82b24 <Shell+0xa64>)
   82a96:	2200      	movs	r2, #0
   82a98:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82a9a:	2203      	movs	r2, #3
   82a9c:	771a      	strb	r2, [r3, #28]
						break;
   82a9e:	f7ff bb53 	b.w	82148 <Shell+0x88>
						pSrc=(uint32_t)shell.pEdit+1;
   82aa2:	4a20      	ldr	r2, [pc, #128]	; (82b24 <Shell+0xa64>)
   82aa4:	6853      	ldr	r3, [r2, #4]
   82aa6:	3301      	adds	r3, #1
   82aa8:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82aaa:	491f      	ldr	r1, [pc, #124]	; (82b28 <Shell+0xa68>)
   82aac:	8992      	ldrh	r2, [r2, #12]
   82aae:	440a      	add	r2, r1
   82ab0:	4293      	cmp	r3, r2
   82ab2:	d20a      	bcs.n	82aca <Shell+0xa0a>
   82ab4:	481b      	ldr	r0, [pc, #108]	; (82b24 <Shell+0xa64>)
							*(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   82ab6:	781a      	ldrb	r2, [r3, #0]
   82ab8:	f803 2c01 	strb.w	r2, [r3, #-1]
   82abc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82abe:	3301      	adds	r3, #1
   82ac0:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ac2:	8982      	ldrh	r2, [r0, #12]
   82ac4:	440a      	add	r2, r1
   82ac6:	429a      	cmp	r2, r3
   82ac8:	d8f5      	bhi.n	82ab6 <Shell+0x9f6>
						*(char*)(pSrc-1)=' ';
   82aca:	2220      	movs	r2, #32
   82acc:	f803 2c01 	strb.w	r2, [r3, #-1]
	                    k=Putstrlen(shell.pEdit,pSrc-(uint32_t)shell.pEdit);
   82ad0:	4b14      	ldr	r3, [pc, #80]	; (82b24 <Shell+0xa64>)
   82ad2:	6859      	ldr	r1, [r3, #4]
   82ad4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82ad6:	1a52      	subs	r2, r2, r1
   82ad8:	2068      	movs	r0, #104	; 0x68
   82ada:	4b15      	ldr	r3, [pc, #84]	; (82b30 <Shell+0xa70>)
   82adc:	4798      	blx	r3
		                while(k--) Putstr("\e[D");
   82ade:	1e43      	subs	r3, r0, #1
   82ae0:	930e      	str	r3, [sp, #56]	; 0x38
   82ae2:	b150      	cbz	r0, 82afa <Shell+0xa3a>
   82ae4:	4e1b      	ldr	r6, [pc, #108]	; (82b54 <Shell+0xa94>)
   82ae6:	2567      	movs	r5, #103	; 0x67
   82ae8:	4c11      	ldr	r4, [pc, #68]	; (82b30 <Shell+0xa70>)
   82aea:	4631      	mov	r1, r6
   82aec:	4628      	mov	r0, r5
   82aee:	47a0      	blx	r4
   82af0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82af2:	1e5a      	subs	r2, r3, #1
   82af4:	920e      	str	r2, [sp, #56]	; 0x38
   82af6:	2b00      	cmp	r3, #0
   82af8:	d1f7      	bne.n	82aea <Shell+0xa2a>
			            shell.nChar--;
   82afa:	4b0a      	ldr	r3, [pc, #40]	; (82b24 <Shell+0xa64>)
   82afc:	899a      	ldrh	r2, [r3, #12]
   82afe:	3a01      	subs	r2, #1
   82b00:	819a      	strh	r2, [r3, #12]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b02:	2200      	movs	r2, #0
   82b04:	615a      	str	r2, [r3, #20]
				        shell.state=EDITION;
   82b06:	2203      	movs	r2, #3
   82b08:	771a      	strb	r2, [r3, #28]
					    break;
   82b0a:	f7ff bb1d 	b.w	82148 <Shell+0x88>
						mBitsTgl(shell.status,ST_SHELL_INSERT_MODE);
   82b0e:	4b05      	ldr	r3, [pc, #20]	; (82b24 <Shell+0xa64>)
   82b10:	881a      	ldrh	r2, [r3, #0]
   82b12:	f082 0201 	eor.w	r2, r2, #1
   82b16:	801a      	strh	r2, [r3, #0]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b18:	2200      	movs	r2, #0
   82b1a:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b1c:	2203      	movs	r2, #3
   82b1e:	771a      	strb	r2, [r3, #28]
						break;
   82b20:	f7ff bb12 	b.w	82148 <Shell+0x88>
   82b24:	200011c8 	.word	0x200011c8
   82b28:	200010c4 	.word	0x200010c4
   82b2c:	00088ca0 	.word	0x00088ca0
   82b30:	00083255 	.word	0x00083255
   82b34:	00088ca4 	.word	0x00088ca4
   82b38:	200011e8 	.word	0x200011e8
   82b3c:	20001268 	.word	0x20001268
   82b40:	00088cb4 	.word	0x00088cb4
   82b44:	00083de9 	.word	0x00083de9
   82b48:	00088cc0 	.word	0x00088cc0
   82b4c:	00081719 	.word	0x00081719
   82b50:	00088c50 	.word	0x00088c50
   82b54:	00088c4c 	.word	0x00088c4c
   82b58:	00088cf8 	.word	0x00088cf8
						k=(shell.pEdit-shellEditBuf);
   82b5c:	4b9f      	ldr	r3, [pc, #636]	; (82ddc <Shell+0xd1c>)
   82b5e:	685b      	ldr	r3, [r3, #4]
   82b60:	4a9f      	ldr	r2, [pc, #636]	; (82de0 <Shell+0xd20>)
   82b62:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[D");
   82b64:	1e5a      	subs	r2, r3, #1
   82b66:	920e      	str	r2, [sp, #56]	; 0x38
   82b68:	b153      	cbz	r3, 82b80 <Shell+0xac0>
   82b6a:	4e9e      	ldr	r6, [pc, #632]	; (82de4 <Shell+0xd24>)
   82b6c:	2567      	movs	r5, #103	; 0x67
   82b6e:	4c9e      	ldr	r4, [pc, #632]	; (82de8 <Shell+0xd28>)
   82b70:	4631      	mov	r1, r6
   82b72:	4628      	mov	r0, r5
   82b74:	47a0      	blx	r4
   82b76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b78:	1e5a      	subs	r2, r3, #1
   82b7a:	920e      	str	r2, [sp, #56]	; 0x38
   82b7c:	2b00      	cmp	r3, #0
   82b7e:	d1f7      	bne.n	82b70 <Shell+0xab0>
						shell.pEdit=shellEditBuf;
   82b80:	4b96      	ldr	r3, [pc, #600]	; (82ddc <Shell+0xd1c>)
   82b82:	4a97      	ldr	r2, [pc, #604]	; (82de0 <Shell+0xd20>)
   82b84:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b86:	2200      	movs	r2, #0
   82b88:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b8a:	2203      	movs	r2, #3
   82b8c:	771a      	strb	r2, [r3, #28]
						break;
   82b8e:	f7ff badb 	b.w	82148 <Shell+0x88>
						k=((shellEditBuf+shell.nChar)-shell.pEdit);
   82b92:	4a92      	ldr	r2, [pc, #584]	; (82ddc <Shell+0xd1c>)
   82b94:	8993      	ldrh	r3, [r2, #12]
   82b96:	4992      	ldr	r1, [pc, #584]	; (82de0 <Shell+0xd20>)
   82b98:	440b      	add	r3, r1
   82b9a:	6852      	ldr	r2, [r2, #4]
   82b9c:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[C");
   82b9e:	1e5a      	subs	r2, r3, #1
   82ba0:	920e      	str	r2, [sp, #56]	; 0x38
   82ba2:	b153      	cbz	r3, 82bba <Shell+0xafa>
   82ba4:	4e91      	ldr	r6, [pc, #580]	; (82dec <Shell+0xd2c>)
   82ba6:	2567      	movs	r5, #103	; 0x67
   82ba8:	4c8f      	ldr	r4, [pc, #572]	; (82de8 <Shell+0xd28>)
   82baa:	4631      	mov	r1, r6
   82bac:	4628      	mov	r0, r5
   82bae:	47a0      	blx	r4
   82bb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82bb2:	1e5a      	subs	r2, r3, #1
   82bb4:	920e      	str	r2, [sp, #56]	; 0x38
   82bb6:	2b00      	cmp	r3, #0
   82bb8:	d1f7      	bne.n	82baa <Shell+0xaea>
						shell.pEdit=shellEditBuf+shell.nChar;
   82bba:	4b88      	ldr	r3, [pc, #544]	; (82ddc <Shell+0xd1c>)
   82bbc:	899a      	ldrh	r2, [r3, #12]
   82bbe:	4988      	ldr	r1, [pc, #544]	; (82de0 <Shell+0xd20>)
   82bc0:	440a      	add	r2, r1
   82bc2:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82bc4:	2200      	movs	r2, #0
   82bc6:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82bc8:	2203      	movs	r2, #3
   82bca:	771a      	strb	r2, [r3, #28]
						break;
   82bcc:	f7ff babc 	b.w	82148 <Shell+0x88>
								shell.pEdit--;
   82bd0:	3b01      	subs	r3, #1
   82bd2:	6063      	str	r3, [r4, #4]
								Putstr("\e[D");
   82bd4:	4631      	mov	r1, r6
   82bd6:	2067      	movs	r0, #103	; 0x67
   82bd8:	4b83      	ldr	r3, [pc, #524]	; (82de8 <Shell+0xd28>)
   82bda:	4798      	blx	r3
							while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit>shellEditBuf))
   82bdc:	6863      	ldr	r3, [r4, #4]
   82bde:	462a      	mov	r2, r5
   82be0:	7819      	ldrb	r1, [r3, #0]
   82be2:	2006      	movs	r0, #6
   82be4:	f7ff fa6c 	bl	820c0 <Shell>
   82be8:	2800      	cmp	r0, #0
   82bea:	f43f af39 	beq.w	82a60 <Shell+0x9a0>
   82bee:	6863      	ldr	r3, [r4, #4]
   82bf0:	42bb      	cmp	r3, r7
   82bf2:	d8ed      	bhi.n	82bd0 <Shell+0xb10>
   82bf4:	e734      	b.n	82a60 <Shell+0x9a0>
   82bf6:	4c79      	ldr	r4, [pc, #484]	; (82ddc <Shell+0xd1c>)
   82bf8:	4f79      	ldr	r7, [pc, #484]	; (82de0 <Shell+0xd20>)
								Putstr("\e[D");
   82bfa:	4e7a      	ldr	r6, [pc, #488]	; (82de4 <Shell+0xd24>)
   82bfc:	e7ee      	b.n	82bdc <Shell+0xb1c>
							shell.pEdit--;
   82bfe:	6863      	ldr	r3, [r4, #4]
   82c00:	3b01      	subs	r3, #1
   82c02:	6063      	str	r3, [r4, #4]
							Putstr("\e[D");
   82c04:	4639      	mov	r1, r7
   82c06:	2067      	movs	r0, #103	; 0x67
   82c08:	47b0      	blx	r6
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82c0a:	6863      	ldr	r3, [r4, #4]
   82c0c:	1e59      	subs	r1, r3, #1
   82c0e:	4a74      	ldr	r2, [pc, #464]	; (82de0 <Shell+0xd20>)
   82c10:	4291      	cmp	r1, r2
   82c12:	f4ff af2c 	bcc.w	82a6e <Shell+0x9ae>
   82c16:	462a      	mov	r2, r5
   82c18:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82c1c:	2006      	movs	r0, #6
   82c1e:	f7ff fa4f 	bl	820c0 <Shell>
   82c22:	2800      	cmp	r0, #0
   82c24:	d0eb      	beq.n	82bfe <Shell+0xb3e>
   82c26:	e722      	b.n	82a6e <Shell+0x9ae>
							shell.pEdit--;
   82c28:	4c6c      	ldr	r4, [pc, #432]	; (82ddc <Shell+0xd1c>)
							Putstr("\e[D");
   82c2a:	4f6e      	ldr	r7, [pc, #440]	; (82de4 <Shell+0xd24>)
   82c2c:	4e6e      	ldr	r6, [pc, #440]	; (82de8 <Shell+0xd28>)
   82c2e:	e7f2      	b.n	82c16 <Shell+0xb56>
						if(!_IsSeparator(*shell.pEdit,separators))
   82c30:	4d6f      	ldr	r5, [pc, #444]	; (82df0 <Shell+0xd30>)
   82c32:	4b6a      	ldr	r3, [pc, #424]	; (82ddc <Shell+0xd1c>)
   82c34:	685b      	ldr	r3, [r3, #4]
   82c36:	462a      	mov	r2, r5
   82c38:	7819      	ldrb	r1, [r3, #0]
   82c3a:	2006      	movs	r0, #6
   82c3c:	f7ff fa40 	bl	820c0 <Shell>
   82c40:	b1b8      	cbz	r0, 82c72 <Shell+0xbb2>
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c42:	4c66      	ldr	r4, [pc, #408]	; (82ddc <Shell+0xd1c>)
   82c44:	4f66      	ldr	r7, [pc, #408]	; (82de0 <Shell+0xd20>)
							Putstr("\e[C");
   82c46:	4e69      	ldr	r6, [pc, #420]	; (82dec <Shell+0xd2c>)
   82c48:	e01d      	b.n	82c86 <Shell+0xbc6>
								shell.pEdit++;
   82c4a:	3301      	adds	r3, #1
   82c4c:	6063      	str	r3, [r4, #4]
								Putstr("\e[C");
   82c4e:	4631      	mov	r1, r6
   82c50:	2067      	movs	r0, #103	; 0x67
   82c52:	4b65      	ldr	r3, [pc, #404]	; (82de8 <Shell+0xd28>)
   82c54:	4798      	blx	r3
							while((!_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c56:	6863      	ldr	r3, [r4, #4]
   82c58:	462a      	mov	r2, r5
   82c5a:	7819      	ldrb	r1, [r3, #0]
   82c5c:	2006      	movs	r0, #6
   82c5e:	f7ff fa2f 	bl	820c0 <Shell>
   82c62:	2800      	cmp	r0, #0
   82c64:	d1ed      	bne.n	82c42 <Shell+0xb82>
   82c66:	6863      	ldr	r3, [r4, #4]
   82c68:	89a2      	ldrh	r2, [r4, #12]
   82c6a:	443a      	add	r2, r7
   82c6c:	4293      	cmp	r3, r2
   82c6e:	d3ec      	bcc.n	82c4a <Shell+0xb8a>
   82c70:	e7e7      	b.n	82c42 <Shell+0xb82>
   82c72:	4c5a      	ldr	r4, [pc, #360]	; (82ddc <Shell+0xd1c>)
   82c74:	4f5a      	ldr	r7, [pc, #360]	; (82de0 <Shell+0xd20>)
								Putstr("\e[C");
   82c76:	4e5d      	ldr	r6, [pc, #372]	; (82dec <Shell+0xd2c>)
   82c78:	e7ed      	b.n	82c56 <Shell+0xb96>
							shell.pEdit++;
   82c7a:	3301      	adds	r3, #1
   82c7c:	6063      	str	r3, [r4, #4]
							Putstr("\e[C");
   82c7e:	4631      	mov	r1, r6
   82c80:	2067      	movs	r0, #103	; 0x67
   82c82:	4b59      	ldr	r3, [pc, #356]	; (82de8 <Shell+0xd28>)
   82c84:	4798      	blx	r3
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c86:	6863      	ldr	r3, [r4, #4]
   82c88:	462a      	mov	r2, r5
   82c8a:	7819      	ldrb	r1, [r3, #0]
   82c8c:	2006      	movs	r0, #6
   82c8e:	f7ff fa17 	bl	820c0 <Shell>
   82c92:	b120      	cbz	r0, 82c9e <Shell+0xbde>
   82c94:	6863      	ldr	r3, [r4, #4]
   82c96:	89a2      	ldrh	r2, [r4, #12]
   82c98:	443a      	add	r2, r7
   82c9a:	4293      	cmp	r3, r2
   82c9c:	d3ed      	bcc.n	82c7a <Shell+0xbba>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82c9e:	4b4f      	ldr	r3, [pc, #316]	; (82ddc <Shell+0xd1c>)
   82ca0:	2200      	movs	r2, #0
   82ca2:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82ca4:	2203      	movs	r2, #3
   82ca6:	771a      	strb	r2, [r3, #28]
						break;
   82ca8:	f7ff ba4e 	b.w	82148 <Shell+0x88>
					Error(ERROR_SHELL_TIMER_ESC_BAD_SATE,shell.state);
   82cac:	201f      	movs	r0, #31
   82cae:	4b51      	ldr	r3, [pc, #324]	; (82df4 <Shell+0xd34>)
   82cb0:	4798      	blx	r3
   82cb2:	e5aa      	b.n	8280a <Shell+0x74a>
		pSrc=(uint32_t)shellEditBuf;
   82cb4:	4d4a      	ldr	r5, [pc, #296]	; (82de0 <Shell+0xd20>)
   82cb6:	950e      	str	r5, [sp, #56]	; 0x38
		while(_IsSeparator(*(char*)pSrc,separators)) pSrc++;
   82cb8:	4e4d      	ldr	r6, [pc, #308]	; (82df0 <Shell+0xd30>)
   82cba:	2406      	movs	r4, #6
   82cbc:	4632      	mov	r2, r6
   82cbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cc0:	7819      	ldrb	r1, [r3, #0]
   82cc2:	4620      	mov	r0, r4
   82cc4:	f7ff f9fc 	bl	820c0 <Shell>
   82cc8:	4680      	mov	r8, r0
   82cca:	b118      	cbz	r0, 82cd4 <Shell+0xc14>
   82ccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cce:	3301      	adds	r3, #1
   82cd0:	930e      	str	r3, [sp, #56]	; 0x38
   82cd2:	e7f3      	b.n	82cbc <Shell+0xbfc>
		k=pSrc-(uint32_t)shellEditBuf;
   82cd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cd6:	1b5a      	subs	r2, r3, r5
   82cd8:	9205      	str	r2, [sp, #20]
		if(k)
   82cda:	b19a      	cbz	r2, 82d04 <Shell+0xc44>
			shell.pEdit=shellEditBuf;
   82cdc:	4a3f      	ldr	r2, [pc, #252]	; (82ddc <Shell+0xd1c>)
   82cde:	4940      	ldr	r1, [pc, #256]	; (82de0 <Shell+0xd20>)
   82ce0:	6051      	str	r1, [r2, #4]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ce2:	8992      	ldrh	r2, [r2, #12]
   82ce4:	442a      	add	r2, r5
   82ce6:	4293      	cmp	r3, r2
   82ce8:	d20c      	bcs.n	82d04 <Shell+0xc44>
				*shell.pEdit++=*(char*)pSrc++;
   82cea:	493c      	ldr	r1, [pc, #240]	; (82ddc <Shell+0xd1c>)
   82cec:	684a      	ldr	r2, [r1, #4]
   82cee:	1c50      	adds	r0, r2, #1
   82cf0:	6048      	str	r0, [r1, #4]
   82cf2:	1c58      	adds	r0, r3, #1
   82cf4:	900e      	str	r0, [sp, #56]	; 0x38
   82cf6:	781b      	ldrb	r3, [r3, #0]
   82cf8:	7013      	strb	r3, [r2, #0]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cfc:	898a      	ldrh	r2, [r1, #12]
   82cfe:	442a      	add	r2, r5
   82d00:	429a      	cmp	r2, r3
   82d02:	d8f3      	bhi.n	82cec <Shell+0xc2c>
		pSrc=(uint32_t)shellEditBuf+k;
   82d04:	9905      	ldr	r1, [sp, #20]
   82d06:	186b      	adds	r3, r5, r1
   82d08:	930e      	str	r3, [sp, #56]	; 0x38
		shell.nChar-=k;
   82d0a:	4a34      	ldr	r2, [pc, #208]	; (82ddc <Shell+0xd1c>)
   82d0c:	8993      	ldrh	r3, [r2, #12]
   82d0e:	1a5b      	subs	r3, r3, r1
   82d10:	8193      	strh	r3, [r2, #12]
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d12:	4614      	mov	r4, r2
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d14:	2706      	movs	r7, #6
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d16:	e004      	b.n	82d22 <Shell+0xc62>
			if(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d18:	89a3      	ldrh	r3, [r4, #12]
   82d1a:	442b      	add	r3, r5
   82d1c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82d1e:	4293      	cmp	r3, r2
   82d20:	d814      	bhi.n	82d4c <Shell+0xc8c>
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d24:	89a2      	ldrh	r2, [r4, #12]
   82d26:	442a      	add	r2, r5
   82d28:	429a      	cmp	r2, r3
   82d2a:	f67f aa0d 	bls.w	82148 <Shell+0x88>
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d2e:	4632      	mov	r2, r6
   82d30:	7819      	ldrb	r1, [r3, #0]
   82d32:	4638      	mov	r0, r7
   82d34:	f7ff f9c4 	bl	820c0 <Shell>
   82d38:	2800      	cmp	r0, #0
   82d3a:	d1ed      	bne.n	82d18 <Shell+0xc58>
   82d3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d3e:	3301      	adds	r3, #1
   82d40:	930e      	str	r3, [sp, #56]	; 0x38
   82d42:	89a2      	ldrh	r2, [r4, #12]
   82d44:	442a      	add	r2, r5
   82d46:	429a      	cmp	r2, r3
   82d48:	d8f1      	bhi.n	82d2e <Shell+0xc6e>
   82d4a:	e7ea      	b.n	82d22 <Shell+0xc62>
				pSrc++; pSt=shell.pEdit=(char*)pSrc;
   82d4c:	f102 0901 	add.w	r9, r2, #1
   82d50:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82d54:	f8c4 9004 	str.w	r9, [r4, #4]
				while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d58:	454b      	cmp	r3, r9
   82d5a:	bf88      	it	hi
   82d5c:	464b      	movhi	r3, r9
   82d5e:	d90c      	bls.n	82d7a <Shell+0xcba>
   82d60:	4632      	mov	r2, r6
   82d62:	7819      	ldrb	r1, [r3, #0]
   82d64:	4638      	mov	r0, r7
   82d66:	f7ff f9ab 	bl	820c0 <Shell>
   82d6a:	b130      	cbz	r0, 82d7a <Shell+0xcba>
   82d6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d6e:	3301      	adds	r3, #1
   82d70:	930e      	str	r3, [sp, #56]	; 0x38
   82d72:	89a2      	ldrh	r2, [r4, #12]
   82d74:	442a      	add	r2, r5
   82d76:	429a      	cmp	r2, r3
   82d78:	d8f2      	bhi.n	82d60 <Shell+0xca0>
				k=pSrc-(uint32_t)shell.pEdit;
   82d7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d7c:	6861      	ldr	r1, [r4, #4]
   82d7e:	1a59      	subs	r1, r3, r1
   82d80:	9105      	str	r1, [sp, #20]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d82:	b189      	cbz	r1, 82da8 <Shell+0xce8>
   82d84:	89a2      	ldrh	r2, [r4, #12]
   82d86:	442a      	add	r2, r5
   82d88:	4293      	cmp	r3, r2
   82d8a:	d20d      	bcs.n	82da8 <Shell+0xce8>
					*shell.pEdit++=*(char*)pSrc++;
   82d8c:	6862      	ldr	r2, [r4, #4]
   82d8e:	1c51      	adds	r1, r2, #1
   82d90:	6061      	str	r1, [r4, #4]
   82d92:	1c59      	adds	r1, r3, #1
   82d94:	910e      	str	r1, [sp, #56]	; 0x38
   82d96:	781b      	ldrb	r3, [r3, #0]
   82d98:	7013      	strb	r3, [r2, #0]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d9a:	9905      	ldr	r1, [sp, #20]
   82d9c:	b121      	cbz	r1, 82da8 <Shell+0xce8>
   82d9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82da0:	89a2      	ldrh	r2, [r4, #12]
   82da2:	442a      	add	r2, r5
   82da4:	429a      	cmp	r2, r3
   82da6:	d8f1      	bhi.n	82d8c <Shell+0xccc>
				shell.nChar-=k;
   82da8:	89a3      	ldrh	r3, [r4, #12]
   82daa:	1a59      	subs	r1, r3, r1
   82dac:	81a1      	strh	r1, [r4, #12]
				pSrc=(uint32_t)pSt;
   82dae:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82db2:	e7b6      	b.n	82d22 <Shell+0xc62>
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
   82db4:	200d      	movs	r0, #13
   82db6:	4b0f      	ldr	r3, [pc, #60]	; (82df4 <Shell+0xd34>)
   82db8:	4798      	blx	r3
	return 0;
   82dba:	f04f 0800 	mov.w	r8, #0
   82dbe:	f7ff b9c3 	b.w	82148 <Shell+0x88>
   82dc2:	f04f 0800 	mov.w	r8, #0
   82dc6:	f7ff b9bf 	b.w	82148 <Shell+0x88>
   82dca:	f04f 0800 	mov.w	r8, #0
   82dce:	f7ff b9bb 	b.w	82148 <Shell+0x88>
   82dd2:	f04f 0800 	mov.w	r8, #0
   82dd6:	f7ff b9b7 	b.w	82148 <Shell+0x88>
   82dda:	bf00      	nop
   82ddc:	200011c8 	.word	0x200011c8
   82de0:	200010c4 	.word	0x200010c4
   82de4:	00088c4c 	.word	0x00088c4c
   82de8:	00083255 	.word	0x00083255
   82dec:	00088c50 	.word	0x00088c50
   82df0:	00088cf8 	.word	0x00088cf8
   82df4:	00081761 	.word	0x00081761
   82df8:	f04f 0800 	mov.w	r8, #0
   82dfc:	f7ff b9a4 	b.w	82148 <Shell+0x88>

00082e00 <_cmd_show>:
#define ST_SHELL_PROMPT_DISABLED        0x000004

char buf[256];

void _cmd_show(uint32_t sc, void*pParam)
{
   82e00:	b538      	push	{r3, r4, r5, lr}
   82e02:	4605      	mov	r5, r0
   82e04:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82e06:	490a      	ldr	r1, [pc, #40]	; (82e30 <_cmd_show+0x30>)
   82e08:	4b0a      	ldr	r3, [pc, #40]	; (82e34 <_cmd_show+0x34>)
   82e0a:	4798      	blx	r3
	if(pToken)
   82e0c:	b170      	cbz	r0, 82e2c <_cmd_show+0x2c>
   82e0e:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82e10:	4b09      	ldr	r3, [pc, #36]	; (82e38 <_cmd_show+0x38>)
   82e12:	4798      	blx	r3
   82e14:	4601      	mov	r1, r0
   82e16:	4620      	mov	r0, r4
   82e18:	4b08      	ldr	r3, [pc, #32]	; (82e3c <_cmd_show+0x3c>)
   82e1a:	4798      	blx	r3
   82e1c:	f245 73e5 	movw	r3, #22501	; 0x57e5
   82e20:	4298      	cmp	r0, r3
   82e22:	d103      	bne.n	82e2c <_cmd_show+0x2c>
		{
		case 0x57E5:    //crc
			mBitsSet(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   82e24:	882b      	ldrh	r3, [r5, #0]
   82e26:	f043 0302 	orr.w	r3, r3, #2
   82e2a:	802b      	strh	r3, [r5, #0]
   82e2c:	bd38      	pop	{r3, r4, r5, pc}
   82e2e:	bf00      	nop
   82e30:	00088b44 	.word	0x00088b44
   82e34:	00083e91 	.word	0x00083e91
   82e38:	00083e35 	.word	0x00083e35
   82e3c:	00081719 	.word	0x00081719

00082e40 <_cmd_hide>:
		}
	}
}

void _cmd_hide(uint32_t sc, void*pParam)
{
   82e40:	b538      	push	{r3, r4, r5, lr}
   82e42:	4605      	mov	r5, r0
   82e44:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82e46:	490a      	ldr	r1, [pc, #40]	; (82e70 <_cmd_hide+0x30>)
   82e48:	4b0a      	ldr	r3, [pc, #40]	; (82e74 <_cmd_hide+0x34>)
   82e4a:	4798      	blx	r3
	if(pToken)
   82e4c:	b170      	cbz	r0, 82e6c <_cmd_hide+0x2c>
   82e4e:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82e50:	4b09      	ldr	r3, [pc, #36]	; (82e78 <_cmd_hide+0x38>)
   82e52:	4798      	blx	r3
   82e54:	4601      	mov	r1, r0
   82e56:	4620      	mov	r0, r4
   82e58:	4b08      	ldr	r3, [pc, #32]	; (82e7c <_cmd_hide+0x3c>)
   82e5a:	4798      	blx	r3
   82e5c:	f245 73e5 	movw	r3, #22501	; 0x57e5
   82e60:	4298      	cmp	r0, r3
   82e62:	d103      	bne.n	82e6c <_cmd_hide+0x2c>
		{
		case 0x57E5:    //crc
			mBitsClr(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   82e64:	882b      	ldrh	r3, [r5, #0]
   82e66:	f023 0302 	bic.w	r3, r3, #2
   82e6a:	802b      	strh	r3, [r5, #0]
   82e6c:	bd38      	pop	{r3, r4, r5, pc}
   82e6e:	bf00      	nop
   82e70:	00088b44 	.word	0x00088b44
   82e74:	00083e91 	.word	0x00083e91
   82e78:	00083e35 	.word	0x00083e35
   82e7c:	00081719 	.word	0x00081719

00082e80 <_cmd_start>:
		}
	}
}

void _cmd_start(uint32_t sc, void*pParam)
{
   82e80:	b538      	push	{r3, r4, r5, lr}
   82e82:	460d      	mov	r5, r1
	Putstr(" cmd start : ");
   82e84:	4903      	ldr	r1, [pc, #12]	; (82e94 <_cmd_start+0x14>)
   82e86:	2067      	movs	r0, #103	; 0x67
   82e88:	4c03      	ldr	r4, [pc, #12]	; (82e98 <_cmd_start+0x18>)
   82e8a:	47a0      	blx	r4
	Putstr(pParam);
   82e8c:	4629      	mov	r1, r5
   82e8e:	2067      	movs	r0, #103	; 0x67
   82e90:	47a0      	blx	r4
   82e92:	bd38      	pop	{r3, r4, r5, pc}
   82e94:	00088e30 	.word	0x00088e30
   82e98:	00083255 	.word	0x00083255

00082e9c <_cmd_cls>:
	pParam=atoi((char*)pParam);
	PushTask(_cmd_restart_proc,sc,pParam,0);
}

void _cmd_cls(uint32_t sc, void*pParam)
{
   82e9c:	b508      	push	{r3, lr}
	Putstr("\e[2J");
   82e9e:	4902      	ldr	r1, [pc, #8]	; (82ea8 <_cmd_cls+0xc>)
   82ea0:	2067      	movs	r0, #103	; 0x67
   82ea2:	4b02      	ldr	r3, [pc, #8]	; (82eac <_cmd_cls+0x10>)
   82ea4:	4798      	blx	r3
   82ea6:	bd08      	pop	{r3, pc}
   82ea8:	00088d04 	.word	0x00088d04
   82eac:	00083255 	.word	0x00083255

00082eb0 <_cmd_set>:
{
   82eb0:	b570      	push	{r4, r5, r6, lr}
	pToken = mstrtok(NULL," \r\n");
   82eb2:	493a      	ldr	r1, [pc, #232]	; (82f9c <_cmd_set+0xec>)
   82eb4:	2000      	movs	r0, #0
   82eb6:	4b3a      	ldr	r3, [pc, #232]	; (82fa0 <_cmd_set+0xf0>)
   82eb8:	4798      	blx	r3
	if(pToken)
   82eba:	2800      	cmp	r0, #0
   82ebc:	d056      	beq.n	82f6c <_cmd_set+0xbc>
   82ebe:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82ec0:	4b38      	ldr	r3, [pc, #224]	; (82fa4 <_cmd_set+0xf4>)
   82ec2:	4798      	blx	r3
   82ec4:	4601      	mov	r1, r0
   82ec6:	4620      	mov	r0, r4
   82ec8:	4b37      	ldr	r3, [pc, #220]	; (82fa8 <_cmd_set+0xf8>)
   82eca:	4798      	blx	r3
   82ecc:	f247 3327 	movw	r3, #29479	; 0x7327
   82ed0:	4298      	cmp	r0, r3
   82ed2:	d004      	beq.n	82ede <_cmd_set+0x2e>
   82ed4:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   82ed8:	4298      	cmp	r0, r3
   82eda:	d024      	beq.n	82f26 <_cmd_set+0x76>
   82edc:	bd70      	pop	{r4, r5, r6, pc}
			pToken=mstrtok(NULL," :./\r\n");
   82ede:	4933      	ldr	r1, [pc, #204]	; (82fac <_cmd_set+0xfc>)
   82ee0:	2000      	movs	r0, #0
   82ee2:	4b2f      	ldr	r3, [pc, #188]	; (82fa0 <_cmd_set+0xf0>)
   82ee4:	4798      	blx	r3
			if(pToken) hour=atoi((char*)pToken);
   82ee6:	b1c0      	cbz	r0, 82f1a <_cmd_set+0x6a>
   82ee8:	4b31      	ldr	r3, [pc, #196]	; (82fb0 <_cmd_set+0x100>)
   82eea:	4798      	blx	r3
   82eec:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   82eee:	492f      	ldr	r1, [pc, #188]	; (82fac <_cmd_set+0xfc>)
   82ef0:	2000      	movs	r0, #0
   82ef2:	4b2b      	ldr	r3, [pc, #172]	; (82fa0 <_cmd_set+0xf0>)
   82ef4:	4798      	blx	r3
			if(pToken) minute=atoi((char*)pToken);
   82ef6:	b190      	cbz	r0, 82f1e <_cmd_set+0x6e>
   82ef8:	4b2d      	ldr	r3, [pc, #180]	; (82fb0 <_cmd_set+0x100>)
   82efa:	4798      	blx	r3
   82efc:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   82efe:	492b      	ldr	r1, [pc, #172]	; (82fac <_cmd_set+0xfc>)
   82f00:	2000      	movs	r0, #0
   82f02:	4b27      	ldr	r3, [pc, #156]	; (82fa0 <_cmd_set+0xf0>)
   82f04:	4798      	blx	r3
			if(pToken) second=atoi((char*)pToken);
   82f06:	b160      	cbz	r0, 82f22 <_cmd_set+0x72>
   82f08:	4b29      	ldr	r3, [pc, #164]	; (82fb0 <_cmd_set+0x100>)
   82f0a:	4798      	blx	r3
   82f0c:	b2c3      	uxtb	r3, r0
			kRtc(KRTC_SET_TIME,(uint32_t)hour,(uint32_t)minute,(uint32_t)second);
   82f0e:	462a      	mov	r2, r5
   82f10:	4621      	mov	r1, r4
   82f12:	2066      	movs	r0, #102	; 0x66
   82f14:	4c27      	ldr	r4, [pc, #156]	; (82fb4 <_cmd_set+0x104>)
   82f16:	47a0      	blx	r4
			break;
   82f18:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   82f1a:	2400      	movs	r4, #0
   82f1c:	e7e7      	b.n	82eee <_cmd_set+0x3e>
   82f1e:	2500      	movs	r5, #0
   82f20:	e7ed      	b.n	82efe <_cmd_set+0x4e>
   82f22:	2300      	movs	r3, #0
   82f24:	e7f3      	b.n	82f0e <_cmd_set+0x5e>
			pToken=mstrtok(NULL," :./\r\n");
   82f26:	4921      	ldr	r1, [pc, #132]	; (82fac <_cmd_set+0xfc>)
   82f28:	2000      	movs	r0, #0
   82f2a:	4b1d      	ldr	r3, [pc, #116]	; (82fa0 <_cmd_set+0xf0>)
   82f2c:	4798      	blx	r3
			if(pToken) date=atoi((char*)pToken);
   82f2e:	b1f0      	cbz	r0, 82f6e <_cmd_set+0xbe>
   82f30:	4b1f      	ldr	r3, [pc, #124]	; (82fb0 <_cmd_set+0x100>)
   82f32:	4798      	blx	r3
   82f34:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f36:	491d      	ldr	r1, [pc, #116]	; (82fac <_cmd_set+0xfc>)
   82f38:	2000      	movs	r0, #0
   82f3a:	4b19      	ldr	r3, [pc, #100]	; (82fa0 <_cmd_set+0xf0>)
   82f3c:	4798      	blx	r3
			if(pToken) month=atoi((char*)pToken);
   82f3e:	b1c0      	cbz	r0, 82f72 <_cmd_set+0xc2>
   82f40:	4b1b      	ldr	r3, [pc, #108]	; (82fb0 <_cmd_set+0x100>)
   82f42:	4798      	blx	r3
   82f44:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f46:	4919      	ldr	r1, [pc, #100]	; (82fac <_cmd_set+0xfc>)
   82f48:	2000      	movs	r0, #0
   82f4a:	4b15      	ldr	r3, [pc, #84]	; (82fa0 <_cmd_set+0xf0>)
   82f4c:	4798      	blx	r3
			if(pToken) centYear=atoi((char*)pToken);
   82f4e:	b190      	cbz	r0, 82f76 <_cmd_set+0xc6>
   82f50:	4b17      	ldr	r3, [pc, #92]	; (82fb0 <_cmd_set+0x100>)
   82f52:	4798      	blx	r3
   82f54:	b286      	uxth	r6, r0
			Putstr("\e[2K"); //Erase current line on terminal screen
   82f56:	4918      	ldr	r1, [pc, #96]	; (82fb8 <_cmd_set+0x108>)
   82f58:	2067      	movs	r0, #103	; 0x67
   82f5a:	4b18      	ldr	r3, [pc, #96]	; (82fbc <_cmd_set+0x10c>)
   82f5c:	4798      	blx	r3
			if(kRtc(KRTC_SET_DATE,(uint32_t)date,(uint32_t)month,(uint32_t)centYear)==0)
   82f5e:	4633      	mov	r3, r6
   82f60:	462a      	mov	r2, r5
   82f62:	4621      	mov	r1, r4
   82f64:	2067      	movs	r0, #103	; 0x67
   82f66:	4c13      	ldr	r4, [pc, #76]	; (82fb4 <_cmd_set+0x104>)
   82f68:	47a0      	blx	r4
   82f6a:	b130      	cbz	r0, 82f7a <_cmd_set+0xca>
   82f6c:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   82f6e:	2400      	movs	r4, #0
   82f70:	e7e1      	b.n	82f36 <_cmd_set+0x86>
   82f72:	2500      	movs	r5, #0
   82f74:	e7e7      	b.n	82f46 <_cmd_set+0x96>
	uint16_t u4=0;
   82f76:	2600      	movs	r6, #0
   82f78:	e7ed      	b.n	82f56 <_cmd_set+0xa6>
				Putstr("\r\n");
   82f7a:	4d11      	ldr	r5, [pc, #68]	; (82fc0 <_cmd_set+0x110>)
   82f7c:	4629      	mov	r1, r5
   82f7e:	2067      	movs	r0, #103	; 0x67
   82f80:	4c0e      	ldr	r4, [pc, #56]	; (82fbc <_cmd_set+0x10c>)
   82f82:	47a0      	blx	r4
				kRtc(KRTC_GETF_DATE,(uint32_t)buf);
   82f84:	4e0f      	ldr	r6, [pc, #60]	; (82fc4 <_cmd_set+0x114>)
   82f86:	4631      	mov	r1, r6
   82f88:	2068      	movs	r0, #104	; 0x68
   82f8a:	4b0a      	ldr	r3, [pc, #40]	; (82fb4 <_cmd_set+0x104>)
   82f8c:	4798      	blx	r3
				Putstr(buf);
   82f8e:	4631      	mov	r1, r6
   82f90:	2067      	movs	r0, #103	; 0x67
   82f92:	47a0      	blx	r4
				Putstr("\r\n");
   82f94:	4629      	mov	r1, r5
   82f96:	2067      	movs	r0, #103	; 0x67
   82f98:	47a0      	blx	r4
}
   82f9a:	e7e7      	b.n	82f6c <_cmd_set+0xbc>
   82f9c:	00088b44 	.word	0x00088b44
   82fa0:	000836fd 	.word	0x000836fd
   82fa4:	00083e35 	.word	0x00083e35
   82fa8:	00081719 	.word	0x00081719
   82fac:	00088e20 	.word	0x00088e20
   82fb0:	00083cf5 	.word	0x00083cf5
   82fb4:	00081941 	.word	0x00081941
   82fb8:	00088e28 	.word	0x00088e28
   82fbc:	00083255 	.word	0x00083255
   82fc0:	00088ca0 	.word	0x00088ca0
   82fc4:	200012a8 	.word	0x200012a8

00082fc8 <_cmd_menu>:
{
   82fc8:	b510      	push	{r4, lr}
   82fca:	4608      	mov	r0, r1
	pToken = (uint32_t)strtok(pParam, " \r\n");
   82fcc:	4915      	ldr	r1, [pc, #84]	; (83024 <_cmd_menu+0x5c>)
   82fce:	4b16      	ldr	r3, [pc, #88]	; (83028 <_cmd_menu+0x60>)
   82fd0:	4798      	blx	r3
	if(pToken)
   82fd2:	b900      	cbnz	r0, 82fd6 <_cmd_menu+0xe>
   82fd4:	bd10      	pop	{r4, pc}
   82fd6:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   82fd8:	4b14      	ldr	r3, [pc, #80]	; (8302c <_cmd_menu+0x64>)
   82fda:	4798      	blx	r3
   82fdc:	4601      	mov	r1, r0
   82fde:	4620      	mov	r0, r4
   82fe0:	4b13      	ldr	r3, [pc, #76]	; (83030 <_cmd_menu+0x68>)
   82fe2:	4798      	blx	r3
		switch(crc)
   82fe4:	b280      	uxth	r0, r0
   82fe6:	f648 0362 	movw	r3, #34914	; 0x8862
   82fea:	4298      	cmp	r0, r3
   82fec:	d012      	beq.n	83014 <_cmd_menu+0x4c>
   82fee:	f648 338b 	movw	r3, #35723	; 0x8b8b
   82ff2:	4298      	cmp	r0, r3
   82ff4:	d008      	beq.n	83008 <_cmd_menu+0x40>
   82ff6:	f241 2352 	movw	r3, #4690	; 0x1252
   82ffa:	4298      	cmp	r0, r3
   82ffc:	d00e      	beq.n	8301c <_cmd_menu+0x54>
			Error(ERROR_SHELL_CMD_MENU_SWITCH_BAD_SC, sc);
   82ffe:	4621      	mov	r1, r4
   83000:	2013      	movs	r0, #19
   83002:	4b0c      	ldr	r3, [pc, #48]	; (83034 <_cmd_menu+0x6c>)
   83004:	4798      	blx	r3
}
   83006:	e7e5      	b.n	82fd4 <_cmd_menu+0xc>
			Menu(MENU_SWITCH_BUTTON);
   83008:	2065      	movs	r0, #101	; 0x65
   8300a:	4c0b      	ldr	r4, [pc, #44]	; (83038 <_cmd_menu+0x70>)
   8300c:	47a0      	blx	r4
			Menu(MENU_PROMPT);
   8300e:	2069      	movs	r0, #105	; 0x69
   83010:	47a0      	blx	r4
			break;
   83012:	bd10      	pop	{r4, pc}
			Menu(MENU_SELECT_BUTTON);
   83014:	2066      	movs	r0, #102	; 0x66
   83016:	4b08      	ldr	r3, [pc, #32]	; (83038 <_cmd_menu+0x70>)
   83018:	4798      	blx	r3
			break;
   8301a:	bd10      	pop	{r4, pc}
			Menu(MENU_INIT);
   8301c:	206b      	movs	r0, #107	; 0x6b
   8301e:	4b06      	ldr	r3, [pc, #24]	; (83038 <_cmd_menu+0x70>)
   83020:	4798      	blx	r3
			break;
   83022:	bd10      	pop	{r4, pc}
   83024:	00088b44 	.word	0x00088b44
   83028:	00083e91 	.word	0x00083e91
   8302c:	00083e35 	.word	0x00083e35
   83030:	00081719 	.word	0x00081719
   83034:	00081761 	.word	0x00081761
   83038:	0008038d 	.word	0x0008038d

0008303c <_cmd_restart_proc>:
{
   8303c:	b570      	push	{r4, r5, r6, lr}
   8303e:	b082      	sub	sp, #8
   83040:	4604      	mov	r4, r0
   83042:	460d      	mov	r5, r1
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   83044:	8803      	ldrh	r3, [r0, #0]
   83046:	f043 0304 	orr.w	r3, r3, #4
   8304a:	8003      	strh	r3, [r0, #0]
	sprintf(buf,"\rSystem will restart in %i second...",(int)timeout); Putstr(buf);
   8304c:	4e0e      	ldr	r6, [pc, #56]	; (83088 <_cmd_restart_proc+0x4c>)
   8304e:	460a      	mov	r2, r1
   83050:	490e      	ldr	r1, [pc, #56]	; (8308c <_cmd_restart_proc+0x50>)
   83052:	4630      	mov	r0, r6
   83054:	4b0e      	ldr	r3, [pc, #56]	; (83090 <_cmd_restart_proc+0x54>)
   83056:	4798      	blx	r3
   83058:	4631      	mov	r1, r6
   8305a:	2067      	movs	r0, #103	; 0x67
   8305c:	4b0d      	ldr	r3, [pc, #52]	; (83094 <_cmd_restart_proc+0x58>)
   8305e:	4798      	blx	r3
	if(timeout==0)
   83060:	b935      	cbnz	r5, 83070 <_cmd_restart_proc+0x34>
   83062:	4b0d      	ldr	r3, [pc, #52]	; (83098 <_cmd_restart_proc+0x5c>)
		for(sc=100000;sc;sc--);
   83064:	3b01      	subs	r3, #1
   83066:	d1fd      	bne.n	83064 <_cmd_restart_proc+0x28>
		rstc_start_software_reset(RSTC);
   83068:	480c      	ldr	r0, [pc, #48]	; (8309c <_cmd_restart_proc+0x60>)
   8306a:	4b0d      	ldr	r3, [pc, #52]	; (830a0 <_cmd_restart_proc+0x64>)
   8306c:	4798      	blx	r3
   8306e:	e7fe      	b.n	8306e <_cmd_restart_proc+0x32>
		PushTask(_cmd_restart_proc,sc,--timeout,1000);	
   83070:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   83074:	9300      	str	r3, [sp, #0]
   83076:	1e6b      	subs	r3, r5, #1
   83078:	4622      	mov	r2, r4
   8307a:	490a      	ldr	r1, [pc, #40]	; (830a4 <_cmd_restart_proc+0x68>)
   8307c:	2066      	movs	r0, #102	; 0x66
   8307e:	4c0a      	ldr	r4, [pc, #40]	; (830a8 <_cmd_restart_proc+0x6c>)
   83080:	47a0      	blx	r4
}
   83082:	b002      	add	sp, #8
   83084:	bd70      	pop	{r4, r5, r6, pc}
   83086:	bf00      	nop
   83088:	200012a8 	.word	0x200012a8
   8308c:	00088df8 	.word	0x00088df8
   83090:	00083de9 	.word	0x00083de9
   83094:	00083255 	.word	0x00083255
   83098:	000186a0 	.word	0x000186a0
   8309c:	400e1200 	.word	0x400e1200
   830a0:	00080c8d 	.word	0x00080c8d
   830a4:	0008303d 	.word	0x0008303d
   830a8:	00083491 	.word	0x00083491

000830ac <_cmd_restart>:
{
   830ac:	b510      	push	{r4, lr}
   830ae:	b082      	sub	sp, #8
   830b0:	4604      	mov	r4, r0
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   830b2:	8803      	ldrh	r3, [r0, #0]
   830b4:	f043 0304 	orr.w	r3, r3, #4
   830b8:	8003      	strh	r3, [r0, #0]
	pParam=atoi((char*)pParam);
   830ba:	4608      	mov	r0, r1
   830bc:	4b05      	ldr	r3, [pc, #20]	; (830d4 <_cmd_restart+0x28>)
   830be:	4798      	blx	r3
	PushTask(_cmd_restart_proc,sc,pParam,0);
   830c0:	2300      	movs	r3, #0
   830c2:	9300      	str	r3, [sp, #0]
   830c4:	4603      	mov	r3, r0
   830c6:	4622      	mov	r2, r4
   830c8:	4903      	ldr	r1, [pc, #12]	; (830d8 <_cmd_restart+0x2c>)
   830ca:	2066      	movs	r0, #102	; 0x66
   830cc:	4c03      	ldr	r4, [pc, #12]	; (830dc <_cmd_restart+0x30>)
   830ce:	47a0      	blx	r4
}
   830d0:	b002      	add	sp, #8
   830d2:	bd10      	pop	{r4, pc}
   830d4:	00083cf5 	.word	0x00083cf5
   830d8:	0008303d 	.word	0x0008303d
   830dc:	00083491 	.word	0x00083491

000830e0 <_cmd_infos>:
	"ROM_FLASH --- ROM and Embedded Flash Memory [NVPSIZ is ROM size / NVPSIZ2 is Flash size]",
	"SRAM --- SRAM emulating ROM"
};

void _cmd_infos(uint32_t sc, void*pParam)
{
   830e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   830e4:	b08b      	sub	sp, #44	; 0x2c
	chipid_data_t chipData;

	chipid_read(CHIPID,&chipData);
   830e6:	a901      	add	r1, sp, #4
   830e8:	4844      	ldr	r0, [pc, #272]	; (831fc <_cmd_infos+0x11c>)
   830ea:	4b45      	ldr	r3, [pc, #276]	; (83200 <_cmd_infos+0x120>)
   830ec:	4798      	blx	r3
	Putstr("\r\n\t=============== CHIP IDENTIFIER INFOS ===============\r\n\n");
   830ee:	4945      	ldr	r1, [pc, #276]	; (83204 <_cmd_infos+0x124>)
   830f0:	2067      	movs	r0, #103	; 0x67
   830f2:	4c45      	ldr	r4, [pc, #276]	; (83208 <_cmd_infos+0x128>)
   830f4:	47a0      	blx	r4
	sprintf(buf,"\tVERSION: %c\r\n",(char)(chipData.ul_version-1)+'A');	Putstr(buf);
   830f6:	9a01      	ldr	r2, [sp, #4]
   830f8:	3a01      	subs	r2, #1
   830fa:	b2d2      	uxtb	r2, r2
   830fc:	4f43      	ldr	r7, [pc, #268]	; (8320c <_cmd_infos+0x12c>)
   830fe:	3241      	adds	r2, #65	; 0x41
   83100:	4943      	ldr	r1, [pc, #268]	; (83210 <_cmd_infos+0x130>)
   83102:	4638      	mov	r0, r7
   83104:	4b43      	ldr	r3, [pc, #268]	; (83214 <_cmd_infos+0x134>)
   83106:	4798      	blx	r3
   83108:	4639      	mov	r1, r7
   8310a:	2067      	movs	r0, #103	; 0x67
   8310c:	47a0      	blx	r4
		Putstr("\t  EPROC: "),Putstr(eprocs[chipData.ul_eproc]);	Putstr("\r\n");
   8310e:	4942      	ldr	r1, [pc, #264]	; (83218 <_cmd_infos+0x138>)
   83110:	2067      	movs	r0, #103	; 0x67
   83112:	47a0      	blx	r4
   83114:	9a02      	ldr	r2, [sp, #8]
   83116:	4b41      	ldr	r3, [pc, #260]	; (8321c <_cmd_infos+0x13c>)
   83118:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8311c:	2067      	movs	r0, #103	; 0x67
   8311e:	47a0      	blx	r4
   83120:	4e3f      	ldr	r6, [pc, #252]	; (83220 <_cmd_infos+0x140>)
   83122:	4631      	mov	r1, r6
   83124:	2067      	movs	r0, #103	; 0x67
   83126:	47a0      	blx	r4
		Putstr("\t NVPSIZ: "),Putstr(nvpsiz[chipData.ul_nvpsiz]);	Putstr("\r\n");
   83128:	493e      	ldr	r1, [pc, #248]	; (83224 <_cmd_infos+0x144>)
   8312a:	2067      	movs	r0, #103	; 0x67
   8312c:	47a0      	blx	r4
   8312e:	4d3e      	ldr	r5, [pc, #248]	; (83228 <_cmd_infos+0x148>)
   83130:	9b03      	ldr	r3, [sp, #12]
   83132:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   83136:	2067      	movs	r0, #103	; 0x67
   83138:	47a0      	blx	r4
   8313a:	4631      	mov	r1, r6
   8313c:	2067      	movs	r0, #103	; 0x67
   8313e:	47a0      	blx	r4
		Putstr("\tNVPSIZ2: "),Putstr(nvpsiz[chipData.ul_nvpsiz2]);	Putstr("\r\n");
   83140:	493a      	ldr	r1, [pc, #232]	; (8322c <_cmd_infos+0x14c>)
   83142:	2067      	movs	r0, #103	; 0x67
   83144:	47a0      	blx	r4
   83146:	9b04      	ldr	r3, [sp, #16]
   83148:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   8314c:	2067      	movs	r0, #103	; 0x67
   8314e:	47a0      	blx	r4
   83150:	4631      	mov	r1, r6
   83152:	2067      	movs	r0, #103	; 0x67
   83154:	47a0      	blx	r4
		Putstr("\tSRAMSIZ: "),Putstr(sramsiz[chipData.ul_sramsiz]);	Putstr("\r\n");
   83156:	4936      	ldr	r1, [pc, #216]	; (83230 <_cmd_infos+0x150>)
   83158:	2067      	movs	r0, #103	; 0x67
   8315a:	47a0      	blx	r4
   8315c:	9a05      	ldr	r2, [sp, #20]
   8315e:	4b35      	ldr	r3, [pc, #212]	; (83234 <_cmd_infos+0x154>)
   83160:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   83164:	2067      	movs	r0, #103	; 0x67
   83166:	47a0      	blx	r4
   83168:	4631      	mov	r1, r6
   8316a:	2067      	movs	r0, #103	; 0x67
   8316c:	47a0      	blx	r4
#define k sc
		k=0;
		while(arch[k].value && (arch[k].value!=chipData.ul_arch)) k++;
   8316e:	9906      	ldr	r1, [sp, #24]
   83170:	2919      	cmp	r1, #25
   83172:	d038      	beq.n	831e6 <_cmd_infos+0x106>
   83174:	4b30      	ldr	r3, [pc, #192]	; (83238 <_cmd_infos+0x158>)
   83176:	2400      	movs	r4, #0
   83178:	3401      	adds	r4, #1
   8317a:	7b1a      	ldrb	r2, [r3, #12]
   8317c:	b112      	cbz	r2, 83184 <_cmd_infos+0xa4>
   8317e:	330c      	adds	r3, #12
   83180:	428a      	cmp	r2, r1
   83182:	d1f9      	bne.n	83178 <_cmd_infos+0x98>
		Putstr("\t   ARCH: "),Putstr(arch[k].name); Putstr(" --- "); Putstr(arch[k].description); Putstr("\r\n");
   83184:	492d      	ldr	r1, [pc, #180]	; (8323c <_cmd_infos+0x15c>)
   83186:	2067      	movs	r0, #103	; 0x67
   83188:	4d1f      	ldr	r5, [pc, #124]	; (83208 <_cmd_infos+0x128>)
   8318a:	47a8      	blx	r5
   8318c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 83238 <_cmd_infos+0x158>
   83190:	ea4f 0944 	mov.w	r9, r4, lsl #1
   83194:	eb09 0304 	add.w	r3, r9, r4
   83198:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   8319c:	6859      	ldr	r1, [r3, #4]
   8319e:	2067      	movs	r0, #103	; 0x67
   831a0:	47a8      	blx	r5
   831a2:	4927      	ldr	r1, [pc, #156]	; (83240 <_cmd_infos+0x160>)
   831a4:	2067      	movs	r0, #103	; 0x67
   831a6:	47a8      	blx	r5
   831a8:	444c      	add	r4, r9
   831aa:	eb08 0884 	add.w	r8, r8, r4, lsl #2
   831ae:	f8d8 1008 	ldr.w	r1, [r8, #8]
   831b2:	2067      	movs	r0, #103	; 0x67
   831b4:	47a8      	blx	r5
   831b6:	4631      	mov	r1, r6
   831b8:	2067      	movs	r0, #103	; 0x67
   831ba:	47a8      	blx	r5
#undef k
		Putstr("\t NVPTYP: "),Putstr(nvptyp[chipData.ul_nvptyp]);	Putstr("\r\n");
   831bc:	4921      	ldr	r1, [pc, #132]	; (83244 <_cmd_infos+0x164>)
   831be:	2067      	movs	r0, #103	; 0x67
   831c0:	47a8      	blx	r5
   831c2:	9a07      	ldr	r2, [sp, #28]
   831c4:	4b20      	ldr	r3, [pc, #128]	; (83248 <_cmd_infos+0x168>)
   831c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   831ca:	2067      	movs	r0, #103	; 0x67
   831cc:	47a8      	blx	r5
   831ce:	4631      	mov	r1, r6
   831d0:	2067      	movs	r0, #103	; 0x67
   831d2:	47a8      	blx	r5
	if(chipData.ul_extflag)
   831d4:	9b08      	ldr	r3, [sp, #32]
   831d6:	b943      	cbnz	r3, 831ea <_cmd_infos+0x10a>
	{
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
	}
	Putstr("\r\n\t=====================================================\r\n\n");
   831d8:	491c      	ldr	r1, [pc, #112]	; (8324c <_cmd_infos+0x16c>)
   831da:	2067      	movs	r0, #103	; 0x67
   831dc:	4b0a      	ldr	r3, [pc, #40]	; (83208 <_cmd_infos+0x128>)
   831de:	4798      	blx	r3
}
   831e0:	b00b      	add	sp, #44	; 0x2c
   831e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		k=0;
   831e6:	2400      	movs	r4, #0
   831e8:	e7cc      	b.n	83184 <_cmd_infos+0xa4>
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
   831ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
   831ec:	4918      	ldr	r1, [pc, #96]	; (83250 <_cmd_infos+0x170>)
   831ee:	4807      	ldr	r0, [pc, #28]	; (8320c <_cmd_infos+0x12c>)
   831f0:	4b08      	ldr	r3, [pc, #32]	; (83214 <_cmd_infos+0x134>)
   831f2:	4798      	blx	r3
   831f4:	4639      	mov	r1, r7
   831f6:	2067      	movs	r0, #103	; 0x67
   831f8:	47a8      	blx	r5
   831fa:	e7ed      	b.n	831d8 <_cmd_infos+0xf8>
   831fc:	400e0740 	.word	0x400e0740
   83200:	000801f9 	.word	0x000801f9
   83204:	00088d0c 	.word	0x00088d0c
   83208:	00083255 	.word	0x00083255
   8320c:	200012a8 	.word	0x200012a8
   83210:	00088d48 	.word	0x00088d48
   83214:	00083de9 	.word	0x00083de9
   83218:	00088d58 	.word	0x00088d58
   8321c:	20000578 	.word	0x20000578
   83220:	00088ca0 	.word	0x00088ca0
   83224:	00088d64 	.word	0x00088d64
   83228:	20000598 	.word	0x20000598
   8322c:	00088d70 	.word	0x00088d70
   83230:	00088d7c 	.word	0x00088d7c
   83234:	200005ec 	.word	0x200005ec
   83238:	00088e40 	.word	0x00088e40
   8323c:	00088d88 	.word	0x00088d88
   83240:	00088d94 	.word	0x00088d94
   83244:	00088d9c 	.word	0x00088d9c
   83248:	200005d8 	.word	0x200005d8
   8324c:	00088dbc 	.word	0x00088dbc
   83250:	00088da8 	.word	0x00088da8

00083254 <Shellcom>:
	char	*pTxRead;
}shellcom;


uint32_t Shellcom(uint32_t sc, ...)
{
   83254:	b40f      	push	{r0, r1, r2, r3}
   83256:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	switch(sc)
   83258:	9906      	ldr	r1, [sp, #24]
   8325a:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   8325e:	2b04      	cmp	r3, #4
   83260:	f200 80b5 	bhi.w	833ce <Shellcom+0x17a>
   83264:	e8df f013 	tbh	[pc, r3, lsl #1]
   83268:	00b30005 	.word	0x00b30005
   8326c:	0059003a 	.word	0x0059003a
   83270:	0086      	.short	0x0086
	{
	case SHELLCOM_NEW:
		shellcom.pTxRead=shellcom.pTxWrite=shellcomTxBuf;
   83272:	4b59      	ldr	r3, [pc, #356]	; (833d8 <Shellcom+0x184>)
   83274:	4a59      	ldr	r2, [pc, #356]	; (833dc <Shellcom+0x188>)
   83276:	601a      	str	r2, [r3, #0]
   83278:	605a      	str	r2, [r3, #4]
		pmc_enable_periph_clk(ID_UART);
   8327a:	2008      	movs	r0, #8
   8327c:	4b58      	ldr	r3, [pc, #352]	; (833e0 <Shellcom+0x18c>)
   8327e:	4798      	blx	r3
		pio_configure_pin(UART_TX_PIN,UART_TX_PIN_FLAGS);
   83280:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   83284:	200c      	movs	r0, #12
   83286:	4c57      	ldr	r4, [pc, #348]	; (833e4 <Shellcom+0x190>)
   83288:	47a0      	blx	r4
		pio_configure_pin(UART_RX_PIN,UART_RX_PIN_FLAGS);
   8328a:	4957      	ldr	r1, [pc, #348]	; (833e8 <Shellcom+0x194>)
   8328c:	200b      	movs	r0, #11
   8328e:	47a0      	blx	r4
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   83290:	4956      	ldr	r1, [pc, #344]	; (833ec <Shellcom+0x198>)
   83292:	4857      	ldr	r0, [pc, #348]	; (833f0 <Shellcom+0x19c>)
   83294:	4b57      	ldr	r3, [pc, #348]	; (833f4 <Shellcom+0x1a0>)
   83296:	4798      	blx	r3
   83298:	b938      	cbnz	r0, 832aa <Shellcom+0x56>
   8329a:	f44f 7280 	mov.w	r2, #256	; 0x100
   8329e:	4b56      	ldr	r3, [pc, #344]	; (833f8 <Shellcom+0x1a4>)
   832a0:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(ID_UART);
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   832a2:	4c53      	ldr	r4, [pc, #332]	; (833f0 <Shellcom+0x19c>)
   832a4:	4e55      	ldr	r6, [pc, #340]	; (833fc <Shellcom+0x1a8>)
   832a6:	4f56      	ldr	r7, [pc, #344]	; (83400 <Shellcom+0x1ac>)
   832a8:	e006      	b.n	832b8 <Shellcom+0x64>
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   832aa:	2018      	movs	r0, #24
   832ac:	4b55      	ldr	r3, [pc, #340]	; (83404 <Shellcom+0x1b0>)
   832ae:	4798      	blx	r3
   832b0:	e7f3      	b.n	8329a <Shellcom+0x46>
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   832b2:	a906      	add	r1, sp, #24
   832b4:	4620      	mov	r0, r4
   832b6:	47b8      	blx	r7
   832b8:	4620      	mov	r0, r4
   832ba:	47b0      	blx	r6
   832bc:	4605      	mov	r5, r0
   832be:	2800      	cmp	r0, #0
   832c0:	d1f7      	bne.n	832b2 <Shellcom+0x5e>
		uart_get_status(UART);	
   832c2:	4c4b      	ldr	r4, [pc, #300]	; (833f0 <Shellcom+0x19c>)
   832c4:	4620      	mov	r0, r4
   832c6:	4b50      	ldr	r3, [pc, #320]	; (83408 <Shellcom+0x1b4>)
   832c8:	4798      	blx	r3
		uart_enable_interrupt(UART,US_IER_RXRDY);
   832ca:	2101      	movs	r1, #1
   832cc:	4620      	mov	r0, r4
   832ce:	4b4f      	ldr	r3, [pc, #316]	; (8340c <Shellcom+0x1b8>)
   832d0:	4798      	blx	r3
	default:
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
	}

	return 0;
}
   832d2:	4628      	mov	r0, r5
   832d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   832d8:	b004      	add	sp, #16
   832da:	4770      	bx	lr
		*shellcom.pTxWrite++=_charData;
   832dc:	4b3e      	ldr	r3, [pc, #248]	; (833d8 <Shellcom+0x184>)
   832de:	681a      	ldr	r2, [r3, #0]
   832e0:	1c51      	adds	r1, r2, #1
   832e2:	6019      	str	r1, [r3, #0]
   832e4:	9907      	ldr	r1, [sp, #28]
   832e6:	7011      	strb	r1, [r2, #0]
		if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   832e8:	681a      	ldr	r2, [r3, #0]
   832ea:	4b49      	ldr	r3, [pc, #292]	; (83410 <Shellcom+0x1bc>)
   832ec:	429a      	cmp	r2, r3
   832ee:	d303      	bcc.n	832f8 <Shellcom+0xa4>
   832f0:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   832f4:	4b38      	ldr	r3, [pc, #224]	; (833d8 <Shellcom+0x184>)
   832f6:	601a      	str	r2, [r3, #0]
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   832f8:	4b37      	ldr	r3, [pc, #220]	; (833d8 <Shellcom+0x184>)
   832fa:	681a      	ldr	r2, [r3, #0]
   832fc:	685b      	ldr	r3, [r3, #4]
   832fe:	429a      	cmp	r2, r3
   83300:	d006      	beq.n	83310 <Shellcom+0xbc>
		uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83302:	f44f 7100 	mov.w	r1, #512	; 0x200
   83306:	483a      	ldr	r0, [pc, #232]	; (833f0 <Shellcom+0x19c>)
   83308:	4b40      	ldr	r3, [pc, #256]	; (8340c <Shellcom+0x1b8>)
   8330a:	4798      	blx	r3
		return 1;
   8330c:	2501      	movs	r5, #1
   8330e:	e7e0      	b.n	832d2 <Shellcom+0x7e>
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   83310:	2100      	movs	r1, #0
   83312:	2017      	movs	r0, #23
   83314:	4b3b      	ldr	r3, [pc, #236]	; (83404 <Shellcom+0x1b0>)
   83316:	4798      	blx	r3
   83318:	e7f3      	b.n	83302 <Shellcom+0xae>
		_nChar=0;
   8331a:	2300      	movs	r3, #0
   8331c:	9306      	str	r3, [sp, #24]
		while(*(char*)_pStr)
   8331e:	9b07      	ldr	r3, [sp, #28]
   83320:	4619      	mov	r1, r3
   83322:	781a      	ldrb	r2, [r3, #0]
   83324:	b1fa      	cbz	r2, 83366 <Shellcom+0x112>
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   83326:	4c2c      	ldr	r4, [pc, #176]	; (833d8 <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   83328:	4e39      	ldr	r6, [pc, #228]	; (83410 <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   8332a:	4d31      	ldr	r5, [pc, #196]	; (833f0 <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   8332c:	6822      	ldr	r2, [r4, #0]
   8332e:	1c50      	adds	r0, r2, #1
   83330:	6020      	str	r0, [r4, #0]
   83332:	3301      	adds	r3, #1
   83334:	9307      	str	r3, [sp, #28]
   83336:	780b      	ldrb	r3, [r1, #0]
   83338:	7013      	strb	r3, [r2, #0]
   8333a:	9b06      	ldr	r3, [sp, #24]
   8333c:	3301      	adds	r3, #1
   8333e:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   83340:	6823      	ldr	r3, [r4, #0]
   83342:	42b3      	cmp	r3, r6
   83344:	bf24      	itt	cs
   83346:	4b25      	ldrcs	r3, [pc, #148]	; (833dc <Shellcom+0x188>)
   83348:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   8334a:	6822      	ldr	r2, [r4, #0]
   8334c:	6863      	ldr	r3, [r4, #4]
   8334e:	429a      	cmp	r2, r3
   83350:	d00b      	beq.n	8336a <Shellcom+0x116>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83352:	f44f 7100 	mov.w	r1, #512	; 0x200
   83356:	4628      	mov	r0, r5
   83358:	4b2c      	ldr	r3, [pc, #176]	; (8340c <Shellcom+0x1b8>)
   8335a:	4798      	blx	r3
		while(*(char*)_pStr)
   8335c:	9b07      	ldr	r3, [sp, #28]
   8335e:	4619      	mov	r1, r3
   83360:	781a      	ldrb	r2, [r3, #0]
   83362:	2a00      	cmp	r2, #0
   83364:	d1e2      	bne.n	8332c <Shellcom+0xd8>
		return _nChar;
   83366:	9d06      	ldr	r5, [sp, #24]
   83368:	e7b3      	b.n	832d2 <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   8336a:	2100      	movs	r1, #0
   8336c:	2017      	movs	r0, #23
   8336e:	4b25      	ldr	r3, [pc, #148]	; (83404 <Shellcom+0x1b0>)
   83370:	4798      	blx	r3
   83372:	e7ee      	b.n	83352 <Shellcom+0xfe>
		_nChar=0;
   83374:	2300      	movs	r3, #0
   83376:	9306      	str	r3, [sp, #24]
		while(_strLen)
   83378:	9b08      	ldr	r3, [sp, #32]
   8337a:	b30b      	cbz	r3, 833c0 <Shellcom+0x16c>
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   8337c:	4c16      	ldr	r4, [pc, #88]	; (833d8 <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   8337e:	4e24      	ldr	r6, [pc, #144]	; (83410 <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83380:	4d1b      	ldr	r5, [pc, #108]	; (833f0 <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   83382:	6823      	ldr	r3, [r4, #0]
   83384:	1c5a      	adds	r2, r3, #1
   83386:	6022      	str	r2, [r4, #0]
   83388:	9a07      	ldr	r2, [sp, #28]
   8338a:	1c51      	adds	r1, r2, #1
   8338c:	9107      	str	r1, [sp, #28]
   8338e:	7812      	ldrb	r2, [r2, #0]
   83390:	701a      	strb	r2, [r3, #0]
   83392:	9b08      	ldr	r3, [sp, #32]
   83394:	3b01      	subs	r3, #1
   83396:	9308      	str	r3, [sp, #32]
   83398:	9b06      	ldr	r3, [sp, #24]
   8339a:	3301      	adds	r3, #1
   8339c:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   8339e:	6823      	ldr	r3, [r4, #0]
   833a0:	42b3      	cmp	r3, r6
   833a2:	bf24      	itt	cs
   833a4:	4b0d      	ldrcs	r3, [pc, #52]	; (833dc <Shellcom+0x188>)
   833a6:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   833a8:	6822      	ldr	r2, [r4, #0]
   833aa:	6863      	ldr	r3, [r4, #4]
   833ac:	429a      	cmp	r2, r3
   833ae:	d009      	beq.n	833c4 <Shellcom+0x170>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   833b0:	f44f 7100 	mov.w	r1, #512	; 0x200
   833b4:	4628      	mov	r0, r5
   833b6:	4b15      	ldr	r3, [pc, #84]	; (8340c <Shellcom+0x1b8>)
   833b8:	4798      	blx	r3
		while(_strLen)
   833ba:	9b08      	ldr	r3, [sp, #32]
   833bc:	2b00      	cmp	r3, #0
   833be:	d1e0      	bne.n	83382 <Shellcom+0x12e>
		return _nChar;
   833c0:	9d06      	ldr	r5, [sp, #24]
   833c2:	e786      	b.n	832d2 <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   833c4:	2100      	movs	r1, #0
   833c6:	2017      	movs	r0, #23
   833c8:	4b0e      	ldr	r3, [pc, #56]	; (83404 <Shellcom+0x1b0>)
   833ca:	4798      	blx	r3
   833cc:	e7f0      	b.n	833b0 <Shellcom+0x15c>
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
   833ce:	200c      	movs	r0, #12
   833d0:	4b0c      	ldr	r3, [pc, #48]	; (83404 <Shellcom+0x1b0>)
   833d2:	4798      	blx	r3
	return 0;
   833d4:	2500      	movs	r5, #0
   833d6:	e77c      	b.n	832d2 <Shellcom+0x7e>
   833d8:	200013a8 	.word	0x200013a8
   833dc:	200013b0 	.word	0x200013b0
   833e0:	00080a59 	.word	0x00080a59
   833e4:	00080859 	.word	0x00080859
   833e8:	08000001 	.word	0x08000001
   833ec:	00089768 	.word	0x00089768
   833f0:	400e0600 	.word	0x400e0600
   833f4:	00080efd 	.word	0x00080efd
   833f8:	e000e100 	.word	0xe000e100
   833fc:	00080f3f 	.word	0x00080f3f
   83400:	00080f47 	.word	0x00080f47
   83404:	00081761 	.word	0x00081761
   83408:	00080f3b 	.word	0x00080f3b
   8340c:	00080f33 	.word	0x00080f33
   83410:	200015b0 	.word	0x200015b0

00083414 <UART_Handler>:
enum{
	_SHELL_KBHIT = 2
};

void UART_Handler()
{
   83414:	b510      	push	{r4, lr}
   83416:	b082      	sub	sp, #8
	uint32_t dw_status = uart_get_status(UART);
   83418:	4816      	ldr	r0, [pc, #88]	; (83474 <UART_Handler+0x60>)
   8341a:	4b17      	ldr	r3, [pc, #92]	; (83478 <UART_Handler+0x64>)
   8341c:	4798      	blx	r3
   8341e:	4604      	mov	r4, r0
	//TX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_TXEMPTY))
   83420:	f410 7f00 	tst.w	r0, #512	; 0x200
   83424:	d011      	beq.n	8344a <UART_Handler+0x36>
	{
		if(shellcom.pTxRead!=shellcom.pTxWrite)
   83426:	4a15      	ldr	r2, [pc, #84]	; (8347c <UART_Handler+0x68>)
   83428:	6853      	ldr	r3, [r2, #4]
   8342a:	6812      	ldr	r2, [r2, #0]
   8342c:	4293      	cmp	r3, r2
   8342e:	d011      	beq.n	83454 <UART_Handler+0x40>
		{
			UART->UART_THR = *shellcom.pTxRead++;
   83430:	1c5a      	adds	r2, r3, #1
   83432:	4912      	ldr	r1, [pc, #72]	; (8347c <UART_Handler+0x68>)
   83434:	604a      	str	r2, [r1, #4]
   83436:	7819      	ldrb	r1, [r3, #0]
   83438:	4b0e      	ldr	r3, [pc, #56]	; (83474 <UART_Handler+0x60>)
   8343a:	61d9      	str	r1, [r3, #28]
			if(shellcom.pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxRead=shellcomTxBuf;
   8343c:	4b10      	ldr	r3, [pc, #64]	; (83480 <UART_Handler+0x6c>)
   8343e:	429a      	cmp	r2, r3
   83440:	d303      	bcc.n	8344a <UART_Handler+0x36>
   83442:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   83446:	4b0d      	ldr	r3, [pc, #52]	; (8347c <UART_Handler+0x68>)
   83448:	605a      	str	r2, [r3, #4]
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
		}
	}

	//RX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_RXRDY))
   8344a:	f014 0f01 	tst.w	r4, #1
   8344e:	d107      	bne.n	83460 <UART_Handler+0x4c>
	{
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
	}
}
   83450:	b002      	add	sp, #8
   83452:	bd10      	pop	{r4, pc}
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
   83454:	f44f 7100 	mov.w	r1, #512	; 0x200
   83458:	4806      	ldr	r0, [pc, #24]	; (83474 <UART_Handler+0x60>)
   8345a:	4b0a      	ldr	r3, [pc, #40]	; (83484 <UART_Handler+0x70>)
   8345c:	4798      	blx	r3
   8345e:	e7f4      	b.n	8344a <UART_Handler+0x36>
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
   83460:	4b04      	ldr	r3, [pc, #16]	; (83474 <UART_Handler+0x60>)
   83462:	699b      	ldr	r3, [r3, #24]
   83464:	2200      	movs	r2, #0
   83466:	9200      	str	r2, [sp, #0]
   83468:	2202      	movs	r2, #2
   8346a:	4907      	ldr	r1, [pc, #28]	; (83488 <UART_Handler+0x74>)
   8346c:	2066      	movs	r0, #102	; 0x66
   8346e:	4c07      	ldr	r4, [pc, #28]	; (8348c <UART_Handler+0x78>)
   83470:	47a0      	blx	r4
}
   83472:	e7ed      	b.n	83450 <UART_Handler+0x3c>
   83474:	400e0600 	.word	0x400e0600
   83478:	00080f3b 	.word	0x00080f3b
   8347c:	200013a8 	.word	0x200013a8
   83480:	200015b0 	.word	0x200015b0
   83484:	00080f37 	.word	0x00080f37
   83488:	000820c1 	.word	0x000820c1
   8348c:	00083491 	.word	0x00083491

00083490 <Taskman>:
	_TASKMAN_DELAYED_TASK_PROC	= 1
};


uint32_t Taskman(uint32_t sc, ...)
{
   83490:	b40f      	push	{r0, r1, r2, r3}
   83492:	b5f0      	push	{r4, r5, r6, r7, lr}
   83494:	b083      	sub	sp, #12
	switch(sc)
   83496:	9908      	ldr	r1, [sp, #32]
   83498:	2964      	cmp	r1, #100	; 0x64
   8349a:	d028      	beq.n	834ee <Taskman+0x5e>
   8349c:	d91e      	bls.n	834dc <Taskman+0x4c>
   8349e:	2966      	cmp	r1, #102	; 0x66
   834a0:	d06b      	beq.n	8357a <Taskman+0xea>
   834a2:	2967      	cmp	r1, #103	; 0x67
   834a4:	f040 80cd 	bne.w	83642 <Taskman+0x1b2>
#undef _delay
#undef k
		break;

	case TASKMAN_POP:
		cpu_irq_enter_critical();
   834a8:	4b68      	ldr	r3, [pc, #416]	; (8364c <Taskman+0x1bc>)
   834aa:	4798      	blx	r3
		if(taskman.pPop!=taskman.pPush)
   834ac:	4a68      	ldr	r2, [pc, #416]	; (83650 <Taskman+0x1c0>)
   834ae:	6853      	ldr	r3, [r2, #4]
   834b0:	6812      	ldr	r2, [r2, #0]
   834b2:	4293      	cmp	r3, r2
   834b4:	f000 80ae 	beq.w	83614 <Taskman+0x184>
		{
			t_pTaskFunc	 func;
			uint32_t pa;
			func = taskman.pPop->pFunc;
   834b8:	681d      	ldr	r5, [r3, #0]
			sc = taskman.pPop->sc;
   834ba:	685c      	ldr	r4, [r3, #4]
   834bc:	9408      	str	r4, [sp, #32]
			pa = taskman.pPop->param;
   834be:	689e      	ldr	r6, [r3, #8]
			taskman.pPop++;
   834c0:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPop=tasks;
   834c2:	4a64      	ldr	r2, [pc, #400]	; (83654 <Taskman+0x1c4>)
   834c4:	4293      	cmp	r3, r2
   834c6:	f0c0 80a2 	bcc.w	8360e <Taskman+0x17e>
   834ca:	4a63      	ldr	r2, [pc, #396]	; (83658 <Taskman+0x1c8>)
   834cc:	4b60      	ldr	r3, [pc, #384]	; (83650 <Taskman+0x1c0>)
   834ce:	605a      	str	r2, [r3, #4]
			cpu_irq_leave_critical();
   834d0:	4b62      	ldr	r3, [pc, #392]	; (8365c <Taskman+0x1cc>)
   834d2:	4798      	blx	r3
			func(sc,pa);
   834d4:	4631      	mov	r1, r6
   834d6:	4620      	mov	r0, r4
   834d8:	47a8      	blx	r5
			return 0; //Must return here because of "cpu_irq_leave_critical()"
   834da:	e048      	b.n	8356e <Taskman+0xde>
	switch(sc)
   834dc:	2901      	cmp	r1, #1
   834de:	f040 80b0 	bne.w	83642 <Taskman+0x1b2>


	////////// PRIVATE SERVICES IMPLEMENTATION ///////////////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   834e2:	2500      	movs	r5, #0
   834e4:	9508      	str	r5, [sp, #32]
   834e6:	4c5e      	ldr	r4, [pc, #376]	; (83660 <Taskman+0x1d0>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   834e8:	462f      	mov	r7, r5
   834ea:	2666      	movs	r6, #102	; 0x66
   834ec:	e09a      	b.n	83624 <Taskman+0x194>
		taskman.pPop=taskman.pPush=tasks;
   834ee:	4b58      	ldr	r3, [pc, #352]	; (83650 <Taskman+0x1c0>)
   834f0:	4a59      	ldr	r2, [pc, #356]	; (83658 <Taskman+0x1c8>)
   834f2:	601a      	str	r2, [r3, #0]
   834f4:	605a      	str	r2, [r3, #4]
   834f6:	4b5a      	ldr	r3, [pc, #360]	; (83660 <Taskman+0x1d0>)
   834f8:	f503 71a0 	add.w	r1, r3, #320	; 0x140
			dTasks[k].delay=0;
   834fc:	2200      	movs	r2, #0
   834fe:	60da      	str	r2, [r3, #12]
   83500:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   83502:	428b      	cmp	r3, r1
   83504:	d1fb      	bne.n	834fe <Taskman+0x6e>
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   83506:	4b57      	ldr	r3, [pc, #348]	; (83664 <Taskman+0x1d4>)
   83508:	2202      	movs	r2, #2
   8350a:	661a      	str	r2, [r3, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   8350c:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   8350e:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   83510:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   83514:	6f19      	ldr	r1, [r3, #112]	; 0x70
   83516:	f021 0102 	bic.w	r1, r1, #2
   8351a:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   8351c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8351e:	2016      	movs	r0, #22
   83520:	4b51      	ldr	r3, [pc, #324]	; (83668 <Taskman+0x1d8>)
   83522:	4798      	blx	r3

	//Configure the PMC to enable the TC module.
	sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	//Init TC to waveform mode.
	tc_init(
   83524:	4c51      	ldr	r4, [pc, #324]	; (8366c <Taskman+0x1dc>)
   83526:	4a52      	ldr	r2, [pc, #328]	; (83670 <Taskman+0x1e0>)
   83528:	2100      	movs	r1, #0
   8352a:	4620      	mov	r0, r4
   8352c:	4b51      	ldr	r3, [pc, #324]	; (83674 <Taskman+0x1e4>)
   8352e:	4798      	blx	r3

	//Configure waveform frequency and duty cycle.
	rc =	(sysclk_get_peripheral_bus_hz(TC) /
	TC_WAVEFORM_DIVISOR) /
	TC_WAVEFORM_FREQUENCY;
	tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   83530:	f240 22ee 	movw	r2, #750	; 0x2ee
   83534:	2100      	movs	r1, #0
   83536:	4620      	mov	r0, r4
   83538:	4b4f      	ldr	r3, [pc, #316]	; (83678 <Taskman+0x1e8>)
   8353a:	4798      	blx	r3

	ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   8353c:	f240 220d 	movw	r2, #525	; 0x20d
   83540:	2100      	movs	r1, #0
   83542:	4620      	mov	r0, r4
   83544:	4b4d      	ldr	r3, [pc, #308]	; (8367c <Taskman+0x1ec>)
   83546:	4798      	blx	r3

	//Enable TC TC_CHANNEL_WAVEFORM
	tc_start(TC, TC_CHANNEL_WAVEFORM);
   83548:	2100      	movs	r1, #0
   8354a:	4620      	mov	r0, r4
   8354c:	4b4c      	ldr	r3, [pc, #304]	; (83680 <Taskman+0x1f0>)
   8354e:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   83550:	4b4c      	ldr	r3, [pc, #304]	; (83684 <Taskman+0x1f4>)
   83552:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   83556:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   8355a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   8355e:	2100      	movs	r1, #0
   83560:	f883 1316 	strb.w	r1, [r3, #790]	; 0x316
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   83564:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   83566:	2204      	movs	r2, #4
   83568:	4620      	mov	r0, r4
   8356a:	4b47      	ldr	r3, [pc, #284]	; (83688 <Taskman+0x1f8>)
   8356c:	4798      	blx	r3
}
   8356e:	2000      	movs	r0, #0
   83570:	b003      	add	sp, #12
   83572:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83576:	b004      	add	sp, #16
   83578:	4770      	bx	lr
		cpu_irq_enter_critical();
   8357a:	4b34      	ldr	r3, [pc, #208]	; (8364c <Taskman+0x1bc>)
   8357c:	4798      	blx	r3
		if(_delay)
   8357e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   83580:	b345      	cbz	r5, 835d4 <Taskman+0x144>
			for(k=0;(k<TASKMAN_DELAYED_TASK_LIST_LEN)&&(dTasks[k].delay);k++);
   83582:	2300      	movs	r3, #0
   83584:	9308      	str	r3, [sp, #32]
   83586:	4b36      	ldr	r3, [pc, #216]	; (83660 <Taskman+0x1d0>)
   83588:	68db      	ldr	r3, [r3, #12]
   8358a:	b1a3      	cbz	r3, 835b6 <Taskman+0x126>
   8358c:	2301      	movs	r3, #1
   8358e:	9308      	str	r3, [sp, #32]
   83590:	4a33      	ldr	r2, [pc, #204]	; (83660 <Taskman+0x1d0>)
   83592:	2000      	movs	r0, #0
   83594:	461c      	mov	r4, r3
   83596:	69d1      	ldr	r1, [r2, #28]
   83598:	b151      	cbz	r1, 835b0 <Taskman+0x120>
   8359a:	3301      	adds	r3, #1
   8359c:	3210      	adds	r2, #16
   8359e:	4620      	mov	r0, r4
   835a0:	2b14      	cmp	r3, #20
   835a2:	d1f8      	bne.n	83596 <Taskman+0x106>
			if(k==TASKMAN_DELAYED_TASK_LIST_LEN) Error(ERROR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   835a4:	2100      	movs	r1, #0
   835a6:	2016      	movs	r0, #22
   835a8:	4b38      	ldr	r3, [pc, #224]	; (8368c <Taskman+0x1fc>)
   835aa:	4798      	blx	r3
   835ac:	2314      	movs	r3, #20
   835ae:	e002      	b.n	835b6 <Taskman+0x126>
   835b0:	b970      	cbnz	r0, 835d0 <Taskman+0x140>
   835b2:	2b14      	cmp	r3, #20
   835b4:	d0f6      	beq.n	835a4 <Taskman+0x114>
			dTasks[k].pFunc=_func;
   835b6:	492a      	ldr	r1, [pc, #168]	; (83660 <Taskman+0x1d0>)
   835b8:	011b      	lsls	r3, r3, #4
   835ba:	18ca      	adds	r2, r1, r3
   835bc:	9809      	ldr	r0, [sp, #36]	; 0x24
   835be:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   835c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   835c2:	6053      	str	r3, [r2, #4]
			dTasks[k].param=_param;
   835c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   835c6:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   835c8:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   835ca:	4b24      	ldr	r3, [pc, #144]	; (8365c <Taskman+0x1cc>)
   835cc:	4798      	blx	r3
		break;
   835ce:	e7ce      	b.n	8356e <Taskman+0xde>
   835d0:	9308      	str	r3, [sp, #32]
   835d2:	e7ee      	b.n	835b2 <Taskman+0x122>
			taskman.pPush->pFunc=_func;
   835d4:	4b1e      	ldr	r3, [pc, #120]	; (83650 <Taskman+0x1c0>)
   835d6:	681a      	ldr	r2, [r3, #0]
   835d8:	9909      	ldr	r1, [sp, #36]	; 0x24
   835da:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   835dc:	681b      	ldr	r3, [r3, #0]
   835de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   835e0:	605a      	str	r2, [r3, #4]
			taskman.pPush->param=_param;
   835e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   835e4:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   835e6:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   835e8:	4a1a      	ldr	r2, [pc, #104]	; (83654 <Taskman+0x1c4>)
   835ea:	4293      	cmp	r3, r2
   835ec:	d20b      	bcs.n	83606 <Taskman+0x176>
			taskman.pPush++;
   835ee:	4a18      	ldr	r2, [pc, #96]	; (83650 <Taskman+0x1c0>)
   835f0:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERROR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   835f2:	4b17      	ldr	r3, [pc, #92]	; (83650 <Taskman+0x1c0>)
   835f4:	681a      	ldr	r2, [r3, #0]
   835f6:	685b      	ldr	r3, [r3, #4]
   835f8:	429a      	cmp	r2, r3
   835fa:	d1e6      	bne.n	835ca <Taskman+0x13a>
   835fc:	2100      	movs	r1, #0
   835fe:	2015      	movs	r0, #21
   83600:	4b22      	ldr	r3, [pc, #136]	; (8368c <Taskman+0x1fc>)
   83602:	4798      	blx	r3
   83604:	e7e1      	b.n	835ca <Taskman+0x13a>
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   83606:	4a14      	ldr	r2, [pc, #80]	; (83658 <Taskman+0x1c8>)
   83608:	4b11      	ldr	r3, [pc, #68]	; (83650 <Taskman+0x1c0>)
   8360a:	601a      	str	r2, [r3, #0]
   8360c:	e7f1      	b.n	835f2 <Taskman+0x162>
			taskman.pPop++;
   8360e:	4a10      	ldr	r2, [pc, #64]	; (83650 <Taskman+0x1c0>)
   83610:	6053      	str	r3, [r2, #4]
   83612:	e75d      	b.n	834d0 <Taskman+0x40>
		cpu_irq_leave_critical();
   83614:	4b11      	ldr	r3, [pc, #68]	; (8365c <Taskman+0x1cc>)
   83616:	4798      	blx	r3
		break;
   83618:	e7a9      	b.n	8356e <Taskman+0xde>
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   8361a:	3501      	adds	r5, #1
   8361c:	9508      	str	r5, [sp, #32]
   8361e:	3410      	adds	r4, #16
   83620:	2d14      	cmp	r5, #20
   83622:	d0a4      	beq.n	8356e <Taskman+0xde>
			if(dTasks[k].delay)
   83624:	68e3      	ldr	r3, [r4, #12]
   83626:	2b00      	cmp	r3, #0
   83628:	d0f7      	beq.n	8361a <Taskman+0x18a>
				if(--dTasks[k].delay==0)
   8362a:	3b01      	subs	r3, #1
   8362c:	60e3      	str	r3, [r4, #12]
   8362e:	2b00      	cmp	r3, #0
   83630:	d1f3      	bne.n	8361a <Taskman+0x18a>
					PushTask(
   83632:	68a3      	ldr	r3, [r4, #8]
   83634:	6862      	ldr	r2, [r4, #4]
   83636:	6821      	ldr	r1, [r4, #0]
   83638:	9700      	str	r7, [sp, #0]
   8363a:	4630      	mov	r0, r6
   8363c:	f7ff ff28 	bl	83490 <Taskman>
   83640:	e7eb      	b.n	8361a <Taskman+0x18a>
		Error(ERROR_TASKMAN_SWITCH_BAD_SC,  (uint32_t)sc);
   83642:	200b      	movs	r0, #11
   83644:	4b11      	ldr	r3, [pc, #68]	; (8368c <Taskman+0x1fc>)
   83646:	4798      	blx	r3
   83648:	e791      	b.n	8356e <Taskman+0xde>
   8364a:	bf00      	nop
   8364c:	00080a91 	.word	0x00080a91
   83650:	200016f0 	.word	0x200016f0
   83654:	200016f0 	.word	0x200016f0
   83658:	200015b0 	.word	0x200015b0
   8365c:	00080acd 	.word	0x00080acd
   83660:	200016f8 	.word	0x200016f8
   83664:	400e0c00 	.word	0x400e0c00
   83668:	00080a59 	.word	0x00080a59
   8366c:	40080000 	.word	0x40080000
   83670:	0009c003 	.word	0x0009c003
   83674:	00080ebd 	.word	0x00080ebd
   83678:	00080ee5 	.word	0x00080ee5
   8367c:	00080edd 	.word	0x00080edd
   83680:	00080ed5 	.word	0x00080ed5
   83684:	e000e100 	.word	0xe000e100
   83688:	00080eed 	.word	0x00080eed
   8368c:	00081761 	.word	0x00081761

00083690 <TC0_Handler>:
{
   83690:	b508      	push	{r3, lr}
	tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   83692:	2100      	movs	r1, #0
   83694:	4804      	ldr	r0, [pc, #16]	; (836a8 <TC0_Handler+0x18>)
   83696:	4b05      	ldr	r3, [pc, #20]	; (836ac <TC0_Handler+0x1c>)
   83698:	4798      	blx	r3
	Taskman(_TASKMAN_DELAYED_TASK_PROC);
   8369a:	2001      	movs	r0, #1
   8369c:	4b04      	ldr	r3, [pc, #16]	; (836b0 <TC0_Handler+0x20>)
   8369e:	4798      	blx	r3
	Shell(_SHELL_TIMER);
   836a0:	2003      	movs	r0, #3
   836a2:	4b04      	ldr	r3, [pc, #16]	; (836b4 <TC0_Handler+0x24>)
   836a4:	4798      	blx	r3
   836a6:	bd08      	pop	{r3, pc}
   836a8:	40080000 	.word	0x40080000
   836ac:	00080ef5 	.word	0x00080ef5
   836b0:	00083491 	.word	0x00083491
   836b4:	000820c1 	.word	0x000820c1

000836b8 <mstrtokRestore>:
   836b8:	4b03      	ldr	r3, [pc, #12]	; (836c8 <mstrtokRestore+0x10>)
   836ba:	681b      	ldr	r3, [r3, #0]
   836bc:	b113      	cbz	r3, 836c4 <mstrtokRestore+0xc>
   836be:	4a03      	ldr	r2, [pc, #12]	; (836cc <mstrtokRestore+0x14>)
   836c0:	7812      	ldrb	r2, [r2, #0]
   836c2:	701a      	strb	r2, [r3, #0]
   836c4:	4770      	bx	lr
   836c6:	bf00      	nop
   836c8:	20001078 	.word	0x20001078
   836cc:	20001074 	.word	0x20001074

000836d0 <mstrtokReset>:
   836d0:	2300      	movs	r3, #0
   836d2:	4a02      	ldr	r2, [pc, #8]	; (836dc <mstrtokReset+0xc>)
   836d4:	7013      	strb	r3, [r2, #0]
   836d6:	4a02      	ldr	r2, [pc, #8]	; (836e0 <mstrtokReset+0x10>)
   836d8:	6013      	str	r3, [r2, #0]
   836da:	4770      	bx	lr
   836dc:	20001074 	.word	0x20001074
   836e0:	20001078 	.word	0x20001078

000836e4 <_IsSeparator>:
   836e4:	780b      	ldrb	r3, [r1, #0]
   836e6:	b13b      	cbz	r3, 836f8 <_IsSeparator+0x14>
   836e8:	4298      	cmp	r0, r3
   836ea:	d005      	beq.n	836f8 <_IsSeparator+0x14>
   836ec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
   836f0:	b113      	cbz	r3, 836f8 <_IsSeparator+0x14>
   836f2:	4283      	cmp	r3, r0
   836f4:	d1fa      	bne.n	836ec <_IsSeparator+0x8>
   836f6:	4603      	mov	r3, r0
   836f8:	4618      	mov	r0, r3
   836fa:	4770      	bx	lr

000836fc <mstrtok>:
   836fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83700:	2800      	cmp	r0, #0
   83702:	d02b      	beq.n	8375c <mstrtok+0x60>
   83704:	4a1d      	ldr	r2, [pc, #116]	; (8377c <mstrtok+0x80>)
   83706:	6010      	str	r0, [r2, #0]
   83708:	4b1c      	ldr	r3, [pc, #112]	; (8377c <mstrtok+0x80>)
   8370a:	681d      	ldr	r5, [r3, #0]
   8370c:	782c      	ldrb	r4, [r5, #0]
   8370e:	2c00      	cmp	r4, #0
   83710:	d030      	beq.n	83774 <mstrtok+0x78>
   83712:	4688      	mov	r8, r1
   83714:	4e1a      	ldr	r6, [pc, #104]	; (83780 <mstrtok+0x84>)
   83716:	4f19      	ldr	r7, [pc, #100]	; (8377c <mstrtok+0x80>)
   83718:	4641      	mov	r1, r8
   8371a:	4620      	mov	r0, r4
   8371c:	47b0      	blx	r6
   8371e:	b120      	cbz	r0, 8372a <mstrtok+0x2e>
   83720:	3501      	adds	r5, #1
   83722:	603d      	str	r5, [r7, #0]
   83724:	782c      	ldrb	r4, [r5, #0]
   83726:	2c00      	cmp	r4, #0
   83728:	d1f6      	bne.n	83718 <mstrtok+0x1c>
   8372a:	4b16      	ldr	r3, [pc, #88]	; (83784 <mstrtok+0x88>)
   8372c:	601d      	str	r5, [r3, #0]
   8372e:	782c      	ldrb	r4, [r5, #0]
   83730:	b1f4      	cbz	r4, 83770 <mstrtok+0x74>
   83732:	462e      	mov	r6, r5
   83734:	4f12      	ldr	r7, [pc, #72]	; (83780 <mstrtok+0x84>)
   83736:	f8df 904c 	ldr.w	r9, [pc, #76]	; 83784 <mstrtok+0x88>
   8373a:	4641      	mov	r1, r8
   8373c:	4620      	mov	r0, r4
   8373e:	47b8      	blx	r7
   83740:	b928      	cbnz	r0, 8374e <mstrtok+0x52>
   83742:	3601      	adds	r6, #1
   83744:	f8c9 6000 	str.w	r6, [r9]
   83748:	7834      	ldrb	r4, [r6, #0]
   8374a:	2c00      	cmp	r4, #0
   8374c:	d1f5      	bne.n	8373a <mstrtok+0x3e>
   8374e:	4b0e      	ldr	r3, [pc, #56]	; (83788 <mstrtok+0x8c>)
   83750:	701c      	strb	r4, [r3, #0]
   83752:	2300      	movs	r3, #0
   83754:	7033      	strb	r3, [r6, #0]
   83756:	4628      	mov	r0, r5
   83758:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8375c:	4b09      	ldr	r3, [pc, #36]	; (83784 <mstrtok+0x88>)
   8375e:	681d      	ldr	r5, [r3, #0]
   83760:	2d00      	cmp	r5, #0
   83762:	d0f8      	beq.n	83756 <mstrtok+0x5a>
   83764:	4b08      	ldr	r3, [pc, #32]	; (83788 <mstrtok+0x8c>)
   83766:	781b      	ldrb	r3, [r3, #0]
   83768:	702b      	strb	r3, [r5, #0]
   8376a:	4b04      	ldr	r3, [pc, #16]	; (8377c <mstrtok+0x80>)
   8376c:	601d      	str	r5, [r3, #0]
   8376e:	e7cb      	b.n	83708 <mstrtok+0xc>
   83770:	462e      	mov	r6, r5
   83772:	e7ec      	b.n	8374e <mstrtok+0x52>
   83774:	4b03      	ldr	r3, [pc, #12]	; (83784 <mstrtok+0x88>)
   83776:	601d      	str	r5, [r3, #0]
   83778:	462e      	mov	r6, r5
   8377a:	e7e8      	b.n	8374e <mstrtok+0x52>
   8377c:	2000107c 	.word	0x2000107c
   83780:	000836e5 	.word	0x000836e5
   83784:	20001078 	.word	0x20001078
   83788:	20001074 	.word	0x20001074

0008378c <main>:
#define SABLIER_NEW			100



int main (void)
{
   8378c:	b500      	push	{lr}
   8378e:	b083      	sub	sp, #12
   83790:	b672      	cpsid	i
   83792:	f3bf 8f5f 	dmb	sy
	//osc_enable(OSC_MAINCK_XTAL);
	/* Insert system clock initialization code here (sysclk_init()). */
	cpu_irq_disable();
   83796:	4e10      	ldr	r6, [pc, #64]	; (837d8 <main+0x4c>)
   83798:	2400      	movs	r4, #0
   8379a:	7034      	strb	r4, [r6, #0]
	wdt_disable(WDT);
   8379c:	480f      	ldr	r0, [pc, #60]	; (837dc <main+0x50>)
   8379e:	4b10      	ldr	r3, [pc, #64]	; (837e0 <main+0x54>)
   837a0:	4798      	blx	r3
	sysclk_init();
   837a2:	4b10      	ldr	r3, [pc, #64]	; (837e4 <main+0x58>)
   837a4:	4798      	blx	r3
	board_init();
   837a6:	4b10      	ldr	r3, [pc, #64]	; (837e8 <main+0x5c>)
   837a8:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());

	/* Insert application code here, after the board has been initialized. */
	KernelNew();
   837aa:	2064      	movs	r0, #100	; 0x64
   837ac:	4d0f      	ldr	r5, [pc, #60]	; (837ec <main+0x60>)
   837ae:	47a8      	blx	r5
   837b0:	2064      	movs	r0, #100	; 0x64
   837b2:	4b0f      	ldr	r3, [pc, #60]	; (837f0 <main+0x64>)
   837b4:	4798      	blx	r3
	cpu_irq_enable();
   837b6:	2301      	movs	r3, #1
   837b8:	7033      	strb	r3, [r6, #0]
   837ba:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   837be:	b662      	cpsie	i
	PushTask(Appli,APPLI_NEW,0,0);
   837c0:	9400      	str	r4, [sp, #0]
   837c2:	4623      	mov	r3, r4
   837c4:	2264      	movs	r2, #100	; 0x64
   837c6:	490b      	ldr	r1, [pc, #44]	; (837f4 <main+0x68>)
   837c8:	2066      	movs	r0, #102	; 0x66
   837ca:	47a8      	blx	r5
	KernelRun();
   837cc:	2567      	movs	r5, #103	; 0x67
   837ce:	4c07      	ldr	r4, [pc, #28]	; (837ec <main+0x60>)
   837d0:	4628      	mov	r0, r5
   837d2:	47a0      	blx	r4
   837d4:	e7fc      	b.n	837d0 <main+0x44>
   837d6:	bf00      	nop
   837d8:	20000124 	.word	0x20000124
   837dc:	400e1250 	.word	0x400e1250
   837e0:	00080f59 	.word	0x00080f59
   837e4:	0008069d 	.word	0x0008069d
   837e8:	00080a8d 	.word	0x00080a8d
   837ec:	00083491 	.word	0x00083491
   837f0:	000820c1 	.word	0x000820c1
   837f4:	00080129 	.word	0x00080129

000837f8 <__aeabi_frsub>:
   837f8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   837fc:	e002      	b.n	83804 <__addsf3>
   837fe:	bf00      	nop

00083800 <__aeabi_fsub>:
   83800:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00083804 <__addsf3>:
   83804:	0042      	lsls	r2, r0, #1
   83806:	bf1f      	itttt	ne
   83808:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   8380c:	ea92 0f03 	teqne	r2, r3
   83810:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   83814:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   83818:	d06a      	beq.n	838f0 <__addsf3+0xec>
   8381a:	ea4f 6212 	mov.w	r2, r2, lsr #24
   8381e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   83822:	bfc1      	itttt	gt
   83824:	18d2      	addgt	r2, r2, r3
   83826:	4041      	eorgt	r1, r0
   83828:	4048      	eorgt	r0, r1
   8382a:	4041      	eorgt	r1, r0
   8382c:	bfb8      	it	lt
   8382e:	425b      	neglt	r3, r3
   83830:	2b19      	cmp	r3, #25
   83832:	bf88      	it	hi
   83834:	4770      	bxhi	lr
   83836:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   8383a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   8383e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   83842:	bf18      	it	ne
   83844:	4240      	negne	r0, r0
   83846:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8384a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   8384e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   83852:	bf18      	it	ne
   83854:	4249      	negne	r1, r1
   83856:	ea92 0f03 	teq	r2, r3
   8385a:	d03f      	beq.n	838dc <__addsf3+0xd8>
   8385c:	f1a2 0201 	sub.w	r2, r2, #1
   83860:	fa41 fc03 	asr.w	ip, r1, r3
   83864:	eb10 000c 	adds.w	r0, r0, ip
   83868:	f1c3 0320 	rsb	r3, r3, #32
   8386c:	fa01 f103 	lsl.w	r1, r1, r3
   83870:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   83874:	d502      	bpl.n	8387c <__addsf3+0x78>
   83876:	4249      	negs	r1, r1
   83878:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   8387c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   83880:	d313      	bcc.n	838aa <__addsf3+0xa6>
   83882:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   83886:	d306      	bcc.n	83896 <__addsf3+0x92>
   83888:	0840      	lsrs	r0, r0, #1
   8388a:	ea4f 0131 	mov.w	r1, r1, rrx
   8388e:	f102 0201 	add.w	r2, r2, #1
   83892:	2afe      	cmp	r2, #254	; 0xfe
   83894:	d251      	bcs.n	8393a <__addsf3+0x136>
   83896:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   8389a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   8389e:	bf08      	it	eq
   838a0:	f020 0001 	biceq.w	r0, r0, #1
   838a4:	ea40 0003 	orr.w	r0, r0, r3
   838a8:	4770      	bx	lr
   838aa:	0049      	lsls	r1, r1, #1
   838ac:	eb40 0000 	adc.w	r0, r0, r0
   838b0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   838b4:	f1a2 0201 	sub.w	r2, r2, #1
   838b8:	d1ed      	bne.n	83896 <__addsf3+0x92>
   838ba:	fab0 fc80 	clz	ip, r0
   838be:	f1ac 0c08 	sub.w	ip, ip, #8
   838c2:	ebb2 020c 	subs.w	r2, r2, ip
   838c6:	fa00 f00c 	lsl.w	r0, r0, ip
   838ca:	bfaa      	itet	ge
   838cc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   838d0:	4252      	neglt	r2, r2
   838d2:	4318      	orrge	r0, r3
   838d4:	bfbc      	itt	lt
   838d6:	40d0      	lsrlt	r0, r2
   838d8:	4318      	orrlt	r0, r3
   838da:	4770      	bx	lr
   838dc:	f092 0f00 	teq	r2, #0
   838e0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   838e4:	bf06      	itte	eq
   838e6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   838ea:	3201      	addeq	r2, #1
   838ec:	3b01      	subne	r3, #1
   838ee:	e7b5      	b.n	8385c <__addsf3+0x58>
   838f0:	ea4f 0341 	mov.w	r3, r1, lsl #1
   838f4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   838f8:	bf18      	it	ne
   838fa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   838fe:	d021      	beq.n	83944 <__addsf3+0x140>
   83900:	ea92 0f03 	teq	r2, r3
   83904:	d004      	beq.n	83910 <__addsf3+0x10c>
   83906:	f092 0f00 	teq	r2, #0
   8390a:	bf08      	it	eq
   8390c:	4608      	moveq	r0, r1
   8390e:	4770      	bx	lr
   83910:	ea90 0f01 	teq	r0, r1
   83914:	bf1c      	itt	ne
   83916:	2000      	movne	r0, #0
   83918:	4770      	bxne	lr
   8391a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   8391e:	d104      	bne.n	8392a <__addsf3+0x126>
   83920:	0040      	lsls	r0, r0, #1
   83922:	bf28      	it	cs
   83924:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   83928:	4770      	bx	lr
   8392a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   8392e:	bf3c      	itt	cc
   83930:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   83934:	4770      	bxcc	lr
   83936:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   8393a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   8393e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83942:	4770      	bx	lr
   83944:	ea7f 6222 	mvns.w	r2, r2, asr #24
   83948:	bf16      	itet	ne
   8394a:	4608      	movne	r0, r1
   8394c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   83950:	4601      	movne	r1, r0
   83952:	0242      	lsls	r2, r0, #9
   83954:	bf06      	itte	eq
   83956:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   8395a:	ea90 0f01 	teqeq	r0, r1
   8395e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   83962:	4770      	bx	lr

00083964 <__aeabi_ui2f>:
   83964:	f04f 0300 	mov.w	r3, #0
   83968:	e004      	b.n	83974 <__aeabi_i2f+0x8>
   8396a:	bf00      	nop

0008396c <__aeabi_i2f>:
   8396c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   83970:	bf48      	it	mi
   83972:	4240      	negmi	r0, r0
   83974:	ea5f 0c00 	movs.w	ip, r0
   83978:	bf08      	it	eq
   8397a:	4770      	bxeq	lr
   8397c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   83980:	4601      	mov	r1, r0
   83982:	f04f 0000 	mov.w	r0, #0
   83986:	e01c      	b.n	839c2 <__aeabi_l2f+0x2a>

00083988 <__aeabi_ul2f>:
   83988:	ea50 0201 	orrs.w	r2, r0, r1
   8398c:	bf08      	it	eq
   8398e:	4770      	bxeq	lr
   83990:	f04f 0300 	mov.w	r3, #0
   83994:	e00a      	b.n	839ac <__aeabi_l2f+0x14>
   83996:	bf00      	nop

00083998 <__aeabi_l2f>:
   83998:	ea50 0201 	orrs.w	r2, r0, r1
   8399c:	bf08      	it	eq
   8399e:	4770      	bxeq	lr
   839a0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   839a4:	d502      	bpl.n	839ac <__aeabi_l2f+0x14>
   839a6:	4240      	negs	r0, r0
   839a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   839ac:	ea5f 0c01 	movs.w	ip, r1
   839b0:	bf02      	ittt	eq
   839b2:	4684      	moveq	ip, r0
   839b4:	4601      	moveq	r1, r0
   839b6:	2000      	moveq	r0, #0
   839b8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   839bc:	bf08      	it	eq
   839be:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   839c2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   839c6:	fabc f28c 	clz	r2, ip
   839ca:	3a08      	subs	r2, #8
   839cc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   839d0:	db10      	blt.n	839f4 <__aeabi_l2f+0x5c>
   839d2:	fa01 fc02 	lsl.w	ip, r1, r2
   839d6:	4463      	add	r3, ip
   839d8:	fa00 fc02 	lsl.w	ip, r0, r2
   839dc:	f1c2 0220 	rsb	r2, r2, #32
   839e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   839e4:	fa20 f202 	lsr.w	r2, r0, r2
   839e8:	eb43 0002 	adc.w	r0, r3, r2
   839ec:	bf08      	it	eq
   839ee:	f020 0001 	biceq.w	r0, r0, #1
   839f2:	4770      	bx	lr
   839f4:	f102 0220 	add.w	r2, r2, #32
   839f8:	fa01 fc02 	lsl.w	ip, r1, r2
   839fc:	f1c2 0220 	rsb	r2, r2, #32
   83a00:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   83a04:	fa21 f202 	lsr.w	r2, r1, r2
   83a08:	eb43 0002 	adc.w	r0, r3, r2
   83a0c:	bf08      	it	eq
   83a0e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   83a12:	4770      	bx	lr

00083a14 <__aeabi_fmul>:
   83a14:	f04f 0cff 	mov.w	ip, #255	; 0xff
   83a18:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   83a1c:	bf1e      	ittt	ne
   83a1e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   83a22:	ea92 0f0c 	teqne	r2, ip
   83a26:	ea93 0f0c 	teqne	r3, ip
   83a2a:	d06f      	beq.n	83b0c <__aeabi_fmul+0xf8>
   83a2c:	441a      	add	r2, r3
   83a2e:	ea80 0c01 	eor.w	ip, r0, r1
   83a32:	0240      	lsls	r0, r0, #9
   83a34:	bf18      	it	ne
   83a36:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   83a3a:	d01e      	beq.n	83a7a <__aeabi_fmul+0x66>
   83a3c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   83a40:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   83a44:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   83a48:	fba0 3101 	umull	r3, r1, r0, r1
   83a4c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   83a50:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   83a54:	bf3e      	ittt	cc
   83a56:	0049      	lslcc	r1, r1, #1
   83a58:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   83a5c:	005b      	lslcc	r3, r3, #1
   83a5e:	ea40 0001 	orr.w	r0, r0, r1
   83a62:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   83a66:	2afd      	cmp	r2, #253	; 0xfd
   83a68:	d81d      	bhi.n	83aa6 <__aeabi_fmul+0x92>
   83a6a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   83a6e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   83a72:	bf08      	it	eq
   83a74:	f020 0001 	biceq.w	r0, r0, #1
   83a78:	4770      	bx	lr
   83a7a:	f090 0f00 	teq	r0, #0
   83a7e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   83a82:	bf08      	it	eq
   83a84:	0249      	lsleq	r1, r1, #9
   83a86:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   83a8a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   83a8e:	3a7f      	subs	r2, #127	; 0x7f
   83a90:	bfc2      	ittt	gt
   83a92:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   83a96:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   83a9a:	4770      	bxgt	lr
   83a9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83aa0:	f04f 0300 	mov.w	r3, #0
   83aa4:	3a01      	subs	r2, #1
   83aa6:	dc5d      	bgt.n	83b64 <__aeabi_fmul+0x150>
   83aa8:	f112 0f19 	cmn.w	r2, #25
   83aac:	bfdc      	itt	le
   83aae:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   83ab2:	4770      	bxle	lr
   83ab4:	f1c2 0200 	rsb	r2, r2, #0
   83ab8:	0041      	lsls	r1, r0, #1
   83aba:	fa21 f102 	lsr.w	r1, r1, r2
   83abe:	f1c2 0220 	rsb	r2, r2, #32
   83ac2:	fa00 fc02 	lsl.w	ip, r0, r2
   83ac6:	ea5f 0031 	movs.w	r0, r1, rrx
   83aca:	f140 0000 	adc.w	r0, r0, #0
   83ace:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   83ad2:	bf08      	it	eq
   83ad4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   83ad8:	4770      	bx	lr
   83ada:	f092 0f00 	teq	r2, #0
   83ade:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   83ae2:	bf02      	ittt	eq
   83ae4:	0040      	lsleq	r0, r0, #1
   83ae6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   83aea:	3a01      	subeq	r2, #1
   83aec:	d0f9      	beq.n	83ae2 <__aeabi_fmul+0xce>
   83aee:	ea40 000c 	orr.w	r0, r0, ip
   83af2:	f093 0f00 	teq	r3, #0
   83af6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   83afa:	bf02      	ittt	eq
   83afc:	0049      	lsleq	r1, r1, #1
   83afe:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   83b02:	3b01      	subeq	r3, #1
   83b04:	d0f9      	beq.n	83afa <__aeabi_fmul+0xe6>
   83b06:	ea41 010c 	orr.w	r1, r1, ip
   83b0a:	e78f      	b.n	83a2c <__aeabi_fmul+0x18>
   83b0c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   83b10:	ea92 0f0c 	teq	r2, ip
   83b14:	bf18      	it	ne
   83b16:	ea93 0f0c 	teqne	r3, ip
   83b1a:	d00a      	beq.n	83b32 <__aeabi_fmul+0x11e>
   83b1c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   83b20:	bf18      	it	ne
   83b22:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   83b26:	d1d8      	bne.n	83ada <__aeabi_fmul+0xc6>
   83b28:	ea80 0001 	eor.w	r0, r0, r1
   83b2c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   83b30:	4770      	bx	lr
   83b32:	f090 0f00 	teq	r0, #0
   83b36:	bf17      	itett	ne
   83b38:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   83b3c:	4608      	moveq	r0, r1
   83b3e:	f091 0f00 	teqne	r1, #0
   83b42:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   83b46:	d014      	beq.n	83b72 <__aeabi_fmul+0x15e>
   83b48:	ea92 0f0c 	teq	r2, ip
   83b4c:	d101      	bne.n	83b52 <__aeabi_fmul+0x13e>
   83b4e:	0242      	lsls	r2, r0, #9
   83b50:	d10f      	bne.n	83b72 <__aeabi_fmul+0x15e>
   83b52:	ea93 0f0c 	teq	r3, ip
   83b56:	d103      	bne.n	83b60 <__aeabi_fmul+0x14c>
   83b58:	024b      	lsls	r3, r1, #9
   83b5a:	bf18      	it	ne
   83b5c:	4608      	movne	r0, r1
   83b5e:	d108      	bne.n	83b72 <__aeabi_fmul+0x15e>
   83b60:	ea80 0001 	eor.w	r0, r0, r1
   83b64:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   83b68:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   83b6c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83b70:	4770      	bx	lr
   83b72:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   83b76:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   83b7a:	4770      	bx	lr

00083b7c <__aeabi_fdiv>:
   83b7c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   83b80:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   83b84:	bf1e      	ittt	ne
   83b86:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   83b8a:	ea92 0f0c 	teqne	r2, ip
   83b8e:	ea93 0f0c 	teqne	r3, ip
   83b92:	d069      	beq.n	83c68 <__aeabi_fdiv+0xec>
   83b94:	eba2 0203 	sub.w	r2, r2, r3
   83b98:	ea80 0c01 	eor.w	ip, r0, r1
   83b9c:	0249      	lsls	r1, r1, #9
   83b9e:	ea4f 2040 	mov.w	r0, r0, lsl #9
   83ba2:	d037      	beq.n	83c14 <__aeabi_fdiv+0x98>
   83ba4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   83ba8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   83bac:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   83bb0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   83bb4:	428b      	cmp	r3, r1
   83bb6:	bf38      	it	cc
   83bb8:	005b      	lslcc	r3, r3, #1
   83bba:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   83bbe:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   83bc2:	428b      	cmp	r3, r1
   83bc4:	bf24      	itt	cs
   83bc6:	1a5b      	subcs	r3, r3, r1
   83bc8:	ea40 000c 	orrcs.w	r0, r0, ip
   83bcc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   83bd0:	bf24      	itt	cs
   83bd2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   83bd6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   83bda:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   83bde:	bf24      	itt	cs
   83be0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   83be4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   83be8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   83bec:	bf24      	itt	cs
   83bee:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   83bf2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   83bf6:	011b      	lsls	r3, r3, #4
   83bf8:	bf18      	it	ne
   83bfa:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   83bfe:	d1e0      	bne.n	83bc2 <__aeabi_fdiv+0x46>
   83c00:	2afd      	cmp	r2, #253	; 0xfd
   83c02:	f63f af50 	bhi.w	83aa6 <__aeabi_fmul+0x92>
   83c06:	428b      	cmp	r3, r1
   83c08:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   83c0c:	bf08      	it	eq
   83c0e:	f020 0001 	biceq.w	r0, r0, #1
   83c12:	4770      	bx	lr
   83c14:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   83c18:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   83c1c:	327f      	adds	r2, #127	; 0x7f
   83c1e:	bfc2      	ittt	gt
   83c20:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   83c24:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   83c28:	4770      	bxgt	lr
   83c2a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83c2e:	f04f 0300 	mov.w	r3, #0
   83c32:	3a01      	subs	r2, #1
   83c34:	e737      	b.n	83aa6 <__aeabi_fmul+0x92>
   83c36:	f092 0f00 	teq	r2, #0
   83c3a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   83c3e:	bf02      	ittt	eq
   83c40:	0040      	lsleq	r0, r0, #1
   83c42:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   83c46:	3a01      	subeq	r2, #1
   83c48:	d0f9      	beq.n	83c3e <__aeabi_fdiv+0xc2>
   83c4a:	ea40 000c 	orr.w	r0, r0, ip
   83c4e:	f093 0f00 	teq	r3, #0
   83c52:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   83c56:	bf02      	ittt	eq
   83c58:	0049      	lsleq	r1, r1, #1
   83c5a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   83c5e:	3b01      	subeq	r3, #1
   83c60:	d0f9      	beq.n	83c56 <__aeabi_fdiv+0xda>
   83c62:	ea41 010c 	orr.w	r1, r1, ip
   83c66:	e795      	b.n	83b94 <__aeabi_fdiv+0x18>
   83c68:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   83c6c:	ea92 0f0c 	teq	r2, ip
   83c70:	d108      	bne.n	83c84 <__aeabi_fdiv+0x108>
   83c72:	0242      	lsls	r2, r0, #9
   83c74:	f47f af7d 	bne.w	83b72 <__aeabi_fmul+0x15e>
   83c78:	ea93 0f0c 	teq	r3, ip
   83c7c:	f47f af70 	bne.w	83b60 <__aeabi_fmul+0x14c>
   83c80:	4608      	mov	r0, r1
   83c82:	e776      	b.n	83b72 <__aeabi_fmul+0x15e>
   83c84:	ea93 0f0c 	teq	r3, ip
   83c88:	d104      	bne.n	83c94 <__aeabi_fdiv+0x118>
   83c8a:	024b      	lsls	r3, r1, #9
   83c8c:	f43f af4c 	beq.w	83b28 <__aeabi_fmul+0x114>
   83c90:	4608      	mov	r0, r1
   83c92:	e76e      	b.n	83b72 <__aeabi_fmul+0x15e>
   83c94:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   83c98:	bf18      	it	ne
   83c9a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   83c9e:	d1ca      	bne.n	83c36 <__aeabi_fdiv+0xba>
   83ca0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   83ca4:	f47f af5c 	bne.w	83b60 <__aeabi_fmul+0x14c>
   83ca8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   83cac:	f47f af3c 	bne.w	83b28 <__aeabi_fmul+0x114>
   83cb0:	e75f      	b.n	83b72 <__aeabi_fmul+0x15e>
   83cb2:	bf00      	nop

00083cb4 <__aeabi_f2uiz>:
   83cb4:	0042      	lsls	r2, r0, #1
   83cb6:	d20e      	bcs.n	83cd6 <__aeabi_f2uiz+0x22>
   83cb8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   83cbc:	d30b      	bcc.n	83cd6 <__aeabi_f2uiz+0x22>
   83cbe:	f04f 039e 	mov.w	r3, #158	; 0x9e
   83cc2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   83cc6:	d409      	bmi.n	83cdc <__aeabi_f2uiz+0x28>
   83cc8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   83ccc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   83cd0:	fa23 f002 	lsr.w	r0, r3, r2
   83cd4:	4770      	bx	lr
   83cd6:	f04f 0000 	mov.w	r0, #0
   83cda:	4770      	bx	lr
   83cdc:	f112 0f61 	cmn.w	r2, #97	; 0x61
   83ce0:	d101      	bne.n	83ce6 <__aeabi_f2uiz+0x32>
   83ce2:	0242      	lsls	r2, r0, #9
   83ce4:	d102      	bne.n	83cec <__aeabi_f2uiz+0x38>
   83ce6:	f04f 30ff 	mov.w	r0, #4294967295
   83cea:	4770      	bx	lr
   83cec:	f04f 0000 	mov.w	r0, #0
   83cf0:	4770      	bx	lr
   83cf2:	bf00      	nop

00083cf4 <atoi>:
   83cf4:	220a      	movs	r2, #10
   83cf6:	2100      	movs	r1, #0
   83cf8:	f000 b998 	b.w	8402c <strtol>

00083cfc <__libc_init_array>:
   83cfc:	b570      	push	{r4, r5, r6, lr}
   83cfe:	4e0f      	ldr	r6, [pc, #60]	; (83d3c <__libc_init_array+0x40>)
   83d00:	4d0f      	ldr	r5, [pc, #60]	; (83d40 <__libc_init_array+0x44>)
   83d02:	1b76      	subs	r6, r6, r5
   83d04:	10b6      	asrs	r6, r6, #2
   83d06:	bf18      	it	ne
   83d08:	2400      	movne	r4, #0
   83d0a:	d005      	beq.n	83d18 <__libc_init_array+0x1c>
   83d0c:	3401      	adds	r4, #1
   83d0e:	f855 3b04 	ldr.w	r3, [r5], #4
   83d12:	4798      	blx	r3
   83d14:	42a6      	cmp	r6, r4
   83d16:	d1f9      	bne.n	83d0c <__libc_init_array+0x10>
   83d18:	4e0a      	ldr	r6, [pc, #40]	; (83d44 <__libc_init_array+0x48>)
   83d1a:	4d0b      	ldr	r5, [pc, #44]	; (83d48 <__libc_init_array+0x4c>)
   83d1c:	f005 fe6c 	bl	899f8 <_init>
   83d20:	1b76      	subs	r6, r6, r5
   83d22:	10b6      	asrs	r6, r6, #2
   83d24:	bf18      	it	ne
   83d26:	2400      	movne	r4, #0
   83d28:	d006      	beq.n	83d38 <__libc_init_array+0x3c>
   83d2a:	3401      	adds	r4, #1
   83d2c:	f855 3b04 	ldr.w	r3, [r5], #4
   83d30:	4798      	blx	r3
   83d32:	42a6      	cmp	r6, r4
   83d34:	d1f9      	bne.n	83d2a <__libc_init_array+0x2e>
   83d36:	bd70      	pop	{r4, r5, r6, pc}
   83d38:	bd70      	pop	{r4, r5, r6, pc}
   83d3a:	bf00      	nop
   83d3c:	00089a04 	.word	0x00089a04
   83d40:	00089a04 	.word	0x00089a04
   83d44:	00089a0c 	.word	0x00089a0c
   83d48:	00089a04 	.word	0x00089a04

00083d4c <memset>:
   83d4c:	b470      	push	{r4, r5, r6}
   83d4e:	0786      	lsls	r6, r0, #30
   83d50:	d046      	beq.n	83de0 <memset+0x94>
   83d52:	1e54      	subs	r4, r2, #1
   83d54:	2a00      	cmp	r2, #0
   83d56:	d041      	beq.n	83ddc <memset+0x90>
   83d58:	b2ca      	uxtb	r2, r1
   83d5a:	4603      	mov	r3, r0
   83d5c:	e002      	b.n	83d64 <memset+0x18>
   83d5e:	f114 34ff 	adds.w	r4, r4, #4294967295
   83d62:	d33b      	bcc.n	83ddc <memset+0x90>
   83d64:	f803 2b01 	strb.w	r2, [r3], #1
   83d68:	079d      	lsls	r5, r3, #30
   83d6a:	d1f8      	bne.n	83d5e <memset+0x12>
   83d6c:	2c03      	cmp	r4, #3
   83d6e:	d92e      	bls.n	83dce <memset+0x82>
   83d70:	b2cd      	uxtb	r5, r1
   83d72:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   83d76:	2c0f      	cmp	r4, #15
   83d78:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   83d7c:	d919      	bls.n	83db2 <memset+0x66>
   83d7e:	4626      	mov	r6, r4
   83d80:	f103 0210 	add.w	r2, r3, #16
   83d84:	3e10      	subs	r6, #16
   83d86:	2e0f      	cmp	r6, #15
   83d88:	f842 5c10 	str.w	r5, [r2, #-16]
   83d8c:	f842 5c0c 	str.w	r5, [r2, #-12]
   83d90:	f842 5c08 	str.w	r5, [r2, #-8]
   83d94:	f842 5c04 	str.w	r5, [r2, #-4]
   83d98:	f102 0210 	add.w	r2, r2, #16
   83d9c:	d8f2      	bhi.n	83d84 <memset+0x38>
   83d9e:	f1a4 0210 	sub.w	r2, r4, #16
   83da2:	f022 020f 	bic.w	r2, r2, #15
   83da6:	f004 040f 	and.w	r4, r4, #15
   83daa:	3210      	adds	r2, #16
   83dac:	2c03      	cmp	r4, #3
   83dae:	4413      	add	r3, r2
   83db0:	d90d      	bls.n	83dce <memset+0x82>
   83db2:	461e      	mov	r6, r3
   83db4:	4622      	mov	r2, r4
   83db6:	3a04      	subs	r2, #4
   83db8:	2a03      	cmp	r2, #3
   83dba:	f846 5b04 	str.w	r5, [r6], #4
   83dbe:	d8fa      	bhi.n	83db6 <memset+0x6a>
   83dc0:	1f22      	subs	r2, r4, #4
   83dc2:	f022 0203 	bic.w	r2, r2, #3
   83dc6:	3204      	adds	r2, #4
   83dc8:	4413      	add	r3, r2
   83dca:	f004 0403 	and.w	r4, r4, #3
   83dce:	b12c      	cbz	r4, 83ddc <memset+0x90>
   83dd0:	b2c9      	uxtb	r1, r1
   83dd2:	441c      	add	r4, r3
   83dd4:	f803 1b01 	strb.w	r1, [r3], #1
   83dd8:	429c      	cmp	r4, r3
   83dda:	d1fb      	bne.n	83dd4 <memset+0x88>
   83ddc:	bc70      	pop	{r4, r5, r6}
   83dde:	4770      	bx	lr
   83de0:	4614      	mov	r4, r2
   83de2:	4603      	mov	r3, r0
   83de4:	e7c2      	b.n	83d6c <memset+0x20>
   83de6:	bf00      	nop

00083de8 <sprintf>:
   83de8:	b40e      	push	{r1, r2, r3}
   83dea:	4601      	mov	r1, r0
   83dec:	b5f0      	push	{r4, r5, r6, r7, lr}
   83dee:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83df2:	f44f 7702 	mov.w	r7, #520	; 0x208
   83df6:	f64f 76ff 	movw	r6, #65535	; 0xffff
   83dfa:	b09c      	sub	sp, #112	; 0x70
   83dfc:	ac21      	add	r4, sp, #132	; 0x84
   83dfe:	f854 2b04 	ldr.w	r2, [r4], #4
   83e02:	4b0b      	ldr	r3, [pc, #44]	; (83e30 <sprintf+0x48>)
   83e04:	9102      	str	r1, [sp, #8]
   83e06:	9106      	str	r1, [sp, #24]
   83e08:	6818      	ldr	r0, [r3, #0]
   83e0a:	a902      	add	r1, sp, #8
   83e0c:	4623      	mov	r3, r4
   83e0e:	9401      	str	r4, [sp, #4]
   83e10:	f8ad 7014 	strh.w	r7, [sp, #20]
   83e14:	9504      	str	r5, [sp, #16]
   83e16:	9507      	str	r5, [sp, #28]
   83e18:	f8ad 6016 	strh.w	r6, [sp, #22]
   83e1c:	f000 f91c 	bl	84058 <_svfprintf_r>
   83e20:	2200      	movs	r2, #0
   83e22:	9b02      	ldr	r3, [sp, #8]
   83e24:	701a      	strb	r2, [r3, #0]
   83e26:	b01c      	add	sp, #112	; 0x70
   83e28:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83e2c:	b003      	add	sp, #12
   83e2e:	4770      	bx	lr
   83e30:	2000062c 	.word	0x2000062c

00083e34 <strlen>:
   83e34:	f020 0103 	bic.w	r1, r0, #3
   83e38:	f010 0003 	ands.w	r0, r0, #3
   83e3c:	f1c0 0000 	rsb	r0, r0, #0
   83e40:	f851 3b04 	ldr.w	r3, [r1], #4
   83e44:	f100 0c04 	add.w	ip, r0, #4
   83e48:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83e4c:	f06f 0200 	mvn.w	r2, #0
   83e50:	bf1c      	itt	ne
   83e52:	fa22 f20c 	lsrne.w	r2, r2, ip
   83e56:	4313      	orrne	r3, r2
   83e58:	f04f 0c01 	mov.w	ip, #1
   83e5c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83e60:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83e64:	eba3 020c 	sub.w	r2, r3, ip
   83e68:	ea22 0203 	bic.w	r2, r2, r3
   83e6c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83e70:	bf04      	itt	eq
   83e72:	f851 3b04 	ldreq.w	r3, [r1], #4
   83e76:	3004      	addeq	r0, #4
   83e78:	d0f4      	beq.n	83e64 <strlen+0x30>
   83e7a:	f1c2 0100 	rsb	r1, r2, #0
   83e7e:	ea02 0201 	and.w	r2, r2, r1
   83e82:	fab2 f282 	clz	r2, r2
   83e86:	f1c2 021f 	rsb	r2, r2, #31
   83e8a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83e8e:	4770      	bx	lr

00083e90 <strtok>:
   83e90:	4a02      	ldr	r2, [pc, #8]	; (83e9c <strtok+0xc>)
   83e92:	2301      	movs	r3, #1
   83e94:	6812      	ldr	r2, [r2, #0]
   83e96:	325c      	adds	r2, #92	; 0x5c
   83e98:	f000 b802 	b.w	83ea0 <__strtok_r>
   83e9c:	2000062c 	.word	0x2000062c

00083ea0 <__strtok_r>:
   83ea0:	b4f0      	push	{r4, r5, r6, r7}
   83ea2:	b318      	cbz	r0, 83eec <__strtok_r+0x4c>
   83ea4:	4607      	mov	r7, r0
   83ea6:	460d      	mov	r5, r1
   83ea8:	f817 6b01 	ldrb.w	r6, [r7], #1
   83eac:	e001      	b.n	83eb2 <__strtok_r+0x12>
   83eae:	42a6      	cmp	r6, r4
   83eb0:	d017      	beq.n	83ee2 <__strtok_r+0x42>
   83eb2:	f815 4b01 	ldrb.w	r4, [r5], #1
   83eb6:	2c00      	cmp	r4, #0
   83eb8:	d1f9      	bne.n	83eae <__strtok_r+0xe>
   83eba:	b1e6      	cbz	r6, 83ef6 <__strtok_r+0x56>
   83ebc:	460c      	mov	r4, r1
   83ebe:	f817 5b01 	ldrb.w	r5, [r7], #1
   83ec2:	e001      	b.n	83ec8 <__strtok_r+0x28>
   83ec4:	2b00      	cmp	r3, #0
   83ec6:	d0f9      	beq.n	83ebc <__strtok_r+0x1c>
   83ec8:	f814 3b01 	ldrb.w	r3, [r4], #1
   83ecc:	429d      	cmp	r5, r3
   83ece:	d1f9      	bne.n	83ec4 <__strtok_r+0x24>
   83ed0:	b155      	cbz	r5, 83ee8 <__strtok_r+0x48>
   83ed2:	2300      	movs	r3, #0
   83ed4:	f807 3c01 	strb.w	r3, [r7, #-1]
   83ed8:	4606      	mov	r6, r0
   83eda:	6017      	str	r7, [r2, #0]
   83edc:	4630      	mov	r0, r6
   83ede:	bcf0      	pop	{r4, r5, r6, r7}
   83ee0:	4770      	bx	lr
   83ee2:	b153      	cbz	r3, 83efa <__strtok_r+0x5a>
   83ee4:	4638      	mov	r0, r7
   83ee6:	e7dd      	b.n	83ea4 <__strtok_r+0x4>
   83ee8:	462f      	mov	r7, r5
   83eea:	e7f5      	b.n	83ed8 <__strtok_r+0x38>
   83eec:	6810      	ldr	r0, [r2, #0]
   83eee:	2800      	cmp	r0, #0
   83ef0:	d1d8      	bne.n	83ea4 <__strtok_r+0x4>
   83ef2:	4606      	mov	r6, r0
   83ef4:	e7f2      	b.n	83edc <__strtok_r+0x3c>
   83ef6:	6016      	str	r6, [r2, #0]
   83ef8:	e7f0      	b.n	83edc <__strtok_r+0x3c>
   83efa:	6017      	str	r7, [r2, #0]
   83efc:	4606      	mov	r6, r0
   83efe:	7003      	strb	r3, [r0, #0]
   83f00:	e7ec      	b.n	83edc <__strtok_r+0x3c>
   83f02:	bf00      	nop

00083f04 <_strtol_l.isra.0>:
   83f04:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83f08:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83f0c:	460f      	mov	r7, r1
   83f0e:	4680      	mov	r8, r0
   83f10:	4616      	mov	r6, r2
   83f12:	461d      	mov	r5, r3
   83f14:	468a      	mov	sl, r1
   83f16:	e000      	b.n	83f1a <_strtol_l.isra.0+0x16>
   83f18:	46a2      	mov	sl, r4
   83f1a:	4654      	mov	r4, sl
   83f1c:	4648      	mov	r0, r9
   83f1e:	f814 bb01 	ldrb.w	fp, [r4], #1
   83f22:	f002 faf9 	bl	86518 <__locale_ctype_ptr_l>
   83f26:	4458      	add	r0, fp
   83f28:	7842      	ldrb	r2, [r0, #1]
   83f2a:	f012 0208 	ands.w	r2, r2, #8
   83f2e:	d1f3      	bne.n	83f18 <_strtol_l.isra.0+0x14>
   83f30:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   83f34:	d04f      	beq.n	83fd6 <_strtol_l.isra.0+0xd2>
   83f36:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   83f3a:	bf04      	itt	eq
   83f3c:	f894 b000 	ldrbeq.w	fp, [r4]
   83f40:	f10a 0402 	addeq.w	r4, sl, #2
   83f44:	b11d      	cbz	r5, 83f4e <_strtol_l.isra.0+0x4a>
   83f46:	2d10      	cmp	r5, #16
   83f48:	d056      	beq.n	83ff8 <_strtol_l.isra.0+0xf4>
   83f4a:	46ac      	mov	ip, r5
   83f4c:	e004      	b.n	83f58 <_strtol_l.isra.0+0x54>
   83f4e:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   83f52:	d060      	beq.n	84016 <_strtol_l.isra.0+0x112>
   83f54:	250a      	movs	r5, #10
   83f56:	46ac      	mov	ip, r5
   83f58:	2a00      	cmp	r2, #0
   83f5a:	bf0c      	ite	eq
   83f5c:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   83f60:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   83f64:	2100      	movs	r1, #0
   83f66:	fbb9 fefc 	udiv	lr, r9, ip
   83f6a:	4608      	mov	r0, r1
   83f6c:	fb0c 9a1e 	mls	sl, ip, lr, r9
   83f70:	e005      	b.n	83f7e <_strtol_l.isra.0+0x7a>
   83f72:	d029      	beq.n	83fc8 <_strtol_l.isra.0+0xc4>
   83f74:	2101      	movs	r1, #1
   83f76:	fb0c 3000 	mla	r0, ip, r0, r3
   83f7a:	f814 bb01 	ldrb.w	fp, [r4], #1
   83f7e:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   83f82:	2b09      	cmp	r3, #9
   83f84:	d905      	bls.n	83f92 <_strtol_l.isra.0+0x8e>
   83f86:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   83f8a:	2b19      	cmp	r3, #25
   83f8c:	d80b      	bhi.n	83fa6 <_strtol_l.isra.0+0xa2>
   83f8e:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   83f92:	429d      	cmp	r5, r3
   83f94:	dd0f      	ble.n	83fb6 <_strtol_l.isra.0+0xb2>
   83f96:	f1b1 3fff 	cmp.w	r1, #4294967295
   83f9a:	d0ee      	beq.n	83f7a <_strtol_l.isra.0+0x76>
   83f9c:	4586      	cmp	lr, r0
   83f9e:	d2e8      	bcs.n	83f72 <_strtol_l.isra.0+0x6e>
   83fa0:	f04f 31ff 	mov.w	r1, #4294967295
   83fa4:	e7e9      	b.n	83f7a <_strtol_l.isra.0+0x76>
   83fa6:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   83faa:	2b19      	cmp	r3, #25
   83fac:	d803      	bhi.n	83fb6 <_strtol_l.isra.0+0xb2>
   83fae:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   83fb2:	429d      	cmp	r5, r3
   83fb4:	dcef      	bgt.n	83f96 <_strtol_l.isra.0+0x92>
   83fb6:	1c4b      	adds	r3, r1, #1
   83fb8:	d013      	beq.n	83fe2 <_strtol_l.isra.0+0xde>
   83fba:	b102      	cbz	r2, 83fbe <_strtol_l.isra.0+0xba>
   83fbc:	4240      	negs	r0, r0
   83fbe:	b146      	cbz	r6, 83fd2 <_strtol_l.isra.0+0xce>
   83fc0:	b9c1      	cbnz	r1, 83ff4 <_strtol_l.isra.0+0xf0>
   83fc2:	6037      	str	r7, [r6, #0]
   83fc4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83fc8:	459a      	cmp	sl, r3
   83fca:	dad3      	bge.n	83f74 <_strtol_l.isra.0+0x70>
   83fcc:	f04f 31ff 	mov.w	r1, #4294967295
   83fd0:	e7d3      	b.n	83f7a <_strtol_l.isra.0+0x76>
   83fd2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83fd6:	f894 b000 	ldrb.w	fp, [r4]
   83fda:	2201      	movs	r2, #1
   83fdc:	f10a 0402 	add.w	r4, sl, #2
   83fe0:	e7b0      	b.n	83f44 <_strtol_l.isra.0+0x40>
   83fe2:	2322      	movs	r3, #34	; 0x22
   83fe4:	f8c8 3000 	str.w	r3, [r8]
   83fe8:	b1ee      	cbz	r6, 84026 <_strtol_l.isra.0+0x122>
   83fea:	1e67      	subs	r7, r4, #1
   83fec:	4648      	mov	r0, r9
   83fee:	6037      	str	r7, [r6, #0]
   83ff0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ff4:	4681      	mov	r9, r0
   83ff6:	e7f8      	b.n	83fea <_strtol_l.isra.0+0xe6>
   83ff8:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   83ffc:	d1a5      	bne.n	83f4a <_strtol_l.isra.0+0x46>
   83ffe:	7823      	ldrb	r3, [r4, #0]
   84000:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   84004:	2b58      	cmp	r3, #88	; 0x58
   84006:	d1a0      	bne.n	83f4a <_strtol_l.isra.0+0x46>
   84008:	f04f 0c10 	mov.w	ip, #16
   8400c:	f894 b001 	ldrb.w	fp, [r4, #1]
   84010:	4665      	mov	r5, ip
   84012:	3402      	adds	r4, #2
   84014:	e7a0      	b.n	83f58 <_strtol_l.isra.0+0x54>
   84016:	7823      	ldrb	r3, [r4, #0]
   84018:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   8401c:	2b58      	cmp	r3, #88	; 0x58
   8401e:	d0f3      	beq.n	84008 <_strtol_l.isra.0+0x104>
   84020:	2508      	movs	r5, #8
   84022:	46ac      	mov	ip, r5
   84024:	e798      	b.n	83f58 <_strtol_l.isra.0+0x54>
   84026:	4648      	mov	r0, r9
   84028:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008402c <strtol>:
   8402c:	4b08      	ldr	r3, [pc, #32]	; (84050 <strtol+0x24>)
   8402e:	b570      	push	{r4, r5, r6, lr}
   84030:	681d      	ldr	r5, [r3, #0]
   84032:	4e08      	ldr	r6, [pc, #32]	; (84054 <strtol+0x28>)
   84034:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   84036:	b082      	sub	sp, #8
   84038:	2c00      	cmp	r4, #0
   8403a:	bf08      	it	eq
   8403c:	4634      	moveq	r4, r6
   8403e:	4613      	mov	r3, r2
   84040:	9400      	str	r4, [sp, #0]
   84042:	460a      	mov	r2, r1
   84044:	4601      	mov	r1, r0
   84046:	4628      	mov	r0, r5
   84048:	f7ff ff5c 	bl	83f04 <_strtol_l.isra.0>
   8404c:	b002      	add	sp, #8
   8404e:	bd70      	pop	{r4, r5, r6, pc}
   84050:	2000062c 	.word	0x2000062c
   84054:	20000a5c 	.word	0x20000a5c

00084058 <_svfprintf_r>:
   84058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8405c:	b0c3      	sub	sp, #268	; 0x10c
   8405e:	460c      	mov	r4, r1
   84060:	910b      	str	r1, [sp, #44]	; 0x2c
   84062:	4692      	mov	sl, r2
   84064:	930f      	str	r3, [sp, #60]	; 0x3c
   84066:	900c      	str	r0, [sp, #48]	; 0x30
   84068:	f002 fa5a 	bl	86520 <_localeconv_r>
   8406c:	6803      	ldr	r3, [r0, #0]
   8406e:	4618      	mov	r0, r3
   84070:	931a      	str	r3, [sp, #104]	; 0x68
   84072:	f7ff fedf 	bl	83e34 <strlen>
   84076:	89a3      	ldrh	r3, [r4, #12]
   84078:	9019      	str	r0, [sp, #100]	; 0x64
   8407a:	0619      	lsls	r1, r3, #24
   8407c:	d503      	bpl.n	84086 <_svfprintf_r+0x2e>
   8407e:	6923      	ldr	r3, [r4, #16]
   84080:	2b00      	cmp	r3, #0
   84082:	f001 8035 	beq.w	850f0 <_svfprintf_r+0x1098>
   84086:	2300      	movs	r3, #0
   84088:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   8408c:	46c8      	mov	r8, r9
   8408e:	9315      	str	r3, [sp, #84]	; 0x54
   84090:	9313      	str	r3, [sp, #76]	; 0x4c
   84092:	9314      	str	r3, [sp, #80]	; 0x50
   84094:	9318      	str	r3, [sp, #96]	; 0x60
   84096:	931b      	str	r3, [sp, #108]	; 0x6c
   84098:	9309      	str	r3, [sp, #36]	; 0x24
   8409a:	9316      	str	r3, [sp, #88]	; 0x58
   8409c:	9317      	str	r3, [sp, #92]	; 0x5c
   8409e:	9327      	str	r3, [sp, #156]	; 0x9c
   840a0:	9326      	str	r3, [sp, #152]	; 0x98
   840a2:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   840a6:	f89a 3000 	ldrb.w	r3, [sl]
   840aa:	4654      	mov	r4, sl
   840ac:	b1eb      	cbz	r3, 840ea <_svfprintf_r+0x92>
   840ae:	2b25      	cmp	r3, #37	; 0x25
   840b0:	d102      	bne.n	840b8 <_svfprintf_r+0x60>
   840b2:	e01a      	b.n	840ea <_svfprintf_r+0x92>
   840b4:	2b25      	cmp	r3, #37	; 0x25
   840b6:	d003      	beq.n	840c0 <_svfprintf_r+0x68>
   840b8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   840bc:	2b00      	cmp	r3, #0
   840be:	d1f9      	bne.n	840b4 <_svfprintf_r+0x5c>
   840c0:	eba4 050a 	sub.w	r5, r4, sl
   840c4:	b18d      	cbz	r5, 840ea <_svfprintf_r+0x92>
   840c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   840c8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   840ca:	3301      	adds	r3, #1
   840cc:	442a      	add	r2, r5
   840ce:	2b07      	cmp	r3, #7
   840d0:	f8c8 a000 	str.w	sl, [r8]
   840d4:	f8c8 5004 	str.w	r5, [r8, #4]
   840d8:	9227      	str	r2, [sp, #156]	; 0x9c
   840da:	9326      	str	r3, [sp, #152]	; 0x98
   840dc:	f300 808a 	bgt.w	841f4 <_svfprintf_r+0x19c>
   840e0:	f108 0808 	add.w	r8, r8, #8
   840e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   840e6:	442b      	add	r3, r5
   840e8:	9309      	str	r3, [sp, #36]	; 0x24
   840ea:	7823      	ldrb	r3, [r4, #0]
   840ec:	2b00      	cmp	r3, #0
   840ee:	f000 8089 	beq.w	84204 <_svfprintf_r+0x1ac>
   840f2:	2300      	movs	r3, #0
   840f4:	f04f 30ff 	mov.w	r0, #4294967295
   840f8:	461a      	mov	r2, r3
   840fa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   840fe:	4619      	mov	r1, r3
   84100:	930d      	str	r3, [sp, #52]	; 0x34
   84102:	469b      	mov	fp, r3
   84104:	7863      	ldrb	r3, [r4, #1]
   84106:	f104 0a01 	add.w	sl, r4, #1
   8410a:	900a      	str	r0, [sp, #40]	; 0x28
   8410c:	f10a 0a01 	add.w	sl, sl, #1
   84110:	f1a3 0020 	sub.w	r0, r3, #32
   84114:	2858      	cmp	r0, #88	; 0x58
   84116:	f200 83b7 	bhi.w	84888 <_svfprintf_r+0x830>
   8411a:	e8df f010 	tbh	[pc, r0, lsl #1]
   8411e:	034c      	.short	0x034c
   84120:	03b503b5 	.word	0x03b503b5
   84124:	03b50354 	.word	0x03b50354
   84128:	03b503b5 	.word	0x03b503b5
   8412c:	03b503b5 	.word	0x03b503b5
   84130:	005903b5 	.word	0x005903b5
   84134:	03b50359 	.word	0x03b50359
   84138:	02140066 	.word	0x02140066
   8413c:	022f03b5 	.word	0x022f03b5
   84140:	03a503a5 	.word	0x03a503a5
   84144:	03a503a5 	.word	0x03a503a5
   84148:	03a503a5 	.word	0x03a503a5
   8414c:	03a503a5 	.word	0x03a503a5
   84150:	03b503a5 	.word	0x03b503a5
   84154:	03b503b5 	.word	0x03b503b5
   84158:	03b503b5 	.word	0x03b503b5
   8415c:	03b503b5 	.word	0x03b503b5
   84160:	03b503b5 	.word	0x03b503b5
   84164:	028b03b5 	.word	0x028b03b5
   84168:	03b502d3 	.word	0x03b502d3
   8416c:	03b502d3 	.word	0x03b502d3
   84170:	03b503b5 	.word	0x03b503b5
   84174:	031b03b5 	.word	0x031b03b5
   84178:	03b503b5 	.word	0x03b503b5
   8417c:	03b50320 	.word	0x03b50320
   84180:	03b503b5 	.word	0x03b503b5
   84184:	03b503b5 	.word	0x03b503b5
   84188:	03b50234 	.word	0x03b50234
   8418c:	024b03b5 	.word	0x024b03b5
   84190:	03b503b5 	.word	0x03b503b5
   84194:	03b503b5 	.word	0x03b503b5
   84198:	03b503b5 	.word	0x03b503b5
   8419c:	03b503b5 	.word	0x03b503b5
   841a0:	03b503b5 	.word	0x03b503b5
   841a4:	039e0276 	.word	0x039e0276
   841a8:	02d302d3 	.word	0x02d302d3
   841ac:	036302d3 	.word	0x036302d3
   841b0:	03b5039e 	.word	0x03b5039e
   841b4:	036803b5 	.word	0x036803b5
   841b8:	037503b5 	.word	0x037503b5
   841bc:	038c01dd 	.word	0x038c01dd
   841c0:	03b5035e 	.word	0x03b5035e
   841c4:	03b501f2 	.word	0x03b501f2
   841c8:	03b50087 	.word	0x03b50087
   841cc:	033203b5 	.word	0x033203b5
   841d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   841d2:	6823      	ldr	r3, [r4, #0]
   841d4:	4618      	mov	r0, r3
   841d6:	930d      	str	r3, [sp, #52]	; 0x34
   841d8:	4623      	mov	r3, r4
   841da:	2800      	cmp	r0, #0
   841dc:	f103 0304 	add.w	r3, r3, #4
   841e0:	930f      	str	r3, [sp, #60]	; 0x3c
   841e2:	da04      	bge.n	841ee <_svfprintf_r+0x196>
   841e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   841e6:	425b      	negs	r3, r3
   841e8:	930d      	str	r3, [sp, #52]	; 0x34
   841ea:	f04b 0b04 	orr.w	fp, fp, #4
   841ee:	f89a 3000 	ldrb.w	r3, [sl]
   841f2:	e78b      	b.n	8410c <_svfprintf_r+0xb4>
   841f4:	aa25      	add	r2, sp, #148	; 0x94
   841f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   841f8:	980c      	ldr	r0, [sp, #48]	; 0x30
   841fa:	f003 f831 	bl	87260 <__ssprint_r>
   841fe:	b940      	cbnz	r0, 84212 <_svfprintf_r+0x1ba>
   84200:	46c8      	mov	r8, r9
   84202:	e76f      	b.n	840e4 <_svfprintf_r+0x8c>
   84204:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   84206:	b123      	cbz	r3, 84212 <_svfprintf_r+0x1ba>
   84208:	980c      	ldr	r0, [sp, #48]	; 0x30
   8420a:	aa25      	add	r2, sp, #148	; 0x94
   8420c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8420e:	f003 f827 	bl	87260 <__ssprint_r>
   84212:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84214:	899b      	ldrh	r3, [r3, #12]
   84216:	f013 0f40 	tst.w	r3, #64	; 0x40
   8421a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8421c:	bf18      	it	ne
   8421e:	f04f 33ff 	movne.w	r3, #4294967295
   84222:	9309      	str	r3, [sp, #36]	; 0x24
   84224:	9809      	ldr	r0, [sp, #36]	; 0x24
   84226:	b043      	add	sp, #268	; 0x10c
   84228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8422c:	f01b 0f20 	tst.w	fp, #32
   84230:	9311      	str	r3, [sp, #68]	; 0x44
   84232:	f040 81af 	bne.w	84594 <_svfprintf_r+0x53c>
   84236:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84238:	f01b 0f10 	tst.w	fp, #16
   8423c:	4613      	mov	r3, r2
   8423e:	f040 859a 	bne.w	84d76 <_svfprintf_r+0xd1e>
   84242:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84246:	f000 8596 	beq.w	84d76 <_svfprintf_r+0xd1e>
   8424a:	2500      	movs	r5, #0
   8424c:	2301      	movs	r3, #1
   8424e:	8814      	ldrh	r4, [r2, #0]
   84250:	3204      	adds	r2, #4
   84252:	920f      	str	r2, [sp, #60]	; 0x3c
   84254:	2200      	movs	r2, #0
   84256:	4617      	mov	r7, r2
   84258:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   8425c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8425e:	1c4a      	adds	r2, r1, #1
   84260:	f000 8210 	beq.w	84684 <_svfprintf_r+0x62c>
   84264:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   84268:	9207      	str	r2, [sp, #28]
   8426a:	ea54 0205 	orrs.w	r2, r4, r5
   8426e:	f040 820f 	bne.w	84690 <_svfprintf_r+0x638>
   84272:	2900      	cmp	r1, #0
   84274:	f040 8431 	bne.w	84ada <_svfprintf_r+0xa82>
   84278:	2b00      	cmp	r3, #0
   8427a:	f040 8539 	bne.w	84cf0 <_svfprintf_r+0xc98>
   8427e:	f01b 0301 	ands.w	r3, fp, #1
   84282:	930e      	str	r3, [sp, #56]	; 0x38
   84284:	f000 8662 	beq.w	84f4c <_svfprintf_r+0xef4>
   84288:	2330      	movs	r3, #48	; 0x30
   8428a:	ae42      	add	r6, sp, #264	; 0x108
   8428c:	f806 3d41 	strb.w	r3, [r6, #-65]!
   84290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84292:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84294:	4293      	cmp	r3, r2
   84296:	bfb8      	it	lt
   84298:	4613      	movlt	r3, r2
   8429a:	9308      	str	r3, [sp, #32]
   8429c:	2300      	movs	r3, #0
   8429e:	9312      	str	r3, [sp, #72]	; 0x48
   842a0:	b117      	cbz	r7, 842a8 <_svfprintf_r+0x250>
   842a2:	9b08      	ldr	r3, [sp, #32]
   842a4:	3301      	adds	r3, #1
   842a6:	9308      	str	r3, [sp, #32]
   842a8:	9b07      	ldr	r3, [sp, #28]
   842aa:	f013 0302 	ands.w	r3, r3, #2
   842ae:	9310      	str	r3, [sp, #64]	; 0x40
   842b0:	d002      	beq.n	842b8 <_svfprintf_r+0x260>
   842b2:	9b08      	ldr	r3, [sp, #32]
   842b4:	3302      	adds	r3, #2
   842b6:	9308      	str	r3, [sp, #32]
   842b8:	9b07      	ldr	r3, [sp, #28]
   842ba:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   842be:	f040 8310 	bne.w	848e2 <_svfprintf_r+0x88a>
   842c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   842c4:	9a08      	ldr	r2, [sp, #32]
   842c6:	eba3 0b02 	sub.w	fp, r3, r2
   842ca:	f1bb 0f00 	cmp.w	fp, #0
   842ce:	f340 8308 	ble.w	848e2 <_svfprintf_r+0x88a>
   842d2:	f1bb 0f10 	cmp.w	fp, #16
   842d6:	f340 87b2 	ble.w	8523e <_svfprintf_r+0x11e6>
   842da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   842dc:	4643      	mov	r3, r8
   842de:	4621      	mov	r1, r4
   842e0:	46a8      	mov	r8, r5
   842e2:	2710      	movs	r7, #16
   842e4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   842e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   842e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   842ea:	e006      	b.n	842fa <_svfprintf_r+0x2a2>
   842ec:	f1ab 0b10 	sub.w	fp, fp, #16
   842f0:	f1bb 0f10 	cmp.w	fp, #16
   842f4:	f103 0308 	add.w	r3, r3, #8
   842f8:	dd18      	ble.n	8432c <_svfprintf_r+0x2d4>
   842fa:	3201      	adds	r2, #1
   842fc:	48ab      	ldr	r0, [pc, #684]	; (845ac <_svfprintf_r+0x554>)
   842fe:	3110      	adds	r1, #16
   84300:	2a07      	cmp	r2, #7
   84302:	9127      	str	r1, [sp, #156]	; 0x9c
   84304:	9226      	str	r2, [sp, #152]	; 0x98
   84306:	e883 0081 	stmia.w	r3, {r0, r7}
   8430a:	ddef      	ble.n	842ec <_svfprintf_r+0x294>
   8430c:	aa25      	add	r2, sp, #148	; 0x94
   8430e:	4629      	mov	r1, r5
   84310:	4620      	mov	r0, r4
   84312:	f002 ffa5 	bl	87260 <__ssprint_r>
   84316:	2800      	cmp	r0, #0
   84318:	f47f af7b 	bne.w	84212 <_svfprintf_r+0x1ba>
   8431c:	f1ab 0b10 	sub.w	fp, fp, #16
   84320:	f1bb 0f10 	cmp.w	fp, #16
   84324:	464b      	mov	r3, r9
   84326:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84328:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8432a:	dce6      	bgt.n	842fa <_svfprintf_r+0x2a2>
   8432c:	4645      	mov	r5, r8
   8432e:	460c      	mov	r4, r1
   84330:	4698      	mov	r8, r3
   84332:	3201      	adds	r2, #1
   84334:	4b9d      	ldr	r3, [pc, #628]	; (845ac <_svfprintf_r+0x554>)
   84336:	445c      	add	r4, fp
   84338:	2a07      	cmp	r2, #7
   8433a:	9427      	str	r4, [sp, #156]	; 0x9c
   8433c:	9226      	str	r2, [sp, #152]	; 0x98
   8433e:	e888 0808 	stmia.w	r8, {r3, fp}
   84342:	f300 82c3 	bgt.w	848cc <_svfprintf_r+0x874>
   84346:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8434a:	f108 0808 	add.w	r8, r8, #8
   8434e:	b187      	cbz	r7, 84372 <_svfprintf_r+0x31a>
   84350:	2101      	movs	r1, #1
   84352:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84354:	440c      	add	r4, r1
   84356:	440b      	add	r3, r1
   84358:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   8435c:	2b07      	cmp	r3, #7
   8435e:	9427      	str	r4, [sp, #156]	; 0x9c
   84360:	9326      	str	r3, [sp, #152]	; 0x98
   84362:	f8c8 1004 	str.w	r1, [r8, #4]
   84366:	f8c8 2000 	str.w	r2, [r8]
   8436a:	f300 83cd 	bgt.w	84b08 <_svfprintf_r+0xab0>
   8436e:	f108 0808 	add.w	r8, r8, #8
   84372:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84374:	b17b      	cbz	r3, 84396 <_svfprintf_r+0x33e>
   84376:	2102      	movs	r1, #2
   84378:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8437a:	440c      	add	r4, r1
   8437c:	3301      	adds	r3, #1
   8437e:	aa1e      	add	r2, sp, #120	; 0x78
   84380:	2b07      	cmp	r3, #7
   84382:	9427      	str	r4, [sp, #156]	; 0x9c
   84384:	9326      	str	r3, [sp, #152]	; 0x98
   84386:	f8c8 1004 	str.w	r1, [r8, #4]
   8438a:	f8c8 2000 	str.w	r2, [r8]
   8438e:	f300 8411 	bgt.w	84bb4 <_svfprintf_r+0xb5c>
   84392:	f108 0808 	add.w	r8, r8, #8
   84396:	2d80      	cmp	r5, #128	; 0x80
   84398:	f000 8304 	beq.w	849a4 <_svfprintf_r+0x94c>
   8439c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8439e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   843a0:	1a9f      	subs	r7, r3, r2
   843a2:	2f00      	cmp	r7, #0
   843a4:	dd37      	ble.n	84416 <_svfprintf_r+0x3be>
   843a6:	2f10      	cmp	r7, #16
   843a8:	f340 8679 	ble.w	8509e <_svfprintf_r+0x1046>
   843ac:	4d80      	ldr	r5, [pc, #512]	; (845b0 <_svfprintf_r+0x558>)
   843ae:	4642      	mov	r2, r8
   843b0:	4621      	mov	r1, r4
   843b2:	46b0      	mov	r8, r6
   843b4:	f04f 0b10 	mov.w	fp, #16
   843b8:	462e      	mov	r6, r5
   843ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
   843bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   843be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   843c0:	e004      	b.n	843cc <_svfprintf_r+0x374>
   843c2:	3f10      	subs	r7, #16
   843c4:	2f10      	cmp	r7, #16
   843c6:	f102 0208 	add.w	r2, r2, #8
   843ca:	dd15      	ble.n	843f8 <_svfprintf_r+0x3a0>
   843cc:	3301      	adds	r3, #1
   843ce:	3110      	adds	r1, #16
   843d0:	2b07      	cmp	r3, #7
   843d2:	9127      	str	r1, [sp, #156]	; 0x9c
   843d4:	9326      	str	r3, [sp, #152]	; 0x98
   843d6:	e882 0840 	stmia.w	r2, {r6, fp}
   843da:	ddf2      	ble.n	843c2 <_svfprintf_r+0x36a>
   843dc:	aa25      	add	r2, sp, #148	; 0x94
   843de:	4629      	mov	r1, r5
   843e0:	4620      	mov	r0, r4
   843e2:	f002 ff3d 	bl	87260 <__ssprint_r>
   843e6:	2800      	cmp	r0, #0
   843e8:	f47f af13 	bne.w	84212 <_svfprintf_r+0x1ba>
   843ec:	3f10      	subs	r7, #16
   843ee:	2f10      	cmp	r7, #16
   843f0:	464a      	mov	r2, r9
   843f2:	9927      	ldr	r1, [sp, #156]	; 0x9c
   843f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   843f6:	dce9      	bgt.n	843cc <_svfprintf_r+0x374>
   843f8:	4635      	mov	r5, r6
   843fa:	460c      	mov	r4, r1
   843fc:	4646      	mov	r6, r8
   843fe:	4690      	mov	r8, r2
   84400:	3301      	adds	r3, #1
   84402:	443c      	add	r4, r7
   84404:	2b07      	cmp	r3, #7
   84406:	9427      	str	r4, [sp, #156]	; 0x9c
   84408:	9326      	str	r3, [sp, #152]	; 0x98
   8440a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8440e:	f300 8370 	bgt.w	84af2 <_svfprintf_r+0xa9a>
   84412:	f108 0808 	add.w	r8, r8, #8
   84416:	9b07      	ldr	r3, [sp, #28]
   84418:	05df      	lsls	r7, r3, #23
   8441a:	f100 8264 	bmi.w	848e6 <_svfprintf_r+0x88e>
   8441e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84420:	990e      	ldr	r1, [sp, #56]	; 0x38
   84422:	3301      	adds	r3, #1
   84424:	440c      	add	r4, r1
   84426:	2b07      	cmp	r3, #7
   84428:	9427      	str	r4, [sp, #156]	; 0x9c
   8442a:	f8c8 6000 	str.w	r6, [r8]
   8442e:	f8c8 1004 	str.w	r1, [r8, #4]
   84432:	9326      	str	r3, [sp, #152]	; 0x98
   84434:	f300 83b3 	bgt.w	84b9e <_svfprintf_r+0xb46>
   84438:	f108 0808 	add.w	r8, r8, #8
   8443c:	9b07      	ldr	r3, [sp, #28]
   8443e:	075b      	lsls	r3, r3, #29
   84440:	d53b      	bpl.n	844ba <_svfprintf_r+0x462>
   84442:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84444:	9a08      	ldr	r2, [sp, #32]
   84446:	1a9d      	subs	r5, r3, r2
   84448:	2d00      	cmp	r5, #0
   8444a:	dd36      	ble.n	844ba <_svfprintf_r+0x462>
   8444c:	2d10      	cmp	r5, #16
   8444e:	f340 8721 	ble.w	85294 <_svfprintf_r+0x123c>
   84452:	2610      	movs	r6, #16
   84454:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84456:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84458:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   8445c:	e004      	b.n	84468 <_svfprintf_r+0x410>
   8445e:	3d10      	subs	r5, #16
   84460:	2d10      	cmp	r5, #16
   84462:	f108 0808 	add.w	r8, r8, #8
   84466:	dd16      	ble.n	84496 <_svfprintf_r+0x43e>
   84468:	3301      	adds	r3, #1
   8446a:	4a50      	ldr	r2, [pc, #320]	; (845ac <_svfprintf_r+0x554>)
   8446c:	3410      	adds	r4, #16
   8446e:	2b07      	cmp	r3, #7
   84470:	9427      	str	r4, [sp, #156]	; 0x9c
   84472:	9326      	str	r3, [sp, #152]	; 0x98
   84474:	e888 0044 	stmia.w	r8, {r2, r6}
   84478:	ddf1      	ble.n	8445e <_svfprintf_r+0x406>
   8447a:	aa25      	add	r2, sp, #148	; 0x94
   8447c:	4659      	mov	r1, fp
   8447e:	4638      	mov	r0, r7
   84480:	f002 feee 	bl	87260 <__ssprint_r>
   84484:	2800      	cmp	r0, #0
   84486:	f47f aec4 	bne.w	84212 <_svfprintf_r+0x1ba>
   8448a:	3d10      	subs	r5, #16
   8448c:	2d10      	cmp	r5, #16
   8448e:	46c8      	mov	r8, r9
   84490:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84492:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84494:	dce8      	bgt.n	84468 <_svfprintf_r+0x410>
   84496:	3301      	adds	r3, #1
   84498:	4a44      	ldr	r2, [pc, #272]	; (845ac <_svfprintf_r+0x554>)
   8449a:	442c      	add	r4, r5
   8449c:	2b07      	cmp	r3, #7
   8449e:	9427      	str	r4, [sp, #156]	; 0x9c
   844a0:	9326      	str	r3, [sp, #152]	; 0x98
   844a2:	e888 0024 	stmia.w	r8, {r2, r5}
   844a6:	dd08      	ble.n	844ba <_svfprintf_r+0x462>
   844a8:	aa25      	add	r2, sp, #148	; 0x94
   844aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   844ac:	980c      	ldr	r0, [sp, #48]	; 0x30
   844ae:	f002 fed7 	bl	87260 <__ssprint_r>
   844b2:	2800      	cmp	r0, #0
   844b4:	f47f aead 	bne.w	84212 <_svfprintf_r+0x1ba>
   844b8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   844ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
   844bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   844be:	9908      	ldr	r1, [sp, #32]
   844c0:	428a      	cmp	r2, r1
   844c2:	bfac      	ite	ge
   844c4:	189b      	addge	r3, r3, r2
   844c6:	185b      	addlt	r3, r3, r1
   844c8:	9309      	str	r3, [sp, #36]	; 0x24
   844ca:	2c00      	cmp	r4, #0
   844cc:	f040 82fb 	bne.w	84ac6 <_svfprintf_r+0xa6e>
   844d0:	2300      	movs	r3, #0
   844d2:	46c8      	mov	r8, r9
   844d4:	9326      	str	r3, [sp, #152]	; 0x98
   844d6:	e5e6      	b.n	840a6 <_svfprintf_r+0x4e>
   844d8:	9311      	str	r3, [sp, #68]	; 0x44
   844da:	f01b 0320 	ands.w	r3, fp, #32
   844de:	f040 8145 	bne.w	8476c <_svfprintf_r+0x714>
   844e2:	f01b 0210 	ands.w	r2, fp, #16
   844e6:	f040 8466 	bne.w	84db6 <_svfprintf_r+0xd5e>
   844ea:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   844ee:	f000 8462 	beq.w	84db6 <_svfprintf_r+0xd5e>
   844f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
   844f4:	4613      	mov	r3, r2
   844f6:	460a      	mov	r2, r1
   844f8:	3204      	adds	r2, #4
   844fa:	880c      	ldrh	r4, [r1, #0]
   844fc:	2500      	movs	r5, #0
   844fe:	920f      	str	r2, [sp, #60]	; 0x3c
   84500:	e6a8      	b.n	84254 <_svfprintf_r+0x1fc>
   84502:	2500      	movs	r5, #0
   84504:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84506:	9311      	str	r3, [sp, #68]	; 0x44
   84508:	6816      	ldr	r6, [r2, #0]
   8450a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   8450e:	1d14      	adds	r4, r2, #4
   84510:	2e00      	cmp	r6, #0
   84512:	f000 86cd 	beq.w	852b0 <_svfprintf_r+0x1258>
   84516:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84518:	1c53      	adds	r3, r2, #1
   8451a:	f000 861b 	beq.w	85154 <_svfprintf_r+0x10fc>
   8451e:	4629      	mov	r1, r5
   84520:	4630      	mov	r0, r6
   84522:	f002 fac7 	bl	86ab4 <memchr>
   84526:	2800      	cmp	r0, #0
   84528:	f000 870d 	beq.w	85346 <_svfprintf_r+0x12ee>
   8452c:	1b83      	subs	r3, r0, r6
   8452e:	950a      	str	r5, [sp, #40]	; 0x28
   84530:	930e      	str	r3, [sp, #56]	; 0x38
   84532:	940f      	str	r4, [sp, #60]	; 0x3c
   84534:	f8cd b01c 	str.w	fp, [sp, #28]
   84538:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8453c:	9308      	str	r3, [sp, #32]
   8453e:	9512      	str	r5, [sp, #72]	; 0x48
   84540:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84544:	e6ac      	b.n	842a0 <_svfprintf_r+0x248>
   84546:	f89a 3000 	ldrb.w	r3, [sl]
   8454a:	f10a 0401 	add.w	r4, sl, #1
   8454e:	2b2a      	cmp	r3, #42	; 0x2a
   84550:	f000 87c2 	beq.w	854d8 <_svfprintf_r+0x1480>
   84554:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84558:	2809      	cmp	r0, #9
   8455a:	46a2      	mov	sl, r4
   8455c:	f200 8718 	bhi.w	85390 <_svfprintf_r+0x1338>
   84560:	2300      	movs	r3, #0
   84562:	461c      	mov	r4, r3
   84564:	f81a 3b01 	ldrb.w	r3, [sl], #1
   84568:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8456c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   84570:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84574:	2809      	cmp	r0, #9
   84576:	d9f5      	bls.n	84564 <_svfprintf_r+0x50c>
   84578:	940a      	str	r4, [sp, #40]	; 0x28
   8457a:	e5c9      	b.n	84110 <_svfprintf_r+0xb8>
   8457c:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   84580:	f89a 3000 	ldrb.w	r3, [sl]
   84584:	e5c2      	b.n	8410c <_svfprintf_r+0xb4>
   84586:	f04b 0b10 	orr.w	fp, fp, #16
   8458a:	f01b 0f20 	tst.w	fp, #32
   8458e:	9311      	str	r3, [sp, #68]	; 0x44
   84590:	f43f ae51 	beq.w	84236 <_svfprintf_r+0x1de>
   84594:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84596:	3407      	adds	r4, #7
   84598:	f024 0307 	bic.w	r3, r4, #7
   8459c:	f103 0208 	add.w	r2, r3, #8
   845a0:	e9d3 4500 	ldrd	r4, r5, [r3]
   845a4:	920f      	str	r2, [sp, #60]	; 0x3c
   845a6:	2301      	movs	r3, #1
   845a8:	e654      	b.n	84254 <_svfprintf_r+0x1fc>
   845aa:	bf00      	nop
   845ac:	000897bc 	.word	0x000897bc
   845b0:	000897cc 	.word	0x000897cc
   845b4:	9311      	str	r3, [sp, #68]	; 0x44
   845b6:	2a00      	cmp	r2, #0
   845b8:	f040 87ad 	bne.w	85516 <_svfprintf_r+0x14be>
   845bc:	4bbe      	ldr	r3, [pc, #760]	; (848b8 <_svfprintf_r+0x860>)
   845be:	f01b 0f20 	tst.w	fp, #32
   845c2:	9318      	str	r3, [sp, #96]	; 0x60
   845c4:	f040 80e7 	bne.w	84796 <_svfprintf_r+0x73e>
   845c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   845ca:	f01b 0f10 	tst.w	fp, #16
   845ce:	4613      	mov	r3, r2
   845d0:	f040 83d8 	bne.w	84d84 <_svfprintf_r+0xd2c>
   845d4:	f01b 0f40 	tst.w	fp, #64	; 0x40
   845d8:	f000 83d4 	beq.w	84d84 <_svfprintf_r+0xd2c>
   845dc:	2500      	movs	r5, #0
   845de:	3304      	adds	r3, #4
   845e0:	8814      	ldrh	r4, [r2, #0]
   845e2:	930f      	str	r3, [sp, #60]	; 0x3c
   845e4:	f01b 0f01 	tst.w	fp, #1
   845e8:	f000 80e3 	beq.w	847b2 <_svfprintf_r+0x75a>
   845ec:	ea54 0305 	orrs.w	r3, r4, r5
   845f0:	f000 80df 	beq.w	847b2 <_svfprintf_r+0x75a>
   845f4:	2330      	movs	r3, #48	; 0x30
   845f6:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   845fa:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   845fe:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   84602:	f04b 0b02 	orr.w	fp, fp, #2
   84606:	2302      	movs	r3, #2
   84608:	e624      	b.n	84254 <_svfprintf_r+0x1fc>
   8460a:	2201      	movs	r2, #1
   8460c:	9311      	str	r3, [sp, #68]	; 0x44
   8460e:	2300      	movs	r3, #0
   84610:	4611      	mov	r1, r2
   84612:	980f      	ldr	r0, [sp, #60]	; 0x3c
   84614:	9208      	str	r2, [sp, #32]
   84616:	6802      	ldr	r2, [r0, #0]
   84618:	461f      	mov	r7, r3
   8461a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8461e:	930a      	str	r3, [sp, #40]	; 0x28
   84620:	9312      	str	r3, [sp, #72]	; 0x48
   84622:	1d03      	adds	r3, r0, #4
   84624:	f8cd b01c 	str.w	fp, [sp, #28]
   84628:	910e      	str	r1, [sp, #56]	; 0x38
   8462a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   8462e:	930f      	str	r3, [sp, #60]	; 0x3c
   84630:	ae28      	add	r6, sp, #160	; 0xa0
   84632:	e639      	b.n	842a8 <_svfprintf_r+0x250>
   84634:	9311      	str	r3, [sp, #68]	; 0x44
   84636:	2a00      	cmp	r2, #0
   84638:	f040 8784 	bne.w	85544 <_svfprintf_r+0x14ec>
   8463c:	f04b 0b10 	orr.w	fp, fp, #16
   84640:	f01b 0f20 	tst.w	fp, #32
   84644:	f040 8475 	bne.w	84f32 <_svfprintf_r+0xeda>
   84648:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8464a:	f01b 0f10 	tst.w	fp, #16
   8464e:	4613      	mov	r3, r2
   84650:	f040 839d 	bne.w	84d8e <_svfprintf_r+0xd36>
   84654:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84658:	f000 8399 	beq.w	84d8e <_svfprintf_r+0xd36>
   8465c:	f9b2 4000 	ldrsh.w	r4, [r2]
   84660:	3304      	adds	r3, #4
   84662:	17e5      	asrs	r5, r4, #31
   84664:	930f      	str	r3, [sp, #60]	; 0x3c
   84666:	4622      	mov	r2, r4
   84668:	462b      	mov	r3, r5
   8466a:	2a00      	cmp	r2, #0
   8466c:	f173 0300 	sbcs.w	r3, r3, #0
   84670:	f2c0 8398 	blt.w	84da4 <_svfprintf_r+0xd4c>
   84674:	990a      	ldr	r1, [sp, #40]	; 0x28
   84676:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8467a:	1c4a      	adds	r2, r1, #1
   8467c:	f04f 0301 	mov.w	r3, #1
   84680:	f47f adf0 	bne.w	84264 <_svfprintf_r+0x20c>
   84684:	ea54 0205 	orrs.w	r2, r4, r5
   84688:	f000 8229 	beq.w	84ade <_svfprintf_r+0xa86>
   8468c:	f8cd b01c 	str.w	fp, [sp, #28]
   84690:	2b01      	cmp	r3, #1
   84692:	f000 830e 	beq.w	84cb2 <_svfprintf_r+0xc5a>
   84696:	2b02      	cmp	r3, #2
   84698:	f040 829c 	bne.w	84bd4 <_svfprintf_r+0xb7c>
   8469c:	464e      	mov	r6, r9
   8469e:	9818      	ldr	r0, [sp, #96]	; 0x60
   846a0:	0923      	lsrs	r3, r4, #4
   846a2:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   846a6:	0929      	lsrs	r1, r5, #4
   846a8:	f004 020f 	and.w	r2, r4, #15
   846ac:	460d      	mov	r5, r1
   846ae:	461c      	mov	r4, r3
   846b0:	5c83      	ldrb	r3, [r0, r2]
   846b2:	f806 3d01 	strb.w	r3, [r6, #-1]!
   846b6:	ea54 0305 	orrs.w	r3, r4, r5
   846ba:	d1f1      	bne.n	846a0 <_svfprintf_r+0x648>
   846bc:	eba9 0306 	sub.w	r3, r9, r6
   846c0:	930e      	str	r3, [sp, #56]	; 0x38
   846c2:	e5e5      	b.n	84290 <_svfprintf_r+0x238>
   846c4:	9311      	str	r3, [sp, #68]	; 0x44
   846c6:	2a00      	cmp	r2, #0
   846c8:	f040 8738 	bne.w	8553c <_svfprintf_r+0x14e4>
   846cc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   846ce:	f01b 0f08 	tst.w	fp, #8
   846d2:	f104 0407 	add.w	r4, r4, #7
   846d6:	f000 84cf 	beq.w	85078 <_svfprintf_r+0x1020>
   846da:	f024 0307 	bic.w	r3, r4, #7
   846de:	f103 0208 	add.w	r2, r3, #8
   846e2:	920f      	str	r2, [sp, #60]	; 0x3c
   846e4:	681a      	ldr	r2, [r3, #0]
   846e6:	685b      	ldr	r3, [r3, #4]
   846e8:	9215      	str	r2, [sp, #84]	; 0x54
   846ea:	9314      	str	r3, [sp, #80]	; 0x50
   846ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
   846ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
   846f0:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   846f4:	4628      	mov	r0, r5
   846f6:	4621      	mov	r1, r4
   846f8:	f04f 32ff 	mov.w	r2, #4294967295
   846fc:	4b6f      	ldr	r3, [pc, #444]	; (848bc <_svfprintf_r+0x864>)
   846fe:	f003 fe6d 	bl	883dc <__aeabi_dcmpun>
   84702:	2800      	cmp	r0, #0
   84704:	f040 8434 	bne.w	84f70 <_svfprintf_r+0xf18>
   84708:	4628      	mov	r0, r5
   8470a:	4621      	mov	r1, r4
   8470c:	f04f 32ff 	mov.w	r2, #4294967295
   84710:	4b6a      	ldr	r3, [pc, #424]	; (848bc <_svfprintf_r+0x864>)
   84712:	f003 fe45 	bl	883a0 <__aeabi_dcmple>
   84716:	2800      	cmp	r0, #0
   84718:	f040 842a 	bne.w	84f70 <_svfprintf_r+0xf18>
   8471c:	a815      	add	r0, sp, #84	; 0x54
   8471e:	c80d      	ldmia	r0, {r0, r2, r3}
   84720:	9914      	ldr	r1, [sp, #80]	; 0x50
   84722:	f003 fe33 	bl	8838c <__aeabi_dcmplt>
   84726:	2800      	cmp	r0, #0
   84728:	f040 85d4 	bne.w	852d4 <_svfprintf_r+0x127c>
   8472c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84730:	2303      	movs	r3, #3
   84732:	461a      	mov	r2, r3
   84734:	9308      	str	r3, [sp, #32]
   84736:	2300      	movs	r3, #0
   84738:	4e61      	ldr	r6, [pc, #388]	; (848c0 <_svfprintf_r+0x868>)
   8473a:	4619      	mov	r1, r3
   8473c:	930a      	str	r3, [sp, #40]	; 0x28
   8473e:	4b61      	ldr	r3, [pc, #388]	; (848c4 <_svfprintf_r+0x86c>)
   84740:	920e      	str	r2, [sp, #56]	; 0x38
   84742:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84744:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   84748:	9007      	str	r0, [sp, #28]
   8474a:	9112      	str	r1, [sp, #72]	; 0x48
   8474c:	2a47      	cmp	r2, #71	; 0x47
   8474e:	bfd8      	it	le
   84750:	461e      	movle	r6, r3
   84752:	e5a5      	b.n	842a0 <_svfprintf_r+0x248>
   84754:	f04b 0b08 	orr.w	fp, fp, #8
   84758:	f89a 3000 	ldrb.w	r3, [sl]
   8475c:	e4d6      	b.n	8410c <_svfprintf_r+0xb4>
   8475e:	f04b 0b10 	orr.w	fp, fp, #16
   84762:	9311      	str	r3, [sp, #68]	; 0x44
   84764:	f01b 0320 	ands.w	r3, fp, #32
   84768:	f43f aebb 	beq.w	844e2 <_svfprintf_r+0x48a>
   8476c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8476e:	3407      	adds	r4, #7
   84770:	f024 0307 	bic.w	r3, r4, #7
   84774:	f103 0208 	add.w	r2, r3, #8
   84778:	e9d3 4500 	ldrd	r4, r5, [r3]
   8477c:	920f      	str	r2, [sp, #60]	; 0x3c
   8477e:	2300      	movs	r3, #0
   84780:	e568      	b.n	84254 <_svfprintf_r+0x1fc>
   84782:	9311      	str	r3, [sp, #68]	; 0x44
   84784:	2a00      	cmp	r2, #0
   84786:	f040 86c2 	bne.w	8550e <_svfprintf_r+0x14b6>
   8478a:	4b4f      	ldr	r3, [pc, #316]	; (848c8 <_svfprintf_r+0x870>)
   8478c:	f01b 0f20 	tst.w	fp, #32
   84790:	9318      	str	r3, [sp, #96]	; 0x60
   84792:	f43f af19 	beq.w	845c8 <_svfprintf_r+0x570>
   84796:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84798:	f01b 0f01 	tst.w	fp, #1
   8479c:	f104 0407 	add.w	r4, r4, #7
   847a0:	f024 0307 	bic.w	r3, r4, #7
   847a4:	f103 0208 	add.w	r2, r3, #8
   847a8:	920f      	str	r2, [sp, #60]	; 0x3c
   847aa:	e9d3 4500 	ldrd	r4, r5, [r3]
   847ae:	f47f af1d 	bne.w	845ec <_svfprintf_r+0x594>
   847b2:	2302      	movs	r3, #2
   847b4:	e54e      	b.n	84254 <_svfprintf_r+0x1fc>
   847b6:	f89a 3000 	ldrb.w	r3, [sl]
   847ba:	2900      	cmp	r1, #0
   847bc:	f47f aca6 	bne.w	8410c <_svfprintf_r+0xb4>
   847c0:	2201      	movs	r2, #1
   847c2:	2120      	movs	r1, #32
   847c4:	e4a2      	b.n	8410c <_svfprintf_r+0xb4>
   847c6:	f04b 0b01 	orr.w	fp, fp, #1
   847ca:	f89a 3000 	ldrb.w	r3, [sl]
   847ce:	e49d      	b.n	8410c <_svfprintf_r+0xb4>
   847d0:	f89a 3000 	ldrb.w	r3, [sl]
   847d4:	2201      	movs	r2, #1
   847d6:	212b      	movs	r1, #43	; 0x2b
   847d8:	e498      	b.n	8410c <_svfprintf_r+0xb4>
   847da:	f04b 0b20 	orr.w	fp, fp, #32
   847de:	f89a 3000 	ldrb.w	r3, [sl]
   847e2:	e493      	b.n	8410c <_svfprintf_r+0xb4>
   847e4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   847e8:	f89a 3000 	ldrb.w	r3, [sl]
   847ec:	e48e      	b.n	8410c <_svfprintf_r+0xb4>
   847ee:	f89a 3000 	ldrb.w	r3, [sl]
   847f2:	2b6c      	cmp	r3, #108	; 0x6c
   847f4:	bf03      	ittte	eq
   847f6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   847fa:	f04b 0b20 	orreq.w	fp, fp, #32
   847fe:	f10a 0a01 	addeq.w	sl, sl, #1
   84802:	f04b 0b10 	orrne.w	fp, fp, #16
   84806:	e481      	b.n	8410c <_svfprintf_r+0xb4>
   84808:	2a00      	cmp	r2, #0
   8480a:	f040 867c 	bne.w	85506 <_svfprintf_r+0x14ae>
   8480e:	f01b 0f20 	tst.w	fp, #32
   84812:	f040 8452 	bne.w	850ba <_svfprintf_r+0x1062>
   84816:	f01b 0f10 	tst.w	fp, #16
   8481a:	f040 8438 	bne.w	8508e <_svfprintf_r+0x1036>
   8481e:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84822:	f000 8434 	beq.w	8508e <_svfprintf_r+0x1036>
   84826:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84828:	6813      	ldr	r3, [r2, #0]
   8482a:	3204      	adds	r2, #4
   8482c:	920f      	str	r2, [sp, #60]	; 0x3c
   8482e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   84832:	801a      	strh	r2, [r3, #0]
   84834:	e437      	b.n	840a6 <_svfprintf_r+0x4e>
   84836:	2378      	movs	r3, #120	; 0x78
   84838:	2230      	movs	r2, #48	; 0x30
   8483a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8483c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   84840:	9311      	str	r3, [sp, #68]	; 0x44
   84842:	1d03      	adds	r3, r0, #4
   84844:	930f      	str	r3, [sp, #60]	; 0x3c
   84846:	4b20      	ldr	r3, [pc, #128]	; (848c8 <_svfprintf_r+0x870>)
   84848:	6804      	ldr	r4, [r0, #0]
   8484a:	9318      	str	r3, [sp, #96]	; 0x60
   8484c:	f04b 0b02 	orr.w	fp, fp, #2
   84850:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   84854:	2500      	movs	r5, #0
   84856:	2302      	movs	r3, #2
   84858:	e4fc      	b.n	84254 <_svfprintf_r+0x1fc>
   8485a:	9311      	str	r3, [sp, #68]	; 0x44
   8485c:	2a00      	cmp	r2, #0
   8485e:	f43f aeef 	beq.w	84640 <_svfprintf_r+0x5e8>
   84862:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   84866:	e6eb      	b.n	84640 <_svfprintf_r+0x5e8>
   84868:	2000      	movs	r0, #0
   8486a:	4604      	mov	r4, r0
   8486c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84870:	f81a 3b01 	ldrb.w	r3, [sl], #1
   84874:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   84878:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   8487c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84880:	2809      	cmp	r0, #9
   84882:	d9f5      	bls.n	84870 <_svfprintf_r+0x818>
   84884:	940d      	str	r4, [sp, #52]	; 0x34
   84886:	e443      	b.n	84110 <_svfprintf_r+0xb8>
   84888:	9311      	str	r3, [sp, #68]	; 0x44
   8488a:	2a00      	cmp	r2, #0
   8488c:	f040 864a 	bne.w	85524 <_svfprintf_r+0x14cc>
   84890:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84892:	2a00      	cmp	r2, #0
   84894:	f43f acb6 	beq.w	84204 <_svfprintf_r+0x1ac>
   84898:	2300      	movs	r3, #0
   8489a:	2101      	movs	r1, #1
   8489c:	461f      	mov	r7, r3
   8489e:	9108      	str	r1, [sp, #32]
   848a0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   848a4:	f8cd b01c 	str.w	fp, [sp, #28]
   848a8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   848ac:	930a      	str	r3, [sp, #40]	; 0x28
   848ae:	9312      	str	r3, [sp, #72]	; 0x48
   848b0:	910e      	str	r1, [sp, #56]	; 0x38
   848b2:	ae28      	add	r6, sp, #160	; 0xa0
   848b4:	e4f8      	b.n	842a8 <_svfprintf_r+0x250>
   848b6:	bf00      	nop
   848b8:	00089788 	.word	0x00089788
   848bc:	7fefffff 	.word	0x7fefffff
   848c0:	0008977c 	.word	0x0008977c
   848c4:	00089778 	.word	0x00089778
   848c8:	0008979c 	.word	0x0008979c
   848cc:	aa25      	add	r2, sp, #148	; 0x94
   848ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   848d0:	980c      	ldr	r0, [sp, #48]	; 0x30
   848d2:	f002 fcc5 	bl	87260 <__ssprint_r>
   848d6:	2800      	cmp	r0, #0
   848d8:	f47f ac9b 	bne.w	84212 <_svfprintf_r+0x1ba>
   848dc:	46c8      	mov	r8, r9
   848de:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   848e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   848e4:	e533      	b.n	8434e <_svfprintf_r+0x2f6>
   848e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   848e8:	2b65      	cmp	r3, #101	; 0x65
   848ea:	f340 809a 	ble.w	84a22 <_svfprintf_r+0x9ca>
   848ee:	a815      	add	r0, sp, #84	; 0x54
   848f0:	c80d      	ldmia	r0, {r0, r2, r3}
   848f2:	9914      	ldr	r1, [sp, #80]	; 0x50
   848f4:	f003 fd40 	bl	88378 <__aeabi_dcmpeq>
   848f8:	2800      	cmp	r0, #0
   848fa:	f000 8193 	beq.w	84c24 <_svfprintf_r+0xbcc>
   848fe:	2101      	movs	r1, #1
   84900:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84902:	4ab5      	ldr	r2, [pc, #724]	; (84bd8 <_svfprintf_r+0xb80>)
   84904:	440b      	add	r3, r1
   84906:	440c      	add	r4, r1
   84908:	2b07      	cmp	r3, #7
   8490a:	9427      	str	r4, [sp, #156]	; 0x9c
   8490c:	9326      	str	r3, [sp, #152]	; 0x98
   8490e:	f8c8 1004 	str.w	r1, [r8, #4]
   84912:	f8c8 2000 	str.w	r2, [r8]
   84916:	f300 83c6 	bgt.w	850a6 <_svfprintf_r+0x104e>
   8491a:	f108 0808 	add.w	r8, r8, #8
   8491e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84920:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84922:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84924:	4293      	cmp	r3, r2
   84926:	db03      	blt.n	84930 <_svfprintf_r+0x8d8>
   84928:	9b07      	ldr	r3, [sp, #28]
   8492a:	07dd      	lsls	r5, r3, #31
   8492c:	f57f ad86 	bpl.w	8443c <_svfprintf_r+0x3e4>
   84930:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84932:	9919      	ldr	r1, [sp, #100]	; 0x64
   84934:	3301      	adds	r3, #1
   84936:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   84938:	440c      	add	r4, r1
   8493a:	2b07      	cmp	r3, #7
   8493c:	f8c8 2000 	str.w	r2, [r8]
   84940:	f8c8 1004 	str.w	r1, [r8, #4]
   84944:	9427      	str	r4, [sp, #156]	; 0x9c
   84946:	9326      	str	r3, [sp, #152]	; 0x98
   84948:	f300 83c4 	bgt.w	850d4 <_svfprintf_r+0x107c>
   8494c:	f108 0808 	add.w	r8, r8, #8
   84950:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84952:	1e5e      	subs	r6, r3, #1
   84954:	2e00      	cmp	r6, #0
   84956:	f77f ad71 	ble.w	8443c <_svfprintf_r+0x3e4>
   8495a:	2e10      	cmp	r6, #16
   8495c:	f340 8575 	ble.w	8544a <_svfprintf_r+0x13f2>
   84960:	4622      	mov	r2, r4
   84962:	2710      	movs	r7, #16
   84964:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84966:	4d9d      	ldr	r5, [pc, #628]	; (84bdc <_svfprintf_r+0xb84>)
   84968:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   8496c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8496e:	e005      	b.n	8497c <_svfprintf_r+0x924>
   84970:	f108 0808 	add.w	r8, r8, #8
   84974:	3e10      	subs	r6, #16
   84976:	2e10      	cmp	r6, #16
   84978:	f340 8225 	ble.w	84dc6 <_svfprintf_r+0xd6e>
   8497c:	3301      	adds	r3, #1
   8497e:	3210      	adds	r2, #16
   84980:	2b07      	cmp	r3, #7
   84982:	9227      	str	r2, [sp, #156]	; 0x9c
   84984:	9326      	str	r3, [sp, #152]	; 0x98
   84986:	e888 00a0 	stmia.w	r8, {r5, r7}
   8498a:	ddf1      	ble.n	84970 <_svfprintf_r+0x918>
   8498c:	aa25      	add	r2, sp, #148	; 0x94
   8498e:	4621      	mov	r1, r4
   84990:	4658      	mov	r0, fp
   84992:	f002 fc65 	bl	87260 <__ssprint_r>
   84996:	2800      	cmp	r0, #0
   84998:	f47f ac3b 	bne.w	84212 <_svfprintf_r+0x1ba>
   8499c:	46c8      	mov	r8, r9
   8499e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   849a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   849a2:	e7e7      	b.n	84974 <_svfprintf_r+0x91c>
   849a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   849a6:	9a08      	ldr	r2, [sp, #32]
   849a8:	1a9f      	subs	r7, r3, r2
   849aa:	2f00      	cmp	r7, #0
   849ac:	f77f acf6 	ble.w	8439c <_svfprintf_r+0x344>
   849b0:	2f10      	cmp	r7, #16
   849b2:	f340 84a8 	ble.w	85306 <_svfprintf_r+0x12ae>
   849b6:	4d89      	ldr	r5, [pc, #548]	; (84bdc <_svfprintf_r+0xb84>)
   849b8:	4642      	mov	r2, r8
   849ba:	4621      	mov	r1, r4
   849bc:	46b0      	mov	r8, r6
   849be:	f04f 0b10 	mov.w	fp, #16
   849c2:	462e      	mov	r6, r5
   849c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   849c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   849c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   849ca:	e004      	b.n	849d6 <_svfprintf_r+0x97e>
   849cc:	3f10      	subs	r7, #16
   849ce:	2f10      	cmp	r7, #16
   849d0:	f102 0208 	add.w	r2, r2, #8
   849d4:	dd15      	ble.n	84a02 <_svfprintf_r+0x9aa>
   849d6:	3301      	adds	r3, #1
   849d8:	3110      	adds	r1, #16
   849da:	2b07      	cmp	r3, #7
   849dc:	9127      	str	r1, [sp, #156]	; 0x9c
   849de:	9326      	str	r3, [sp, #152]	; 0x98
   849e0:	e882 0840 	stmia.w	r2, {r6, fp}
   849e4:	ddf2      	ble.n	849cc <_svfprintf_r+0x974>
   849e6:	aa25      	add	r2, sp, #148	; 0x94
   849e8:	4629      	mov	r1, r5
   849ea:	4620      	mov	r0, r4
   849ec:	f002 fc38 	bl	87260 <__ssprint_r>
   849f0:	2800      	cmp	r0, #0
   849f2:	f47f ac0e 	bne.w	84212 <_svfprintf_r+0x1ba>
   849f6:	3f10      	subs	r7, #16
   849f8:	2f10      	cmp	r7, #16
   849fa:	464a      	mov	r2, r9
   849fc:	9927      	ldr	r1, [sp, #156]	; 0x9c
   849fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84a00:	dce9      	bgt.n	849d6 <_svfprintf_r+0x97e>
   84a02:	4635      	mov	r5, r6
   84a04:	460c      	mov	r4, r1
   84a06:	4646      	mov	r6, r8
   84a08:	4690      	mov	r8, r2
   84a0a:	3301      	adds	r3, #1
   84a0c:	443c      	add	r4, r7
   84a0e:	2b07      	cmp	r3, #7
   84a10:	9427      	str	r4, [sp, #156]	; 0x9c
   84a12:	9326      	str	r3, [sp, #152]	; 0x98
   84a14:	e888 00a0 	stmia.w	r8, {r5, r7}
   84a18:	f300 829e 	bgt.w	84f58 <_svfprintf_r+0xf00>
   84a1c:	f108 0808 	add.w	r8, r8, #8
   84a20:	e4bc      	b.n	8439c <_svfprintf_r+0x344>
   84a22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84a24:	2b01      	cmp	r3, #1
   84a26:	f340 824f 	ble.w	84ec8 <_svfprintf_r+0xe70>
   84a2a:	2301      	movs	r3, #1
   84a2c:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84a2e:	441c      	add	r4, r3
   84a30:	441f      	add	r7, r3
   84a32:	2f07      	cmp	r7, #7
   84a34:	9427      	str	r4, [sp, #156]	; 0x9c
   84a36:	f8c8 6000 	str.w	r6, [r8]
   84a3a:	9726      	str	r7, [sp, #152]	; 0x98
   84a3c:	f8c8 3004 	str.w	r3, [r8, #4]
   84a40:	f300 825f 	bgt.w	84f02 <_svfprintf_r+0xeaa>
   84a44:	f108 0808 	add.w	r8, r8, #8
   84a48:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84a4a:	3701      	adds	r7, #1
   84a4c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   84a4e:	4414      	add	r4, r2
   84a50:	2f07      	cmp	r7, #7
   84a52:	9427      	str	r4, [sp, #156]	; 0x9c
   84a54:	9726      	str	r7, [sp, #152]	; 0x98
   84a56:	f8c8 3000 	str.w	r3, [r8]
   84a5a:	f8c8 2004 	str.w	r2, [r8, #4]
   84a5e:	f300 825c 	bgt.w	84f1a <_svfprintf_r+0xec2>
   84a62:	f108 0808 	add.w	r8, r8, #8
   84a66:	a815      	add	r0, sp, #84	; 0x54
   84a68:	c80d      	ldmia	r0, {r0, r2, r3}
   84a6a:	9914      	ldr	r1, [sp, #80]	; 0x50
   84a6c:	f003 fc84 	bl	88378 <__aeabi_dcmpeq>
   84a70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84a72:	2800      	cmp	r0, #0
   84a74:	f040 8141 	bne.w	84cfa <_svfprintf_r+0xca2>
   84a78:	3b01      	subs	r3, #1
   84a7a:	3701      	adds	r7, #1
   84a7c:	3601      	adds	r6, #1
   84a7e:	441c      	add	r4, r3
   84a80:	2f07      	cmp	r7, #7
   84a82:	f8c8 6000 	str.w	r6, [r8]
   84a86:	9726      	str	r7, [sp, #152]	; 0x98
   84a88:	9427      	str	r4, [sp, #156]	; 0x9c
   84a8a:	f8c8 3004 	str.w	r3, [r8, #4]
   84a8e:	f300 8166 	bgt.w	84d5e <_svfprintf_r+0xd06>
   84a92:	f108 0808 	add.w	r8, r8, #8
   84a96:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   84a98:	3701      	adds	r7, #1
   84a9a:	4414      	add	r4, r2
   84a9c:	ab21      	add	r3, sp, #132	; 0x84
   84a9e:	2f07      	cmp	r7, #7
   84aa0:	9427      	str	r4, [sp, #156]	; 0x9c
   84aa2:	9726      	str	r7, [sp, #152]	; 0x98
   84aa4:	f8c8 2004 	str.w	r2, [r8, #4]
   84aa8:	f8c8 3000 	str.w	r3, [r8]
   84aac:	f77f acc4 	ble.w	84438 <_svfprintf_r+0x3e0>
   84ab0:	aa25      	add	r2, sp, #148	; 0x94
   84ab2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84ab4:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ab6:	f002 fbd3 	bl	87260 <__ssprint_r>
   84aba:	2800      	cmp	r0, #0
   84abc:	f47f aba9 	bne.w	84212 <_svfprintf_r+0x1ba>
   84ac0:	46c8      	mov	r8, r9
   84ac2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84ac4:	e4ba      	b.n	8443c <_svfprintf_r+0x3e4>
   84ac6:	aa25      	add	r2, sp, #148	; 0x94
   84ac8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84aca:	980c      	ldr	r0, [sp, #48]	; 0x30
   84acc:	f002 fbc8 	bl	87260 <__ssprint_r>
   84ad0:	2800      	cmp	r0, #0
   84ad2:	f43f acfd 	beq.w	844d0 <_svfprintf_r+0x478>
   84ad6:	f7ff bb9c 	b.w	84212 <_svfprintf_r+0x1ba>
   84ada:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84ade:	2b01      	cmp	r3, #1
   84ae0:	f000 817e 	beq.w	84de0 <_svfprintf_r+0xd88>
   84ae4:	2b02      	cmp	r3, #2
   84ae6:	d171      	bne.n	84bcc <_svfprintf_r+0xb74>
   84ae8:	f8cd b01c 	str.w	fp, [sp, #28]
   84aec:	2400      	movs	r4, #0
   84aee:	2500      	movs	r5, #0
   84af0:	e5d4      	b.n	8469c <_svfprintf_r+0x644>
   84af2:	aa25      	add	r2, sp, #148	; 0x94
   84af4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84af6:	980c      	ldr	r0, [sp, #48]	; 0x30
   84af8:	f002 fbb2 	bl	87260 <__ssprint_r>
   84afc:	2800      	cmp	r0, #0
   84afe:	f47f ab88 	bne.w	84212 <_svfprintf_r+0x1ba>
   84b02:	46c8      	mov	r8, r9
   84b04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b06:	e486      	b.n	84416 <_svfprintf_r+0x3be>
   84b08:	aa25      	add	r2, sp, #148	; 0x94
   84b0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b0c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b0e:	f002 fba7 	bl	87260 <__ssprint_r>
   84b12:	2800      	cmp	r0, #0
   84b14:	f47f ab7d 	bne.w	84212 <_svfprintf_r+0x1ba>
   84b18:	46c8      	mov	r8, r9
   84b1a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b1c:	e429      	b.n	84372 <_svfprintf_r+0x31a>
   84b1e:	2001      	movs	r0, #1
   84b20:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84b22:	4a2d      	ldr	r2, [pc, #180]	; (84bd8 <_svfprintf_r+0xb80>)
   84b24:	4403      	add	r3, r0
   84b26:	4404      	add	r4, r0
   84b28:	2b07      	cmp	r3, #7
   84b2a:	9427      	str	r4, [sp, #156]	; 0x9c
   84b2c:	9326      	str	r3, [sp, #152]	; 0x98
   84b2e:	f8c8 0004 	str.w	r0, [r8, #4]
   84b32:	f8c8 2000 	str.w	r2, [r8]
   84b36:	f340 82d8 	ble.w	850ea <_svfprintf_r+0x1092>
   84b3a:	aa25      	add	r2, sp, #148	; 0x94
   84b3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b3e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b40:	f002 fb8e 	bl	87260 <__ssprint_r>
   84b44:	2800      	cmp	r0, #0
   84b46:	f47f ab64 	bne.w	84212 <_svfprintf_r+0x1ba>
   84b4a:	46c8      	mov	r8, r9
   84b4c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84b4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b50:	b929      	cbnz	r1, 84b5e <_svfprintf_r+0xb06>
   84b52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84b54:	b91b      	cbnz	r3, 84b5e <_svfprintf_r+0xb06>
   84b56:	9b07      	ldr	r3, [sp, #28]
   84b58:	07d8      	lsls	r0, r3, #31
   84b5a:	f57f ac6f 	bpl.w	8443c <_svfprintf_r+0x3e4>
   84b5e:	9819      	ldr	r0, [sp, #100]	; 0x64
   84b60:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84b62:	4602      	mov	r2, r0
   84b64:	3301      	adds	r3, #1
   84b66:	4422      	add	r2, r4
   84b68:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   84b6a:	2b07      	cmp	r3, #7
   84b6c:	9227      	str	r2, [sp, #156]	; 0x9c
   84b6e:	f8c8 4000 	str.w	r4, [r8]
   84b72:	f8c8 0004 	str.w	r0, [r8, #4]
   84b76:	9326      	str	r3, [sp, #152]	; 0x98
   84b78:	f300 8431 	bgt.w	853de <_svfprintf_r+0x1386>
   84b7c:	f108 0808 	add.w	r8, r8, #8
   84b80:	2900      	cmp	r1, #0
   84b82:	f2c0 8409 	blt.w	85398 <_svfprintf_r+0x1340>
   84b86:	9913      	ldr	r1, [sp, #76]	; 0x4c
   84b88:	3301      	adds	r3, #1
   84b8a:	188c      	adds	r4, r1, r2
   84b8c:	2b07      	cmp	r3, #7
   84b8e:	9427      	str	r4, [sp, #156]	; 0x9c
   84b90:	9326      	str	r3, [sp, #152]	; 0x98
   84b92:	f8c8 6000 	str.w	r6, [r8]
   84b96:	f8c8 1004 	str.w	r1, [r8, #4]
   84b9a:	f77f ac4d 	ble.w	84438 <_svfprintf_r+0x3e0>
   84b9e:	aa25      	add	r2, sp, #148	; 0x94
   84ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84ba2:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ba4:	f002 fb5c 	bl	87260 <__ssprint_r>
   84ba8:	2800      	cmp	r0, #0
   84baa:	f47f ab32 	bne.w	84212 <_svfprintf_r+0x1ba>
   84bae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84bb0:	46c8      	mov	r8, r9
   84bb2:	e443      	b.n	8443c <_svfprintf_r+0x3e4>
   84bb4:	aa25      	add	r2, sp, #148	; 0x94
   84bb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84bb8:	980c      	ldr	r0, [sp, #48]	; 0x30
   84bba:	f002 fb51 	bl	87260 <__ssprint_r>
   84bbe:	2800      	cmp	r0, #0
   84bc0:	f47f ab27 	bne.w	84212 <_svfprintf_r+0x1ba>
   84bc4:	46c8      	mov	r8, r9
   84bc6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84bc8:	f7ff bbe5 	b.w	84396 <_svfprintf_r+0x33e>
   84bcc:	2400      	movs	r4, #0
   84bce:	2500      	movs	r5, #0
   84bd0:	f8cd b01c 	str.w	fp, [sp, #28]
   84bd4:	4649      	mov	r1, r9
   84bd6:	e004      	b.n	84be2 <_svfprintf_r+0xb8a>
   84bd8:	000897b8 	.word	0x000897b8
   84bdc:	000897cc 	.word	0x000897cc
   84be0:	4631      	mov	r1, r6
   84be2:	08e2      	lsrs	r2, r4, #3
   84be4:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   84be8:	08e8      	lsrs	r0, r5, #3
   84bea:	f004 0307 	and.w	r3, r4, #7
   84bee:	4605      	mov	r5, r0
   84bf0:	4614      	mov	r4, r2
   84bf2:	3330      	adds	r3, #48	; 0x30
   84bf4:	ea54 0205 	orrs.w	r2, r4, r5
   84bf8:	f801 3c01 	strb.w	r3, [r1, #-1]
   84bfc:	f101 36ff 	add.w	r6, r1, #4294967295
   84c00:	d1ee      	bne.n	84be0 <_svfprintf_r+0xb88>
   84c02:	9a07      	ldr	r2, [sp, #28]
   84c04:	07d2      	lsls	r2, r2, #31
   84c06:	f57f ad59 	bpl.w	846bc <_svfprintf_r+0x664>
   84c0a:	2b30      	cmp	r3, #48	; 0x30
   84c0c:	f43f ad56 	beq.w	846bc <_svfprintf_r+0x664>
   84c10:	2330      	movs	r3, #48	; 0x30
   84c12:	3902      	subs	r1, #2
   84c14:	f806 3c01 	strb.w	r3, [r6, #-1]
   84c18:	eba9 0301 	sub.w	r3, r9, r1
   84c1c:	930e      	str	r3, [sp, #56]	; 0x38
   84c1e:	460e      	mov	r6, r1
   84c20:	f7ff bb36 	b.w	84290 <_svfprintf_r+0x238>
   84c24:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84c26:	2900      	cmp	r1, #0
   84c28:	f77f af79 	ble.w	84b1e <_svfprintf_r+0xac6>
   84c2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84c2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84c30:	4293      	cmp	r3, r2
   84c32:	bfa8      	it	ge
   84c34:	4613      	movge	r3, r2
   84c36:	2b00      	cmp	r3, #0
   84c38:	461f      	mov	r7, r3
   84c3a:	dd0b      	ble.n	84c54 <_svfprintf_r+0xbfc>
   84c3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84c3e:	443c      	add	r4, r7
   84c40:	3301      	adds	r3, #1
   84c42:	2b07      	cmp	r3, #7
   84c44:	9427      	str	r4, [sp, #156]	; 0x9c
   84c46:	e888 00c0 	stmia.w	r8, {r6, r7}
   84c4a:	9326      	str	r3, [sp, #152]	; 0x98
   84c4c:	f300 82fb 	bgt.w	85246 <_svfprintf_r+0x11ee>
   84c50:	f108 0808 	add.w	r8, r8, #8
   84c54:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84c56:	2f00      	cmp	r7, #0
   84c58:	bfa8      	it	ge
   84c5a:	1bdb      	subge	r3, r3, r7
   84c5c:	2b00      	cmp	r3, #0
   84c5e:	461f      	mov	r7, r3
   84c60:	f340 80d7 	ble.w	84e12 <_svfprintf_r+0xdba>
   84c64:	2b10      	cmp	r3, #16
   84c66:	f340 8434 	ble.w	854d2 <_svfprintf_r+0x147a>
   84c6a:	4dba      	ldr	r5, [pc, #744]	; (84f54 <_svfprintf_r+0xefc>)
   84c6c:	4642      	mov	r2, r8
   84c6e:	4621      	mov	r1, r4
   84c70:	46b0      	mov	r8, r6
   84c72:	f04f 0b10 	mov.w	fp, #16
   84c76:	462e      	mov	r6, r5
   84c78:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84c7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84c7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84c7e:	e004      	b.n	84c8a <_svfprintf_r+0xc32>
   84c80:	3208      	adds	r2, #8
   84c82:	3f10      	subs	r7, #16
   84c84:	2f10      	cmp	r7, #16
   84c86:	f340 80b5 	ble.w	84df4 <_svfprintf_r+0xd9c>
   84c8a:	3301      	adds	r3, #1
   84c8c:	3110      	adds	r1, #16
   84c8e:	2b07      	cmp	r3, #7
   84c90:	9127      	str	r1, [sp, #156]	; 0x9c
   84c92:	9326      	str	r3, [sp, #152]	; 0x98
   84c94:	e882 0840 	stmia.w	r2, {r6, fp}
   84c98:	ddf2      	ble.n	84c80 <_svfprintf_r+0xc28>
   84c9a:	aa25      	add	r2, sp, #148	; 0x94
   84c9c:	4629      	mov	r1, r5
   84c9e:	4620      	mov	r0, r4
   84ca0:	f002 fade 	bl	87260 <__ssprint_r>
   84ca4:	2800      	cmp	r0, #0
   84ca6:	f47f aab4 	bne.w	84212 <_svfprintf_r+0x1ba>
   84caa:	464a      	mov	r2, r9
   84cac:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84cae:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84cb0:	e7e7      	b.n	84c82 <_svfprintf_r+0xc2a>
   84cb2:	2d00      	cmp	r5, #0
   84cb4:	bf08      	it	eq
   84cb6:	2c0a      	cmpeq	r4, #10
   84cb8:	f0c0 8090 	bcc.w	84ddc <_svfprintf_r+0xd84>
   84cbc:	464e      	mov	r6, r9
   84cbe:	4620      	mov	r0, r4
   84cc0:	4629      	mov	r1, r5
   84cc2:	220a      	movs	r2, #10
   84cc4:	2300      	movs	r3, #0
   84cc6:	f003 fbc7 	bl	88458 <__aeabi_uldivmod>
   84cca:	3230      	adds	r2, #48	; 0x30
   84ccc:	f806 2d01 	strb.w	r2, [r6, #-1]!
   84cd0:	4620      	mov	r0, r4
   84cd2:	4629      	mov	r1, r5
   84cd4:	2300      	movs	r3, #0
   84cd6:	220a      	movs	r2, #10
   84cd8:	f003 fbbe 	bl	88458 <__aeabi_uldivmod>
   84cdc:	4604      	mov	r4, r0
   84cde:	460d      	mov	r5, r1
   84ce0:	ea54 0305 	orrs.w	r3, r4, r5
   84ce4:	d1eb      	bne.n	84cbe <_svfprintf_r+0xc66>
   84ce6:	eba9 0306 	sub.w	r3, r9, r6
   84cea:	930e      	str	r3, [sp, #56]	; 0x38
   84cec:	f7ff bad0 	b.w	84290 <_svfprintf_r+0x238>
   84cf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84cf2:	464e      	mov	r6, r9
   84cf4:	930e      	str	r3, [sp, #56]	; 0x38
   84cf6:	f7ff bacb 	b.w	84290 <_svfprintf_r+0x238>
   84cfa:	1e5e      	subs	r6, r3, #1
   84cfc:	2e00      	cmp	r6, #0
   84cfe:	f77f aeca 	ble.w	84a96 <_svfprintf_r+0xa3e>
   84d02:	2e10      	cmp	r6, #16
   84d04:	f340 83e3 	ble.w	854ce <_svfprintf_r+0x1476>
   84d08:	4622      	mov	r2, r4
   84d0a:	f04f 0b10 	mov.w	fp, #16
   84d0e:	4d91      	ldr	r5, [pc, #580]	; (84f54 <_svfprintf_r+0xefc>)
   84d10:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84d12:	e004      	b.n	84d1e <_svfprintf_r+0xcc6>
   84d14:	3e10      	subs	r6, #16
   84d16:	2e10      	cmp	r6, #16
   84d18:	f108 0808 	add.w	r8, r8, #8
   84d1c:	dd15      	ble.n	84d4a <_svfprintf_r+0xcf2>
   84d1e:	3701      	adds	r7, #1
   84d20:	3210      	adds	r2, #16
   84d22:	2f07      	cmp	r7, #7
   84d24:	9227      	str	r2, [sp, #156]	; 0x9c
   84d26:	9726      	str	r7, [sp, #152]	; 0x98
   84d28:	e888 0820 	stmia.w	r8, {r5, fp}
   84d2c:	ddf2      	ble.n	84d14 <_svfprintf_r+0xcbc>
   84d2e:	aa25      	add	r2, sp, #148	; 0x94
   84d30:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d32:	4620      	mov	r0, r4
   84d34:	f002 fa94 	bl	87260 <__ssprint_r>
   84d38:	2800      	cmp	r0, #0
   84d3a:	f47f aa6a 	bne.w	84212 <_svfprintf_r+0x1ba>
   84d3e:	3e10      	subs	r6, #16
   84d40:	2e10      	cmp	r6, #16
   84d42:	46c8      	mov	r8, r9
   84d44:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84d46:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84d48:	dce9      	bgt.n	84d1e <_svfprintf_r+0xcc6>
   84d4a:	4614      	mov	r4, r2
   84d4c:	3701      	adds	r7, #1
   84d4e:	4434      	add	r4, r6
   84d50:	2f07      	cmp	r7, #7
   84d52:	9427      	str	r4, [sp, #156]	; 0x9c
   84d54:	9726      	str	r7, [sp, #152]	; 0x98
   84d56:	e888 0060 	stmia.w	r8, {r5, r6}
   84d5a:	f77f ae9a 	ble.w	84a92 <_svfprintf_r+0xa3a>
   84d5e:	aa25      	add	r2, sp, #148	; 0x94
   84d60:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d62:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d64:	f002 fa7c 	bl	87260 <__ssprint_r>
   84d68:	2800      	cmp	r0, #0
   84d6a:	f47f aa52 	bne.w	84212 <_svfprintf_r+0x1ba>
   84d6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d70:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84d72:	46c8      	mov	r8, r9
   84d74:	e68f      	b.n	84a96 <_svfprintf_r+0xa3e>
   84d76:	3204      	adds	r2, #4
   84d78:	681c      	ldr	r4, [r3, #0]
   84d7a:	2500      	movs	r5, #0
   84d7c:	2301      	movs	r3, #1
   84d7e:	920f      	str	r2, [sp, #60]	; 0x3c
   84d80:	f7ff ba68 	b.w	84254 <_svfprintf_r+0x1fc>
   84d84:	681c      	ldr	r4, [r3, #0]
   84d86:	3304      	adds	r3, #4
   84d88:	930f      	str	r3, [sp, #60]	; 0x3c
   84d8a:	2500      	movs	r5, #0
   84d8c:	e42a      	b.n	845e4 <_svfprintf_r+0x58c>
   84d8e:	681c      	ldr	r4, [r3, #0]
   84d90:	3304      	adds	r3, #4
   84d92:	17e5      	asrs	r5, r4, #31
   84d94:	4622      	mov	r2, r4
   84d96:	930f      	str	r3, [sp, #60]	; 0x3c
   84d98:	462b      	mov	r3, r5
   84d9a:	2a00      	cmp	r2, #0
   84d9c:	f173 0300 	sbcs.w	r3, r3, #0
   84da0:	f6bf ac68 	bge.w	84674 <_svfprintf_r+0x61c>
   84da4:	272d      	movs	r7, #45	; 0x2d
   84da6:	4264      	negs	r4, r4
   84da8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   84dac:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   84db0:	2301      	movs	r3, #1
   84db2:	f7ff ba53 	b.w	8425c <_svfprintf_r+0x204>
   84db6:	990f      	ldr	r1, [sp, #60]	; 0x3c
   84db8:	2500      	movs	r5, #0
   84dba:	460a      	mov	r2, r1
   84dbc:	3204      	adds	r2, #4
   84dbe:	680c      	ldr	r4, [r1, #0]
   84dc0:	920f      	str	r2, [sp, #60]	; 0x3c
   84dc2:	f7ff ba47 	b.w	84254 <_svfprintf_r+0x1fc>
   84dc6:	4614      	mov	r4, r2
   84dc8:	3301      	adds	r3, #1
   84dca:	4434      	add	r4, r6
   84dcc:	2b07      	cmp	r3, #7
   84dce:	9427      	str	r4, [sp, #156]	; 0x9c
   84dd0:	9326      	str	r3, [sp, #152]	; 0x98
   84dd2:	e888 0060 	stmia.w	r8, {r5, r6}
   84dd6:	f77f ab2f 	ble.w	84438 <_svfprintf_r+0x3e0>
   84dda:	e6e0      	b.n	84b9e <_svfprintf_r+0xb46>
   84ddc:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84de0:	2301      	movs	r3, #1
   84de2:	ae42      	add	r6, sp, #264	; 0x108
   84de4:	3430      	adds	r4, #48	; 0x30
   84de6:	f8cd b01c 	str.w	fp, [sp, #28]
   84dea:	f806 4d41 	strb.w	r4, [r6, #-65]!
   84dee:	930e      	str	r3, [sp, #56]	; 0x38
   84df0:	f7ff ba4e 	b.w	84290 <_svfprintf_r+0x238>
   84df4:	4635      	mov	r5, r6
   84df6:	460c      	mov	r4, r1
   84df8:	4646      	mov	r6, r8
   84dfa:	4690      	mov	r8, r2
   84dfc:	3301      	adds	r3, #1
   84dfe:	443c      	add	r4, r7
   84e00:	2b07      	cmp	r3, #7
   84e02:	9427      	str	r4, [sp, #156]	; 0x9c
   84e04:	9326      	str	r3, [sp, #152]	; 0x98
   84e06:	e888 00a0 	stmia.w	r8, {r5, r7}
   84e0a:	f300 8246 	bgt.w	8529a <_svfprintf_r+0x1242>
   84e0e:	f108 0808 	add.w	r8, r8, #8
   84e12:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84e14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84e16:	429a      	cmp	r2, r3
   84e18:	db45      	blt.n	84ea6 <_svfprintf_r+0xe4e>
   84e1a:	9b07      	ldr	r3, [sp, #28]
   84e1c:	07d9      	lsls	r1, r3, #31
   84e1e:	d442      	bmi.n	84ea6 <_svfprintf_r+0xe4e>
   84e20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84e22:	9812      	ldr	r0, [sp, #72]	; 0x48
   84e24:	1a9a      	subs	r2, r3, r2
   84e26:	1a1d      	subs	r5, r3, r0
   84e28:	4295      	cmp	r5, r2
   84e2a:	bfa8      	it	ge
   84e2c:	4615      	movge	r5, r2
   84e2e:	2d00      	cmp	r5, #0
   84e30:	dd0e      	ble.n	84e50 <_svfprintf_r+0xdf8>
   84e32:	9926      	ldr	r1, [sp, #152]	; 0x98
   84e34:	4406      	add	r6, r0
   84e36:	3101      	adds	r1, #1
   84e38:	442c      	add	r4, r5
   84e3a:	2907      	cmp	r1, #7
   84e3c:	f8c8 6000 	str.w	r6, [r8]
   84e40:	9427      	str	r4, [sp, #156]	; 0x9c
   84e42:	f8c8 5004 	str.w	r5, [r8, #4]
   84e46:	9126      	str	r1, [sp, #152]	; 0x98
   84e48:	f300 8216 	bgt.w	85278 <_svfprintf_r+0x1220>
   84e4c:	f108 0808 	add.w	r8, r8, #8
   84e50:	2d00      	cmp	r5, #0
   84e52:	bfb4      	ite	lt
   84e54:	4616      	movlt	r6, r2
   84e56:	1b56      	subge	r6, r2, r5
   84e58:	2e00      	cmp	r6, #0
   84e5a:	f77f aaef 	ble.w	8443c <_svfprintf_r+0x3e4>
   84e5e:	2e10      	cmp	r6, #16
   84e60:	f340 82f3 	ble.w	8544a <_svfprintf_r+0x13f2>
   84e64:	4622      	mov	r2, r4
   84e66:	2710      	movs	r7, #16
   84e68:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84e6a:	4d3a      	ldr	r5, [pc, #232]	; (84f54 <_svfprintf_r+0xefc>)
   84e6c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84e70:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84e72:	e004      	b.n	84e7e <_svfprintf_r+0xe26>
   84e74:	f108 0808 	add.w	r8, r8, #8
   84e78:	3e10      	subs	r6, #16
   84e7a:	2e10      	cmp	r6, #16
   84e7c:	dda3      	ble.n	84dc6 <_svfprintf_r+0xd6e>
   84e7e:	3301      	adds	r3, #1
   84e80:	3210      	adds	r2, #16
   84e82:	2b07      	cmp	r3, #7
   84e84:	9227      	str	r2, [sp, #156]	; 0x9c
   84e86:	9326      	str	r3, [sp, #152]	; 0x98
   84e88:	e888 00a0 	stmia.w	r8, {r5, r7}
   84e8c:	ddf2      	ble.n	84e74 <_svfprintf_r+0xe1c>
   84e8e:	aa25      	add	r2, sp, #148	; 0x94
   84e90:	4621      	mov	r1, r4
   84e92:	4658      	mov	r0, fp
   84e94:	f002 f9e4 	bl	87260 <__ssprint_r>
   84e98:	2800      	cmp	r0, #0
   84e9a:	f47f a9ba 	bne.w	84212 <_svfprintf_r+0x1ba>
   84e9e:	46c8      	mov	r8, r9
   84ea0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84ea2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84ea4:	e7e8      	b.n	84e78 <_svfprintf_r+0xe20>
   84ea6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84ea8:	9819      	ldr	r0, [sp, #100]	; 0x64
   84eaa:	3301      	adds	r3, #1
   84eac:	991a      	ldr	r1, [sp, #104]	; 0x68
   84eae:	4404      	add	r4, r0
   84eb0:	2b07      	cmp	r3, #7
   84eb2:	9427      	str	r4, [sp, #156]	; 0x9c
   84eb4:	f8c8 1000 	str.w	r1, [r8]
   84eb8:	f8c8 0004 	str.w	r0, [r8, #4]
   84ebc:	9326      	str	r3, [sp, #152]	; 0x98
   84ebe:	f300 81cf 	bgt.w	85260 <_svfprintf_r+0x1208>
   84ec2:	f108 0808 	add.w	r8, r8, #8
   84ec6:	e7ab      	b.n	84e20 <_svfprintf_r+0xdc8>
   84ec8:	9b07      	ldr	r3, [sp, #28]
   84eca:	07da      	lsls	r2, r3, #31
   84ecc:	f53f adad 	bmi.w	84a2a <_svfprintf_r+0x9d2>
   84ed0:	2301      	movs	r3, #1
   84ed2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84ed4:	441c      	add	r4, r3
   84ed6:	441f      	add	r7, r3
   84ed8:	2f07      	cmp	r7, #7
   84eda:	9427      	str	r4, [sp, #156]	; 0x9c
   84edc:	f8c8 6000 	str.w	r6, [r8]
   84ee0:	9726      	str	r7, [sp, #152]	; 0x98
   84ee2:	f8c8 3004 	str.w	r3, [r8, #4]
   84ee6:	f77f add4 	ble.w	84a92 <_svfprintf_r+0xa3a>
   84eea:	aa25      	add	r2, sp, #148	; 0x94
   84eec:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84eee:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ef0:	f002 f9b6 	bl	87260 <__ssprint_r>
   84ef4:	2800      	cmp	r0, #0
   84ef6:	f47f a98c 	bne.w	84212 <_svfprintf_r+0x1ba>
   84efa:	46c8      	mov	r8, r9
   84efc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84efe:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84f00:	e5c9      	b.n	84a96 <_svfprintf_r+0xa3e>
   84f02:	aa25      	add	r2, sp, #148	; 0x94
   84f04:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f06:	980c      	ldr	r0, [sp, #48]	; 0x30
   84f08:	f002 f9aa 	bl	87260 <__ssprint_r>
   84f0c:	2800      	cmp	r0, #0
   84f0e:	f47f a980 	bne.w	84212 <_svfprintf_r+0x1ba>
   84f12:	46c8      	mov	r8, r9
   84f14:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84f16:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84f18:	e596      	b.n	84a48 <_svfprintf_r+0x9f0>
   84f1a:	aa25      	add	r2, sp, #148	; 0x94
   84f1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f1e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84f20:	f002 f99e 	bl	87260 <__ssprint_r>
   84f24:	2800      	cmp	r0, #0
   84f26:	f47f a974 	bne.w	84212 <_svfprintf_r+0x1ba>
   84f2a:	46c8      	mov	r8, r9
   84f2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84f2e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84f30:	e599      	b.n	84a66 <_svfprintf_r+0xa0e>
   84f32:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84f34:	3407      	adds	r4, #7
   84f36:	f024 0407 	bic.w	r4, r4, #7
   84f3a:	f104 0108 	add.w	r1, r4, #8
   84f3e:	e9d4 2300 	ldrd	r2, r3, [r4]
   84f42:	910f      	str	r1, [sp, #60]	; 0x3c
   84f44:	4614      	mov	r4, r2
   84f46:	461d      	mov	r5, r3
   84f48:	f7ff bb8f 	b.w	8466a <_svfprintf_r+0x612>
   84f4c:	464e      	mov	r6, r9
   84f4e:	f7ff b99f 	b.w	84290 <_svfprintf_r+0x238>
   84f52:	bf00      	nop
   84f54:	000897cc 	.word	0x000897cc
   84f58:	aa25      	add	r2, sp, #148	; 0x94
   84f5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f5c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84f5e:	f002 f97f 	bl	87260 <__ssprint_r>
   84f62:	2800      	cmp	r0, #0
   84f64:	f47f a955 	bne.w	84212 <_svfprintf_r+0x1ba>
   84f68:	46c8      	mov	r8, r9
   84f6a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84f6c:	f7ff ba16 	b.w	8439c <_svfprintf_r+0x344>
   84f70:	9c15      	ldr	r4, [sp, #84]	; 0x54
   84f72:	4622      	mov	r2, r4
   84f74:	4620      	mov	r0, r4
   84f76:	9c14      	ldr	r4, [sp, #80]	; 0x50
   84f78:	4623      	mov	r3, r4
   84f7a:	4621      	mov	r1, r4
   84f7c:	f003 fa2e 	bl	883dc <__aeabi_dcmpun>
   84f80:	2800      	cmp	r0, #0
   84f82:	f040 8273 	bne.w	8546c <_svfprintf_r+0x1414>
   84f86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84f88:	3301      	adds	r3, #1
   84f8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84f8c:	f023 0320 	bic.w	r3, r3, #32
   84f90:	930e      	str	r3, [sp, #56]	; 0x38
   84f92:	f000 819c 	beq.w	852ce <_svfprintf_r+0x1276>
   84f96:	2b47      	cmp	r3, #71	; 0x47
   84f98:	f000 80d6 	beq.w	85148 <_svfprintf_r+0x10f0>
   84f9c:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   84fa0:	9307      	str	r3, [sp, #28]
   84fa2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84fa4:	1e1f      	subs	r7, r3, #0
   84fa6:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84fa8:	9308      	str	r3, [sp, #32]
   84faa:	bfb7      	itett	lt
   84fac:	463b      	movlt	r3, r7
   84fae:	2300      	movge	r3, #0
   84fb0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   84fb4:	232d      	movlt	r3, #45	; 0x2d
   84fb6:	9310      	str	r3, [sp, #64]	; 0x40
   84fb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84fba:	2b66      	cmp	r3, #102	; 0x66
   84fbc:	f000 8190 	beq.w	852e0 <_svfprintf_r+0x1288>
   84fc0:	2b46      	cmp	r3, #70	; 0x46
   84fc2:	f000 80a4 	beq.w	8510e <_svfprintf_r+0x10b6>
   84fc6:	2002      	movs	r0, #2
   84fc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84fca:	a923      	add	r1, sp, #140	; 0x8c
   84fcc:	2b45      	cmp	r3, #69	; 0x45
   84fce:	bf0a      	itet	eq
   84fd0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   84fd2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   84fd4:	1c5d      	addeq	r5, r3, #1
   84fd6:	e88d 0021 	stmia.w	sp, {r0, r5}
   84fda:	9104      	str	r1, [sp, #16]
   84fdc:	a820      	add	r0, sp, #128	; 0x80
   84fde:	a91f      	add	r1, sp, #124	; 0x7c
   84fe0:	463b      	mov	r3, r7
   84fe2:	9003      	str	r0, [sp, #12]
   84fe4:	9a08      	ldr	r2, [sp, #32]
   84fe6:	9102      	str	r1, [sp, #8]
   84fe8:	980c      	ldr	r0, [sp, #48]	; 0x30
   84fea:	f000 fb59 	bl	856a0 <_dtoa_r>
   84fee:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84ff0:	4606      	mov	r6, r0
   84ff2:	2b67      	cmp	r3, #103	; 0x67
   84ff4:	f040 81ba 	bne.w	8536c <_svfprintf_r+0x1314>
   84ff8:	f01b 0f01 	tst.w	fp, #1
   84ffc:	f000 8223 	beq.w	85446 <_svfprintf_r+0x13ee>
   85000:	1974      	adds	r4, r6, r5
   85002:	9a16      	ldr	r2, [sp, #88]	; 0x58
   85004:	9808      	ldr	r0, [sp, #32]
   85006:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   85008:	4639      	mov	r1, r7
   8500a:	f003 f9b5 	bl	88378 <__aeabi_dcmpeq>
   8500e:	2800      	cmp	r0, #0
   85010:	f040 8124 	bne.w	8525c <_svfprintf_r+0x1204>
   85014:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   85016:	42a3      	cmp	r3, r4
   85018:	d206      	bcs.n	85028 <_svfprintf_r+0xfd0>
   8501a:	2130      	movs	r1, #48	; 0x30
   8501c:	1c5a      	adds	r2, r3, #1
   8501e:	9223      	str	r2, [sp, #140]	; 0x8c
   85020:	7019      	strb	r1, [r3, #0]
   85022:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   85024:	429c      	cmp	r4, r3
   85026:	d8f9      	bhi.n	8501c <_svfprintf_r+0xfc4>
   85028:	1b9b      	subs	r3, r3, r6
   8502a:	9313      	str	r3, [sp, #76]	; 0x4c
   8502c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8502e:	2b47      	cmp	r3, #71	; 0x47
   85030:	f000 80a2 	beq.w	85178 <_svfprintf_r+0x1120>
   85034:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85036:	2b65      	cmp	r3, #101	; 0x65
   85038:	f340 81a7 	ble.w	8538a <_svfprintf_r+0x1332>
   8503c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8503e:	2b66      	cmp	r3, #102	; 0x66
   85040:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   85042:	9312      	str	r3, [sp, #72]	; 0x48
   85044:	f000 8171 	beq.w	8532a <_svfprintf_r+0x12d2>
   85048:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8504a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8504c:	4619      	mov	r1, r3
   8504e:	4291      	cmp	r1, r2
   85050:	f300 815d 	bgt.w	8530e <_svfprintf_r+0x12b6>
   85054:	f01b 0f01 	tst.w	fp, #1
   85058:	f040 81f0 	bne.w	8543c <_svfprintf_r+0x13e4>
   8505c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   85060:	9308      	str	r3, [sp, #32]
   85062:	2367      	movs	r3, #103	; 0x67
   85064:	920e      	str	r2, [sp, #56]	; 0x38
   85066:	9311      	str	r3, [sp, #68]	; 0x44
   85068:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8506a:	2b00      	cmp	r3, #0
   8506c:	d17d      	bne.n	8516a <_svfprintf_r+0x1112>
   8506e:	930a      	str	r3, [sp, #40]	; 0x28
   85070:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   85074:	f7ff b914 	b.w	842a0 <_svfprintf_r+0x248>
   85078:	f024 0407 	bic.w	r4, r4, #7
   8507c:	6823      	ldr	r3, [r4, #0]
   8507e:	9315      	str	r3, [sp, #84]	; 0x54
   85080:	6863      	ldr	r3, [r4, #4]
   85082:	9314      	str	r3, [sp, #80]	; 0x50
   85084:	f104 0308 	add.w	r3, r4, #8
   85088:	930f      	str	r3, [sp, #60]	; 0x3c
   8508a:	f7ff bb2f 	b.w	846ec <_svfprintf_r+0x694>
   8508e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85090:	6813      	ldr	r3, [r2, #0]
   85092:	3204      	adds	r2, #4
   85094:	920f      	str	r2, [sp, #60]	; 0x3c
   85096:	9a09      	ldr	r2, [sp, #36]	; 0x24
   85098:	601a      	str	r2, [r3, #0]
   8509a:	f7ff b804 	b.w	840a6 <_svfprintf_r+0x4e>
   8509e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   850a0:	4daf      	ldr	r5, [pc, #700]	; (85360 <_svfprintf_r+0x1308>)
   850a2:	f7ff b9ad 	b.w	84400 <_svfprintf_r+0x3a8>
   850a6:	aa25      	add	r2, sp, #148	; 0x94
   850a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   850aa:	980c      	ldr	r0, [sp, #48]	; 0x30
   850ac:	f002 f8d8 	bl	87260 <__ssprint_r>
   850b0:	2800      	cmp	r0, #0
   850b2:	f47f a8ae 	bne.w	84212 <_svfprintf_r+0x1ba>
   850b6:	46c8      	mov	r8, r9
   850b8:	e431      	b.n	8491e <_svfprintf_r+0x8c6>
   850ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   850bc:	4613      	mov	r3, r2
   850be:	3304      	adds	r3, #4
   850c0:	930f      	str	r3, [sp, #60]	; 0x3c
   850c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   850c4:	6811      	ldr	r1, [r2, #0]
   850c6:	17dd      	asrs	r5, r3, #31
   850c8:	461a      	mov	r2, r3
   850ca:	462b      	mov	r3, r5
   850cc:	e9c1 2300 	strd	r2, r3, [r1]
   850d0:	f7fe bfe9 	b.w	840a6 <_svfprintf_r+0x4e>
   850d4:	aa25      	add	r2, sp, #148	; 0x94
   850d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   850d8:	980c      	ldr	r0, [sp, #48]	; 0x30
   850da:	f002 f8c1 	bl	87260 <__ssprint_r>
   850de:	2800      	cmp	r0, #0
   850e0:	f47f a897 	bne.w	84212 <_svfprintf_r+0x1ba>
   850e4:	46c8      	mov	r8, r9
   850e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   850e8:	e432      	b.n	84950 <_svfprintf_r+0x8f8>
   850ea:	f108 0808 	add.w	r8, r8, #8
   850ee:	e52f      	b.n	84b50 <_svfprintf_r+0xaf8>
   850f0:	2140      	movs	r1, #64	; 0x40
   850f2:	980c      	ldr	r0, [sp, #48]	; 0x30
   850f4:	f001 fa26 	bl	86544 <_malloc_r>
   850f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   850fa:	6010      	str	r0, [r2, #0]
   850fc:	6110      	str	r0, [r2, #16]
   850fe:	2800      	cmp	r0, #0
   85100:	f000 8214 	beq.w	8552c <_svfprintf_r+0x14d4>
   85104:	2340      	movs	r3, #64	; 0x40
   85106:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85108:	6153      	str	r3, [r2, #20]
   8510a:	f7fe bfbc 	b.w	84086 <_svfprintf_r+0x2e>
   8510e:	2003      	movs	r0, #3
   85110:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   85112:	a923      	add	r1, sp, #140	; 0x8c
   85114:	e88d 0011 	stmia.w	sp, {r0, r4}
   85118:	9104      	str	r1, [sp, #16]
   8511a:	a820      	add	r0, sp, #128	; 0x80
   8511c:	a91f      	add	r1, sp, #124	; 0x7c
   8511e:	9003      	str	r0, [sp, #12]
   85120:	9a08      	ldr	r2, [sp, #32]
   85122:	463b      	mov	r3, r7
   85124:	9102      	str	r1, [sp, #8]
   85126:	980c      	ldr	r0, [sp, #48]	; 0x30
   85128:	f000 faba 	bl	856a0 <_dtoa_r>
   8512c:	4625      	mov	r5, r4
   8512e:	4606      	mov	r6, r0
   85130:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85132:	1974      	adds	r4, r6, r5
   85134:	2b46      	cmp	r3, #70	; 0x46
   85136:	f47f af64 	bne.w	85002 <_svfprintf_r+0xfaa>
   8513a:	7833      	ldrb	r3, [r6, #0]
   8513c:	2b30      	cmp	r3, #48	; 0x30
   8513e:	f000 8187 	beq.w	85450 <_svfprintf_r+0x13f8>
   85142:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   85144:	442c      	add	r4, r5
   85146:	e75c      	b.n	85002 <_svfprintf_r+0xfaa>
   85148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8514a:	2b00      	cmp	r3, #0
   8514c:	bf08      	it	eq
   8514e:	2301      	moveq	r3, #1
   85150:	930a      	str	r3, [sp, #40]	; 0x28
   85152:	e723      	b.n	84f9c <_svfprintf_r+0xf44>
   85154:	4630      	mov	r0, r6
   85156:	950a      	str	r5, [sp, #40]	; 0x28
   85158:	f7fe fe6c 	bl	83e34 <strlen>
   8515c:	940f      	str	r4, [sp, #60]	; 0x3c
   8515e:	900e      	str	r0, [sp, #56]	; 0x38
   85160:	f8cd b01c 	str.w	fp, [sp, #28]
   85164:	4603      	mov	r3, r0
   85166:	f7ff b9e7 	b.w	84538 <_svfprintf_r+0x4e0>
   8516a:	272d      	movs	r7, #45	; 0x2d
   8516c:	2300      	movs	r3, #0
   8516e:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   85172:	930a      	str	r3, [sp, #40]	; 0x28
   85174:	f7ff b895 	b.w	842a2 <_svfprintf_r+0x24a>
   85178:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8517a:	461a      	mov	r2, r3
   8517c:	9312      	str	r3, [sp, #72]	; 0x48
   8517e:	3303      	adds	r3, #3
   85180:	db04      	blt.n	8518c <_svfprintf_r+0x1134>
   85182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85184:	4619      	mov	r1, r3
   85186:	4291      	cmp	r1, r2
   85188:	f6bf af5e 	bge.w	85048 <_svfprintf_r+0xff0>
   8518c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8518e:	3b02      	subs	r3, #2
   85190:	9311      	str	r3, [sp, #68]	; 0x44
   85192:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85194:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   85198:	3b01      	subs	r3, #1
   8519a:	2b00      	cmp	r3, #0
   8519c:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   851a0:	bfb4      	ite	lt
   851a2:	222d      	movlt	r2, #45	; 0x2d
   851a4:	222b      	movge	r2, #43	; 0x2b
   851a6:	931f      	str	r3, [sp, #124]	; 0x7c
   851a8:	bfb8      	it	lt
   851aa:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   851ac:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   851b0:	bfb8      	it	lt
   851b2:	f1c3 0301 	rsblt	r3, r3, #1
   851b6:	2b09      	cmp	r3, #9
   851b8:	f340 811f 	ble.w	853fa <_svfprintf_r+0x13a2>
   851bc:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   851c0:	4601      	mov	r1, r0
   851c2:	4c68      	ldr	r4, [pc, #416]	; (85364 <_svfprintf_r+0x130c>)
   851c4:	e000      	b.n	851c8 <_svfprintf_r+0x1170>
   851c6:	4611      	mov	r1, r2
   851c8:	fb84 5203 	smull	r5, r2, r4, r3
   851cc:	17dd      	asrs	r5, r3, #31
   851ce:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   851d2:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   851d6:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   851da:	3230      	adds	r2, #48	; 0x30
   851dc:	2d09      	cmp	r5, #9
   851de:	f801 2c01 	strb.w	r2, [r1, #-1]
   851e2:	462b      	mov	r3, r5
   851e4:	f101 32ff 	add.w	r2, r1, #4294967295
   851e8:	dced      	bgt.n	851c6 <_svfprintf_r+0x116e>
   851ea:	3330      	adds	r3, #48	; 0x30
   851ec:	3902      	subs	r1, #2
   851ee:	b2dc      	uxtb	r4, r3
   851f0:	4288      	cmp	r0, r1
   851f2:	f802 4c01 	strb.w	r4, [r2, #-1]
   851f6:	f240 8192 	bls.w	8551e <_svfprintf_r+0x14c6>
   851fa:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   851fe:	4613      	mov	r3, r2
   85200:	e001      	b.n	85206 <_svfprintf_r+0x11ae>
   85202:	f813 4b01 	ldrb.w	r4, [r3], #1
   85206:	4283      	cmp	r3, r0
   85208:	f801 4b01 	strb.w	r4, [r1], #1
   8520c:	d1f9      	bne.n	85202 <_svfprintf_r+0x11aa>
   8520e:	3301      	adds	r3, #1
   85210:	1a9b      	subs	r3, r3, r2
   85212:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   85216:	4413      	add	r3, r2
   85218:	aa21      	add	r2, sp, #132	; 0x84
   8521a:	1a9b      	subs	r3, r3, r2
   8521c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8521e:	931b      	str	r3, [sp, #108]	; 0x6c
   85220:	2a01      	cmp	r2, #1
   85222:	4413      	add	r3, r2
   85224:	930e      	str	r3, [sp, #56]	; 0x38
   85226:	f340 8148 	ble.w	854ba <_svfprintf_r+0x1462>
   8522a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8522c:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8522e:	4413      	add	r3, r2
   85230:	930e      	str	r3, [sp, #56]	; 0x38
   85232:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85236:	9308      	str	r3, [sp, #32]
   85238:	2300      	movs	r3, #0
   8523a:	9312      	str	r3, [sp, #72]	; 0x48
   8523c:	e714      	b.n	85068 <_svfprintf_r+0x1010>
   8523e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85240:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85242:	f7ff b876 	b.w	84332 <_svfprintf_r+0x2da>
   85246:	aa25      	add	r2, sp, #148	; 0x94
   85248:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8524a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8524c:	f002 f808 	bl	87260 <__ssprint_r>
   85250:	2800      	cmp	r0, #0
   85252:	f47e afde 	bne.w	84212 <_svfprintf_r+0x1ba>
   85256:	46c8      	mov	r8, r9
   85258:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8525a:	e4fb      	b.n	84c54 <_svfprintf_r+0xbfc>
   8525c:	4623      	mov	r3, r4
   8525e:	e6e3      	b.n	85028 <_svfprintf_r+0xfd0>
   85260:	aa25      	add	r2, sp, #148	; 0x94
   85262:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85264:	980c      	ldr	r0, [sp, #48]	; 0x30
   85266:	f001 fffb 	bl	87260 <__ssprint_r>
   8526a:	2800      	cmp	r0, #0
   8526c:	f47e afd1 	bne.w	84212 <_svfprintf_r+0x1ba>
   85270:	46c8      	mov	r8, r9
   85272:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   85274:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85276:	e5d3      	b.n	84e20 <_svfprintf_r+0xdc8>
   85278:	aa25      	add	r2, sp, #148	; 0x94
   8527a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8527c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8527e:	f001 ffef 	bl	87260 <__ssprint_r>
   85282:	2800      	cmp	r0, #0
   85284:	f47e afc5 	bne.w	84212 <_svfprintf_r+0x1ba>
   85288:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8528a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8528c:	46c8      	mov	r8, r9
   8528e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85290:	1a9a      	subs	r2, r3, r2
   85292:	e5dd      	b.n	84e50 <_svfprintf_r+0xdf8>
   85294:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85296:	f7ff b8fe 	b.w	84496 <_svfprintf_r+0x43e>
   8529a:	aa25      	add	r2, sp, #148	; 0x94
   8529c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8529e:	980c      	ldr	r0, [sp, #48]	; 0x30
   852a0:	f001 ffde 	bl	87260 <__ssprint_r>
   852a4:	2800      	cmp	r0, #0
   852a6:	f47e afb4 	bne.w	84212 <_svfprintf_r+0x1ba>
   852aa:	46c8      	mov	r8, r9
   852ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   852ae:	e5b0      	b.n	84e12 <_svfprintf_r+0xdba>
   852b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   852b2:	4637      	mov	r7, r6
   852b4:	2b06      	cmp	r3, #6
   852b6:	bf28      	it	cs
   852b8:	2306      	movcs	r3, #6
   852ba:	960a      	str	r6, [sp, #40]	; 0x28
   852bc:	9612      	str	r6, [sp, #72]	; 0x48
   852be:	9308      	str	r3, [sp, #32]
   852c0:	940f      	str	r4, [sp, #60]	; 0x3c
   852c2:	f8cd b01c 	str.w	fp, [sp, #28]
   852c6:	930e      	str	r3, [sp, #56]	; 0x38
   852c8:	4e27      	ldr	r6, [pc, #156]	; (85368 <_svfprintf_r+0x1310>)
   852ca:	f7fe bfe9 	b.w	842a0 <_svfprintf_r+0x248>
   852ce:	2306      	movs	r3, #6
   852d0:	930a      	str	r3, [sp, #40]	; 0x28
   852d2:	e663      	b.n	84f9c <_svfprintf_r+0xf44>
   852d4:	232d      	movs	r3, #45	; 0x2d
   852d6:	461f      	mov	r7, r3
   852d8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   852dc:	f7ff ba28 	b.w	84730 <_svfprintf_r+0x6d8>
   852e0:	2003      	movs	r0, #3
   852e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   852e4:	a923      	add	r1, sp, #140	; 0x8c
   852e6:	e88d 0011 	stmia.w	sp, {r0, r4}
   852ea:	9104      	str	r1, [sp, #16]
   852ec:	a820      	add	r0, sp, #128	; 0x80
   852ee:	a91f      	add	r1, sp, #124	; 0x7c
   852f0:	9003      	str	r0, [sp, #12]
   852f2:	9a08      	ldr	r2, [sp, #32]
   852f4:	463b      	mov	r3, r7
   852f6:	9102      	str	r1, [sp, #8]
   852f8:	980c      	ldr	r0, [sp, #48]	; 0x30
   852fa:	f000 f9d1 	bl	856a0 <_dtoa_r>
   852fe:	4625      	mov	r5, r4
   85300:	4606      	mov	r6, r0
   85302:	1904      	adds	r4, r0, r4
   85304:	e719      	b.n	8513a <_svfprintf_r+0x10e2>
   85306:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85308:	4d15      	ldr	r5, [pc, #84]	; (85360 <_svfprintf_r+0x1308>)
   8530a:	f7ff bb7e 	b.w	84a0a <_svfprintf_r+0x9b2>
   8530e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85310:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   85312:	4413      	add	r3, r2
   85314:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85316:	930e      	str	r3, [sp, #56]	; 0x38
   85318:	2a00      	cmp	r2, #0
   8531a:	f340 80c7 	ble.w	854ac <_svfprintf_r+0x1454>
   8531e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85322:	9308      	str	r3, [sp, #32]
   85324:	2367      	movs	r3, #103	; 0x67
   85326:	9311      	str	r3, [sp, #68]	; 0x44
   85328:	e69e      	b.n	85068 <_svfprintf_r+0x1010>
   8532a:	2b00      	cmp	r3, #0
   8532c:	f340 80e1 	ble.w	854f2 <_svfprintf_r+0x149a>
   85330:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85332:	2a00      	cmp	r2, #0
   85334:	f040 80b0 	bne.w	85498 <_svfprintf_r+0x1440>
   85338:	f01b 0f01 	tst.w	fp, #1
   8533c:	f040 80ac 	bne.w	85498 <_svfprintf_r+0x1440>
   85340:	9308      	str	r3, [sp, #32]
   85342:	930e      	str	r3, [sp, #56]	; 0x38
   85344:	e690      	b.n	85068 <_svfprintf_r+0x1010>
   85346:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85348:	940f      	str	r4, [sp, #60]	; 0x3c
   8534a:	9308      	str	r3, [sp, #32]
   8534c:	930e      	str	r3, [sp, #56]	; 0x38
   8534e:	900a      	str	r0, [sp, #40]	; 0x28
   85350:	f8cd b01c 	str.w	fp, [sp, #28]
   85354:	9012      	str	r0, [sp, #72]	; 0x48
   85356:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8535a:	f7fe bfa1 	b.w	842a0 <_svfprintf_r+0x248>
   8535e:	bf00      	nop
   85360:	000897cc 	.word	0x000897cc
   85364:	66666667 	.word	0x66666667
   85368:	000897b0 	.word	0x000897b0
   8536c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8536e:	2b47      	cmp	r3, #71	; 0x47
   85370:	f47f ae46 	bne.w	85000 <_svfprintf_r+0xfa8>
   85374:	f01b 0f01 	tst.w	fp, #1
   85378:	f47f aeda 	bne.w	85130 <_svfprintf_r+0x10d8>
   8537c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8537e:	1b9b      	subs	r3, r3, r6
   85380:	9313      	str	r3, [sp, #76]	; 0x4c
   85382:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85384:	2b47      	cmp	r3, #71	; 0x47
   85386:	f43f aef7 	beq.w	85178 <_svfprintf_r+0x1120>
   8538a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8538c:	9312      	str	r3, [sp, #72]	; 0x48
   8538e:	e700      	b.n	85192 <_svfprintf_r+0x113a>
   85390:	2000      	movs	r0, #0
   85392:	900a      	str	r0, [sp, #40]	; 0x28
   85394:	f7fe bebc 	b.w	84110 <_svfprintf_r+0xb8>
   85398:	424f      	negs	r7, r1
   8539a:	3110      	adds	r1, #16
   8539c:	da35      	bge.n	8540a <_svfprintf_r+0x13b2>
   8539e:	2410      	movs	r4, #16
   853a0:	4d6a      	ldr	r5, [pc, #424]	; (8554c <_svfprintf_r+0x14f4>)
   853a2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   853a6:	e004      	b.n	853b2 <_svfprintf_r+0x135a>
   853a8:	f108 0808 	add.w	r8, r8, #8
   853ac:	3f10      	subs	r7, #16
   853ae:	2f10      	cmp	r7, #16
   853b0:	dd2c      	ble.n	8540c <_svfprintf_r+0x13b4>
   853b2:	3301      	adds	r3, #1
   853b4:	3210      	adds	r2, #16
   853b6:	2b07      	cmp	r3, #7
   853b8:	9227      	str	r2, [sp, #156]	; 0x9c
   853ba:	9326      	str	r3, [sp, #152]	; 0x98
   853bc:	f8c8 5000 	str.w	r5, [r8]
   853c0:	f8c8 4004 	str.w	r4, [r8, #4]
   853c4:	ddf0      	ble.n	853a8 <_svfprintf_r+0x1350>
   853c6:	aa25      	add	r2, sp, #148	; 0x94
   853c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   853ca:	4658      	mov	r0, fp
   853cc:	f001 ff48 	bl	87260 <__ssprint_r>
   853d0:	2800      	cmp	r0, #0
   853d2:	f47e af1e 	bne.w	84212 <_svfprintf_r+0x1ba>
   853d6:	46c8      	mov	r8, r9
   853d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   853da:	9b26      	ldr	r3, [sp, #152]	; 0x98
   853dc:	e7e6      	b.n	853ac <_svfprintf_r+0x1354>
   853de:	aa25      	add	r2, sp, #148	; 0x94
   853e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   853e2:	980c      	ldr	r0, [sp, #48]	; 0x30
   853e4:	f001 ff3c 	bl	87260 <__ssprint_r>
   853e8:	2800      	cmp	r0, #0
   853ea:	f47e af12 	bne.w	84212 <_svfprintf_r+0x1ba>
   853ee:	46c8      	mov	r8, r9
   853f0:	991f      	ldr	r1, [sp, #124]	; 0x7c
   853f2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   853f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   853f6:	f7ff bbc3 	b.w	84b80 <_svfprintf_r+0xb28>
   853fa:	2230      	movs	r2, #48	; 0x30
   853fc:	4413      	add	r3, r2
   853fe:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   85402:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   85406:	ab22      	add	r3, sp, #136	; 0x88
   85408:	e706      	b.n	85218 <_svfprintf_r+0x11c0>
   8540a:	4d50      	ldr	r5, [pc, #320]	; (8554c <_svfprintf_r+0x14f4>)
   8540c:	3301      	adds	r3, #1
   8540e:	443a      	add	r2, r7
   85410:	2b07      	cmp	r3, #7
   85412:	e888 00a0 	stmia.w	r8, {r5, r7}
   85416:	9227      	str	r2, [sp, #156]	; 0x9c
   85418:	9326      	str	r3, [sp, #152]	; 0x98
   8541a:	f108 0808 	add.w	r8, r8, #8
   8541e:	f77f abb2 	ble.w	84b86 <_svfprintf_r+0xb2e>
   85422:	aa25      	add	r2, sp, #148	; 0x94
   85424:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85426:	980c      	ldr	r0, [sp, #48]	; 0x30
   85428:	f001 ff1a 	bl	87260 <__ssprint_r>
   8542c:	2800      	cmp	r0, #0
   8542e:	f47e aef0 	bne.w	84212 <_svfprintf_r+0x1ba>
   85432:	46c8      	mov	r8, r9
   85434:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   85436:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85438:	f7ff bba5 	b.w	84b86 <_svfprintf_r+0xb2e>
   8543c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8543e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85440:	4413      	add	r3, r2
   85442:	930e      	str	r3, [sp, #56]	; 0x38
   85444:	e76b      	b.n	8531e <_svfprintf_r+0x12c6>
   85446:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   85448:	e5ee      	b.n	85028 <_svfprintf_r+0xfd0>
   8544a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8544c:	4d3f      	ldr	r5, [pc, #252]	; (8554c <_svfprintf_r+0x14f4>)
   8544e:	e4bb      	b.n	84dc8 <_svfprintf_r+0xd70>
   85450:	9a16      	ldr	r2, [sp, #88]	; 0x58
   85452:	9808      	ldr	r0, [sp, #32]
   85454:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   85456:	4639      	mov	r1, r7
   85458:	f002 ff8e 	bl	88378 <__aeabi_dcmpeq>
   8545c:	2800      	cmp	r0, #0
   8545e:	f47f ae70 	bne.w	85142 <_svfprintf_r+0x10ea>
   85462:	f1c5 0501 	rsb	r5, r5, #1
   85466:	951f      	str	r5, [sp, #124]	; 0x7c
   85468:	442c      	add	r4, r5
   8546a:	e5ca      	b.n	85002 <_svfprintf_r+0xfaa>
   8546c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8546e:	4e38      	ldr	r6, [pc, #224]	; (85550 <_svfprintf_r+0x14f8>)
   85470:	2b00      	cmp	r3, #0
   85472:	bfbe      	ittt	lt
   85474:	232d      	movlt	r3, #45	; 0x2d
   85476:	461f      	movlt	r7, r3
   85478:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   8547c:	f04f 0303 	mov.w	r3, #3
   85480:	461a      	mov	r2, r3
   85482:	9308      	str	r3, [sp, #32]
   85484:	f04f 0300 	mov.w	r3, #0
   85488:	bfa8      	it	ge
   8548a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   8548e:	4619      	mov	r1, r3
   85490:	930a      	str	r3, [sp, #40]	; 0x28
   85492:	4b30      	ldr	r3, [pc, #192]	; (85554 <_svfprintf_r+0x14fc>)
   85494:	f7ff b954 	b.w	84740 <_svfprintf_r+0x6e8>
   85498:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8549a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8549c:	4413      	add	r3, r2
   8549e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   854a0:	441a      	add	r2, r3
   854a2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   854a6:	920e      	str	r2, [sp, #56]	; 0x38
   854a8:	9308      	str	r3, [sp, #32]
   854aa:	e5dd      	b.n	85068 <_svfprintf_r+0x1010>
   854ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
   854ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   854b0:	f1c3 0301 	rsb	r3, r3, #1
   854b4:	441a      	add	r2, r3
   854b6:	4613      	mov	r3, r2
   854b8:	e7c3      	b.n	85442 <_svfprintf_r+0x13ea>
   854ba:	f01b 0301 	ands.w	r3, fp, #1
   854be:	9312      	str	r3, [sp, #72]	; 0x48
   854c0:	f47f aeb3 	bne.w	8522a <_svfprintf_r+0x11d2>
   854c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   854c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   854ca:	9308      	str	r3, [sp, #32]
   854cc:	e5cc      	b.n	85068 <_svfprintf_r+0x1010>
   854ce:	4d1f      	ldr	r5, [pc, #124]	; (8554c <_svfprintf_r+0x14f4>)
   854d0:	e43c      	b.n	84d4c <_svfprintf_r+0xcf4>
   854d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   854d4:	4d1d      	ldr	r5, [pc, #116]	; (8554c <_svfprintf_r+0x14f4>)
   854d6:	e491      	b.n	84dfc <_svfprintf_r+0xda4>
   854d8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   854da:	f89a 3001 	ldrb.w	r3, [sl, #1]
   854de:	6828      	ldr	r0, [r5, #0]
   854e0:	46a2      	mov	sl, r4
   854e2:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   854e6:	900a      	str	r0, [sp, #40]	; 0x28
   854e8:	4628      	mov	r0, r5
   854ea:	3004      	adds	r0, #4
   854ec:	900f      	str	r0, [sp, #60]	; 0x3c
   854ee:	f7fe be0d 	b.w	8410c <_svfprintf_r+0xb4>
   854f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   854f4:	b913      	cbnz	r3, 854fc <_svfprintf_r+0x14a4>
   854f6:	f01b 0f01 	tst.w	fp, #1
   854fa:	d002      	beq.n	85502 <_svfprintf_r+0x14aa>
   854fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   854fe:	3301      	adds	r3, #1
   85500:	e7cd      	b.n	8549e <_svfprintf_r+0x1446>
   85502:	2301      	movs	r3, #1
   85504:	e71c      	b.n	85340 <_svfprintf_r+0x12e8>
   85506:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8550a:	f7ff b980 	b.w	8480e <_svfprintf_r+0x7b6>
   8550e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85512:	f7ff b93a 	b.w	8478a <_svfprintf_r+0x732>
   85516:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8551a:	f7ff b84f 	b.w	845bc <_svfprintf_r+0x564>
   8551e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   85522:	e679      	b.n	85218 <_svfprintf_r+0x11c0>
   85524:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85528:	f7ff b9b2 	b.w	84890 <_svfprintf_r+0x838>
   8552c:	f04f 32ff 	mov.w	r2, #4294967295
   85530:	230c      	movs	r3, #12
   85532:	9209      	str	r2, [sp, #36]	; 0x24
   85534:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85536:	6013      	str	r3, [r2, #0]
   85538:	f7fe be74 	b.w	84224 <_svfprintf_r+0x1cc>
   8553c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85540:	f7ff b8c4 	b.w	846cc <_svfprintf_r+0x674>
   85544:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85548:	f7ff b878 	b.w	8463c <_svfprintf_r+0x5e4>
   8554c:	000897cc 	.word	0x000897cc
   85550:	00089784 	.word	0x00089784
   85554:	00089780 	.word	0x00089780

00085558 <register_fini>:
   85558:	4b02      	ldr	r3, [pc, #8]	; (85564 <register_fini+0xc>)
   8555a:	b113      	cbz	r3, 85562 <register_fini+0xa>
   8555c:	4802      	ldr	r0, [pc, #8]	; (85568 <register_fini+0x10>)
   8555e:	f000 b805 	b.w	8556c <atexit>
   85562:	4770      	bx	lr
   85564:	00000000 	.word	0x00000000
   85568:	000864e5 	.word	0x000864e5

0008556c <atexit>:
   8556c:	2300      	movs	r3, #0
   8556e:	4601      	mov	r1, r0
   85570:	461a      	mov	r2, r3
   85572:	4618      	mov	r0, r3
   85574:	f001 befe 	b.w	87374 <__register_exitproc>

00085578 <quorem>:
   85578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8557c:	6903      	ldr	r3, [r0, #16]
   8557e:	690f      	ldr	r7, [r1, #16]
   85580:	b083      	sub	sp, #12
   85582:	429f      	cmp	r7, r3
   85584:	f300 8088 	bgt.w	85698 <quorem+0x120>
   85588:	3f01      	subs	r7, #1
   8558a:	f101 0614 	add.w	r6, r1, #20
   8558e:	f100 0a14 	add.w	sl, r0, #20
   85592:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   85596:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8559a:	3301      	adds	r3, #1
   8559c:	fbb2 f8f3 	udiv	r8, r2, r3
   855a0:	00bb      	lsls	r3, r7, #2
   855a2:	9300      	str	r3, [sp, #0]
   855a4:	eb06 0903 	add.w	r9, r6, r3
   855a8:	4453      	add	r3, sl
   855aa:	9301      	str	r3, [sp, #4]
   855ac:	f1b8 0f00 	cmp.w	r8, #0
   855b0:	d03b      	beq.n	8562a <quorem+0xb2>
   855b2:	2300      	movs	r3, #0
   855b4:	46b4      	mov	ip, r6
   855b6:	461c      	mov	r4, r3
   855b8:	46d6      	mov	lr, sl
   855ba:	f85c 2b04 	ldr.w	r2, [ip], #4
   855be:	f8de 5000 	ldr.w	r5, [lr]
   855c2:	fa1f fb82 	uxth.w	fp, r2
   855c6:	fb08 330b 	mla	r3, r8, fp, r3
   855ca:	0c12      	lsrs	r2, r2, #16
   855cc:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   855d0:	fb08 bb02 	mla	fp, r8, r2, fp
   855d4:	b29a      	uxth	r2, r3
   855d6:	1aa2      	subs	r2, r4, r2
   855d8:	b2ab      	uxth	r3, r5
   855da:	fa1f f48b 	uxth.w	r4, fp
   855de:	441a      	add	r2, r3
   855e0:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   855e4:	eb04 4422 	add.w	r4, r4, r2, asr #16
   855e8:	b292      	uxth	r2, r2
   855ea:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   855ee:	45e1      	cmp	r9, ip
   855f0:	f84e 2b04 	str.w	r2, [lr], #4
   855f4:	ea4f 4424 	mov.w	r4, r4, asr #16
   855f8:	ea4f 431b 	mov.w	r3, fp, lsr #16
   855fc:	d2dd      	bcs.n	855ba <quorem+0x42>
   855fe:	9b00      	ldr	r3, [sp, #0]
   85600:	f85a 3003 	ldr.w	r3, [sl, r3]
   85604:	b98b      	cbnz	r3, 8562a <quorem+0xb2>
   85606:	9c01      	ldr	r4, [sp, #4]
   85608:	1f23      	subs	r3, r4, #4
   8560a:	459a      	cmp	sl, r3
   8560c:	d20c      	bcs.n	85628 <quorem+0xb0>
   8560e:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85612:	b94b      	cbnz	r3, 85628 <quorem+0xb0>
   85614:	f1a4 0308 	sub.w	r3, r4, #8
   85618:	e002      	b.n	85620 <quorem+0xa8>
   8561a:	681a      	ldr	r2, [r3, #0]
   8561c:	3b04      	subs	r3, #4
   8561e:	b91a      	cbnz	r2, 85628 <quorem+0xb0>
   85620:	459a      	cmp	sl, r3
   85622:	f107 37ff 	add.w	r7, r7, #4294967295
   85626:	d3f8      	bcc.n	8561a <quorem+0xa2>
   85628:	6107      	str	r7, [r0, #16]
   8562a:	4604      	mov	r4, r0
   8562c:	f001 fd08 	bl	87040 <__mcmp>
   85630:	2800      	cmp	r0, #0
   85632:	db2d      	blt.n	85690 <quorem+0x118>
   85634:	4655      	mov	r5, sl
   85636:	2300      	movs	r3, #0
   85638:	f108 0801 	add.w	r8, r8, #1
   8563c:	f856 1b04 	ldr.w	r1, [r6], #4
   85640:	6828      	ldr	r0, [r5, #0]
   85642:	b28a      	uxth	r2, r1
   85644:	1a9a      	subs	r2, r3, r2
   85646:	0c0b      	lsrs	r3, r1, #16
   85648:	b281      	uxth	r1, r0
   8564a:	440a      	add	r2, r1
   8564c:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   85650:	eb03 4322 	add.w	r3, r3, r2, asr #16
   85654:	b292      	uxth	r2, r2
   85656:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   8565a:	45b1      	cmp	r9, r6
   8565c:	f845 2b04 	str.w	r2, [r5], #4
   85660:	ea4f 4323 	mov.w	r3, r3, asr #16
   85664:	d2ea      	bcs.n	8563c <quorem+0xc4>
   85666:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8566a:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   8566e:	b97a      	cbnz	r2, 85690 <quorem+0x118>
   85670:	1f1a      	subs	r2, r3, #4
   85672:	4592      	cmp	sl, r2
   85674:	d20b      	bcs.n	8568e <quorem+0x116>
   85676:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8567a:	b942      	cbnz	r2, 8568e <quorem+0x116>
   8567c:	3b08      	subs	r3, #8
   8567e:	e002      	b.n	85686 <quorem+0x10e>
   85680:	681a      	ldr	r2, [r3, #0]
   85682:	3b04      	subs	r3, #4
   85684:	b91a      	cbnz	r2, 8568e <quorem+0x116>
   85686:	459a      	cmp	sl, r3
   85688:	f107 37ff 	add.w	r7, r7, #4294967295
   8568c:	d3f8      	bcc.n	85680 <quorem+0x108>
   8568e:	6127      	str	r7, [r4, #16]
   85690:	4640      	mov	r0, r8
   85692:	b003      	add	sp, #12
   85694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85698:	2000      	movs	r0, #0
   8569a:	b003      	add	sp, #12
   8569c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000856a0 <_dtoa_r>:
   856a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   856a4:	6c05      	ldr	r5, [r0, #64]	; 0x40
   856a6:	b09b      	sub	sp, #108	; 0x6c
   856a8:	4604      	mov	r4, r0
   856aa:	4692      	mov	sl, r2
   856ac:	469b      	mov	fp, r3
   856ae:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   856b0:	b14d      	cbz	r5, 856c6 <_dtoa_r+0x26>
   856b2:	2301      	movs	r3, #1
   856b4:	6c42      	ldr	r2, [r0, #68]	; 0x44
   856b6:	4629      	mov	r1, r5
   856b8:	4093      	lsls	r3, r2
   856ba:	60ab      	str	r3, [r5, #8]
   856bc:	606a      	str	r2, [r5, #4]
   856be:	f001 fae7 	bl	86c90 <_Bfree>
   856c2:	2300      	movs	r3, #0
   856c4:	6423      	str	r3, [r4, #64]	; 0x40
   856c6:	f1bb 0f00 	cmp.w	fp, #0
   856ca:	465d      	mov	r5, fp
   856cc:	db35      	blt.n	8573a <_dtoa_r+0x9a>
   856ce:	2300      	movs	r3, #0
   856d0:	6033      	str	r3, [r6, #0]
   856d2:	4b9d      	ldr	r3, [pc, #628]	; (85948 <_dtoa_r+0x2a8>)
   856d4:	43ab      	bics	r3, r5
   856d6:	d015      	beq.n	85704 <_dtoa_r+0x64>
   856d8:	2200      	movs	r2, #0
   856da:	2300      	movs	r3, #0
   856dc:	4650      	mov	r0, sl
   856de:	4659      	mov	r1, fp
   856e0:	f002 fe4a 	bl	88378 <__aeabi_dcmpeq>
   856e4:	4680      	mov	r8, r0
   856e6:	2800      	cmp	r0, #0
   856e8:	d02d      	beq.n	85746 <_dtoa_r+0xa6>
   856ea:	2301      	movs	r3, #1
   856ec:	9a26      	ldr	r2, [sp, #152]	; 0x98
   856ee:	6013      	str	r3, [r2, #0]
   856f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   856f2:	2b00      	cmp	r3, #0
   856f4:	f000 80bd 	beq.w	85872 <_dtoa_r+0x1d2>
   856f8:	4894      	ldr	r0, [pc, #592]	; (8594c <_dtoa_r+0x2ac>)
   856fa:	6018      	str	r0, [r3, #0]
   856fc:	3801      	subs	r0, #1
   856fe:	b01b      	add	sp, #108	; 0x6c
   85700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85704:	f242 730f 	movw	r3, #9999	; 0x270f
   85708:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8570a:	6013      	str	r3, [r2, #0]
   8570c:	f1ba 0f00 	cmp.w	sl, #0
   85710:	d10d      	bne.n	8572e <_dtoa_r+0x8e>
   85712:	f3c5 0513 	ubfx	r5, r5, #0, #20
   85716:	b955      	cbnz	r5, 8572e <_dtoa_r+0x8e>
   85718:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8571a:	488d      	ldr	r0, [pc, #564]	; (85950 <_dtoa_r+0x2b0>)
   8571c:	2b00      	cmp	r3, #0
   8571e:	d0ee      	beq.n	856fe <_dtoa_r+0x5e>
   85720:	f100 0308 	add.w	r3, r0, #8
   85724:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   85726:	6013      	str	r3, [r2, #0]
   85728:	b01b      	add	sp, #108	; 0x6c
   8572a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8572e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85730:	4888      	ldr	r0, [pc, #544]	; (85954 <_dtoa_r+0x2b4>)
   85732:	2b00      	cmp	r3, #0
   85734:	d0e3      	beq.n	856fe <_dtoa_r+0x5e>
   85736:	1cc3      	adds	r3, r0, #3
   85738:	e7f4      	b.n	85724 <_dtoa_r+0x84>
   8573a:	2301      	movs	r3, #1
   8573c:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   85740:	6033      	str	r3, [r6, #0]
   85742:	46ab      	mov	fp, r5
   85744:	e7c5      	b.n	856d2 <_dtoa_r+0x32>
   85746:	aa18      	add	r2, sp, #96	; 0x60
   85748:	ab19      	add	r3, sp, #100	; 0x64
   8574a:	9201      	str	r2, [sp, #4]
   8574c:	9300      	str	r3, [sp, #0]
   8574e:	4652      	mov	r2, sl
   85750:	465b      	mov	r3, fp
   85752:	4620      	mov	r0, r4
   85754:	f001 fd1e 	bl	87194 <__d2b>
   85758:	0d2b      	lsrs	r3, r5, #20
   8575a:	4681      	mov	r9, r0
   8575c:	d071      	beq.n	85842 <_dtoa_r+0x1a2>
   8575e:	4650      	mov	r0, sl
   85760:	f3cb 0213 	ubfx	r2, fp, #0, #20
   85764:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   85768:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8576a:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   8576e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   85772:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   85776:	2200      	movs	r2, #0
   85778:	4b77      	ldr	r3, [pc, #476]	; (85958 <_dtoa_r+0x2b8>)
   8577a:	f002 f9e1 	bl	87b40 <__aeabi_dsub>
   8577e:	a36c      	add	r3, pc, #432	; (adr r3, 85930 <_dtoa_r+0x290>)
   85780:	e9d3 2300 	ldrd	r2, r3, [r3]
   85784:	f002 fb90 	bl	87ea8 <__aeabi_dmul>
   85788:	a36b      	add	r3, pc, #428	; (adr r3, 85938 <_dtoa_r+0x298>)
   8578a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8578e:	f002 f9d9 	bl	87b44 <__adddf3>
   85792:	e9cd 0102 	strd	r0, r1, [sp, #8]
   85796:	4630      	mov	r0, r6
   85798:	f002 fb20 	bl	87ddc <__aeabi_i2d>
   8579c:	a368      	add	r3, pc, #416	; (adr r3, 85940 <_dtoa_r+0x2a0>)
   8579e:	e9d3 2300 	ldrd	r2, r3, [r3]
   857a2:	f002 fb81 	bl	87ea8 <__aeabi_dmul>
   857a6:	4602      	mov	r2, r0
   857a8:	460b      	mov	r3, r1
   857aa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   857ae:	f002 f9c9 	bl	87b44 <__adddf3>
   857b2:	e9cd 0104 	strd	r0, r1, [sp, #16]
   857b6:	f002 fe27 	bl	88408 <__aeabi_d2iz>
   857ba:	2200      	movs	r2, #0
   857bc:	9002      	str	r0, [sp, #8]
   857be:	2300      	movs	r3, #0
   857c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   857c4:	f002 fde2 	bl	8838c <__aeabi_dcmplt>
   857c8:	2800      	cmp	r0, #0
   857ca:	f040 816d 	bne.w	85aa8 <_dtoa_r+0x408>
   857ce:	9d02      	ldr	r5, [sp, #8]
   857d0:	2d16      	cmp	r5, #22
   857d2:	f200 8157 	bhi.w	85a84 <_dtoa_r+0x3e4>
   857d6:	4961      	ldr	r1, [pc, #388]	; (8595c <_dtoa_r+0x2bc>)
   857d8:	4652      	mov	r2, sl
   857da:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   857de:	465b      	mov	r3, fp
   857e0:	e9d1 0100 	ldrd	r0, r1, [r1]
   857e4:	f002 fdf0 	bl	883c8 <__aeabi_dcmpgt>
   857e8:	2800      	cmp	r0, #0
   857ea:	f000 81be 	beq.w	85b6a <_dtoa_r+0x4ca>
   857ee:	1e6b      	subs	r3, r5, #1
   857f0:	9302      	str	r3, [sp, #8]
   857f2:	2300      	movs	r3, #0
   857f4:	930e      	str	r3, [sp, #56]	; 0x38
   857f6:	1bbf      	subs	r7, r7, r6
   857f8:	1e7b      	subs	r3, r7, #1
   857fa:	9308      	str	r3, [sp, #32]
   857fc:	f100 814e 	bmi.w	85a9c <_dtoa_r+0x3fc>
   85800:	2300      	movs	r3, #0
   85802:	930a      	str	r3, [sp, #40]	; 0x28
   85804:	9b02      	ldr	r3, [sp, #8]
   85806:	2b00      	cmp	r3, #0
   85808:	f2c0 813f 	blt.w	85a8a <_dtoa_r+0x3ea>
   8580c:	9a08      	ldr	r2, [sp, #32]
   8580e:	930d      	str	r3, [sp, #52]	; 0x34
   85810:	4611      	mov	r1, r2
   85812:	4419      	add	r1, r3
   85814:	2300      	movs	r3, #0
   85816:	9108      	str	r1, [sp, #32]
   85818:	930c      	str	r3, [sp, #48]	; 0x30
   8581a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8581c:	2b09      	cmp	r3, #9
   8581e:	d82a      	bhi.n	85876 <_dtoa_r+0x1d6>
   85820:	2b05      	cmp	r3, #5
   85822:	f340 8658 	ble.w	864d6 <_dtoa_r+0xe36>
   85826:	2500      	movs	r5, #0
   85828:	3b04      	subs	r3, #4
   8582a:	9324      	str	r3, [sp, #144]	; 0x90
   8582c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8582e:	3b02      	subs	r3, #2
   85830:	2b03      	cmp	r3, #3
   85832:	f200 863f 	bhi.w	864b4 <_dtoa_r+0xe14>
   85836:	e8df f013 	tbh	[pc, r3, lsl #1]
   8583a:	03ce      	.short	0x03ce
   8583c:	03d902c3 	.word	0x03d902c3
   85840:	045b      	.short	0x045b
   85842:	9f18      	ldr	r7, [sp, #96]	; 0x60
   85844:	9e19      	ldr	r6, [sp, #100]	; 0x64
   85846:	443e      	add	r6, r7
   85848:	f206 4332 	addw	r3, r6, #1074	; 0x432
   8584c:	2b20      	cmp	r3, #32
   8584e:	f340 8187 	ble.w	85b60 <_dtoa_r+0x4c0>
   85852:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   85856:	f206 4012 	addw	r0, r6, #1042	; 0x412
   8585a:	409d      	lsls	r5, r3
   8585c:	fa2a f000 	lsr.w	r0, sl, r0
   85860:	4328      	orrs	r0, r5
   85862:	f002 faab 	bl	87dbc <__aeabi_ui2d>
   85866:	2301      	movs	r3, #1
   85868:	3e01      	subs	r6, #1
   8586a:	9314      	str	r3, [sp, #80]	; 0x50
   8586c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   85870:	e781      	b.n	85776 <_dtoa_r+0xd6>
   85872:	483b      	ldr	r0, [pc, #236]	; (85960 <_dtoa_r+0x2c0>)
   85874:	e743      	b.n	856fe <_dtoa_r+0x5e>
   85876:	2100      	movs	r1, #0
   85878:	4620      	mov	r0, r4
   8587a:	6461      	str	r1, [r4, #68]	; 0x44
   8587c:	9125      	str	r1, [sp, #148]	; 0x94
   8587e:	f001 f9e1 	bl	86c44 <_Balloc>
   85882:	f04f 33ff 	mov.w	r3, #4294967295
   85886:	9307      	str	r3, [sp, #28]
   85888:	930f      	str	r3, [sp, #60]	; 0x3c
   8588a:	2301      	movs	r3, #1
   8588c:	9a25      	ldr	r2, [sp, #148]	; 0x94
   8588e:	9004      	str	r0, [sp, #16]
   85890:	6420      	str	r0, [r4, #64]	; 0x40
   85892:	9224      	str	r2, [sp, #144]	; 0x90
   85894:	930b      	str	r3, [sp, #44]	; 0x2c
   85896:	9b19      	ldr	r3, [sp, #100]	; 0x64
   85898:	2b00      	cmp	r3, #0
   8589a:	f2c0 80d3 	blt.w	85a44 <_dtoa_r+0x3a4>
   8589e:	9a02      	ldr	r2, [sp, #8]
   858a0:	2a0e      	cmp	r2, #14
   858a2:	f300 80cf 	bgt.w	85a44 <_dtoa_r+0x3a4>
   858a6:	4b2d      	ldr	r3, [pc, #180]	; (8595c <_dtoa_r+0x2bc>)
   858a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   858ac:	e9d3 2300 	ldrd	r2, r3, [r3]
   858b0:	e9cd 2308 	strd	r2, r3, [sp, #32]
   858b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
   858b6:	2b00      	cmp	r3, #0
   858b8:	f2c0 83b4 	blt.w	86024 <_dtoa_r+0x984>
   858bc:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   858c0:	4650      	mov	r0, sl
   858c2:	462a      	mov	r2, r5
   858c4:	4633      	mov	r3, r6
   858c6:	4659      	mov	r1, fp
   858c8:	f002 fc18 	bl	880fc <__aeabi_ddiv>
   858cc:	f002 fd9c 	bl	88408 <__aeabi_d2iz>
   858d0:	4680      	mov	r8, r0
   858d2:	f002 fa83 	bl	87ddc <__aeabi_i2d>
   858d6:	462a      	mov	r2, r5
   858d8:	4633      	mov	r3, r6
   858da:	f002 fae5 	bl	87ea8 <__aeabi_dmul>
   858de:	4602      	mov	r2, r0
   858e0:	460b      	mov	r3, r1
   858e2:	4650      	mov	r0, sl
   858e4:	4659      	mov	r1, fp
   858e6:	f002 f92b 	bl	87b40 <__aeabi_dsub>
   858ea:	9e07      	ldr	r6, [sp, #28]
   858ec:	9f04      	ldr	r7, [sp, #16]
   858ee:	f108 0530 	add.w	r5, r8, #48	; 0x30
   858f2:	2e01      	cmp	r6, #1
   858f4:	703d      	strb	r5, [r7, #0]
   858f6:	4602      	mov	r2, r0
   858f8:	460b      	mov	r3, r1
   858fa:	f107 0501 	add.w	r5, r7, #1
   858fe:	d064      	beq.n	859ca <_dtoa_r+0x32a>
   85900:	2200      	movs	r2, #0
   85902:	4b18      	ldr	r3, [pc, #96]	; (85964 <_dtoa_r+0x2c4>)
   85904:	f002 fad0 	bl	87ea8 <__aeabi_dmul>
   85908:	2200      	movs	r2, #0
   8590a:	2300      	movs	r3, #0
   8590c:	4606      	mov	r6, r0
   8590e:	460f      	mov	r7, r1
   85910:	f002 fd32 	bl	88378 <__aeabi_dcmpeq>
   85914:	2800      	cmp	r0, #0
   85916:	f040 8082 	bne.w	85a1e <_dtoa_r+0x37e>
   8591a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8591e:	f04f 0a00 	mov.w	sl, #0
   85922:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   85926:	f04f 0b00 	mov.w	fp, #0
   8592a:	940b      	str	r4, [sp, #44]	; 0x2c
   8592c:	e029      	b.n	85982 <_dtoa_r+0x2e2>
   8592e:	bf00      	nop
   85930:	636f4361 	.word	0x636f4361
   85934:	3fd287a7 	.word	0x3fd287a7
   85938:	8b60c8b3 	.word	0x8b60c8b3
   8593c:	3fc68a28 	.word	0x3fc68a28
   85940:	509f79fb 	.word	0x509f79fb
   85944:	3fd34413 	.word	0x3fd34413
   85948:	7ff00000 	.word	0x7ff00000
   8594c:	000897b9 	.word	0x000897b9
   85950:	000897dc 	.word	0x000897dc
   85954:	000897e8 	.word	0x000897e8
   85958:	3ff80000 	.word	0x3ff80000
   8595c:	00089820 	.word	0x00089820
   85960:	000897b8 	.word	0x000897b8
   85964:	40240000 	.word	0x40240000
   85968:	2200      	movs	r2, #0
   8596a:	4b81      	ldr	r3, [pc, #516]	; (85b70 <_dtoa_r+0x4d0>)
   8596c:	f002 fa9c 	bl	87ea8 <__aeabi_dmul>
   85970:	4652      	mov	r2, sl
   85972:	465b      	mov	r3, fp
   85974:	4606      	mov	r6, r0
   85976:	460f      	mov	r7, r1
   85978:	f002 fcfe 	bl	88378 <__aeabi_dcmpeq>
   8597c:	2800      	cmp	r0, #0
   8597e:	f040 83ba 	bne.w	860f6 <_dtoa_r+0xa56>
   85982:	4642      	mov	r2, r8
   85984:	464b      	mov	r3, r9
   85986:	4630      	mov	r0, r6
   85988:	4639      	mov	r1, r7
   8598a:	f002 fbb7 	bl	880fc <__aeabi_ddiv>
   8598e:	f002 fd3b 	bl	88408 <__aeabi_d2iz>
   85992:	4604      	mov	r4, r0
   85994:	f002 fa22 	bl	87ddc <__aeabi_i2d>
   85998:	4642      	mov	r2, r8
   8599a:	464b      	mov	r3, r9
   8599c:	f002 fa84 	bl	87ea8 <__aeabi_dmul>
   859a0:	4602      	mov	r2, r0
   859a2:	460b      	mov	r3, r1
   859a4:	4630      	mov	r0, r6
   859a6:	4639      	mov	r1, r7
   859a8:	f002 f8ca 	bl	87b40 <__aeabi_dsub>
   859ac:	f104 0630 	add.w	r6, r4, #48	; 0x30
   859b0:	f805 6b01 	strb.w	r6, [r5], #1
   859b4:	9e04      	ldr	r6, [sp, #16]
   859b6:	9f07      	ldr	r7, [sp, #28]
   859b8:	1bae      	subs	r6, r5, r6
   859ba:	42be      	cmp	r6, r7
   859bc:	4602      	mov	r2, r0
   859be:	460b      	mov	r3, r1
   859c0:	d1d2      	bne.n	85968 <_dtoa_r+0x2c8>
   859c2:	46a0      	mov	r8, r4
   859c4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   859c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   859ca:	4610      	mov	r0, r2
   859cc:	4619      	mov	r1, r3
   859ce:	f002 f8b9 	bl	87b44 <__adddf3>
   859d2:	4606      	mov	r6, r0
   859d4:	460f      	mov	r7, r1
   859d6:	4602      	mov	r2, r0
   859d8:	460b      	mov	r3, r1
   859da:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   859de:	f002 fcd5 	bl	8838c <__aeabi_dcmplt>
   859e2:	b948      	cbnz	r0, 859f8 <_dtoa_r+0x358>
   859e4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   859e8:	4632      	mov	r2, r6
   859ea:	463b      	mov	r3, r7
   859ec:	f002 fcc4 	bl	88378 <__aeabi_dcmpeq>
   859f0:	b1a8      	cbz	r0, 85a1e <_dtoa_r+0x37e>
   859f2:	f018 0f01 	tst.w	r8, #1
   859f6:	d012      	beq.n	85a1e <_dtoa_r+0x37e>
   859f8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   859fc:	1e6b      	subs	r3, r5, #1
   859fe:	9a04      	ldr	r2, [sp, #16]
   85a00:	e004      	b.n	85a0c <_dtoa_r+0x36c>
   85a02:	429a      	cmp	r2, r3
   85a04:	f000 8402 	beq.w	8620c <_dtoa_r+0xb6c>
   85a08:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   85a0c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   85a10:	f103 0501 	add.w	r5, r3, #1
   85a14:	d0f5      	beq.n	85a02 <_dtoa_r+0x362>
   85a16:	f108 0801 	add.w	r8, r8, #1
   85a1a:	f883 8000 	strb.w	r8, [r3]
   85a1e:	4649      	mov	r1, r9
   85a20:	4620      	mov	r0, r4
   85a22:	f001 f935 	bl	86c90 <_Bfree>
   85a26:	2200      	movs	r2, #0
   85a28:	9b02      	ldr	r3, [sp, #8]
   85a2a:	702a      	strb	r2, [r5, #0]
   85a2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85a2e:	3301      	adds	r3, #1
   85a30:	6013      	str	r3, [r2, #0]
   85a32:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85a34:	2b00      	cmp	r3, #0
   85a36:	f000 839f 	beq.w	86178 <_dtoa_r+0xad8>
   85a3a:	9804      	ldr	r0, [sp, #16]
   85a3c:	601d      	str	r5, [r3, #0]
   85a3e:	b01b      	add	sp, #108	; 0x6c
   85a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85a44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85a46:	2a00      	cmp	r2, #0
   85a48:	d03e      	beq.n	85ac8 <_dtoa_r+0x428>
   85a4a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   85a4c:	2a01      	cmp	r2, #1
   85a4e:	f340 8311 	ble.w	86074 <_dtoa_r+0x9d4>
   85a52:	9b07      	ldr	r3, [sp, #28]
   85a54:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85a56:	1e5f      	subs	r7, r3, #1
   85a58:	42ba      	cmp	r2, r7
   85a5a:	f2c0 8390 	blt.w	8617e <_dtoa_r+0xade>
   85a5e:	1bd7      	subs	r7, r2, r7
   85a60:	9b07      	ldr	r3, [sp, #28]
   85a62:	2b00      	cmp	r3, #0
   85a64:	f2c0 848c 	blt.w	86380 <_dtoa_r+0xce0>
   85a68:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   85a6a:	9b07      	ldr	r3, [sp, #28]
   85a6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85a6e:	2101      	movs	r1, #1
   85a70:	441a      	add	r2, r3
   85a72:	920a      	str	r2, [sp, #40]	; 0x28
   85a74:	9a08      	ldr	r2, [sp, #32]
   85a76:	4620      	mov	r0, r4
   85a78:	441a      	add	r2, r3
   85a7a:	9208      	str	r2, [sp, #32]
   85a7c:	f001 f9a4 	bl	86dc8 <__i2b>
   85a80:	4606      	mov	r6, r0
   85a82:	e023      	b.n	85acc <_dtoa_r+0x42c>
   85a84:	2301      	movs	r3, #1
   85a86:	930e      	str	r3, [sp, #56]	; 0x38
   85a88:	e6b5      	b.n	857f6 <_dtoa_r+0x156>
   85a8a:	2300      	movs	r3, #0
   85a8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85a8e:	930d      	str	r3, [sp, #52]	; 0x34
   85a90:	9b02      	ldr	r3, [sp, #8]
   85a92:	1ad2      	subs	r2, r2, r3
   85a94:	425b      	negs	r3, r3
   85a96:	920a      	str	r2, [sp, #40]	; 0x28
   85a98:	930c      	str	r3, [sp, #48]	; 0x30
   85a9a:	e6be      	b.n	8581a <_dtoa_r+0x17a>
   85a9c:	f1c7 0301 	rsb	r3, r7, #1
   85aa0:	930a      	str	r3, [sp, #40]	; 0x28
   85aa2:	2300      	movs	r3, #0
   85aa4:	9308      	str	r3, [sp, #32]
   85aa6:	e6ad      	b.n	85804 <_dtoa_r+0x164>
   85aa8:	9d02      	ldr	r5, [sp, #8]
   85aaa:	4628      	mov	r0, r5
   85aac:	f002 f996 	bl	87ddc <__aeabi_i2d>
   85ab0:	4602      	mov	r2, r0
   85ab2:	460b      	mov	r3, r1
   85ab4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   85ab8:	f002 fc5e 	bl	88378 <__aeabi_dcmpeq>
   85abc:	2800      	cmp	r0, #0
   85abe:	f47f ae86 	bne.w	857ce <_dtoa_r+0x12e>
   85ac2:	1e6b      	subs	r3, r5, #1
   85ac4:	9302      	str	r3, [sp, #8]
   85ac6:	e682      	b.n	857ce <_dtoa_r+0x12e>
   85ac8:	ad0a      	add	r5, sp, #40	; 0x28
   85aca:	cde0      	ldmia	r5, {r5, r6, r7}
   85acc:	2d00      	cmp	r5, #0
   85ace:	dd0c      	ble.n	85aea <_dtoa_r+0x44a>
   85ad0:	9908      	ldr	r1, [sp, #32]
   85ad2:	2900      	cmp	r1, #0
   85ad4:	460b      	mov	r3, r1
   85ad6:	dd08      	ble.n	85aea <_dtoa_r+0x44a>
   85ad8:	42a9      	cmp	r1, r5
   85ada:	bfa8      	it	ge
   85adc:	462b      	movge	r3, r5
   85ade:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85ae0:	1aed      	subs	r5, r5, r3
   85ae2:	1ad2      	subs	r2, r2, r3
   85ae4:	1acb      	subs	r3, r1, r3
   85ae6:	920a      	str	r2, [sp, #40]	; 0x28
   85ae8:	9308      	str	r3, [sp, #32]
   85aea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85aec:	b1d3      	cbz	r3, 85b24 <_dtoa_r+0x484>
   85aee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85af0:	2b00      	cmp	r3, #0
   85af2:	f000 82b8 	beq.w	86066 <_dtoa_r+0x9c6>
   85af6:	2f00      	cmp	r7, #0
   85af8:	dd10      	ble.n	85b1c <_dtoa_r+0x47c>
   85afa:	4631      	mov	r1, r6
   85afc:	463a      	mov	r2, r7
   85afe:	4620      	mov	r0, r4
   85b00:	f001 f9fe 	bl	86f00 <__pow5mult>
   85b04:	464a      	mov	r2, r9
   85b06:	4601      	mov	r1, r0
   85b08:	4606      	mov	r6, r0
   85b0a:	4620      	mov	r0, r4
   85b0c:	f001 f966 	bl	86ddc <__multiply>
   85b10:	4603      	mov	r3, r0
   85b12:	4649      	mov	r1, r9
   85b14:	4620      	mov	r0, r4
   85b16:	4699      	mov	r9, r3
   85b18:	f001 f8ba 	bl	86c90 <_Bfree>
   85b1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85b1e:	1bda      	subs	r2, r3, r7
   85b20:	f040 82a2 	bne.w	86068 <_dtoa_r+0x9c8>
   85b24:	2101      	movs	r1, #1
   85b26:	4620      	mov	r0, r4
   85b28:	f001 f94e 	bl	86dc8 <__i2b>
   85b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85b2e:	4680      	mov	r8, r0
   85b30:	2b00      	cmp	r3, #0
   85b32:	dd1f      	ble.n	85b74 <_dtoa_r+0x4d4>
   85b34:	4601      	mov	r1, r0
   85b36:	461a      	mov	r2, r3
   85b38:	4620      	mov	r0, r4
   85b3a:	f001 f9e1 	bl	86f00 <__pow5mult>
   85b3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85b40:	4680      	mov	r8, r0
   85b42:	2b01      	cmp	r3, #1
   85b44:	f340 8255 	ble.w	85ff2 <_dtoa_r+0x952>
   85b48:	2300      	movs	r3, #0
   85b4a:	930c      	str	r3, [sp, #48]	; 0x30
   85b4c:	f8d8 3010 	ldr.w	r3, [r8, #16]
   85b50:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   85b54:	6918      	ldr	r0, [r3, #16]
   85b56:	f001 f8e7 	bl	86d28 <__hi0bits>
   85b5a:	f1c0 0020 	rsb	r0, r0, #32
   85b5e:	e013      	b.n	85b88 <_dtoa_r+0x4e8>
   85b60:	f1c3 0520 	rsb	r5, r3, #32
   85b64:	fa0a f005 	lsl.w	r0, sl, r5
   85b68:	e67b      	b.n	85862 <_dtoa_r+0x1c2>
   85b6a:	900e      	str	r0, [sp, #56]	; 0x38
   85b6c:	e643      	b.n	857f6 <_dtoa_r+0x156>
   85b6e:	bf00      	nop
   85b70:	40240000 	.word	0x40240000
   85b74:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85b76:	2b01      	cmp	r3, #1
   85b78:	f340 8285 	ble.w	86086 <_dtoa_r+0x9e6>
   85b7c:	2300      	movs	r3, #0
   85b7e:	930c      	str	r3, [sp, #48]	; 0x30
   85b80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85b82:	2001      	movs	r0, #1
   85b84:	2b00      	cmp	r3, #0
   85b86:	d1e1      	bne.n	85b4c <_dtoa_r+0x4ac>
   85b88:	9a08      	ldr	r2, [sp, #32]
   85b8a:	4410      	add	r0, r2
   85b8c:	f010 001f 	ands.w	r0, r0, #31
   85b90:	f000 80a1 	beq.w	85cd6 <_dtoa_r+0x636>
   85b94:	f1c0 0320 	rsb	r3, r0, #32
   85b98:	2b04      	cmp	r3, #4
   85b9a:	f340 8486 	ble.w	864aa <_dtoa_r+0xe0a>
   85b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85ba0:	f1c0 001c 	rsb	r0, r0, #28
   85ba4:	4403      	add	r3, r0
   85ba6:	930a      	str	r3, [sp, #40]	; 0x28
   85ba8:	4613      	mov	r3, r2
   85baa:	4403      	add	r3, r0
   85bac:	4405      	add	r5, r0
   85bae:	9308      	str	r3, [sp, #32]
   85bb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85bb2:	2b00      	cmp	r3, #0
   85bb4:	dd05      	ble.n	85bc2 <_dtoa_r+0x522>
   85bb6:	4649      	mov	r1, r9
   85bb8:	461a      	mov	r2, r3
   85bba:	4620      	mov	r0, r4
   85bbc:	f001 f9f0 	bl	86fa0 <__lshift>
   85bc0:	4681      	mov	r9, r0
   85bc2:	9b08      	ldr	r3, [sp, #32]
   85bc4:	2b00      	cmp	r3, #0
   85bc6:	dd05      	ble.n	85bd4 <_dtoa_r+0x534>
   85bc8:	4641      	mov	r1, r8
   85bca:	461a      	mov	r2, r3
   85bcc:	4620      	mov	r0, r4
   85bce:	f001 f9e7 	bl	86fa0 <__lshift>
   85bd2:	4680      	mov	r8, r0
   85bd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85bd6:	2b00      	cmp	r3, #0
   85bd8:	f040 8086 	bne.w	85ce8 <_dtoa_r+0x648>
   85bdc:	9b07      	ldr	r3, [sp, #28]
   85bde:	2b00      	cmp	r3, #0
   85be0:	f340 8264 	ble.w	860ac <_dtoa_r+0xa0c>
   85be4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85be6:	2b00      	cmp	r3, #0
   85be8:	f000 8098 	beq.w	85d1c <_dtoa_r+0x67c>
   85bec:	2d00      	cmp	r5, #0
   85bee:	dd05      	ble.n	85bfc <_dtoa_r+0x55c>
   85bf0:	4631      	mov	r1, r6
   85bf2:	462a      	mov	r2, r5
   85bf4:	4620      	mov	r0, r4
   85bf6:	f001 f9d3 	bl	86fa0 <__lshift>
   85bfa:	4606      	mov	r6, r0
   85bfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85bfe:	2b00      	cmp	r3, #0
   85c00:	f040 8336 	bne.w	86270 <_dtoa_r+0xbd0>
   85c04:	9608      	str	r6, [sp, #32]
   85c06:	9b07      	ldr	r3, [sp, #28]
   85c08:	9a04      	ldr	r2, [sp, #16]
   85c0a:	3b01      	subs	r3, #1
   85c0c:	18d3      	adds	r3, r2, r3
   85c0e:	930b      	str	r3, [sp, #44]	; 0x2c
   85c10:	4617      	mov	r7, r2
   85c12:	f00a 0301 	and.w	r3, sl, #1
   85c16:	46c2      	mov	sl, r8
   85c18:	f8dd b020 	ldr.w	fp, [sp, #32]
   85c1c:	930c      	str	r3, [sp, #48]	; 0x30
   85c1e:	4651      	mov	r1, sl
   85c20:	4648      	mov	r0, r9
   85c22:	f7ff fca9 	bl	85578 <quorem>
   85c26:	4631      	mov	r1, r6
   85c28:	4605      	mov	r5, r0
   85c2a:	4648      	mov	r0, r9
   85c2c:	f001 fa08 	bl	87040 <__mcmp>
   85c30:	465a      	mov	r2, fp
   85c32:	9007      	str	r0, [sp, #28]
   85c34:	4651      	mov	r1, sl
   85c36:	4620      	mov	r0, r4
   85c38:	f001 fa1e 	bl	87078 <__mdiff>
   85c3c:	68c2      	ldr	r2, [r0, #12]
   85c3e:	4680      	mov	r8, r0
   85c40:	f105 0330 	add.w	r3, r5, #48	; 0x30
   85c44:	2a00      	cmp	r2, #0
   85c46:	f040 8229 	bne.w	8609c <_dtoa_r+0x9fc>
   85c4a:	4601      	mov	r1, r0
   85c4c:	4648      	mov	r0, r9
   85c4e:	930a      	str	r3, [sp, #40]	; 0x28
   85c50:	f001 f9f6 	bl	87040 <__mcmp>
   85c54:	4641      	mov	r1, r8
   85c56:	9008      	str	r0, [sp, #32]
   85c58:	4620      	mov	r0, r4
   85c5a:	f001 f819 	bl	86c90 <_Bfree>
   85c5e:	9a08      	ldr	r2, [sp, #32]
   85c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85c62:	b932      	cbnz	r2, 85c72 <_dtoa_r+0x5d2>
   85c64:	9924      	ldr	r1, [sp, #144]	; 0x90
   85c66:	b921      	cbnz	r1, 85c72 <_dtoa_r+0x5d2>
   85c68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85c6a:	2a00      	cmp	r2, #0
   85c6c:	f000 83ee 	beq.w	8644c <_dtoa_r+0xdac>
   85c70:	9a24      	ldr	r2, [sp, #144]	; 0x90
   85c72:	9907      	ldr	r1, [sp, #28]
   85c74:	2900      	cmp	r1, #0
   85c76:	f2c0 829f 	blt.w	861b8 <_dtoa_r+0xb18>
   85c7a:	d105      	bne.n	85c88 <_dtoa_r+0x5e8>
   85c7c:	9924      	ldr	r1, [sp, #144]	; 0x90
   85c7e:	b919      	cbnz	r1, 85c88 <_dtoa_r+0x5e8>
   85c80:	990c      	ldr	r1, [sp, #48]	; 0x30
   85c82:	2900      	cmp	r1, #0
   85c84:	f000 8298 	beq.w	861b8 <_dtoa_r+0xb18>
   85c88:	2a00      	cmp	r2, #0
   85c8a:	f300 8305 	bgt.w	86298 <_dtoa_r+0xbf8>
   85c8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85c90:	f107 0801 	add.w	r8, r7, #1
   85c94:	4297      	cmp	r7, r2
   85c96:	703b      	strb	r3, [r7, #0]
   85c98:	4645      	mov	r5, r8
   85c9a:	f000 830b 	beq.w	862b4 <_dtoa_r+0xc14>
   85c9e:	4649      	mov	r1, r9
   85ca0:	2300      	movs	r3, #0
   85ca2:	220a      	movs	r2, #10
   85ca4:	4620      	mov	r0, r4
   85ca6:	f000 fffd 	bl	86ca4 <__multadd>
   85caa:	455e      	cmp	r6, fp
   85cac:	4681      	mov	r9, r0
   85cae:	4631      	mov	r1, r6
   85cb0:	f04f 0300 	mov.w	r3, #0
   85cb4:	f04f 020a 	mov.w	r2, #10
   85cb8:	4620      	mov	r0, r4
   85cba:	f000 81e9 	beq.w	86090 <_dtoa_r+0x9f0>
   85cbe:	f000 fff1 	bl	86ca4 <__multadd>
   85cc2:	4659      	mov	r1, fp
   85cc4:	4606      	mov	r6, r0
   85cc6:	2300      	movs	r3, #0
   85cc8:	220a      	movs	r2, #10
   85cca:	4620      	mov	r0, r4
   85ccc:	f000 ffea 	bl	86ca4 <__multadd>
   85cd0:	4647      	mov	r7, r8
   85cd2:	4683      	mov	fp, r0
   85cd4:	e7a3      	b.n	85c1e <_dtoa_r+0x57e>
   85cd6:	201c      	movs	r0, #28
   85cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85cda:	4405      	add	r5, r0
   85cdc:	4403      	add	r3, r0
   85cde:	930a      	str	r3, [sp, #40]	; 0x28
   85ce0:	9b08      	ldr	r3, [sp, #32]
   85ce2:	4403      	add	r3, r0
   85ce4:	9308      	str	r3, [sp, #32]
   85ce6:	e763      	b.n	85bb0 <_dtoa_r+0x510>
   85ce8:	4641      	mov	r1, r8
   85cea:	4648      	mov	r0, r9
   85cec:	f001 f9a8 	bl	87040 <__mcmp>
   85cf0:	2800      	cmp	r0, #0
   85cf2:	f6bf af73 	bge.w	85bdc <_dtoa_r+0x53c>
   85cf6:	9f02      	ldr	r7, [sp, #8]
   85cf8:	4649      	mov	r1, r9
   85cfa:	2300      	movs	r3, #0
   85cfc:	220a      	movs	r2, #10
   85cfe:	4620      	mov	r0, r4
   85d00:	3f01      	subs	r7, #1
   85d02:	9702      	str	r7, [sp, #8]
   85d04:	f000 ffce 	bl	86ca4 <__multadd>
   85d08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85d0a:	4681      	mov	r9, r0
   85d0c:	2b00      	cmp	r3, #0
   85d0e:	f040 83b5 	bne.w	8647c <_dtoa_r+0xddc>
   85d12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85d14:	2b00      	cmp	r3, #0
   85d16:	f340 83be 	ble.w	86496 <_dtoa_r+0xdf6>
   85d1a:	9307      	str	r3, [sp, #28]
   85d1c:	f8dd a010 	ldr.w	sl, [sp, #16]
   85d20:	9f07      	ldr	r7, [sp, #28]
   85d22:	4655      	mov	r5, sl
   85d24:	e006      	b.n	85d34 <_dtoa_r+0x694>
   85d26:	4649      	mov	r1, r9
   85d28:	2300      	movs	r3, #0
   85d2a:	220a      	movs	r2, #10
   85d2c:	4620      	mov	r0, r4
   85d2e:	f000 ffb9 	bl	86ca4 <__multadd>
   85d32:	4681      	mov	r9, r0
   85d34:	4641      	mov	r1, r8
   85d36:	4648      	mov	r0, r9
   85d38:	f7ff fc1e 	bl	85578 <quorem>
   85d3c:	3030      	adds	r0, #48	; 0x30
   85d3e:	f805 0b01 	strb.w	r0, [r5], #1
   85d42:	eba5 030a 	sub.w	r3, r5, sl
   85d46:	42bb      	cmp	r3, r7
   85d48:	dbed      	blt.n	85d26 <_dtoa_r+0x686>
   85d4a:	9b04      	ldr	r3, [sp, #16]
   85d4c:	9a07      	ldr	r2, [sp, #28]
   85d4e:	4682      	mov	sl, r0
   85d50:	2a01      	cmp	r2, #1
   85d52:	bfac      	ite	ge
   85d54:	189b      	addge	r3, r3, r2
   85d56:	3301      	addlt	r3, #1
   85d58:	f04f 0b00 	mov.w	fp, #0
   85d5c:	461d      	mov	r5, r3
   85d5e:	4649      	mov	r1, r9
   85d60:	2201      	movs	r2, #1
   85d62:	4620      	mov	r0, r4
   85d64:	f001 f91c 	bl	86fa0 <__lshift>
   85d68:	4641      	mov	r1, r8
   85d6a:	4681      	mov	r9, r0
   85d6c:	f001 f968 	bl	87040 <__mcmp>
   85d70:	2800      	cmp	r0, #0
   85d72:	f340 823f 	ble.w	861f4 <_dtoa_r+0xb54>
   85d76:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   85d7a:	1e6b      	subs	r3, r5, #1
   85d7c:	9904      	ldr	r1, [sp, #16]
   85d7e:	e004      	b.n	85d8a <_dtoa_r+0x6ea>
   85d80:	428b      	cmp	r3, r1
   85d82:	f000 81ae 	beq.w	860e2 <_dtoa_r+0xa42>
   85d86:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   85d8a:	2a39      	cmp	r2, #57	; 0x39
   85d8c:	f103 0501 	add.w	r5, r3, #1
   85d90:	d0f6      	beq.n	85d80 <_dtoa_r+0x6e0>
   85d92:	3201      	adds	r2, #1
   85d94:	701a      	strb	r2, [r3, #0]
   85d96:	4641      	mov	r1, r8
   85d98:	4620      	mov	r0, r4
   85d9a:	f000 ff79 	bl	86c90 <_Bfree>
   85d9e:	2e00      	cmp	r6, #0
   85da0:	f43f ae3d 	beq.w	85a1e <_dtoa_r+0x37e>
   85da4:	f1bb 0f00 	cmp.w	fp, #0
   85da8:	d005      	beq.n	85db6 <_dtoa_r+0x716>
   85daa:	45b3      	cmp	fp, r6
   85dac:	d003      	beq.n	85db6 <_dtoa_r+0x716>
   85dae:	4659      	mov	r1, fp
   85db0:	4620      	mov	r0, r4
   85db2:	f000 ff6d 	bl	86c90 <_Bfree>
   85db6:	4631      	mov	r1, r6
   85db8:	4620      	mov	r0, r4
   85dba:	f000 ff69 	bl	86c90 <_Bfree>
   85dbe:	e62e      	b.n	85a1e <_dtoa_r+0x37e>
   85dc0:	2300      	movs	r3, #0
   85dc2:	930b      	str	r3, [sp, #44]	; 0x2c
   85dc4:	9b02      	ldr	r3, [sp, #8]
   85dc6:	9a25      	ldr	r2, [sp, #148]	; 0x94
   85dc8:	4413      	add	r3, r2
   85dca:	930f      	str	r3, [sp, #60]	; 0x3c
   85dcc:	3301      	adds	r3, #1
   85dce:	2b01      	cmp	r3, #1
   85dd0:	461f      	mov	r7, r3
   85dd2:	461e      	mov	r6, r3
   85dd4:	bfb8      	it	lt
   85dd6:	2701      	movlt	r7, #1
   85dd8:	9307      	str	r3, [sp, #28]
   85dda:	2100      	movs	r1, #0
   85ddc:	2f17      	cmp	r7, #23
   85dde:	6461      	str	r1, [r4, #68]	; 0x44
   85de0:	d90a      	bls.n	85df8 <_dtoa_r+0x758>
   85de2:	2201      	movs	r2, #1
   85de4:	2304      	movs	r3, #4
   85de6:	005b      	lsls	r3, r3, #1
   85de8:	f103 0014 	add.w	r0, r3, #20
   85dec:	4287      	cmp	r7, r0
   85dee:	4611      	mov	r1, r2
   85df0:	f102 0201 	add.w	r2, r2, #1
   85df4:	d2f7      	bcs.n	85de6 <_dtoa_r+0x746>
   85df6:	6461      	str	r1, [r4, #68]	; 0x44
   85df8:	4620      	mov	r0, r4
   85dfa:	f000 ff23 	bl	86c44 <_Balloc>
   85dfe:	2e0e      	cmp	r6, #14
   85e00:	9004      	str	r0, [sp, #16]
   85e02:	6420      	str	r0, [r4, #64]	; 0x40
   85e04:	f63f ad47 	bhi.w	85896 <_dtoa_r+0x1f6>
   85e08:	2d00      	cmp	r5, #0
   85e0a:	f43f ad44 	beq.w	85896 <_dtoa_r+0x1f6>
   85e0e:	9902      	ldr	r1, [sp, #8]
   85e10:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   85e14:	2900      	cmp	r1, #0
   85e16:	f340 8203 	ble.w	86220 <_dtoa_r+0xb80>
   85e1a:	4bb9      	ldr	r3, [pc, #740]	; (86100 <_dtoa_r+0xa60>)
   85e1c:	f001 020f 	and.w	r2, r1, #15
   85e20:	110d      	asrs	r5, r1, #4
   85e22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   85e26:	06e9      	lsls	r1, r5, #27
   85e28:	e9d3 6700 	ldrd	r6, r7, [r3]
   85e2c:	f140 81af 	bpl.w	8618e <_dtoa_r+0xaee>
   85e30:	4bb4      	ldr	r3, [pc, #720]	; (86104 <_dtoa_r+0xa64>)
   85e32:	4650      	mov	r0, sl
   85e34:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   85e38:	4659      	mov	r1, fp
   85e3a:	f002 f95f 	bl	880fc <__aeabi_ddiv>
   85e3e:	f04f 0a03 	mov.w	sl, #3
   85e42:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   85e46:	f005 050f 	and.w	r5, r5, #15
   85e4a:	b18d      	cbz	r5, 85e70 <_dtoa_r+0x7d0>
   85e4c:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 86104 <_dtoa_r+0xa64>
   85e50:	07ea      	lsls	r2, r5, #31
   85e52:	d509      	bpl.n	85e68 <_dtoa_r+0x7c8>
   85e54:	e9d8 2300 	ldrd	r2, r3, [r8]
   85e58:	4630      	mov	r0, r6
   85e5a:	4639      	mov	r1, r7
   85e5c:	f002 f824 	bl	87ea8 <__aeabi_dmul>
   85e60:	4606      	mov	r6, r0
   85e62:	460f      	mov	r7, r1
   85e64:	f10a 0a01 	add.w	sl, sl, #1
   85e68:	106d      	asrs	r5, r5, #1
   85e6a:	f108 0808 	add.w	r8, r8, #8
   85e6e:	d1ef      	bne.n	85e50 <_dtoa_r+0x7b0>
   85e70:	463b      	mov	r3, r7
   85e72:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   85e76:	4632      	mov	r2, r6
   85e78:	f002 f940 	bl	880fc <__aeabi_ddiv>
   85e7c:	4607      	mov	r7, r0
   85e7e:	4688      	mov	r8, r1
   85e80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85e82:	b143      	cbz	r3, 85e96 <_dtoa_r+0x7f6>
   85e84:	2200      	movs	r2, #0
   85e86:	4ba0      	ldr	r3, [pc, #640]	; (86108 <_dtoa_r+0xa68>)
   85e88:	4638      	mov	r0, r7
   85e8a:	4641      	mov	r1, r8
   85e8c:	f002 fa7e 	bl	8838c <__aeabi_dcmplt>
   85e90:	2800      	cmp	r0, #0
   85e92:	f040 8287 	bne.w	863a4 <_dtoa_r+0xd04>
   85e96:	4650      	mov	r0, sl
   85e98:	f001 ffa0 	bl	87ddc <__aeabi_i2d>
   85e9c:	463a      	mov	r2, r7
   85e9e:	4643      	mov	r3, r8
   85ea0:	f002 f802 	bl	87ea8 <__aeabi_dmul>
   85ea4:	4b99      	ldr	r3, [pc, #612]	; (8610c <_dtoa_r+0xa6c>)
   85ea6:	2200      	movs	r2, #0
   85ea8:	f001 fe4c 	bl	87b44 <__adddf3>
   85eac:	9b07      	ldr	r3, [sp, #28]
   85eae:	4605      	mov	r5, r0
   85eb0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   85eb4:	2b00      	cmp	r3, #0
   85eb6:	f000 813f 	beq.w	86138 <_dtoa_r+0xa98>
   85eba:	9b02      	ldr	r3, [sp, #8]
   85ebc:	9315      	str	r3, [sp, #84]	; 0x54
   85ebe:	9b07      	ldr	r3, [sp, #28]
   85ec0:	9312      	str	r3, [sp, #72]	; 0x48
   85ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85ec4:	2b00      	cmp	r3, #0
   85ec6:	f000 81fb 	beq.w	862c0 <_dtoa_r+0xc20>
   85eca:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85ecc:	4b8c      	ldr	r3, [pc, #560]	; (86100 <_dtoa_r+0xa60>)
   85ece:	2000      	movs	r0, #0
   85ed0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   85ed4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   85ed8:	498d      	ldr	r1, [pc, #564]	; (86110 <_dtoa_r+0xa70>)
   85eda:	f002 f90f 	bl	880fc <__aeabi_ddiv>
   85ede:	462a      	mov	r2, r5
   85ee0:	4633      	mov	r3, r6
   85ee2:	f001 fe2d 	bl	87b40 <__aeabi_dsub>
   85ee6:	4682      	mov	sl, r0
   85ee8:	468b      	mov	fp, r1
   85eea:	4638      	mov	r0, r7
   85eec:	4641      	mov	r1, r8
   85eee:	f002 fa8b 	bl	88408 <__aeabi_d2iz>
   85ef2:	4605      	mov	r5, r0
   85ef4:	f001 ff72 	bl	87ddc <__aeabi_i2d>
   85ef8:	4602      	mov	r2, r0
   85efa:	460b      	mov	r3, r1
   85efc:	4638      	mov	r0, r7
   85efe:	4641      	mov	r1, r8
   85f00:	f001 fe1e 	bl	87b40 <__aeabi_dsub>
   85f04:	3530      	adds	r5, #48	; 0x30
   85f06:	fa5f f885 	uxtb.w	r8, r5
   85f0a:	9d04      	ldr	r5, [sp, #16]
   85f0c:	4606      	mov	r6, r0
   85f0e:	460f      	mov	r7, r1
   85f10:	f885 8000 	strb.w	r8, [r5]
   85f14:	4602      	mov	r2, r0
   85f16:	460b      	mov	r3, r1
   85f18:	4650      	mov	r0, sl
   85f1a:	4659      	mov	r1, fp
   85f1c:	3501      	adds	r5, #1
   85f1e:	f002 fa53 	bl	883c8 <__aeabi_dcmpgt>
   85f22:	2800      	cmp	r0, #0
   85f24:	d154      	bne.n	85fd0 <_dtoa_r+0x930>
   85f26:	4632      	mov	r2, r6
   85f28:	463b      	mov	r3, r7
   85f2a:	2000      	movs	r0, #0
   85f2c:	4976      	ldr	r1, [pc, #472]	; (86108 <_dtoa_r+0xa68>)
   85f2e:	f001 fe07 	bl	87b40 <__aeabi_dsub>
   85f32:	4602      	mov	r2, r0
   85f34:	460b      	mov	r3, r1
   85f36:	4650      	mov	r0, sl
   85f38:	4659      	mov	r1, fp
   85f3a:	f002 fa45 	bl	883c8 <__aeabi_dcmpgt>
   85f3e:	2800      	cmp	r0, #0
   85f40:	f040 8270 	bne.w	86424 <_dtoa_r+0xd84>
   85f44:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85f46:	2a01      	cmp	r2, #1
   85f48:	f000 8112 	beq.w	86170 <_dtoa_r+0xad0>
   85f4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85f4e:	9a04      	ldr	r2, [sp, #16]
   85f50:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   85f54:	4413      	add	r3, r2
   85f56:	4699      	mov	r9, r3
   85f58:	e00f      	b.n	85f7a <_dtoa_r+0x8da>
   85f5a:	4632      	mov	r2, r6
   85f5c:	463b      	mov	r3, r7
   85f5e:	2000      	movs	r0, #0
   85f60:	4969      	ldr	r1, [pc, #420]	; (86108 <_dtoa_r+0xa68>)
   85f62:	f001 fded 	bl	87b40 <__aeabi_dsub>
   85f66:	4652      	mov	r2, sl
   85f68:	465b      	mov	r3, fp
   85f6a:	f002 fa0f 	bl	8838c <__aeabi_dcmplt>
   85f6e:	2800      	cmp	r0, #0
   85f70:	f040 8256 	bne.w	86420 <_dtoa_r+0xd80>
   85f74:	454d      	cmp	r5, r9
   85f76:	f000 80f9 	beq.w	8616c <_dtoa_r+0xacc>
   85f7a:	4650      	mov	r0, sl
   85f7c:	4659      	mov	r1, fp
   85f7e:	2200      	movs	r2, #0
   85f80:	4b64      	ldr	r3, [pc, #400]	; (86114 <_dtoa_r+0xa74>)
   85f82:	f001 ff91 	bl	87ea8 <__aeabi_dmul>
   85f86:	2200      	movs	r2, #0
   85f88:	4b62      	ldr	r3, [pc, #392]	; (86114 <_dtoa_r+0xa74>)
   85f8a:	4682      	mov	sl, r0
   85f8c:	468b      	mov	fp, r1
   85f8e:	4630      	mov	r0, r6
   85f90:	4639      	mov	r1, r7
   85f92:	f001 ff89 	bl	87ea8 <__aeabi_dmul>
   85f96:	460f      	mov	r7, r1
   85f98:	4606      	mov	r6, r0
   85f9a:	f002 fa35 	bl	88408 <__aeabi_d2iz>
   85f9e:	4680      	mov	r8, r0
   85fa0:	f001 ff1c 	bl	87ddc <__aeabi_i2d>
   85fa4:	4602      	mov	r2, r0
   85fa6:	460b      	mov	r3, r1
   85fa8:	4630      	mov	r0, r6
   85faa:	4639      	mov	r1, r7
   85fac:	f001 fdc8 	bl	87b40 <__aeabi_dsub>
   85fb0:	f108 0830 	add.w	r8, r8, #48	; 0x30
   85fb4:	fa5f f888 	uxtb.w	r8, r8
   85fb8:	f805 8b01 	strb.w	r8, [r5], #1
   85fbc:	4652      	mov	r2, sl
   85fbe:	465b      	mov	r3, fp
   85fc0:	4606      	mov	r6, r0
   85fc2:	460f      	mov	r7, r1
   85fc4:	f002 f9e2 	bl	8838c <__aeabi_dcmplt>
   85fc8:	2800      	cmp	r0, #0
   85fca:	d0c6      	beq.n	85f5a <_dtoa_r+0x8ba>
   85fcc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   85fd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85fd2:	9302      	str	r3, [sp, #8]
   85fd4:	e523      	b.n	85a1e <_dtoa_r+0x37e>
   85fd6:	2300      	movs	r3, #0
   85fd8:	930b      	str	r3, [sp, #44]	; 0x2c
   85fda:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85fdc:	2b00      	cmp	r3, #0
   85fde:	f340 80dd 	ble.w	8619c <_dtoa_r+0xafc>
   85fe2:	461f      	mov	r7, r3
   85fe4:	461e      	mov	r6, r3
   85fe6:	930f      	str	r3, [sp, #60]	; 0x3c
   85fe8:	9307      	str	r3, [sp, #28]
   85fea:	e6f6      	b.n	85dda <_dtoa_r+0x73a>
   85fec:	2301      	movs	r3, #1
   85fee:	930b      	str	r3, [sp, #44]	; 0x2c
   85ff0:	e7f3      	b.n	85fda <_dtoa_r+0x93a>
   85ff2:	f1ba 0f00 	cmp.w	sl, #0
   85ff6:	f47f ada7 	bne.w	85b48 <_dtoa_r+0x4a8>
   85ffa:	f3cb 0313 	ubfx	r3, fp, #0, #20
   85ffe:	2b00      	cmp	r3, #0
   86000:	f47f adbc 	bne.w	85b7c <_dtoa_r+0x4dc>
   86004:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   86008:	0d3f      	lsrs	r7, r7, #20
   8600a:	053f      	lsls	r7, r7, #20
   8600c:	2f00      	cmp	r7, #0
   8600e:	f000 820d 	beq.w	8642c <_dtoa_r+0xd8c>
   86012:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86014:	3301      	adds	r3, #1
   86016:	930a      	str	r3, [sp, #40]	; 0x28
   86018:	9b08      	ldr	r3, [sp, #32]
   8601a:	3301      	adds	r3, #1
   8601c:	9308      	str	r3, [sp, #32]
   8601e:	2301      	movs	r3, #1
   86020:	930c      	str	r3, [sp, #48]	; 0x30
   86022:	e5ad      	b.n	85b80 <_dtoa_r+0x4e0>
   86024:	9b07      	ldr	r3, [sp, #28]
   86026:	2b00      	cmp	r3, #0
   86028:	f73f ac48 	bgt.w	858bc <_dtoa_r+0x21c>
   8602c:	f040 8222 	bne.w	86474 <_dtoa_r+0xdd4>
   86030:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   86034:	2200      	movs	r2, #0
   86036:	4b38      	ldr	r3, [pc, #224]	; (86118 <_dtoa_r+0xa78>)
   86038:	f001 ff36 	bl	87ea8 <__aeabi_dmul>
   8603c:	4652      	mov	r2, sl
   8603e:	465b      	mov	r3, fp
   86040:	f002 f9b8 	bl	883b4 <__aeabi_dcmpge>
   86044:	f8dd 801c 	ldr.w	r8, [sp, #28]
   86048:	4646      	mov	r6, r8
   8604a:	2800      	cmp	r0, #0
   8604c:	d041      	beq.n	860d2 <_dtoa_r+0xa32>
   8604e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86050:	9d04      	ldr	r5, [sp, #16]
   86052:	43db      	mvns	r3, r3
   86054:	9302      	str	r3, [sp, #8]
   86056:	4641      	mov	r1, r8
   86058:	4620      	mov	r0, r4
   8605a:	f000 fe19 	bl	86c90 <_Bfree>
   8605e:	2e00      	cmp	r6, #0
   86060:	f43f acdd 	beq.w	85a1e <_dtoa_r+0x37e>
   86064:	e6a7      	b.n	85db6 <_dtoa_r+0x716>
   86066:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86068:	4649      	mov	r1, r9
   8606a:	4620      	mov	r0, r4
   8606c:	f000 ff48 	bl	86f00 <__pow5mult>
   86070:	4681      	mov	r9, r0
   86072:	e557      	b.n	85b24 <_dtoa_r+0x484>
   86074:	9a14      	ldr	r2, [sp, #80]	; 0x50
   86076:	2a00      	cmp	r2, #0
   86078:	f000 8188 	beq.w	8638c <_dtoa_r+0xcec>
   8607c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   86080:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   86082:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   86084:	e4f2      	b.n	85a6c <_dtoa_r+0x3cc>
   86086:	f1ba 0f00 	cmp.w	sl, #0
   8608a:	f47f ad77 	bne.w	85b7c <_dtoa_r+0x4dc>
   8608e:	e7b4      	b.n	85ffa <_dtoa_r+0x95a>
   86090:	f000 fe08 	bl	86ca4 <__multadd>
   86094:	4647      	mov	r7, r8
   86096:	4606      	mov	r6, r0
   86098:	4683      	mov	fp, r0
   8609a:	e5c0      	b.n	85c1e <_dtoa_r+0x57e>
   8609c:	4601      	mov	r1, r0
   8609e:	4620      	mov	r0, r4
   860a0:	9308      	str	r3, [sp, #32]
   860a2:	f000 fdf5 	bl	86c90 <_Bfree>
   860a6:	2201      	movs	r2, #1
   860a8:	9b08      	ldr	r3, [sp, #32]
   860aa:	e5e2      	b.n	85c72 <_dtoa_r+0x5d2>
   860ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
   860ae:	2b02      	cmp	r3, #2
   860b0:	f77f ad98 	ble.w	85be4 <_dtoa_r+0x544>
   860b4:	9b07      	ldr	r3, [sp, #28]
   860b6:	2b00      	cmp	r3, #0
   860b8:	d1c9      	bne.n	8604e <_dtoa_r+0x9ae>
   860ba:	4641      	mov	r1, r8
   860bc:	2205      	movs	r2, #5
   860be:	4620      	mov	r0, r4
   860c0:	f000 fdf0 	bl	86ca4 <__multadd>
   860c4:	4601      	mov	r1, r0
   860c6:	4680      	mov	r8, r0
   860c8:	4648      	mov	r0, r9
   860ca:	f000 ffb9 	bl	87040 <__mcmp>
   860ce:	2800      	cmp	r0, #0
   860d0:	ddbd      	ble.n	8604e <_dtoa_r+0x9ae>
   860d2:	2331      	movs	r3, #49	; 0x31
   860d4:	9a02      	ldr	r2, [sp, #8]
   860d6:	9904      	ldr	r1, [sp, #16]
   860d8:	3201      	adds	r2, #1
   860da:	9202      	str	r2, [sp, #8]
   860dc:	700b      	strb	r3, [r1, #0]
   860de:	1c4d      	adds	r5, r1, #1
   860e0:	e7b9      	b.n	86056 <_dtoa_r+0x9b6>
   860e2:	2331      	movs	r3, #49	; 0x31
   860e4:	9a02      	ldr	r2, [sp, #8]
   860e6:	3201      	adds	r2, #1
   860e8:	9202      	str	r2, [sp, #8]
   860ea:	9a04      	ldr	r2, [sp, #16]
   860ec:	7013      	strb	r3, [r2, #0]
   860ee:	e652      	b.n	85d96 <_dtoa_r+0x6f6>
   860f0:	2301      	movs	r3, #1
   860f2:	930b      	str	r3, [sp, #44]	; 0x2c
   860f4:	e666      	b.n	85dc4 <_dtoa_r+0x724>
   860f6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   860fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   860fc:	e48f      	b.n	85a1e <_dtoa_r+0x37e>
   860fe:	bf00      	nop
   86100:	00089820 	.word	0x00089820
   86104:	000897f8 	.word	0x000897f8
   86108:	3ff00000 	.word	0x3ff00000
   8610c:	401c0000 	.word	0x401c0000
   86110:	3fe00000 	.word	0x3fe00000
   86114:	40240000 	.word	0x40240000
   86118:	40140000 	.word	0x40140000
   8611c:	4650      	mov	r0, sl
   8611e:	f001 fe5d 	bl	87ddc <__aeabi_i2d>
   86122:	463a      	mov	r2, r7
   86124:	4643      	mov	r3, r8
   86126:	f001 febf 	bl	87ea8 <__aeabi_dmul>
   8612a:	2200      	movs	r2, #0
   8612c:	4bc1      	ldr	r3, [pc, #772]	; (86434 <_dtoa_r+0xd94>)
   8612e:	f001 fd09 	bl	87b44 <__adddf3>
   86132:	4605      	mov	r5, r0
   86134:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   86138:	4641      	mov	r1, r8
   8613a:	2200      	movs	r2, #0
   8613c:	4bbe      	ldr	r3, [pc, #760]	; (86438 <_dtoa_r+0xd98>)
   8613e:	4638      	mov	r0, r7
   86140:	f001 fcfe 	bl	87b40 <__aeabi_dsub>
   86144:	462a      	mov	r2, r5
   86146:	4633      	mov	r3, r6
   86148:	4682      	mov	sl, r0
   8614a:	468b      	mov	fp, r1
   8614c:	f002 f93c 	bl	883c8 <__aeabi_dcmpgt>
   86150:	4680      	mov	r8, r0
   86152:	2800      	cmp	r0, #0
   86154:	f040 8110 	bne.w	86378 <_dtoa_r+0xcd8>
   86158:	462a      	mov	r2, r5
   8615a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   8615e:	4650      	mov	r0, sl
   86160:	4659      	mov	r1, fp
   86162:	f002 f913 	bl	8838c <__aeabi_dcmplt>
   86166:	b118      	cbz	r0, 86170 <_dtoa_r+0xad0>
   86168:	4646      	mov	r6, r8
   8616a:	e770      	b.n	8604e <_dtoa_r+0x9ae>
   8616c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86170:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   86174:	f7ff bb8f 	b.w	85896 <_dtoa_r+0x1f6>
   86178:	9804      	ldr	r0, [sp, #16]
   8617a:	f7ff bac0 	b.w	856fe <_dtoa_r+0x5e>
   8617e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86180:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   86182:	1afb      	subs	r3, r7, r3
   86184:	441a      	add	r2, r3
   86186:	970c      	str	r7, [sp, #48]	; 0x30
   86188:	920d      	str	r2, [sp, #52]	; 0x34
   8618a:	2700      	movs	r7, #0
   8618c:	e468      	b.n	85a60 <_dtoa_r+0x3c0>
   8618e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86192:	f04f 0a02 	mov.w	sl, #2
   86196:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   8619a:	e656      	b.n	85e4a <_dtoa_r+0x7aa>
   8619c:	2100      	movs	r1, #0
   8619e:	2301      	movs	r3, #1
   861a0:	4620      	mov	r0, r4
   861a2:	6461      	str	r1, [r4, #68]	; 0x44
   861a4:	9325      	str	r3, [sp, #148]	; 0x94
   861a6:	f000 fd4d 	bl	86c44 <_Balloc>
   861aa:	9b25      	ldr	r3, [sp, #148]	; 0x94
   861ac:	9004      	str	r0, [sp, #16]
   861ae:	9307      	str	r3, [sp, #28]
   861b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
   861b2:	6420      	str	r0, [r4, #64]	; 0x40
   861b4:	930f      	str	r3, [sp, #60]	; 0x3c
   861b6:	e627      	b.n	85e08 <_dtoa_r+0x768>
   861b8:	2a00      	cmp	r2, #0
   861ba:	46d0      	mov	r8, sl
   861bc:	f8cd b020 	str.w	fp, [sp, #32]
   861c0:	469a      	mov	sl, r3
   861c2:	dd11      	ble.n	861e8 <_dtoa_r+0xb48>
   861c4:	4649      	mov	r1, r9
   861c6:	2201      	movs	r2, #1
   861c8:	4620      	mov	r0, r4
   861ca:	f000 fee9 	bl	86fa0 <__lshift>
   861ce:	4641      	mov	r1, r8
   861d0:	4681      	mov	r9, r0
   861d2:	f000 ff35 	bl	87040 <__mcmp>
   861d6:	2800      	cmp	r0, #0
   861d8:	f340 8145 	ble.w	86466 <_dtoa_r+0xdc6>
   861dc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   861e0:	f000 8105 	beq.w	863ee <_dtoa_r+0xd4e>
   861e4:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   861e8:	46b3      	mov	fp, r6
   861ea:	f887 a000 	strb.w	sl, [r7]
   861ee:	1c7d      	adds	r5, r7, #1
   861f0:	9e08      	ldr	r6, [sp, #32]
   861f2:	e5d0      	b.n	85d96 <_dtoa_r+0x6f6>
   861f4:	d104      	bne.n	86200 <_dtoa_r+0xb60>
   861f6:	f01a 0f01 	tst.w	sl, #1
   861fa:	d001      	beq.n	86200 <_dtoa_r+0xb60>
   861fc:	e5bb      	b.n	85d76 <_dtoa_r+0x6d6>
   861fe:	4615      	mov	r5, r2
   86200:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   86204:	1e6a      	subs	r2, r5, #1
   86206:	2b30      	cmp	r3, #48	; 0x30
   86208:	d0f9      	beq.n	861fe <_dtoa_r+0xb5e>
   8620a:	e5c4      	b.n	85d96 <_dtoa_r+0x6f6>
   8620c:	2230      	movs	r2, #48	; 0x30
   8620e:	9904      	ldr	r1, [sp, #16]
   86210:	700a      	strb	r2, [r1, #0]
   86212:	9a02      	ldr	r2, [sp, #8]
   86214:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   86218:	3201      	adds	r2, #1
   8621a:	9202      	str	r2, [sp, #8]
   8621c:	f7ff bbfb 	b.w	85a16 <_dtoa_r+0x376>
   86220:	f000 80bb 	beq.w	8639a <_dtoa_r+0xcfa>
   86224:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86228:	9b02      	ldr	r3, [sp, #8]
   8622a:	f04f 0a02 	mov.w	sl, #2
   8622e:	425d      	negs	r5, r3
   86230:	4b82      	ldr	r3, [pc, #520]	; (8643c <_dtoa_r+0xd9c>)
   86232:	f005 020f 	and.w	r2, r5, #15
   86236:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8623a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8623e:	f001 fe33 	bl	87ea8 <__aeabi_dmul>
   86242:	112d      	asrs	r5, r5, #4
   86244:	4607      	mov	r7, r0
   86246:	4688      	mov	r8, r1
   86248:	f43f ae1a 	beq.w	85e80 <_dtoa_r+0x7e0>
   8624c:	4e7c      	ldr	r6, [pc, #496]	; (86440 <_dtoa_r+0xda0>)
   8624e:	07eb      	lsls	r3, r5, #31
   86250:	d509      	bpl.n	86266 <_dtoa_r+0xbc6>
   86252:	e9d6 2300 	ldrd	r2, r3, [r6]
   86256:	4638      	mov	r0, r7
   86258:	4641      	mov	r1, r8
   8625a:	f001 fe25 	bl	87ea8 <__aeabi_dmul>
   8625e:	4607      	mov	r7, r0
   86260:	4688      	mov	r8, r1
   86262:	f10a 0a01 	add.w	sl, sl, #1
   86266:	106d      	asrs	r5, r5, #1
   86268:	f106 0608 	add.w	r6, r6, #8
   8626c:	d1ef      	bne.n	8624e <_dtoa_r+0xbae>
   8626e:	e607      	b.n	85e80 <_dtoa_r+0x7e0>
   86270:	6871      	ldr	r1, [r6, #4]
   86272:	4620      	mov	r0, r4
   86274:	f000 fce6 	bl	86c44 <_Balloc>
   86278:	4605      	mov	r5, r0
   8627a:	6933      	ldr	r3, [r6, #16]
   8627c:	f106 010c 	add.w	r1, r6, #12
   86280:	3302      	adds	r3, #2
   86282:	009a      	lsls	r2, r3, #2
   86284:	300c      	adds	r0, #12
   86286:	f000 fc5b 	bl	86b40 <memcpy>
   8628a:	4629      	mov	r1, r5
   8628c:	2201      	movs	r2, #1
   8628e:	4620      	mov	r0, r4
   86290:	f000 fe86 	bl	86fa0 <__lshift>
   86294:	9008      	str	r0, [sp, #32]
   86296:	e4b6      	b.n	85c06 <_dtoa_r+0x566>
   86298:	2b39      	cmp	r3, #57	; 0x39
   8629a:	f8cd b020 	str.w	fp, [sp, #32]
   8629e:	46d0      	mov	r8, sl
   862a0:	f000 80a5 	beq.w	863ee <_dtoa_r+0xd4e>
   862a4:	f103 0a01 	add.w	sl, r3, #1
   862a8:	46b3      	mov	fp, r6
   862aa:	f887 a000 	strb.w	sl, [r7]
   862ae:	1c7d      	adds	r5, r7, #1
   862b0:	9e08      	ldr	r6, [sp, #32]
   862b2:	e570      	b.n	85d96 <_dtoa_r+0x6f6>
   862b4:	465a      	mov	r2, fp
   862b6:	46d0      	mov	r8, sl
   862b8:	46b3      	mov	fp, r6
   862ba:	469a      	mov	sl, r3
   862bc:	4616      	mov	r6, r2
   862be:	e54e      	b.n	85d5e <_dtoa_r+0x6be>
   862c0:	9812      	ldr	r0, [sp, #72]	; 0x48
   862c2:	495e      	ldr	r1, [pc, #376]	; (8643c <_dtoa_r+0xd9c>)
   862c4:	462a      	mov	r2, r5
   862c6:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   862ca:	4633      	mov	r3, r6
   862cc:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   862d0:	f001 fdea 	bl	87ea8 <__aeabi_dmul>
   862d4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   862d8:	4638      	mov	r0, r7
   862da:	4641      	mov	r1, r8
   862dc:	f002 f894 	bl	88408 <__aeabi_d2iz>
   862e0:	4605      	mov	r5, r0
   862e2:	f001 fd7b 	bl	87ddc <__aeabi_i2d>
   862e6:	4602      	mov	r2, r0
   862e8:	460b      	mov	r3, r1
   862ea:	4638      	mov	r0, r7
   862ec:	4641      	mov	r1, r8
   862ee:	f001 fc27 	bl	87b40 <__aeabi_dsub>
   862f2:	4606      	mov	r6, r0
   862f4:	9812      	ldr	r0, [sp, #72]	; 0x48
   862f6:	9a04      	ldr	r2, [sp, #16]
   862f8:	3530      	adds	r5, #48	; 0x30
   862fa:	2801      	cmp	r0, #1
   862fc:	7015      	strb	r5, [r2, #0]
   862fe:	460f      	mov	r7, r1
   86300:	f102 0501 	add.w	r5, r2, #1
   86304:	d026      	beq.n	86354 <_dtoa_r+0xcb4>
   86306:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86308:	9a04      	ldr	r2, [sp, #16]
   8630a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   8630e:	4413      	add	r3, r2
   86310:	f04f 0a00 	mov.w	sl, #0
   86314:	4699      	mov	r9, r3
   86316:	f8df b130 	ldr.w	fp, [pc, #304]	; 86448 <_dtoa_r+0xda8>
   8631a:	4652      	mov	r2, sl
   8631c:	465b      	mov	r3, fp
   8631e:	4630      	mov	r0, r6
   86320:	4639      	mov	r1, r7
   86322:	f001 fdc1 	bl	87ea8 <__aeabi_dmul>
   86326:	460f      	mov	r7, r1
   86328:	4606      	mov	r6, r0
   8632a:	f002 f86d 	bl	88408 <__aeabi_d2iz>
   8632e:	4680      	mov	r8, r0
   86330:	f001 fd54 	bl	87ddc <__aeabi_i2d>
   86334:	4602      	mov	r2, r0
   86336:	460b      	mov	r3, r1
   86338:	4630      	mov	r0, r6
   8633a:	4639      	mov	r1, r7
   8633c:	f001 fc00 	bl	87b40 <__aeabi_dsub>
   86340:	f108 0830 	add.w	r8, r8, #48	; 0x30
   86344:	f805 8b01 	strb.w	r8, [r5], #1
   86348:	454d      	cmp	r5, r9
   8634a:	4606      	mov	r6, r0
   8634c:	460f      	mov	r7, r1
   8634e:	d1e4      	bne.n	8631a <_dtoa_r+0xc7a>
   86350:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86354:	2200      	movs	r2, #0
   86356:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8635a:	4b3a      	ldr	r3, [pc, #232]	; (86444 <_dtoa_r+0xda4>)
   8635c:	f001 fbf2 	bl	87b44 <__adddf3>
   86360:	4632      	mov	r2, r6
   86362:	463b      	mov	r3, r7
   86364:	f002 f812 	bl	8838c <__aeabi_dcmplt>
   86368:	2800      	cmp	r0, #0
   8636a:	d046      	beq.n	863fa <_dtoa_r+0xd5a>
   8636c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8636e:	9302      	str	r3, [sp, #8]
   86370:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   86374:	f7ff bb42 	b.w	859fc <_dtoa_r+0x35c>
   86378:	f04f 0800 	mov.w	r8, #0
   8637c:	4646      	mov	r6, r8
   8637e:	e6a8      	b.n	860d2 <_dtoa_r+0xa32>
   86380:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86382:	9a07      	ldr	r2, [sp, #28]
   86384:	1a9d      	subs	r5, r3, r2
   86386:	2300      	movs	r3, #0
   86388:	f7ff bb70 	b.w	85a6c <_dtoa_r+0x3cc>
   8638c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   8638e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   86390:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   86394:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   86396:	f7ff bb69 	b.w	85a6c <_dtoa_r+0x3cc>
   8639a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   8639e:	f04f 0a02 	mov.w	sl, #2
   863a2:	e56d      	b.n	85e80 <_dtoa_r+0x7e0>
   863a4:	9b07      	ldr	r3, [sp, #28]
   863a6:	2b00      	cmp	r3, #0
   863a8:	f43f aeb8 	beq.w	8611c <_dtoa_r+0xa7c>
   863ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   863ae:	2b00      	cmp	r3, #0
   863b0:	f77f aede 	ble.w	86170 <_dtoa_r+0xad0>
   863b4:	2200      	movs	r2, #0
   863b6:	4b24      	ldr	r3, [pc, #144]	; (86448 <_dtoa_r+0xda8>)
   863b8:	4638      	mov	r0, r7
   863ba:	4641      	mov	r1, r8
   863bc:	f001 fd74 	bl	87ea8 <__aeabi_dmul>
   863c0:	4607      	mov	r7, r0
   863c2:	4688      	mov	r8, r1
   863c4:	f10a 0001 	add.w	r0, sl, #1
   863c8:	f001 fd08 	bl	87ddc <__aeabi_i2d>
   863cc:	463a      	mov	r2, r7
   863ce:	4643      	mov	r3, r8
   863d0:	f001 fd6a 	bl	87ea8 <__aeabi_dmul>
   863d4:	2200      	movs	r2, #0
   863d6:	4b17      	ldr	r3, [pc, #92]	; (86434 <_dtoa_r+0xd94>)
   863d8:	f001 fbb4 	bl	87b44 <__adddf3>
   863dc:	9a02      	ldr	r2, [sp, #8]
   863de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   863e0:	3a01      	subs	r2, #1
   863e2:	4605      	mov	r5, r0
   863e4:	9215      	str	r2, [sp, #84]	; 0x54
   863e6:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   863ea:	9312      	str	r3, [sp, #72]	; 0x48
   863ec:	e569      	b.n	85ec2 <_dtoa_r+0x822>
   863ee:	2239      	movs	r2, #57	; 0x39
   863f0:	46b3      	mov	fp, r6
   863f2:	703a      	strb	r2, [r7, #0]
   863f4:	9e08      	ldr	r6, [sp, #32]
   863f6:	1c7d      	adds	r5, r7, #1
   863f8:	e4bf      	b.n	85d7a <_dtoa_r+0x6da>
   863fa:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   863fe:	2000      	movs	r0, #0
   86400:	4910      	ldr	r1, [pc, #64]	; (86444 <_dtoa_r+0xda4>)
   86402:	f001 fb9d 	bl	87b40 <__aeabi_dsub>
   86406:	4632      	mov	r2, r6
   86408:	463b      	mov	r3, r7
   8640a:	f001 ffdd 	bl	883c8 <__aeabi_dcmpgt>
   8640e:	b908      	cbnz	r0, 86414 <_dtoa_r+0xd74>
   86410:	e6ae      	b.n	86170 <_dtoa_r+0xad0>
   86412:	4615      	mov	r5, r2
   86414:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   86418:	1e6a      	subs	r2, r5, #1
   8641a:	2b30      	cmp	r3, #48	; 0x30
   8641c:	d0f9      	beq.n	86412 <_dtoa_r+0xd72>
   8641e:	e5d7      	b.n	85fd0 <_dtoa_r+0x930>
   86420:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86424:	9b15      	ldr	r3, [sp, #84]	; 0x54
   86426:	9302      	str	r3, [sp, #8]
   86428:	f7ff bae8 	b.w	859fc <_dtoa_r+0x35c>
   8642c:	970c      	str	r7, [sp, #48]	; 0x30
   8642e:	f7ff bba7 	b.w	85b80 <_dtoa_r+0x4e0>
   86432:	bf00      	nop
   86434:	401c0000 	.word	0x401c0000
   86438:	40140000 	.word	0x40140000
   8643c:	00089820 	.word	0x00089820
   86440:	000897f8 	.word	0x000897f8
   86444:	3fe00000 	.word	0x3fe00000
   86448:	40240000 	.word	0x40240000
   8644c:	2b39      	cmp	r3, #57	; 0x39
   8644e:	f8cd b020 	str.w	fp, [sp, #32]
   86452:	46d0      	mov	r8, sl
   86454:	f8dd b01c 	ldr.w	fp, [sp, #28]
   86458:	469a      	mov	sl, r3
   8645a:	d0c8      	beq.n	863ee <_dtoa_r+0xd4e>
   8645c:	f1bb 0f00 	cmp.w	fp, #0
   86460:	f73f aec0 	bgt.w	861e4 <_dtoa_r+0xb44>
   86464:	e6c0      	b.n	861e8 <_dtoa_r+0xb48>
   86466:	f47f aebf 	bne.w	861e8 <_dtoa_r+0xb48>
   8646a:	f01a 0f01 	tst.w	sl, #1
   8646e:	f43f aebb 	beq.w	861e8 <_dtoa_r+0xb48>
   86472:	e6b3      	b.n	861dc <_dtoa_r+0xb3c>
   86474:	f04f 0800 	mov.w	r8, #0
   86478:	4646      	mov	r6, r8
   8647a:	e5e8      	b.n	8604e <_dtoa_r+0x9ae>
   8647c:	4631      	mov	r1, r6
   8647e:	2300      	movs	r3, #0
   86480:	220a      	movs	r2, #10
   86482:	4620      	mov	r0, r4
   86484:	f000 fc0e 	bl	86ca4 <__multadd>
   86488:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8648a:	4606      	mov	r6, r0
   8648c:	2b00      	cmp	r3, #0
   8648e:	dd07      	ble.n	864a0 <_dtoa_r+0xe00>
   86490:	9307      	str	r3, [sp, #28]
   86492:	f7ff bbab 	b.w	85bec <_dtoa_r+0x54c>
   86496:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86498:	2b02      	cmp	r3, #2
   8649a:	dc1f      	bgt.n	864dc <_dtoa_r+0xe3c>
   8649c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8649e:	e43c      	b.n	85d1a <_dtoa_r+0x67a>
   864a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
   864a2:	2b02      	cmp	r3, #2
   864a4:	dc1a      	bgt.n	864dc <_dtoa_r+0xe3c>
   864a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   864a8:	e7f2      	b.n	86490 <_dtoa_r+0xdf0>
   864aa:	f43f ab81 	beq.w	85bb0 <_dtoa_r+0x510>
   864ae:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   864b2:	e411      	b.n	85cd8 <_dtoa_r+0x638>
   864b4:	2500      	movs	r5, #0
   864b6:	4620      	mov	r0, r4
   864b8:	6465      	str	r5, [r4, #68]	; 0x44
   864ba:	4629      	mov	r1, r5
   864bc:	f000 fbc2 	bl	86c44 <_Balloc>
   864c0:	f04f 33ff 	mov.w	r3, #4294967295
   864c4:	9307      	str	r3, [sp, #28]
   864c6:	930f      	str	r3, [sp, #60]	; 0x3c
   864c8:	2301      	movs	r3, #1
   864ca:	9004      	str	r0, [sp, #16]
   864cc:	9525      	str	r5, [sp, #148]	; 0x94
   864ce:	6420      	str	r0, [r4, #64]	; 0x40
   864d0:	930b      	str	r3, [sp, #44]	; 0x2c
   864d2:	f7ff b9e0 	b.w	85896 <_dtoa_r+0x1f6>
   864d6:	2501      	movs	r5, #1
   864d8:	f7ff b9a8 	b.w	8582c <_dtoa_r+0x18c>
   864dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   864de:	9307      	str	r3, [sp, #28]
   864e0:	e5e8      	b.n	860b4 <_dtoa_r+0xa14>
   864e2:	bf00      	nop

000864e4 <__libc_fini_array>:
   864e4:	b538      	push	{r3, r4, r5, lr}
   864e6:	4c0a      	ldr	r4, [pc, #40]	; (86510 <__libc_fini_array+0x2c>)
   864e8:	4d0a      	ldr	r5, [pc, #40]	; (86514 <__libc_fini_array+0x30>)
   864ea:	1b64      	subs	r4, r4, r5
   864ec:	10a4      	asrs	r4, r4, #2
   864ee:	d00a      	beq.n	86506 <__libc_fini_array+0x22>
   864f0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   864f4:	3b01      	subs	r3, #1
   864f6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   864fa:	3c01      	subs	r4, #1
   864fc:	f855 3904 	ldr.w	r3, [r5], #-4
   86500:	4798      	blx	r3
   86502:	2c00      	cmp	r4, #0
   86504:	d1f9      	bne.n	864fa <__libc_fini_array+0x16>
   86506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8650a:	f003 ba7f 	b.w	89a0c <_fini>
   8650e:	bf00      	nop
   86510:	00089a1c 	.word	0x00089a1c
   86514:	00089a18 	.word	0x00089a18

00086518 <__locale_ctype_ptr_l>:
   86518:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   8651c:	4770      	bx	lr
   8651e:	bf00      	nop

00086520 <_localeconv_r>:
   86520:	4a04      	ldr	r2, [pc, #16]	; (86534 <_localeconv_r+0x14>)
   86522:	4b05      	ldr	r3, [pc, #20]	; (86538 <_localeconv_r+0x18>)
   86524:	6812      	ldr	r2, [r2, #0]
   86526:	6b50      	ldr	r0, [r2, #52]	; 0x34
   86528:	2800      	cmp	r0, #0
   8652a:	bf08      	it	eq
   8652c:	4618      	moveq	r0, r3
   8652e:	30f0      	adds	r0, #240	; 0xf0
   86530:	4770      	bx	lr
   86532:	bf00      	nop
   86534:	2000062c 	.word	0x2000062c
   86538:	20000a5c 	.word	0x20000a5c

0008653c <__retarget_lock_acquire_recursive>:
   8653c:	4770      	bx	lr
   8653e:	bf00      	nop

00086540 <__retarget_lock_release_recursive>:
   86540:	4770      	bx	lr
   86542:	bf00      	nop

00086544 <_malloc_r>:
   86544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86548:	f101 060b 	add.w	r6, r1, #11
   8654c:	2e16      	cmp	r6, #22
   8654e:	b083      	sub	sp, #12
   86550:	4605      	mov	r5, r0
   86552:	f240 809e 	bls.w	86692 <_malloc_r+0x14e>
   86556:	f036 0607 	bics.w	r6, r6, #7
   8655a:	f100 80bd 	bmi.w	866d8 <_malloc_r+0x194>
   8655e:	42b1      	cmp	r1, r6
   86560:	f200 80ba 	bhi.w	866d8 <_malloc_r+0x194>
   86564:	f000 fb62 	bl	86c2c <__malloc_lock>
   86568:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   8656c:	f0c0 8285 	bcc.w	86a7a <_malloc_r+0x536>
   86570:	0a73      	lsrs	r3, r6, #9
   86572:	f000 80b8 	beq.w	866e6 <_malloc_r+0x1a2>
   86576:	2b04      	cmp	r3, #4
   86578:	f200 816c 	bhi.w	86854 <_malloc_r+0x310>
   8657c:	09b3      	lsrs	r3, r6, #6
   8657e:	f103 0039 	add.w	r0, r3, #57	; 0x39
   86582:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   86586:	00c1      	lsls	r1, r0, #3
   86588:	4fb8      	ldr	r7, [pc, #736]	; (8686c <_malloc_r+0x328>)
   8658a:	4439      	add	r1, r7
   8658c:	684c      	ldr	r4, [r1, #4]
   8658e:	3908      	subs	r1, #8
   86590:	42a1      	cmp	r1, r4
   86592:	d106      	bne.n	865a2 <_malloc_r+0x5e>
   86594:	e00c      	b.n	865b0 <_malloc_r+0x6c>
   86596:	2a00      	cmp	r2, #0
   86598:	f280 80ab 	bge.w	866f2 <_malloc_r+0x1ae>
   8659c:	68e4      	ldr	r4, [r4, #12]
   8659e:	42a1      	cmp	r1, r4
   865a0:	d006      	beq.n	865b0 <_malloc_r+0x6c>
   865a2:	6863      	ldr	r3, [r4, #4]
   865a4:	f023 0303 	bic.w	r3, r3, #3
   865a8:	1b9a      	subs	r2, r3, r6
   865aa:	2a0f      	cmp	r2, #15
   865ac:	ddf3      	ble.n	86596 <_malloc_r+0x52>
   865ae:	4670      	mov	r0, lr
   865b0:	693c      	ldr	r4, [r7, #16]
   865b2:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 86880 <_malloc_r+0x33c>
   865b6:	4574      	cmp	r4, lr
   865b8:	f000 819e 	beq.w	868f8 <_malloc_r+0x3b4>
   865bc:	6863      	ldr	r3, [r4, #4]
   865be:	f023 0303 	bic.w	r3, r3, #3
   865c2:	1b9a      	subs	r2, r3, r6
   865c4:	2a0f      	cmp	r2, #15
   865c6:	f300 8183 	bgt.w	868d0 <_malloc_r+0x38c>
   865ca:	2a00      	cmp	r2, #0
   865cc:	f8c7 e014 	str.w	lr, [r7, #20]
   865d0:	f8c7 e010 	str.w	lr, [r7, #16]
   865d4:	f280 8091 	bge.w	866fa <_malloc_r+0x1b6>
   865d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   865dc:	f080 8154 	bcs.w	86888 <_malloc_r+0x344>
   865e0:	2201      	movs	r2, #1
   865e2:	08db      	lsrs	r3, r3, #3
   865e4:	6879      	ldr	r1, [r7, #4]
   865e6:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   865ea:	4413      	add	r3, r2
   865ec:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   865f0:	fa02 f20c 	lsl.w	r2, r2, ip
   865f4:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   865f8:	430a      	orrs	r2, r1
   865fa:	f1ac 0108 	sub.w	r1, ip, #8
   865fe:	60e1      	str	r1, [r4, #12]
   86600:	f8c4 8008 	str.w	r8, [r4, #8]
   86604:	607a      	str	r2, [r7, #4]
   86606:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   8660a:	f8c8 400c 	str.w	r4, [r8, #12]
   8660e:	2401      	movs	r4, #1
   86610:	1083      	asrs	r3, r0, #2
   86612:	409c      	lsls	r4, r3
   86614:	4294      	cmp	r4, r2
   86616:	d87d      	bhi.n	86714 <_malloc_r+0x1d0>
   86618:	4214      	tst	r4, r2
   8661a:	d106      	bne.n	8662a <_malloc_r+0xe6>
   8661c:	f020 0003 	bic.w	r0, r0, #3
   86620:	0064      	lsls	r4, r4, #1
   86622:	4214      	tst	r4, r2
   86624:	f100 0004 	add.w	r0, r0, #4
   86628:	d0fa      	beq.n	86620 <_malloc_r+0xdc>
   8662a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   8662e:	46cc      	mov	ip, r9
   86630:	4680      	mov	r8, r0
   86632:	f8dc 300c 	ldr.w	r3, [ip, #12]
   86636:	459c      	cmp	ip, r3
   86638:	d107      	bne.n	8664a <_malloc_r+0x106>
   8663a:	e15f      	b.n	868fc <_malloc_r+0x3b8>
   8663c:	2a00      	cmp	r2, #0
   8663e:	f280 816d 	bge.w	8691c <_malloc_r+0x3d8>
   86642:	68db      	ldr	r3, [r3, #12]
   86644:	459c      	cmp	ip, r3
   86646:	f000 8159 	beq.w	868fc <_malloc_r+0x3b8>
   8664a:	6859      	ldr	r1, [r3, #4]
   8664c:	f021 0103 	bic.w	r1, r1, #3
   86650:	1b8a      	subs	r2, r1, r6
   86652:	2a0f      	cmp	r2, #15
   86654:	ddf2      	ble.n	8663c <_malloc_r+0xf8>
   86656:	68dc      	ldr	r4, [r3, #12]
   86658:	f8d3 c008 	ldr.w	ip, [r3, #8]
   8665c:	f046 0801 	orr.w	r8, r6, #1
   86660:	4628      	mov	r0, r5
   86662:	441e      	add	r6, r3
   86664:	f042 0501 	orr.w	r5, r2, #1
   86668:	f8c3 8004 	str.w	r8, [r3, #4]
   8666c:	f8cc 400c 	str.w	r4, [ip, #12]
   86670:	f8c4 c008 	str.w	ip, [r4, #8]
   86674:	617e      	str	r6, [r7, #20]
   86676:	613e      	str	r6, [r7, #16]
   86678:	f8c6 e00c 	str.w	lr, [r6, #12]
   8667c:	f8c6 e008 	str.w	lr, [r6, #8]
   86680:	6075      	str	r5, [r6, #4]
   86682:	505a      	str	r2, [r3, r1]
   86684:	9300      	str	r3, [sp, #0]
   86686:	f000 fad7 	bl	86c38 <__malloc_unlock>
   8668a:	9b00      	ldr	r3, [sp, #0]
   8668c:	f103 0408 	add.w	r4, r3, #8
   86690:	e01e      	b.n	866d0 <_malloc_r+0x18c>
   86692:	2910      	cmp	r1, #16
   86694:	d820      	bhi.n	866d8 <_malloc_r+0x194>
   86696:	f000 fac9 	bl	86c2c <__malloc_lock>
   8669a:	2610      	movs	r6, #16
   8669c:	2318      	movs	r3, #24
   8669e:	2002      	movs	r0, #2
   866a0:	4f72      	ldr	r7, [pc, #456]	; (8686c <_malloc_r+0x328>)
   866a2:	443b      	add	r3, r7
   866a4:	685c      	ldr	r4, [r3, #4]
   866a6:	f1a3 0208 	sub.w	r2, r3, #8
   866aa:	4294      	cmp	r4, r2
   866ac:	f000 812f 	beq.w	8690e <_malloc_r+0x3ca>
   866b0:	6863      	ldr	r3, [r4, #4]
   866b2:	68e1      	ldr	r1, [r4, #12]
   866b4:	f023 0303 	bic.w	r3, r3, #3
   866b8:	4423      	add	r3, r4
   866ba:	685a      	ldr	r2, [r3, #4]
   866bc:	68a6      	ldr	r6, [r4, #8]
   866be:	f042 0201 	orr.w	r2, r2, #1
   866c2:	60f1      	str	r1, [r6, #12]
   866c4:	4628      	mov	r0, r5
   866c6:	608e      	str	r6, [r1, #8]
   866c8:	605a      	str	r2, [r3, #4]
   866ca:	f000 fab5 	bl	86c38 <__malloc_unlock>
   866ce:	3408      	adds	r4, #8
   866d0:	4620      	mov	r0, r4
   866d2:	b003      	add	sp, #12
   866d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   866d8:	2400      	movs	r4, #0
   866da:	230c      	movs	r3, #12
   866dc:	4620      	mov	r0, r4
   866de:	602b      	str	r3, [r5, #0]
   866e0:	b003      	add	sp, #12
   866e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   866e6:	2040      	movs	r0, #64	; 0x40
   866e8:	f44f 7100 	mov.w	r1, #512	; 0x200
   866ec:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   866f0:	e74a      	b.n	86588 <_malloc_r+0x44>
   866f2:	4423      	add	r3, r4
   866f4:	685a      	ldr	r2, [r3, #4]
   866f6:	68e1      	ldr	r1, [r4, #12]
   866f8:	e7e0      	b.n	866bc <_malloc_r+0x178>
   866fa:	4423      	add	r3, r4
   866fc:	685a      	ldr	r2, [r3, #4]
   866fe:	4628      	mov	r0, r5
   86700:	f042 0201 	orr.w	r2, r2, #1
   86704:	605a      	str	r2, [r3, #4]
   86706:	3408      	adds	r4, #8
   86708:	f000 fa96 	bl	86c38 <__malloc_unlock>
   8670c:	4620      	mov	r0, r4
   8670e:	b003      	add	sp, #12
   86710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86714:	68bc      	ldr	r4, [r7, #8]
   86716:	6863      	ldr	r3, [r4, #4]
   86718:	f023 0803 	bic.w	r8, r3, #3
   8671c:	45b0      	cmp	r8, r6
   8671e:	d304      	bcc.n	8672a <_malloc_r+0x1e6>
   86720:	eba8 0306 	sub.w	r3, r8, r6
   86724:	2b0f      	cmp	r3, #15
   86726:	f300 8085 	bgt.w	86834 <_malloc_r+0x2f0>
   8672a:	f8df 9158 	ldr.w	r9, [pc, #344]	; 86884 <_malloc_r+0x340>
   8672e:	4b50      	ldr	r3, [pc, #320]	; (86870 <_malloc_r+0x32c>)
   86730:	f8d9 2000 	ldr.w	r2, [r9]
   86734:	681b      	ldr	r3, [r3, #0]
   86736:	3201      	adds	r2, #1
   86738:	4433      	add	r3, r6
   8673a:	eb04 0a08 	add.w	sl, r4, r8
   8673e:	f000 8154 	beq.w	869ea <_malloc_r+0x4a6>
   86742:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   86746:	330f      	adds	r3, #15
   86748:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   8674c:	f02b 0b0f 	bic.w	fp, fp, #15
   86750:	4659      	mov	r1, fp
   86752:	4628      	mov	r0, r5
   86754:	f000 fd72 	bl	8723c <_sbrk_r>
   86758:	1c41      	adds	r1, r0, #1
   8675a:	4602      	mov	r2, r0
   8675c:	f000 80fb 	beq.w	86956 <_malloc_r+0x412>
   86760:	4582      	cmp	sl, r0
   86762:	f200 80f6 	bhi.w	86952 <_malloc_r+0x40e>
   86766:	4b43      	ldr	r3, [pc, #268]	; (86874 <_malloc_r+0x330>)
   86768:	6819      	ldr	r1, [r3, #0]
   8676a:	4459      	add	r1, fp
   8676c:	6019      	str	r1, [r3, #0]
   8676e:	f000 814c 	beq.w	86a0a <_malloc_r+0x4c6>
   86772:	f8d9 0000 	ldr.w	r0, [r9]
   86776:	3001      	adds	r0, #1
   86778:	bf1b      	ittet	ne
   8677a:	eba2 0a0a 	subne.w	sl, r2, sl
   8677e:	4451      	addne	r1, sl
   86780:	f8c9 2000 	streq.w	r2, [r9]
   86784:	6019      	strne	r1, [r3, #0]
   86786:	f012 0107 	ands.w	r1, r2, #7
   8678a:	f000 8114 	beq.w	869b6 <_malloc_r+0x472>
   8678e:	f1c1 0008 	rsb	r0, r1, #8
   86792:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   86796:	4402      	add	r2, r0
   86798:	3108      	adds	r1, #8
   8679a:	eb02 090b 	add.w	r9, r2, fp
   8679e:	f3c9 090b 	ubfx	r9, r9, #0, #12
   867a2:	eba1 0909 	sub.w	r9, r1, r9
   867a6:	4649      	mov	r1, r9
   867a8:	4628      	mov	r0, r5
   867aa:	9301      	str	r3, [sp, #4]
   867ac:	9200      	str	r2, [sp, #0]
   867ae:	f000 fd45 	bl	8723c <_sbrk_r>
   867b2:	1c43      	adds	r3, r0, #1
   867b4:	e89d 000c 	ldmia.w	sp, {r2, r3}
   867b8:	f000 8142 	beq.w	86a40 <_malloc_r+0x4fc>
   867bc:	1a80      	subs	r0, r0, r2
   867be:	4448      	add	r0, r9
   867c0:	f040 0001 	orr.w	r0, r0, #1
   867c4:	6819      	ldr	r1, [r3, #0]
   867c6:	42bc      	cmp	r4, r7
   867c8:	4449      	add	r1, r9
   867ca:	60ba      	str	r2, [r7, #8]
   867cc:	6019      	str	r1, [r3, #0]
   867ce:	6050      	str	r0, [r2, #4]
   867d0:	d017      	beq.n	86802 <_malloc_r+0x2be>
   867d2:	f1b8 0f0f 	cmp.w	r8, #15
   867d6:	f240 80fa 	bls.w	869ce <_malloc_r+0x48a>
   867da:	f04f 0c05 	mov.w	ip, #5
   867de:	6862      	ldr	r2, [r4, #4]
   867e0:	f1a8 000c 	sub.w	r0, r8, #12
   867e4:	f020 0007 	bic.w	r0, r0, #7
   867e8:	f002 0201 	and.w	r2, r2, #1
   867ec:	eb04 0e00 	add.w	lr, r4, r0
   867f0:	4302      	orrs	r2, r0
   867f2:	280f      	cmp	r0, #15
   867f4:	6062      	str	r2, [r4, #4]
   867f6:	f8ce c004 	str.w	ip, [lr, #4]
   867fa:	f8ce c008 	str.w	ip, [lr, #8]
   867fe:	f200 8116 	bhi.w	86a2e <_malloc_r+0x4ea>
   86802:	4b1d      	ldr	r3, [pc, #116]	; (86878 <_malloc_r+0x334>)
   86804:	68bc      	ldr	r4, [r7, #8]
   86806:	681a      	ldr	r2, [r3, #0]
   86808:	4291      	cmp	r1, r2
   8680a:	bf88      	it	hi
   8680c:	6019      	strhi	r1, [r3, #0]
   8680e:	4b1b      	ldr	r3, [pc, #108]	; (8687c <_malloc_r+0x338>)
   86810:	681a      	ldr	r2, [r3, #0]
   86812:	4291      	cmp	r1, r2
   86814:	6862      	ldr	r2, [r4, #4]
   86816:	bf88      	it	hi
   86818:	6019      	strhi	r1, [r3, #0]
   8681a:	f022 0203 	bic.w	r2, r2, #3
   8681e:	4296      	cmp	r6, r2
   86820:	eba2 0306 	sub.w	r3, r2, r6
   86824:	d801      	bhi.n	8682a <_malloc_r+0x2e6>
   86826:	2b0f      	cmp	r3, #15
   86828:	dc04      	bgt.n	86834 <_malloc_r+0x2f0>
   8682a:	4628      	mov	r0, r5
   8682c:	f000 fa04 	bl	86c38 <__malloc_unlock>
   86830:	2400      	movs	r4, #0
   86832:	e74d      	b.n	866d0 <_malloc_r+0x18c>
   86834:	f046 0201 	orr.w	r2, r6, #1
   86838:	f043 0301 	orr.w	r3, r3, #1
   8683c:	4426      	add	r6, r4
   8683e:	6062      	str	r2, [r4, #4]
   86840:	4628      	mov	r0, r5
   86842:	60be      	str	r6, [r7, #8]
   86844:	3408      	adds	r4, #8
   86846:	6073      	str	r3, [r6, #4]
   86848:	f000 f9f6 	bl	86c38 <__malloc_unlock>
   8684c:	4620      	mov	r0, r4
   8684e:	b003      	add	sp, #12
   86850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86854:	2b14      	cmp	r3, #20
   86856:	d970      	bls.n	8693a <_malloc_r+0x3f6>
   86858:	2b54      	cmp	r3, #84	; 0x54
   8685a:	f200 80a2 	bhi.w	869a2 <_malloc_r+0x45e>
   8685e:	0b33      	lsrs	r3, r6, #12
   86860:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   86864:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   86868:	00c1      	lsls	r1, r0, #3
   8686a:	e68d      	b.n	86588 <_malloc_r+0x44>
   8686c:	20000bc8 	.word	0x20000bc8
   86870:	200010b0 	.word	0x200010b0
   86874:	20001080 	.word	0x20001080
   86878:	200010a8 	.word	0x200010a8
   8687c:	200010ac 	.word	0x200010ac
   86880:	20000bd0 	.word	0x20000bd0
   86884:	20000fd0 	.word	0x20000fd0
   86888:	0a5a      	lsrs	r2, r3, #9
   8688a:	2a04      	cmp	r2, #4
   8688c:	d95b      	bls.n	86946 <_malloc_r+0x402>
   8688e:	2a14      	cmp	r2, #20
   86890:	f200 80ae 	bhi.w	869f0 <_malloc_r+0x4ac>
   86894:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   86898:	00c9      	lsls	r1, r1, #3
   8689a:	325b      	adds	r2, #91	; 0x5b
   8689c:	eb07 0c01 	add.w	ip, r7, r1
   868a0:	5879      	ldr	r1, [r7, r1]
   868a2:	f1ac 0c08 	sub.w	ip, ip, #8
   868a6:	458c      	cmp	ip, r1
   868a8:	f000 8088 	beq.w	869bc <_malloc_r+0x478>
   868ac:	684a      	ldr	r2, [r1, #4]
   868ae:	f022 0203 	bic.w	r2, r2, #3
   868b2:	4293      	cmp	r3, r2
   868b4:	d273      	bcs.n	8699e <_malloc_r+0x45a>
   868b6:	6889      	ldr	r1, [r1, #8]
   868b8:	458c      	cmp	ip, r1
   868ba:	d1f7      	bne.n	868ac <_malloc_r+0x368>
   868bc:	f8dc 300c 	ldr.w	r3, [ip, #12]
   868c0:	687a      	ldr	r2, [r7, #4]
   868c2:	60e3      	str	r3, [r4, #12]
   868c4:	f8c4 c008 	str.w	ip, [r4, #8]
   868c8:	609c      	str	r4, [r3, #8]
   868ca:	f8cc 400c 	str.w	r4, [ip, #12]
   868ce:	e69e      	b.n	8660e <_malloc_r+0xca>
   868d0:	f046 0c01 	orr.w	ip, r6, #1
   868d4:	f042 0101 	orr.w	r1, r2, #1
   868d8:	4426      	add	r6, r4
   868da:	f8c4 c004 	str.w	ip, [r4, #4]
   868de:	4628      	mov	r0, r5
   868e0:	617e      	str	r6, [r7, #20]
   868e2:	613e      	str	r6, [r7, #16]
   868e4:	f8c6 e00c 	str.w	lr, [r6, #12]
   868e8:	f8c6 e008 	str.w	lr, [r6, #8]
   868ec:	6071      	str	r1, [r6, #4]
   868ee:	50e2      	str	r2, [r4, r3]
   868f0:	f000 f9a2 	bl	86c38 <__malloc_unlock>
   868f4:	3408      	adds	r4, #8
   868f6:	e6eb      	b.n	866d0 <_malloc_r+0x18c>
   868f8:	687a      	ldr	r2, [r7, #4]
   868fa:	e688      	b.n	8660e <_malloc_r+0xca>
   868fc:	f108 0801 	add.w	r8, r8, #1
   86900:	f018 0f03 	tst.w	r8, #3
   86904:	f10c 0c08 	add.w	ip, ip, #8
   86908:	f47f ae93 	bne.w	86632 <_malloc_r+0xee>
   8690c:	e02d      	b.n	8696a <_malloc_r+0x426>
   8690e:	68dc      	ldr	r4, [r3, #12]
   86910:	42a3      	cmp	r3, r4
   86912:	bf08      	it	eq
   86914:	3002      	addeq	r0, #2
   86916:	f43f ae4b 	beq.w	865b0 <_malloc_r+0x6c>
   8691a:	e6c9      	b.n	866b0 <_malloc_r+0x16c>
   8691c:	461c      	mov	r4, r3
   8691e:	4419      	add	r1, r3
   86920:	684a      	ldr	r2, [r1, #4]
   86922:	68db      	ldr	r3, [r3, #12]
   86924:	f854 6f08 	ldr.w	r6, [r4, #8]!
   86928:	f042 0201 	orr.w	r2, r2, #1
   8692c:	604a      	str	r2, [r1, #4]
   8692e:	4628      	mov	r0, r5
   86930:	60f3      	str	r3, [r6, #12]
   86932:	609e      	str	r6, [r3, #8]
   86934:	f000 f980 	bl	86c38 <__malloc_unlock>
   86938:	e6ca      	b.n	866d0 <_malloc_r+0x18c>
   8693a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8693e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   86942:	00c1      	lsls	r1, r0, #3
   86944:	e620      	b.n	86588 <_malloc_r+0x44>
   86946:	099a      	lsrs	r2, r3, #6
   86948:	f102 0139 	add.w	r1, r2, #57	; 0x39
   8694c:	00c9      	lsls	r1, r1, #3
   8694e:	3238      	adds	r2, #56	; 0x38
   86950:	e7a4      	b.n	8689c <_malloc_r+0x358>
   86952:	42bc      	cmp	r4, r7
   86954:	d054      	beq.n	86a00 <_malloc_r+0x4bc>
   86956:	68bc      	ldr	r4, [r7, #8]
   86958:	6862      	ldr	r2, [r4, #4]
   8695a:	f022 0203 	bic.w	r2, r2, #3
   8695e:	e75e      	b.n	8681e <_malloc_r+0x2da>
   86960:	f859 3908 	ldr.w	r3, [r9], #-8
   86964:	4599      	cmp	r9, r3
   86966:	f040 8086 	bne.w	86a76 <_malloc_r+0x532>
   8696a:	f010 0f03 	tst.w	r0, #3
   8696e:	f100 30ff 	add.w	r0, r0, #4294967295
   86972:	d1f5      	bne.n	86960 <_malloc_r+0x41c>
   86974:	687b      	ldr	r3, [r7, #4]
   86976:	ea23 0304 	bic.w	r3, r3, r4
   8697a:	607b      	str	r3, [r7, #4]
   8697c:	0064      	lsls	r4, r4, #1
   8697e:	429c      	cmp	r4, r3
   86980:	f63f aec8 	bhi.w	86714 <_malloc_r+0x1d0>
   86984:	2c00      	cmp	r4, #0
   86986:	f43f aec5 	beq.w	86714 <_malloc_r+0x1d0>
   8698a:	421c      	tst	r4, r3
   8698c:	4640      	mov	r0, r8
   8698e:	f47f ae4c 	bne.w	8662a <_malloc_r+0xe6>
   86992:	0064      	lsls	r4, r4, #1
   86994:	421c      	tst	r4, r3
   86996:	f100 0004 	add.w	r0, r0, #4
   8699a:	d0fa      	beq.n	86992 <_malloc_r+0x44e>
   8699c:	e645      	b.n	8662a <_malloc_r+0xe6>
   8699e:	468c      	mov	ip, r1
   869a0:	e78c      	b.n	868bc <_malloc_r+0x378>
   869a2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   869a6:	d815      	bhi.n	869d4 <_malloc_r+0x490>
   869a8:	0bf3      	lsrs	r3, r6, #15
   869aa:	f103 0078 	add.w	r0, r3, #120	; 0x78
   869ae:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   869b2:	00c1      	lsls	r1, r0, #3
   869b4:	e5e8      	b.n	86588 <_malloc_r+0x44>
   869b6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   869ba:	e6ee      	b.n	8679a <_malloc_r+0x256>
   869bc:	2101      	movs	r1, #1
   869be:	687b      	ldr	r3, [r7, #4]
   869c0:	1092      	asrs	r2, r2, #2
   869c2:	fa01 f202 	lsl.w	r2, r1, r2
   869c6:	431a      	orrs	r2, r3
   869c8:	607a      	str	r2, [r7, #4]
   869ca:	4663      	mov	r3, ip
   869cc:	e779      	b.n	868c2 <_malloc_r+0x37e>
   869ce:	2301      	movs	r3, #1
   869d0:	6053      	str	r3, [r2, #4]
   869d2:	e72a      	b.n	8682a <_malloc_r+0x2e6>
   869d4:	f240 5254 	movw	r2, #1364	; 0x554
   869d8:	4293      	cmp	r3, r2
   869da:	d822      	bhi.n	86a22 <_malloc_r+0x4de>
   869dc:	0cb3      	lsrs	r3, r6, #18
   869de:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   869e2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   869e6:	00c1      	lsls	r1, r0, #3
   869e8:	e5ce      	b.n	86588 <_malloc_r+0x44>
   869ea:	f103 0b10 	add.w	fp, r3, #16
   869ee:	e6af      	b.n	86750 <_malloc_r+0x20c>
   869f0:	2a54      	cmp	r2, #84	; 0x54
   869f2:	d829      	bhi.n	86a48 <_malloc_r+0x504>
   869f4:	0b1a      	lsrs	r2, r3, #12
   869f6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   869fa:	00c9      	lsls	r1, r1, #3
   869fc:	326e      	adds	r2, #110	; 0x6e
   869fe:	e74d      	b.n	8689c <_malloc_r+0x358>
   86a00:	4b20      	ldr	r3, [pc, #128]	; (86a84 <_malloc_r+0x540>)
   86a02:	6819      	ldr	r1, [r3, #0]
   86a04:	4459      	add	r1, fp
   86a06:	6019      	str	r1, [r3, #0]
   86a08:	e6b3      	b.n	86772 <_malloc_r+0x22e>
   86a0a:	f3ca 000b 	ubfx	r0, sl, #0, #12
   86a0e:	2800      	cmp	r0, #0
   86a10:	f47f aeaf 	bne.w	86772 <_malloc_r+0x22e>
   86a14:	eb08 030b 	add.w	r3, r8, fp
   86a18:	68ba      	ldr	r2, [r7, #8]
   86a1a:	f043 0301 	orr.w	r3, r3, #1
   86a1e:	6053      	str	r3, [r2, #4]
   86a20:	e6ef      	b.n	86802 <_malloc_r+0x2be>
   86a22:	207f      	movs	r0, #127	; 0x7f
   86a24:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   86a28:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   86a2c:	e5ac      	b.n	86588 <_malloc_r+0x44>
   86a2e:	f104 0108 	add.w	r1, r4, #8
   86a32:	4628      	mov	r0, r5
   86a34:	9300      	str	r3, [sp, #0]
   86a36:	f000 fd7f 	bl	87538 <_free_r>
   86a3a:	9b00      	ldr	r3, [sp, #0]
   86a3c:	6819      	ldr	r1, [r3, #0]
   86a3e:	e6e0      	b.n	86802 <_malloc_r+0x2be>
   86a40:	2001      	movs	r0, #1
   86a42:	f04f 0900 	mov.w	r9, #0
   86a46:	e6bd      	b.n	867c4 <_malloc_r+0x280>
   86a48:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   86a4c:	d805      	bhi.n	86a5a <_malloc_r+0x516>
   86a4e:	0bda      	lsrs	r2, r3, #15
   86a50:	f102 0178 	add.w	r1, r2, #120	; 0x78
   86a54:	00c9      	lsls	r1, r1, #3
   86a56:	3277      	adds	r2, #119	; 0x77
   86a58:	e720      	b.n	8689c <_malloc_r+0x358>
   86a5a:	f240 5154 	movw	r1, #1364	; 0x554
   86a5e:	428a      	cmp	r2, r1
   86a60:	d805      	bhi.n	86a6e <_malloc_r+0x52a>
   86a62:	0c9a      	lsrs	r2, r3, #18
   86a64:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   86a68:	00c9      	lsls	r1, r1, #3
   86a6a:	327c      	adds	r2, #124	; 0x7c
   86a6c:	e716      	b.n	8689c <_malloc_r+0x358>
   86a6e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   86a72:	227e      	movs	r2, #126	; 0x7e
   86a74:	e712      	b.n	8689c <_malloc_r+0x358>
   86a76:	687b      	ldr	r3, [r7, #4]
   86a78:	e780      	b.n	8697c <_malloc_r+0x438>
   86a7a:	08f0      	lsrs	r0, r6, #3
   86a7c:	f106 0308 	add.w	r3, r6, #8
   86a80:	e60e      	b.n	866a0 <_malloc_r+0x15c>
   86a82:	bf00      	nop
   86a84:	20001080 	.word	0x20001080

00086a88 <__ascii_mbtowc>:
   86a88:	b082      	sub	sp, #8
   86a8a:	b149      	cbz	r1, 86aa0 <__ascii_mbtowc+0x18>
   86a8c:	b15a      	cbz	r2, 86aa6 <__ascii_mbtowc+0x1e>
   86a8e:	b16b      	cbz	r3, 86aac <__ascii_mbtowc+0x24>
   86a90:	7813      	ldrb	r3, [r2, #0]
   86a92:	600b      	str	r3, [r1, #0]
   86a94:	7812      	ldrb	r2, [r2, #0]
   86a96:	1c10      	adds	r0, r2, #0
   86a98:	bf18      	it	ne
   86a9a:	2001      	movne	r0, #1
   86a9c:	b002      	add	sp, #8
   86a9e:	4770      	bx	lr
   86aa0:	a901      	add	r1, sp, #4
   86aa2:	2a00      	cmp	r2, #0
   86aa4:	d1f3      	bne.n	86a8e <__ascii_mbtowc+0x6>
   86aa6:	4610      	mov	r0, r2
   86aa8:	b002      	add	sp, #8
   86aaa:	4770      	bx	lr
   86aac:	f06f 0001 	mvn.w	r0, #1
   86ab0:	e7f4      	b.n	86a9c <__ascii_mbtowc+0x14>
   86ab2:	bf00      	nop

00086ab4 <memchr>:
   86ab4:	0783      	lsls	r3, r0, #30
   86ab6:	b470      	push	{r4, r5, r6}
   86ab8:	b2cd      	uxtb	r5, r1
   86aba:	d03d      	beq.n	86b38 <memchr+0x84>
   86abc:	1e54      	subs	r4, r2, #1
   86abe:	b30a      	cbz	r2, 86b04 <memchr+0x50>
   86ac0:	7803      	ldrb	r3, [r0, #0]
   86ac2:	42ab      	cmp	r3, r5
   86ac4:	d01f      	beq.n	86b06 <memchr+0x52>
   86ac6:	1c43      	adds	r3, r0, #1
   86ac8:	e005      	b.n	86ad6 <memchr+0x22>
   86aca:	f114 34ff 	adds.w	r4, r4, #4294967295
   86ace:	d319      	bcc.n	86b04 <memchr+0x50>
   86ad0:	7802      	ldrb	r2, [r0, #0]
   86ad2:	42aa      	cmp	r2, r5
   86ad4:	d017      	beq.n	86b06 <memchr+0x52>
   86ad6:	f013 0f03 	tst.w	r3, #3
   86ada:	4618      	mov	r0, r3
   86adc:	f103 0301 	add.w	r3, r3, #1
   86ae0:	d1f3      	bne.n	86aca <memchr+0x16>
   86ae2:	2c03      	cmp	r4, #3
   86ae4:	d811      	bhi.n	86b0a <memchr+0x56>
   86ae6:	b34c      	cbz	r4, 86b3c <memchr+0x88>
   86ae8:	7803      	ldrb	r3, [r0, #0]
   86aea:	42ab      	cmp	r3, r5
   86aec:	d00b      	beq.n	86b06 <memchr+0x52>
   86aee:	4404      	add	r4, r0
   86af0:	1c43      	adds	r3, r0, #1
   86af2:	e002      	b.n	86afa <memchr+0x46>
   86af4:	7802      	ldrb	r2, [r0, #0]
   86af6:	42aa      	cmp	r2, r5
   86af8:	d005      	beq.n	86b06 <memchr+0x52>
   86afa:	429c      	cmp	r4, r3
   86afc:	4618      	mov	r0, r3
   86afe:	f103 0301 	add.w	r3, r3, #1
   86b02:	d1f7      	bne.n	86af4 <memchr+0x40>
   86b04:	2000      	movs	r0, #0
   86b06:	bc70      	pop	{r4, r5, r6}
   86b08:	4770      	bx	lr
   86b0a:	0209      	lsls	r1, r1, #8
   86b0c:	b289      	uxth	r1, r1
   86b0e:	4329      	orrs	r1, r5
   86b10:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   86b14:	6803      	ldr	r3, [r0, #0]
   86b16:	4606      	mov	r6, r0
   86b18:	404b      	eors	r3, r1
   86b1a:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   86b1e:	ea22 0303 	bic.w	r3, r2, r3
   86b22:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   86b26:	f100 0004 	add.w	r0, r0, #4
   86b2a:	d103      	bne.n	86b34 <memchr+0x80>
   86b2c:	3c04      	subs	r4, #4
   86b2e:	2c03      	cmp	r4, #3
   86b30:	d8f0      	bhi.n	86b14 <memchr+0x60>
   86b32:	e7d8      	b.n	86ae6 <memchr+0x32>
   86b34:	4630      	mov	r0, r6
   86b36:	e7d7      	b.n	86ae8 <memchr+0x34>
   86b38:	4614      	mov	r4, r2
   86b3a:	e7d2      	b.n	86ae2 <memchr+0x2e>
   86b3c:	4620      	mov	r0, r4
   86b3e:	e7e2      	b.n	86b06 <memchr+0x52>

00086b40 <memcpy>:
   86b40:	4684      	mov	ip, r0
   86b42:	ea41 0300 	orr.w	r3, r1, r0
   86b46:	f013 0303 	ands.w	r3, r3, #3
   86b4a:	d149      	bne.n	86be0 <memcpy+0xa0>
   86b4c:	3a40      	subs	r2, #64	; 0x40
   86b4e:	d323      	bcc.n	86b98 <memcpy+0x58>
   86b50:	680b      	ldr	r3, [r1, #0]
   86b52:	6003      	str	r3, [r0, #0]
   86b54:	684b      	ldr	r3, [r1, #4]
   86b56:	6043      	str	r3, [r0, #4]
   86b58:	688b      	ldr	r3, [r1, #8]
   86b5a:	6083      	str	r3, [r0, #8]
   86b5c:	68cb      	ldr	r3, [r1, #12]
   86b5e:	60c3      	str	r3, [r0, #12]
   86b60:	690b      	ldr	r3, [r1, #16]
   86b62:	6103      	str	r3, [r0, #16]
   86b64:	694b      	ldr	r3, [r1, #20]
   86b66:	6143      	str	r3, [r0, #20]
   86b68:	698b      	ldr	r3, [r1, #24]
   86b6a:	6183      	str	r3, [r0, #24]
   86b6c:	69cb      	ldr	r3, [r1, #28]
   86b6e:	61c3      	str	r3, [r0, #28]
   86b70:	6a0b      	ldr	r3, [r1, #32]
   86b72:	6203      	str	r3, [r0, #32]
   86b74:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86b76:	6243      	str	r3, [r0, #36]	; 0x24
   86b78:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   86b7a:	6283      	str	r3, [r0, #40]	; 0x28
   86b7c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   86b7e:	62c3      	str	r3, [r0, #44]	; 0x2c
   86b80:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   86b82:	6303      	str	r3, [r0, #48]	; 0x30
   86b84:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   86b86:	6343      	str	r3, [r0, #52]	; 0x34
   86b88:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   86b8a:	6383      	str	r3, [r0, #56]	; 0x38
   86b8c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   86b8e:	63c3      	str	r3, [r0, #60]	; 0x3c
   86b90:	3040      	adds	r0, #64	; 0x40
   86b92:	3140      	adds	r1, #64	; 0x40
   86b94:	3a40      	subs	r2, #64	; 0x40
   86b96:	d2db      	bcs.n	86b50 <memcpy+0x10>
   86b98:	3230      	adds	r2, #48	; 0x30
   86b9a:	d30b      	bcc.n	86bb4 <memcpy+0x74>
   86b9c:	680b      	ldr	r3, [r1, #0]
   86b9e:	6003      	str	r3, [r0, #0]
   86ba0:	684b      	ldr	r3, [r1, #4]
   86ba2:	6043      	str	r3, [r0, #4]
   86ba4:	688b      	ldr	r3, [r1, #8]
   86ba6:	6083      	str	r3, [r0, #8]
   86ba8:	68cb      	ldr	r3, [r1, #12]
   86baa:	60c3      	str	r3, [r0, #12]
   86bac:	3010      	adds	r0, #16
   86bae:	3110      	adds	r1, #16
   86bb0:	3a10      	subs	r2, #16
   86bb2:	d2f3      	bcs.n	86b9c <memcpy+0x5c>
   86bb4:	320c      	adds	r2, #12
   86bb6:	d305      	bcc.n	86bc4 <memcpy+0x84>
   86bb8:	f851 3b04 	ldr.w	r3, [r1], #4
   86bbc:	f840 3b04 	str.w	r3, [r0], #4
   86bc0:	3a04      	subs	r2, #4
   86bc2:	d2f9      	bcs.n	86bb8 <memcpy+0x78>
   86bc4:	3204      	adds	r2, #4
   86bc6:	d008      	beq.n	86bda <memcpy+0x9a>
   86bc8:	07d2      	lsls	r2, r2, #31
   86bca:	bf1c      	itt	ne
   86bcc:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86bd0:	f800 3b01 	strbne.w	r3, [r0], #1
   86bd4:	d301      	bcc.n	86bda <memcpy+0x9a>
   86bd6:	880b      	ldrh	r3, [r1, #0]
   86bd8:	8003      	strh	r3, [r0, #0]
   86bda:	4660      	mov	r0, ip
   86bdc:	4770      	bx	lr
   86bde:	bf00      	nop
   86be0:	2a08      	cmp	r2, #8
   86be2:	d313      	bcc.n	86c0c <memcpy+0xcc>
   86be4:	078b      	lsls	r3, r1, #30
   86be6:	d0b1      	beq.n	86b4c <memcpy+0xc>
   86be8:	f010 0303 	ands.w	r3, r0, #3
   86bec:	d0ae      	beq.n	86b4c <memcpy+0xc>
   86bee:	f1c3 0304 	rsb	r3, r3, #4
   86bf2:	1ad2      	subs	r2, r2, r3
   86bf4:	07db      	lsls	r3, r3, #31
   86bf6:	bf1c      	itt	ne
   86bf8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86bfc:	f800 3b01 	strbne.w	r3, [r0], #1
   86c00:	d3a4      	bcc.n	86b4c <memcpy+0xc>
   86c02:	f831 3b02 	ldrh.w	r3, [r1], #2
   86c06:	f820 3b02 	strh.w	r3, [r0], #2
   86c0a:	e79f      	b.n	86b4c <memcpy+0xc>
   86c0c:	3a04      	subs	r2, #4
   86c0e:	d3d9      	bcc.n	86bc4 <memcpy+0x84>
   86c10:	3a01      	subs	r2, #1
   86c12:	f811 3b01 	ldrb.w	r3, [r1], #1
   86c16:	f800 3b01 	strb.w	r3, [r0], #1
   86c1a:	d2f9      	bcs.n	86c10 <memcpy+0xd0>
   86c1c:	780b      	ldrb	r3, [r1, #0]
   86c1e:	7003      	strb	r3, [r0, #0]
   86c20:	784b      	ldrb	r3, [r1, #1]
   86c22:	7043      	strb	r3, [r0, #1]
   86c24:	788b      	ldrb	r3, [r1, #2]
   86c26:	7083      	strb	r3, [r0, #2]
   86c28:	4660      	mov	r0, ip
   86c2a:	4770      	bx	lr

00086c2c <__malloc_lock>:
   86c2c:	4801      	ldr	r0, [pc, #4]	; (86c34 <__malloc_lock+0x8>)
   86c2e:	f7ff bc85 	b.w	8653c <__retarget_lock_acquire_recursive>
   86c32:	bf00      	nop
   86c34:	20001848 	.word	0x20001848

00086c38 <__malloc_unlock>:
   86c38:	4801      	ldr	r0, [pc, #4]	; (86c40 <__malloc_unlock+0x8>)
   86c3a:	f7ff bc81 	b.w	86540 <__retarget_lock_release_recursive>
   86c3e:	bf00      	nop
   86c40:	20001848 	.word	0x20001848

00086c44 <_Balloc>:
   86c44:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86c46:	b570      	push	{r4, r5, r6, lr}
   86c48:	4605      	mov	r5, r0
   86c4a:	460c      	mov	r4, r1
   86c4c:	b14b      	cbz	r3, 86c62 <_Balloc+0x1e>
   86c4e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   86c52:	b180      	cbz	r0, 86c76 <_Balloc+0x32>
   86c54:	6802      	ldr	r2, [r0, #0]
   86c56:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   86c5a:	2300      	movs	r3, #0
   86c5c:	6103      	str	r3, [r0, #16]
   86c5e:	60c3      	str	r3, [r0, #12]
   86c60:	bd70      	pop	{r4, r5, r6, pc}
   86c62:	2221      	movs	r2, #33	; 0x21
   86c64:	2104      	movs	r1, #4
   86c66:	f000 fbe7 	bl	87438 <_calloc_r>
   86c6a:	64e8      	str	r0, [r5, #76]	; 0x4c
   86c6c:	4603      	mov	r3, r0
   86c6e:	2800      	cmp	r0, #0
   86c70:	d1ed      	bne.n	86c4e <_Balloc+0xa>
   86c72:	2000      	movs	r0, #0
   86c74:	bd70      	pop	{r4, r5, r6, pc}
   86c76:	2101      	movs	r1, #1
   86c78:	fa01 f604 	lsl.w	r6, r1, r4
   86c7c:	1d72      	adds	r2, r6, #5
   86c7e:	4628      	mov	r0, r5
   86c80:	0092      	lsls	r2, r2, #2
   86c82:	f000 fbd9 	bl	87438 <_calloc_r>
   86c86:	2800      	cmp	r0, #0
   86c88:	d0f3      	beq.n	86c72 <_Balloc+0x2e>
   86c8a:	6044      	str	r4, [r0, #4]
   86c8c:	6086      	str	r6, [r0, #8]
   86c8e:	e7e4      	b.n	86c5a <_Balloc+0x16>

00086c90 <_Bfree>:
   86c90:	b131      	cbz	r1, 86ca0 <_Bfree+0x10>
   86c92:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86c94:	684a      	ldr	r2, [r1, #4]
   86c96:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   86c9a:	6008      	str	r0, [r1, #0]
   86c9c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   86ca0:	4770      	bx	lr
   86ca2:	bf00      	nop

00086ca4 <__multadd>:
   86ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
   86ca6:	460c      	mov	r4, r1
   86ca8:	4605      	mov	r5, r0
   86caa:	f04f 0e00 	mov.w	lr, #0
   86cae:	690e      	ldr	r6, [r1, #16]
   86cb0:	b083      	sub	sp, #12
   86cb2:	f101 0714 	add.w	r7, r1, #20
   86cb6:	6838      	ldr	r0, [r7, #0]
   86cb8:	f10e 0e01 	add.w	lr, lr, #1
   86cbc:	b281      	uxth	r1, r0
   86cbe:	fb02 3301 	mla	r3, r2, r1, r3
   86cc2:	0c01      	lsrs	r1, r0, #16
   86cc4:	0c18      	lsrs	r0, r3, #16
   86cc6:	fb02 0101 	mla	r1, r2, r1, r0
   86cca:	b29b      	uxth	r3, r3
   86ccc:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   86cd0:	4576      	cmp	r6, lr
   86cd2:	f847 3b04 	str.w	r3, [r7], #4
   86cd6:	ea4f 4311 	mov.w	r3, r1, lsr #16
   86cda:	dcec      	bgt.n	86cb6 <__multadd+0x12>
   86cdc:	b13b      	cbz	r3, 86cee <__multadd+0x4a>
   86cde:	68a2      	ldr	r2, [r4, #8]
   86ce0:	4296      	cmp	r6, r2
   86ce2:	da07      	bge.n	86cf4 <__multadd+0x50>
   86ce4:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   86ce8:	3601      	adds	r6, #1
   86cea:	6153      	str	r3, [r2, #20]
   86cec:	6126      	str	r6, [r4, #16]
   86cee:	4620      	mov	r0, r4
   86cf0:	b003      	add	sp, #12
   86cf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86cf4:	6861      	ldr	r1, [r4, #4]
   86cf6:	4628      	mov	r0, r5
   86cf8:	3101      	adds	r1, #1
   86cfa:	9301      	str	r3, [sp, #4]
   86cfc:	f7ff ffa2 	bl	86c44 <_Balloc>
   86d00:	4607      	mov	r7, r0
   86d02:	6922      	ldr	r2, [r4, #16]
   86d04:	f104 010c 	add.w	r1, r4, #12
   86d08:	3202      	adds	r2, #2
   86d0a:	0092      	lsls	r2, r2, #2
   86d0c:	300c      	adds	r0, #12
   86d0e:	f7ff ff17 	bl	86b40 <memcpy>
   86d12:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   86d14:	6861      	ldr	r1, [r4, #4]
   86d16:	9b01      	ldr	r3, [sp, #4]
   86d18:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   86d1c:	6020      	str	r0, [r4, #0]
   86d1e:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   86d22:	463c      	mov	r4, r7
   86d24:	e7de      	b.n	86ce4 <__multadd+0x40>
   86d26:	bf00      	nop

00086d28 <__hi0bits>:
   86d28:	0c02      	lsrs	r2, r0, #16
   86d2a:	0412      	lsls	r2, r2, #16
   86d2c:	4603      	mov	r3, r0
   86d2e:	b9b2      	cbnz	r2, 86d5e <__hi0bits+0x36>
   86d30:	0403      	lsls	r3, r0, #16
   86d32:	2010      	movs	r0, #16
   86d34:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   86d38:	bf04      	itt	eq
   86d3a:	021b      	lsleq	r3, r3, #8
   86d3c:	3008      	addeq	r0, #8
   86d3e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   86d42:	bf04      	itt	eq
   86d44:	011b      	lsleq	r3, r3, #4
   86d46:	3004      	addeq	r0, #4
   86d48:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   86d4c:	bf04      	itt	eq
   86d4e:	009b      	lsleq	r3, r3, #2
   86d50:	3002      	addeq	r0, #2
   86d52:	2b00      	cmp	r3, #0
   86d54:	db02      	blt.n	86d5c <__hi0bits+0x34>
   86d56:	005b      	lsls	r3, r3, #1
   86d58:	d403      	bmi.n	86d62 <__hi0bits+0x3a>
   86d5a:	2020      	movs	r0, #32
   86d5c:	4770      	bx	lr
   86d5e:	2000      	movs	r0, #0
   86d60:	e7e8      	b.n	86d34 <__hi0bits+0xc>
   86d62:	3001      	adds	r0, #1
   86d64:	4770      	bx	lr
   86d66:	bf00      	nop

00086d68 <__lo0bits>:
   86d68:	6803      	ldr	r3, [r0, #0]
   86d6a:	4601      	mov	r1, r0
   86d6c:	f013 0207 	ands.w	r2, r3, #7
   86d70:	d007      	beq.n	86d82 <__lo0bits+0x1a>
   86d72:	07da      	lsls	r2, r3, #31
   86d74:	d421      	bmi.n	86dba <__lo0bits+0x52>
   86d76:	0798      	lsls	r0, r3, #30
   86d78:	d421      	bmi.n	86dbe <__lo0bits+0x56>
   86d7a:	089b      	lsrs	r3, r3, #2
   86d7c:	600b      	str	r3, [r1, #0]
   86d7e:	2002      	movs	r0, #2
   86d80:	4770      	bx	lr
   86d82:	b298      	uxth	r0, r3
   86d84:	b198      	cbz	r0, 86dae <__lo0bits+0x46>
   86d86:	4610      	mov	r0, r2
   86d88:	f013 0fff 	tst.w	r3, #255	; 0xff
   86d8c:	bf04      	itt	eq
   86d8e:	0a1b      	lsreq	r3, r3, #8
   86d90:	3008      	addeq	r0, #8
   86d92:	071a      	lsls	r2, r3, #28
   86d94:	bf04      	itt	eq
   86d96:	091b      	lsreq	r3, r3, #4
   86d98:	3004      	addeq	r0, #4
   86d9a:	079a      	lsls	r2, r3, #30
   86d9c:	bf04      	itt	eq
   86d9e:	089b      	lsreq	r3, r3, #2
   86da0:	3002      	addeq	r0, #2
   86da2:	07da      	lsls	r2, r3, #31
   86da4:	d407      	bmi.n	86db6 <__lo0bits+0x4e>
   86da6:	085b      	lsrs	r3, r3, #1
   86da8:	d104      	bne.n	86db4 <__lo0bits+0x4c>
   86daa:	2020      	movs	r0, #32
   86dac:	4770      	bx	lr
   86dae:	0c1b      	lsrs	r3, r3, #16
   86db0:	2010      	movs	r0, #16
   86db2:	e7e9      	b.n	86d88 <__lo0bits+0x20>
   86db4:	3001      	adds	r0, #1
   86db6:	600b      	str	r3, [r1, #0]
   86db8:	4770      	bx	lr
   86dba:	2000      	movs	r0, #0
   86dbc:	4770      	bx	lr
   86dbe:	085b      	lsrs	r3, r3, #1
   86dc0:	600b      	str	r3, [r1, #0]
   86dc2:	2001      	movs	r0, #1
   86dc4:	4770      	bx	lr
   86dc6:	bf00      	nop

00086dc8 <__i2b>:
   86dc8:	b510      	push	{r4, lr}
   86dca:	460c      	mov	r4, r1
   86dcc:	2101      	movs	r1, #1
   86dce:	f7ff ff39 	bl	86c44 <_Balloc>
   86dd2:	2201      	movs	r2, #1
   86dd4:	6144      	str	r4, [r0, #20]
   86dd6:	6102      	str	r2, [r0, #16]
   86dd8:	bd10      	pop	{r4, pc}
   86dda:	bf00      	nop

00086ddc <__multiply>:
   86ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86de0:	690c      	ldr	r4, [r1, #16]
   86de2:	6915      	ldr	r5, [r2, #16]
   86de4:	b083      	sub	sp, #12
   86de6:	42ac      	cmp	r4, r5
   86de8:	468b      	mov	fp, r1
   86dea:	4616      	mov	r6, r2
   86dec:	da04      	bge.n	86df8 <__multiply+0x1c>
   86dee:	4622      	mov	r2, r4
   86df0:	46b3      	mov	fp, r6
   86df2:	462c      	mov	r4, r5
   86df4:	460e      	mov	r6, r1
   86df6:	4615      	mov	r5, r2
   86df8:	f8db 3008 	ldr.w	r3, [fp, #8]
   86dfc:	eb04 0805 	add.w	r8, r4, r5
   86e00:	f8db 1004 	ldr.w	r1, [fp, #4]
   86e04:	4598      	cmp	r8, r3
   86e06:	bfc8      	it	gt
   86e08:	3101      	addgt	r1, #1
   86e0a:	f7ff ff1b 	bl	86c44 <_Balloc>
   86e0e:	f100 0914 	add.w	r9, r0, #20
   86e12:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   86e16:	45d1      	cmp	r9, sl
   86e18:	9000      	str	r0, [sp, #0]
   86e1a:	d205      	bcs.n	86e28 <__multiply+0x4c>
   86e1c:	464b      	mov	r3, r9
   86e1e:	2100      	movs	r1, #0
   86e20:	f843 1b04 	str.w	r1, [r3], #4
   86e24:	459a      	cmp	sl, r3
   86e26:	d8fb      	bhi.n	86e20 <__multiply+0x44>
   86e28:	f106 0c14 	add.w	ip, r6, #20
   86e2c:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   86e30:	f10b 0b14 	add.w	fp, fp, #20
   86e34:	459c      	cmp	ip, r3
   86e36:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   86e3a:	d24b      	bcs.n	86ed4 <__multiply+0xf8>
   86e3c:	f8cd a004 	str.w	sl, [sp, #4]
   86e40:	469a      	mov	sl, r3
   86e42:	f8dc 5000 	ldr.w	r5, [ip]
   86e46:	b2af      	uxth	r7, r5
   86e48:	b1e7      	cbz	r7, 86e84 <__multiply+0xa8>
   86e4a:	464d      	mov	r5, r9
   86e4c:	465e      	mov	r6, fp
   86e4e:	2100      	movs	r1, #0
   86e50:	f856 2b04 	ldr.w	r2, [r6], #4
   86e54:	6828      	ldr	r0, [r5, #0]
   86e56:	b293      	uxth	r3, r2
   86e58:	b284      	uxth	r4, r0
   86e5a:	0c12      	lsrs	r2, r2, #16
   86e5c:	fb07 4303 	mla	r3, r7, r3, r4
   86e60:	0c00      	lsrs	r0, r0, #16
   86e62:	fb07 0202 	mla	r2, r7, r2, r0
   86e66:	440b      	add	r3, r1
   86e68:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   86e6c:	b29b      	uxth	r3, r3
   86e6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   86e72:	45b6      	cmp	lr, r6
   86e74:	f845 3b04 	str.w	r3, [r5], #4
   86e78:	ea4f 4111 	mov.w	r1, r1, lsr #16
   86e7c:	d8e8      	bhi.n	86e50 <__multiply+0x74>
   86e7e:	6029      	str	r1, [r5, #0]
   86e80:	f8dc 5000 	ldr.w	r5, [ip]
   86e84:	0c2d      	lsrs	r5, r5, #16
   86e86:	d01d      	beq.n	86ec4 <__multiply+0xe8>
   86e88:	f8d9 3000 	ldr.w	r3, [r9]
   86e8c:	4648      	mov	r0, r9
   86e8e:	461c      	mov	r4, r3
   86e90:	4659      	mov	r1, fp
   86e92:	2200      	movs	r2, #0
   86e94:	880e      	ldrh	r6, [r1, #0]
   86e96:	0c24      	lsrs	r4, r4, #16
   86e98:	fb05 4406 	mla	r4, r5, r6, r4
   86e9c:	b29b      	uxth	r3, r3
   86e9e:	4422      	add	r2, r4
   86ea0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   86ea4:	f840 3b04 	str.w	r3, [r0], #4
   86ea8:	f851 3b04 	ldr.w	r3, [r1], #4
   86eac:	6804      	ldr	r4, [r0, #0]
   86eae:	0c1b      	lsrs	r3, r3, #16
   86eb0:	b2a6      	uxth	r6, r4
   86eb2:	fb05 6303 	mla	r3, r5, r3, r6
   86eb6:	458e      	cmp	lr, r1
   86eb8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   86ebc:	ea4f 4213 	mov.w	r2, r3, lsr #16
   86ec0:	d8e8      	bhi.n	86e94 <__multiply+0xb8>
   86ec2:	6003      	str	r3, [r0, #0]
   86ec4:	f10c 0c04 	add.w	ip, ip, #4
   86ec8:	45e2      	cmp	sl, ip
   86eca:	f109 0904 	add.w	r9, r9, #4
   86ece:	d8b8      	bhi.n	86e42 <__multiply+0x66>
   86ed0:	f8dd a004 	ldr.w	sl, [sp, #4]
   86ed4:	f1b8 0f00 	cmp.w	r8, #0
   86ed8:	dd0b      	ble.n	86ef2 <__multiply+0x116>
   86eda:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   86ede:	f1aa 0a04 	sub.w	sl, sl, #4
   86ee2:	b11b      	cbz	r3, 86eec <__multiply+0x110>
   86ee4:	e005      	b.n	86ef2 <__multiply+0x116>
   86ee6:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   86eea:	b913      	cbnz	r3, 86ef2 <__multiply+0x116>
   86eec:	f1b8 0801 	subs.w	r8, r8, #1
   86ef0:	d1f9      	bne.n	86ee6 <__multiply+0x10a>
   86ef2:	9800      	ldr	r0, [sp, #0]
   86ef4:	f8c0 8010 	str.w	r8, [r0, #16]
   86ef8:	b003      	add	sp, #12
   86efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86efe:	bf00      	nop

00086f00 <__pow5mult>:
   86f00:	f012 0303 	ands.w	r3, r2, #3
   86f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86f08:	4614      	mov	r4, r2
   86f0a:	4607      	mov	r7, r0
   86f0c:	d12e      	bne.n	86f6c <__pow5mult+0x6c>
   86f0e:	460d      	mov	r5, r1
   86f10:	10a4      	asrs	r4, r4, #2
   86f12:	d01c      	beq.n	86f4e <__pow5mult+0x4e>
   86f14:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   86f16:	b396      	cbz	r6, 86f7e <__pow5mult+0x7e>
   86f18:	07e3      	lsls	r3, r4, #31
   86f1a:	f04f 0800 	mov.w	r8, #0
   86f1e:	d406      	bmi.n	86f2e <__pow5mult+0x2e>
   86f20:	1064      	asrs	r4, r4, #1
   86f22:	d014      	beq.n	86f4e <__pow5mult+0x4e>
   86f24:	6830      	ldr	r0, [r6, #0]
   86f26:	b1a8      	cbz	r0, 86f54 <__pow5mult+0x54>
   86f28:	4606      	mov	r6, r0
   86f2a:	07e3      	lsls	r3, r4, #31
   86f2c:	d5f8      	bpl.n	86f20 <__pow5mult+0x20>
   86f2e:	4632      	mov	r2, r6
   86f30:	4629      	mov	r1, r5
   86f32:	4638      	mov	r0, r7
   86f34:	f7ff ff52 	bl	86ddc <__multiply>
   86f38:	b1b5      	cbz	r5, 86f68 <__pow5mult+0x68>
   86f3a:	686a      	ldr	r2, [r5, #4]
   86f3c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   86f3e:	1064      	asrs	r4, r4, #1
   86f40:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   86f44:	6029      	str	r1, [r5, #0]
   86f46:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   86f4a:	4605      	mov	r5, r0
   86f4c:	d1ea      	bne.n	86f24 <__pow5mult+0x24>
   86f4e:	4628      	mov	r0, r5
   86f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   86f54:	4632      	mov	r2, r6
   86f56:	4631      	mov	r1, r6
   86f58:	4638      	mov	r0, r7
   86f5a:	f7ff ff3f 	bl	86ddc <__multiply>
   86f5e:	6030      	str	r0, [r6, #0]
   86f60:	f8c0 8000 	str.w	r8, [r0]
   86f64:	4606      	mov	r6, r0
   86f66:	e7e0      	b.n	86f2a <__pow5mult+0x2a>
   86f68:	4605      	mov	r5, r0
   86f6a:	e7d9      	b.n	86f20 <__pow5mult+0x20>
   86f6c:	4a0b      	ldr	r2, [pc, #44]	; (86f9c <__pow5mult+0x9c>)
   86f6e:	3b01      	subs	r3, #1
   86f70:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   86f74:	2300      	movs	r3, #0
   86f76:	f7ff fe95 	bl	86ca4 <__multadd>
   86f7a:	4605      	mov	r5, r0
   86f7c:	e7c8      	b.n	86f10 <__pow5mult+0x10>
   86f7e:	2101      	movs	r1, #1
   86f80:	4638      	mov	r0, r7
   86f82:	f7ff fe5f 	bl	86c44 <_Balloc>
   86f86:	f240 2171 	movw	r1, #625	; 0x271
   86f8a:	2201      	movs	r2, #1
   86f8c:	2300      	movs	r3, #0
   86f8e:	6141      	str	r1, [r0, #20]
   86f90:	6102      	str	r2, [r0, #16]
   86f92:	4606      	mov	r6, r0
   86f94:	64b8      	str	r0, [r7, #72]	; 0x48
   86f96:	6003      	str	r3, [r0, #0]
   86f98:	e7be      	b.n	86f18 <__pow5mult+0x18>
   86f9a:	bf00      	nop
   86f9c:	000898e8 	.word	0x000898e8

00086fa0 <__lshift>:
   86fa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   86fa4:	690b      	ldr	r3, [r1, #16]
   86fa6:	1154      	asrs	r4, r2, #5
   86fa8:	eb04 0803 	add.w	r8, r4, r3
   86fac:	688b      	ldr	r3, [r1, #8]
   86fae:	f108 0501 	add.w	r5, r8, #1
   86fb2:	429d      	cmp	r5, r3
   86fb4:	460e      	mov	r6, r1
   86fb6:	4691      	mov	r9, r2
   86fb8:	4607      	mov	r7, r0
   86fba:	6849      	ldr	r1, [r1, #4]
   86fbc:	dd04      	ble.n	86fc8 <__lshift+0x28>
   86fbe:	005b      	lsls	r3, r3, #1
   86fc0:	429d      	cmp	r5, r3
   86fc2:	f101 0101 	add.w	r1, r1, #1
   86fc6:	dcfa      	bgt.n	86fbe <__lshift+0x1e>
   86fc8:	4638      	mov	r0, r7
   86fca:	f7ff fe3b 	bl	86c44 <_Balloc>
   86fce:	2c00      	cmp	r4, #0
   86fd0:	f100 0314 	add.w	r3, r0, #20
   86fd4:	dd06      	ble.n	86fe4 <__lshift+0x44>
   86fd6:	2100      	movs	r1, #0
   86fd8:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   86fdc:	f843 1b04 	str.w	r1, [r3], #4
   86fe0:	429a      	cmp	r2, r3
   86fe2:	d1fb      	bne.n	86fdc <__lshift+0x3c>
   86fe4:	6934      	ldr	r4, [r6, #16]
   86fe6:	f106 0114 	add.w	r1, r6, #20
   86fea:	f019 091f 	ands.w	r9, r9, #31
   86fee:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   86ff2:	d01d      	beq.n	87030 <__lshift+0x90>
   86ff4:	2200      	movs	r2, #0
   86ff6:	f1c9 0c20 	rsb	ip, r9, #32
   86ffa:	680c      	ldr	r4, [r1, #0]
   86ffc:	fa04 f409 	lsl.w	r4, r4, r9
   87000:	4314      	orrs	r4, r2
   87002:	f843 4b04 	str.w	r4, [r3], #4
   87006:	f851 2b04 	ldr.w	r2, [r1], #4
   8700a:	458e      	cmp	lr, r1
   8700c:	fa22 f20c 	lsr.w	r2, r2, ip
   87010:	d8f3      	bhi.n	86ffa <__lshift+0x5a>
   87012:	601a      	str	r2, [r3, #0]
   87014:	b10a      	cbz	r2, 8701a <__lshift+0x7a>
   87016:	f108 0502 	add.w	r5, r8, #2
   8701a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   8701c:	6872      	ldr	r2, [r6, #4]
   8701e:	3d01      	subs	r5, #1
   87020:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   87024:	6105      	str	r5, [r0, #16]
   87026:	6031      	str	r1, [r6, #0]
   87028:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   8702c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   87030:	3b04      	subs	r3, #4
   87032:	f851 2b04 	ldr.w	r2, [r1], #4
   87036:	458e      	cmp	lr, r1
   87038:	f843 2f04 	str.w	r2, [r3, #4]!
   8703c:	d8f9      	bhi.n	87032 <__lshift+0x92>
   8703e:	e7ec      	b.n	8701a <__lshift+0x7a>

00087040 <__mcmp>:
   87040:	b430      	push	{r4, r5}
   87042:	690b      	ldr	r3, [r1, #16]
   87044:	4605      	mov	r5, r0
   87046:	6900      	ldr	r0, [r0, #16]
   87048:	1ac0      	subs	r0, r0, r3
   8704a:	d10f      	bne.n	8706c <__mcmp+0x2c>
   8704c:	009b      	lsls	r3, r3, #2
   8704e:	3514      	adds	r5, #20
   87050:	3114      	adds	r1, #20
   87052:	4419      	add	r1, r3
   87054:	442b      	add	r3, r5
   87056:	e001      	b.n	8705c <__mcmp+0x1c>
   87058:	429d      	cmp	r5, r3
   8705a:	d207      	bcs.n	8706c <__mcmp+0x2c>
   8705c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   87060:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   87064:	4294      	cmp	r4, r2
   87066:	d0f7      	beq.n	87058 <__mcmp+0x18>
   87068:	d302      	bcc.n	87070 <__mcmp+0x30>
   8706a:	2001      	movs	r0, #1
   8706c:	bc30      	pop	{r4, r5}
   8706e:	4770      	bx	lr
   87070:	f04f 30ff 	mov.w	r0, #4294967295
   87074:	e7fa      	b.n	8706c <__mcmp+0x2c>
   87076:	bf00      	nop

00087078 <__mdiff>:
   87078:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8707c:	690c      	ldr	r4, [r1, #16]
   8707e:	4689      	mov	r9, r1
   87080:	6911      	ldr	r1, [r2, #16]
   87082:	4692      	mov	sl, r2
   87084:	1a64      	subs	r4, r4, r1
   87086:	2c00      	cmp	r4, #0
   87088:	d117      	bne.n	870ba <__mdiff+0x42>
   8708a:	0089      	lsls	r1, r1, #2
   8708c:	f109 0714 	add.w	r7, r9, #20
   87090:	f102 0614 	add.w	r6, r2, #20
   87094:	187b      	adds	r3, r7, r1
   87096:	4431      	add	r1, r6
   87098:	e001      	b.n	8709e <__mdiff+0x26>
   8709a:	429f      	cmp	r7, r3
   8709c:	d265      	bcs.n	8716a <__mdiff+0xf2>
   8709e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   870a2:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   870a6:	4295      	cmp	r5, r2
   870a8:	d0f7      	beq.n	8709a <__mdiff+0x22>
   870aa:	d267      	bcs.n	8717c <__mdiff+0x104>
   870ac:	464b      	mov	r3, r9
   870ae:	46bb      	mov	fp, r7
   870b0:	46d1      	mov	r9, sl
   870b2:	4637      	mov	r7, r6
   870b4:	469a      	mov	sl, r3
   870b6:	2401      	movs	r4, #1
   870b8:	e005      	b.n	870c6 <__mdiff+0x4e>
   870ba:	db61      	blt.n	87180 <__mdiff+0x108>
   870bc:	2400      	movs	r4, #0
   870be:	f109 0714 	add.w	r7, r9, #20
   870c2:	f10a 0b14 	add.w	fp, sl, #20
   870c6:	f8d9 1004 	ldr.w	r1, [r9, #4]
   870ca:	f7ff fdbb 	bl	86c44 <_Balloc>
   870ce:	465d      	mov	r5, fp
   870d0:	f04f 0800 	mov.w	r8, #0
   870d4:	f8d9 e010 	ldr.w	lr, [r9, #16]
   870d8:	f8da 3010 	ldr.w	r3, [sl, #16]
   870dc:	463e      	mov	r6, r7
   870de:	60c4      	str	r4, [r0, #12]
   870e0:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   870e4:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   870e8:	f100 0414 	add.w	r4, r0, #20
   870ec:	f856 9b04 	ldr.w	r9, [r6], #4
   870f0:	f855 2b04 	ldr.w	r2, [r5], #4
   870f4:	fa1f f389 	uxth.w	r3, r9
   870f8:	4443      	add	r3, r8
   870fa:	fa1f f882 	uxth.w	r8, r2
   870fe:	0c12      	lsrs	r2, r2, #16
   87100:	eba3 0308 	sub.w	r3, r3, r8
   87104:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   87108:	eb02 4223 	add.w	r2, r2, r3, asr #16
   8710c:	b29b      	uxth	r3, r3
   8710e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   87112:	45ac      	cmp	ip, r5
   87114:	f844 3b04 	str.w	r3, [r4], #4
   87118:	ea4f 4822 	mov.w	r8, r2, asr #16
   8711c:	d8e6      	bhi.n	870ec <__mdiff+0x74>
   8711e:	42b7      	cmp	r7, r6
   87120:	d917      	bls.n	87152 <__mdiff+0xda>
   87122:	46a4      	mov	ip, r4
   87124:	4635      	mov	r5, r6
   87126:	f855 3b04 	ldr.w	r3, [r5], #4
   8712a:	b299      	uxth	r1, r3
   8712c:	4441      	add	r1, r8
   8712e:	140a      	asrs	r2, r1, #16
   87130:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   87134:	b289      	uxth	r1, r1
   87136:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   8713a:	42af      	cmp	r7, r5
   8713c:	f84c 3b04 	str.w	r3, [ip], #4
   87140:	ea4f 4822 	mov.w	r8, r2, asr #16
   87144:	d8ef      	bhi.n	87126 <__mdiff+0xae>
   87146:	43f6      	mvns	r6, r6
   87148:	4437      	add	r7, r6
   8714a:	f027 0703 	bic.w	r7, r7, #3
   8714e:	3704      	adds	r7, #4
   87150:	443c      	add	r4, r7
   87152:	3c04      	subs	r4, #4
   87154:	b92b      	cbnz	r3, 87162 <__mdiff+0xea>
   87156:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   8715a:	f10e 3eff 	add.w	lr, lr, #4294967295
   8715e:	2b00      	cmp	r3, #0
   87160:	d0f9      	beq.n	87156 <__mdiff+0xde>
   87162:	f8c0 e010 	str.w	lr, [r0, #16]
   87166:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8716a:	2100      	movs	r1, #0
   8716c:	f7ff fd6a 	bl	86c44 <_Balloc>
   87170:	2201      	movs	r2, #1
   87172:	2300      	movs	r3, #0
   87174:	6102      	str	r2, [r0, #16]
   87176:	6143      	str	r3, [r0, #20]
   87178:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8717c:	46b3      	mov	fp, r6
   8717e:	e7a2      	b.n	870c6 <__mdiff+0x4e>
   87180:	464b      	mov	r3, r9
   87182:	f109 0b14 	add.w	fp, r9, #20
   87186:	f102 0714 	add.w	r7, r2, #20
   8718a:	4691      	mov	r9, r2
   8718c:	2401      	movs	r4, #1
   8718e:	469a      	mov	sl, r3
   87190:	e799      	b.n	870c6 <__mdiff+0x4e>
   87192:	bf00      	nop

00087194 <__d2b>:
   87194:	b5f0      	push	{r4, r5, r6, r7, lr}
   87196:	2101      	movs	r1, #1
   87198:	b083      	sub	sp, #12
   8719a:	461c      	mov	r4, r3
   8719c:	f3c3 550a 	ubfx	r5, r3, #20, #11
   871a0:	4616      	mov	r6, r2
   871a2:	f7ff fd4f 	bl	86c44 <_Balloc>
   871a6:	f3c4 0413 	ubfx	r4, r4, #0, #20
   871aa:	4607      	mov	r7, r0
   871ac:	b10d      	cbz	r5, 871b2 <__d2b+0x1e>
   871ae:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   871b2:	9401      	str	r4, [sp, #4]
   871b4:	b306      	cbz	r6, 871f8 <__d2b+0x64>
   871b6:	a802      	add	r0, sp, #8
   871b8:	f840 6d08 	str.w	r6, [r0, #-8]!
   871bc:	f7ff fdd4 	bl	86d68 <__lo0bits>
   871c0:	2800      	cmp	r0, #0
   871c2:	d130      	bne.n	87226 <__d2b+0x92>
   871c4:	e89d 000c 	ldmia.w	sp, {r2, r3}
   871c8:	617a      	str	r2, [r7, #20]
   871ca:	2b00      	cmp	r3, #0
   871cc:	bf0c      	ite	eq
   871ce:	2101      	moveq	r1, #1
   871d0:	2102      	movne	r1, #2
   871d2:	61bb      	str	r3, [r7, #24]
   871d4:	6139      	str	r1, [r7, #16]
   871d6:	b9d5      	cbnz	r5, 8720e <__d2b+0x7a>
   871d8:	9a08      	ldr	r2, [sp, #32]
   871da:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   871de:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   871e2:	6010      	str	r0, [r2, #0]
   871e4:	6918      	ldr	r0, [r3, #16]
   871e6:	f7ff fd9f 	bl	86d28 <__hi0bits>
   871ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
   871ec:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   871f0:	6018      	str	r0, [r3, #0]
   871f2:	4638      	mov	r0, r7
   871f4:	b003      	add	sp, #12
   871f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   871f8:	a801      	add	r0, sp, #4
   871fa:	f7ff fdb5 	bl	86d68 <__lo0bits>
   871fe:	2201      	movs	r2, #1
   87200:	9b01      	ldr	r3, [sp, #4]
   87202:	4611      	mov	r1, r2
   87204:	3020      	adds	r0, #32
   87206:	613a      	str	r2, [r7, #16]
   87208:	617b      	str	r3, [r7, #20]
   8720a:	2d00      	cmp	r5, #0
   8720c:	d0e4      	beq.n	871d8 <__d2b+0x44>
   8720e:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   87212:	9a08      	ldr	r2, [sp, #32]
   87214:	4403      	add	r3, r0
   87216:	6013      	str	r3, [r2, #0]
   87218:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8721a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   8721e:	6018      	str	r0, [r3, #0]
   87220:	4638      	mov	r0, r7
   87222:	b003      	add	sp, #12
   87224:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87226:	9b01      	ldr	r3, [sp, #4]
   87228:	f1c0 0220 	rsb	r2, r0, #32
   8722c:	9900      	ldr	r1, [sp, #0]
   8722e:	fa03 f202 	lsl.w	r2, r3, r2
   87232:	430a      	orrs	r2, r1
   87234:	40c3      	lsrs	r3, r0
   87236:	9301      	str	r3, [sp, #4]
   87238:	617a      	str	r2, [r7, #20]
   8723a:	e7c6      	b.n	871ca <__d2b+0x36>

0008723c <_sbrk_r>:
   8723c:	b538      	push	{r3, r4, r5, lr}
   8723e:	2300      	movs	r3, #0
   87240:	4c06      	ldr	r4, [pc, #24]	; (8725c <_sbrk_r+0x20>)
   87242:	4605      	mov	r5, r0
   87244:	4608      	mov	r0, r1
   87246:	6023      	str	r3, [r4, #0]
   87248:	f7f9 ff64 	bl	81114 <_sbrk>
   8724c:	1c43      	adds	r3, r0, #1
   8724e:	d000      	beq.n	87252 <_sbrk_r+0x16>
   87250:	bd38      	pop	{r3, r4, r5, pc}
   87252:	6823      	ldr	r3, [r4, #0]
   87254:	2b00      	cmp	r3, #0
   87256:	d0fb      	beq.n	87250 <_sbrk_r+0x14>
   87258:	602b      	str	r3, [r5, #0]
   8725a:	bd38      	pop	{r3, r4, r5, pc}
   8725c:	2000185c 	.word	0x2000185c

00087260 <__ssprint_r>:
   87260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87264:	6893      	ldr	r3, [r2, #8]
   87266:	b083      	sub	sp, #12
   87268:	4690      	mov	r8, r2
   8726a:	2b00      	cmp	r3, #0
   8726c:	d070      	beq.n	87350 <__ssprint_r+0xf0>
   8726e:	4682      	mov	sl, r0
   87270:	460c      	mov	r4, r1
   87272:	6817      	ldr	r7, [r2, #0]
   87274:	688d      	ldr	r5, [r1, #8]
   87276:	6808      	ldr	r0, [r1, #0]
   87278:	e042      	b.n	87300 <__ssprint_r+0xa0>
   8727a:	89a3      	ldrh	r3, [r4, #12]
   8727c:	f413 6f90 	tst.w	r3, #1152	; 0x480
   87280:	d02e      	beq.n	872e0 <__ssprint_r+0x80>
   87282:	6965      	ldr	r5, [r4, #20]
   87284:	6921      	ldr	r1, [r4, #16]
   87286:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   8728a:	eba0 0b01 	sub.w	fp, r0, r1
   8728e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   87292:	f10b 0001 	add.w	r0, fp, #1
   87296:	106d      	asrs	r5, r5, #1
   87298:	4430      	add	r0, r6
   8729a:	42a8      	cmp	r0, r5
   8729c:	462a      	mov	r2, r5
   8729e:	bf84      	itt	hi
   872a0:	4605      	movhi	r5, r0
   872a2:	462a      	movhi	r2, r5
   872a4:	055b      	lsls	r3, r3, #21
   872a6:	d538      	bpl.n	8731a <__ssprint_r+0xba>
   872a8:	4611      	mov	r1, r2
   872aa:	4650      	mov	r0, sl
   872ac:	f7ff f94a 	bl	86544 <_malloc_r>
   872b0:	2800      	cmp	r0, #0
   872b2:	d03c      	beq.n	8732e <__ssprint_r+0xce>
   872b4:	465a      	mov	r2, fp
   872b6:	6921      	ldr	r1, [r4, #16]
   872b8:	9001      	str	r0, [sp, #4]
   872ba:	f7ff fc41 	bl	86b40 <memcpy>
   872be:	89a2      	ldrh	r2, [r4, #12]
   872c0:	9b01      	ldr	r3, [sp, #4]
   872c2:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   872c6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   872ca:	81a2      	strh	r2, [r4, #12]
   872cc:	eba5 020b 	sub.w	r2, r5, fp
   872d0:	eb03 000b 	add.w	r0, r3, fp
   872d4:	6165      	str	r5, [r4, #20]
   872d6:	46b3      	mov	fp, r6
   872d8:	4635      	mov	r5, r6
   872da:	6123      	str	r3, [r4, #16]
   872dc:	6020      	str	r0, [r4, #0]
   872de:	60a2      	str	r2, [r4, #8]
   872e0:	465a      	mov	r2, fp
   872e2:	4649      	mov	r1, r9
   872e4:	f000 fa0e 	bl	87704 <memmove>
   872e8:	f8d8 3008 	ldr.w	r3, [r8, #8]
   872ec:	68a2      	ldr	r2, [r4, #8]
   872ee:	6820      	ldr	r0, [r4, #0]
   872f0:	1b55      	subs	r5, r2, r5
   872f2:	4458      	add	r0, fp
   872f4:	1b9e      	subs	r6, r3, r6
   872f6:	60a5      	str	r5, [r4, #8]
   872f8:	6020      	str	r0, [r4, #0]
   872fa:	f8c8 6008 	str.w	r6, [r8, #8]
   872fe:	b33e      	cbz	r6, 87350 <__ssprint_r+0xf0>
   87300:	687e      	ldr	r6, [r7, #4]
   87302:	463b      	mov	r3, r7
   87304:	3708      	adds	r7, #8
   87306:	2e00      	cmp	r6, #0
   87308:	d0fa      	beq.n	87300 <__ssprint_r+0xa0>
   8730a:	42ae      	cmp	r6, r5
   8730c:	f8d3 9000 	ldr.w	r9, [r3]
   87310:	46ab      	mov	fp, r5
   87312:	d2b2      	bcs.n	8727a <__ssprint_r+0x1a>
   87314:	4635      	mov	r5, r6
   87316:	46b3      	mov	fp, r6
   87318:	e7e2      	b.n	872e0 <__ssprint_r+0x80>
   8731a:	4650      	mov	r0, sl
   8731c:	f000 fa56 	bl	877cc <_realloc_r>
   87320:	4603      	mov	r3, r0
   87322:	2800      	cmp	r0, #0
   87324:	d1d2      	bne.n	872cc <__ssprint_r+0x6c>
   87326:	6921      	ldr	r1, [r4, #16]
   87328:	4650      	mov	r0, sl
   8732a:	f000 f905 	bl	87538 <_free_r>
   8732e:	230c      	movs	r3, #12
   87330:	2200      	movs	r2, #0
   87332:	f04f 30ff 	mov.w	r0, #4294967295
   87336:	f8ca 3000 	str.w	r3, [sl]
   8733a:	89a3      	ldrh	r3, [r4, #12]
   8733c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87340:	81a3      	strh	r3, [r4, #12]
   87342:	f8c8 2008 	str.w	r2, [r8, #8]
   87346:	f8c8 2004 	str.w	r2, [r8, #4]
   8734a:	b003      	add	sp, #12
   8734c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87350:	2000      	movs	r0, #0
   87352:	f8c8 0004 	str.w	r0, [r8, #4]
   87356:	b003      	add	sp, #12
   87358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008735c <__ascii_wctomb>:
   8735c:	b119      	cbz	r1, 87366 <__ascii_wctomb+0xa>
   8735e:	2aff      	cmp	r2, #255	; 0xff
   87360:	d803      	bhi.n	8736a <__ascii_wctomb+0xe>
   87362:	700a      	strb	r2, [r1, #0]
   87364:	2101      	movs	r1, #1
   87366:	4608      	mov	r0, r1
   87368:	4770      	bx	lr
   8736a:	238a      	movs	r3, #138	; 0x8a
   8736c:	f04f 31ff 	mov.w	r1, #4294967295
   87370:	6003      	str	r3, [r0, #0]
   87372:	e7f8      	b.n	87366 <__ascii_wctomb+0xa>

00087374 <__register_exitproc>:
   87374:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   87378:	4d2c      	ldr	r5, [pc, #176]	; (8742c <__register_exitproc+0xb8>)
   8737a:	4606      	mov	r6, r0
   8737c:	6828      	ldr	r0, [r5, #0]
   8737e:	4698      	mov	r8, r3
   87380:	460f      	mov	r7, r1
   87382:	4691      	mov	r9, r2
   87384:	f7ff f8da 	bl	8653c <__retarget_lock_acquire_recursive>
   87388:	4b29      	ldr	r3, [pc, #164]	; (87430 <__register_exitproc+0xbc>)
   8738a:	681c      	ldr	r4, [r3, #0]
   8738c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   87390:	2b00      	cmp	r3, #0
   87392:	d03e      	beq.n	87412 <__register_exitproc+0x9e>
   87394:	685a      	ldr	r2, [r3, #4]
   87396:	2a1f      	cmp	r2, #31
   87398:	dc1c      	bgt.n	873d4 <__register_exitproc+0x60>
   8739a:	f102 0e01 	add.w	lr, r2, #1
   8739e:	b176      	cbz	r6, 873be <__register_exitproc+0x4a>
   873a0:	2101      	movs	r1, #1
   873a2:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   873a6:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   873aa:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   873ae:	4091      	lsls	r1, r2
   873b0:	4308      	orrs	r0, r1
   873b2:	2e02      	cmp	r6, #2
   873b4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   873b8:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   873bc:	d023      	beq.n	87406 <__register_exitproc+0x92>
   873be:	3202      	adds	r2, #2
   873c0:	f8c3 e004 	str.w	lr, [r3, #4]
   873c4:	6828      	ldr	r0, [r5, #0]
   873c6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   873ca:	f7ff f8b9 	bl	86540 <__retarget_lock_release_recursive>
   873ce:	2000      	movs	r0, #0
   873d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   873d4:	4b17      	ldr	r3, [pc, #92]	; (87434 <__register_exitproc+0xc0>)
   873d6:	b30b      	cbz	r3, 8741c <__register_exitproc+0xa8>
   873d8:	f44f 70c8 	mov.w	r0, #400	; 0x190
   873dc:	f3af 8000 	nop.w
   873e0:	4603      	mov	r3, r0
   873e2:	b1d8      	cbz	r0, 8741c <__register_exitproc+0xa8>
   873e4:	2000      	movs	r0, #0
   873e6:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   873ea:	f04f 0e01 	mov.w	lr, #1
   873ee:	6058      	str	r0, [r3, #4]
   873f0:	6019      	str	r1, [r3, #0]
   873f2:	4602      	mov	r2, r0
   873f4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   873f8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   873fc:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   87400:	2e00      	cmp	r6, #0
   87402:	d0dc      	beq.n	873be <__register_exitproc+0x4a>
   87404:	e7cc      	b.n	873a0 <__register_exitproc+0x2c>
   87406:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   8740a:	4301      	orrs	r1, r0
   8740c:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   87410:	e7d5      	b.n	873be <__register_exitproc+0x4a>
   87412:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   87416:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8741a:	e7bb      	b.n	87394 <__register_exitproc+0x20>
   8741c:	6828      	ldr	r0, [r5, #0]
   8741e:	f7ff f88f 	bl	86540 <__retarget_lock_release_recursive>
   87422:	f04f 30ff 	mov.w	r0, #4294967295
   87426:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8742a:	bf00      	nop
   8742c:	20000a58 	.word	0x20000a58
   87430:	00089774 	.word	0x00089774
   87434:	00000000 	.word	0x00000000

00087438 <_calloc_r>:
   87438:	b510      	push	{r4, lr}
   8743a:	fb02 f101 	mul.w	r1, r2, r1
   8743e:	f7ff f881 	bl	86544 <_malloc_r>
   87442:	4604      	mov	r4, r0
   87444:	b1d8      	cbz	r0, 8747e <_calloc_r+0x46>
   87446:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8744a:	f022 0203 	bic.w	r2, r2, #3
   8744e:	3a04      	subs	r2, #4
   87450:	2a24      	cmp	r2, #36	; 0x24
   87452:	d818      	bhi.n	87486 <_calloc_r+0x4e>
   87454:	2a13      	cmp	r2, #19
   87456:	d914      	bls.n	87482 <_calloc_r+0x4a>
   87458:	2300      	movs	r3, #0
   8745a:	2a1b      	cmp	r2, #27
   8745c:	6003      	str	r3, [r0, #0]
   8745e:	6043      	str	r3, [r0, #4]
   87460:	d916      	bls.n	87490 <_calloc_r+0x58>
   87462:	2a24      	cmp	r2, #36	; 0x24
   87464:	6083      	str	r3, [r0, #8]
   87466:	60c3      	str	r3, [r0, #12]
   87468:	bf11      	iteee	ne
   8746a:	f100 0210 	addne.w	r2, r0, #16
   8746e:	6103      	streq	r3, [r0, #16]
   87470:	6143      	streq	r3, [r0, #20]
   87472:	f100 0218 	addeq.w	r2, r0, #24
   87476:	2300      	movs	r3, #0
   87478:	6013      	str	r3, [r2, #0]
   8747a:	6053      	str	r3, [r2, #4]
   8747c:	6093      	str	r3, [r2, #8]
   8747e:	4620      	mov	r0, r4
   87480:	bd10      	pop	{r4, pc}
   87482:	4602      	mov	r2, r0
   87484:	e7f7      	b.n	87476 <_calloc_r+0x3e>
   87486:	2100      	movs	r1, #0
   87488:	f7fc fc60 	bl	83d4c <memset>
   8748c:	4620      	mov	r0, r4
   8748e:	bd10      	pop	{r4, pc}
   87490:	f100 0208 	add.w	r2, r0, #8
   87494:	e7ef      	b.n	87476 <_calloc_r+0x3e>
   87496:	bf00      	nop

00087498 <_malloc_trim_r>:
   87498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8749a:	460c      	mov	r4, r1
   8749c:	4f23      	ldr	r7, [pc, #140]	; (8752c <_malloc_trim_r+0x94>)
   8749e:	4606      	mov	r6, r0
   874a0:	f7ff fbc4 	bl	86c2c <__malloc_lock>
   874a4:	68bb      	ldr	r3, [r7, #8]
   874a6:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   874aa:	685d      	ldr	r5, [r3, #4]
   874ac:	310f      	adds	r1, #15
   874ae:	f025 0503 	bic.w	r5, r5, #3
   874b2:	4429      	add	r1, r5
   874b4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   874b8:	f021 010f 	bic.w	r1, r1, #15
   874bc:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   874c0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   874c4:	db07      	blt.n	874d6 <_malloc_trim_r+0x3e>
   874c6:	2100      	movs	r1, #0
   874c8:	4630      	mov	r0, r6
   874ca:	f7ff feb7 	bl	8723c <_sbrk_r>
   874ce:	68bb      	ldr	r3, [r7, #8]
   874d0:	442b      	add	r3, r5
   874d2:	4298      	cmp	r0, r3
   874d4:	d004      	beq.n	874e0 <_malloc_trim_r+0x48>
   874d6:	4630      	mov	r0, r6
   874d8:	f7ff fbae 	bl	86c38 <__malloc_unlock>
   874dc:	2000      	movs	r0, #0
   874de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   874e0:	4261      	negs	r1, r4
   874e2:	4630      	mov	r0, r6
   874e4:	f7ff feaa 	bl	8723c <_sbrk_r>
   874e8:	3001      	adds	r0, #1
   874ea:	d00d      	beq.n	87508 <_malloc_trim_r+0x70>
   874ec:	4b10      	ldr	r3, [pc, #64]	; (87530 <_malloc_trim_r+0x98>)
   874ee:	68ba      	ldr	r2, [r7, #8]
   874f0:	6819      	ldr	r1, [r3, #0]
   874f2:	1b2d      	subs	r5, r5, r4
   874f4:	f045 0501 	orr.w	r5, r5, #1
   874f8:	4630      	mov	r0, r6
   874fa:	1b09      	subs	r1, r1, r4
   874fc:	6055      	str	r5, [r2, #4]
   874fe:	6019      	str	r1, [r3, #0]
   87500:	f7ff fb9a 	bl	86c38 <__malloc_unlock>
   87504:	2001      	movs	r0, #1
   87506:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87508:	2100      	movs	r1, #0
   8750a:	4630      	mov	r0, r6
   8750c:	f7ff fe96 	bl	8723c <_sbrk_r>
   87510:	68ba      	ldr	r2, [r7, #8]
   87512:	1a83      	subs	r3, r0, r2
   87514:	2b0f      	cmp	r3, #15
   87516:	ddde      	ble.n	874d6 <_malloc_trim_r+0x3e>
   87518:	4c06      	ldr	r4, [pc, #24]	; (87534 <_malloc_trim_r+0x9c>)
   8751a:	4905      	ldr	r1, [pc, #20]	; (87530 <_malloc_trim_r+0x98>)
   8751c:	6824      	ldr	r4, [r4, #0]
   8751e:	f043 0301 	orr.w	r3, r3, #1
   87522:	1b00      	subs	r0, r0, r4
   87524:	6053      	str	r3, [r2, #4]
   87526:	6008      	str	r0, [r1, #0]
   87528:	e7d5      	b.n	874d6 <_malloc_trim_r+0x3e>
   8752a:	bf00      	nop
   8752c:	20000bc8 	.word	0x20000bc8
   87530:	20001080 	.word	0x20001080
   87534:	20000fd0 	.word	0x20000fd0

00087538 <_free_r>:
   87538:	2900      	cmp	r1, #0
   8753a:	d044      	beq.n	875c6 <_free_r+0x8e>
   8753c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   87540:	460d      	mov	r5, r1
   87542:	4680      	mov	r8, r0
   87544:	f7ff fb72 	bl	86c2c <__malloc_lock>
   87548:	f855 7c04 	ldr.w	r7, [r5, #-4]
   8754c:	4969      	ldr	r1, [pc, #420]	; (876f4 <_free_r+0x1bc>)
   8754e:	f1a5 0408 	sub.w	r4, r5, #8
   87552:	f027 0301 	bic.w	r3, r7, #1
   87556:	18e2      	adds	r2, r4, r3
   87558:	688e      	ldr	r6, [r1, #8]
   8755a:	6850      	ldr	r0, [r2, #4]
   8755c:	42b2      	cmp	r2, r6
   8755e:	f020 0003 	bic.w	r0, r0, #3
   87562:	d05e      	beq.n	87622 <_free_r+0xea>
   87564:	07fe      	lsls	r6, r7, #31
   87566:	6050      	str	r0, [r2, #4]
   87568:	d40b      	bmi.n	87582 <_free_r+0x4a>
   8756a:	f855 7c08 	ldr.w	r7, [r5, #-8]
   8756e:	f101 0e08 	add.w	lr, r1, #8
   87572:	1be4      	subs	r4, r4, r7
   87574:	68a5      	ldr	r5, [r4, #8]
   87576:	443b      	add	r3, r7
   87578:	4575      	cmp	r5, lr
   8757a:	d06d      	beq.n	87658 <_free_r+0x120>
   8757c:	68e7      	ldr	r7, [r4, #12]
   8757e:	60ef      	str	r7, [r5, #12]
   87580:	60bd      	str	r5, [r7, #8]
   87582:	1815      	adds	r5, r2, r0
   87584:	686d      	ldr	r5, [r5, #4]
   87586:	07ed      	lsls	r5, r5, #31
   87588:	d53e      	bpl.n	87608 <_free_r+0xd0>
   8758a:	f043 0201 	orr.w	r2, r3, #1
   8758e:	6062      	str	r2, [r4, #4]
   87590:	50e3      	str	r3, [r4, r3]
   87592:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87596:	d217      	bcs.n	875c8 <_free_r+0x90>
   87598:	2201      	movs	r2, #1
   8759a:	08db      	lsrs	r3, r3, #3
   8759c:	1098      	asrs	r0, r3, #2
   8759e:	684d      	ldr	r5, [r1, #4]
   875a0:	4413      	add	r3, r2
   875a2:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   875a6:	4082      	lsls	r2, r0
   875a8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   875ac:	432a      	orrs	r2, r5
   875ae:	3808      	subs	r0, #8
   875b0:	60e0      	str	r0, [r4, #12]
   875b2:	60a7      	str	r7, [r4, #8]
   875b4:	604a      	str	r2, [r1, #4]
   875b6:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   875ba:	60fc      	str	r4, [r7, #12]
   875bc:	4640      	mov	r0, r8
   875be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   875c2:	f7ff bb39 	b.w	86c38 <__malloc_unlock>
   875c6:	4770      	bx	lr
   875c8:	0a5a      	lsrs	r2, r3, #9
   875ca:	2a04      	cmp	r2, #4
   875cc:	d852      	bhi.n	87674 <_free_r+0x13c>
   875ce:	099a      	lsrs	r2, r3, #6
   875d0:	f102 0739 	add.w	r7, r2, #57	; 0x39
   875d4:	00ff      	lsls	r7, r7, #3
   875d6:	f102 0538 	add.w	r5, r2, #56	; 0x38
   875da:	19c8      	adds	r0, r1, r7
   875dc:	59ca      	ldr	r2, [r1, r7]
   875de:	3808      	subs	r0, #8
   875e0:	4290      	cmp	r0, r2
   875e2:	d04f      	beq.n	87684 <_free_r+0x14c>
   875e4:	6851      	ldr	r1, [r2, #4]
   875e6:	f021 0103 	bic.w	r1, r1, #3
   875ea:	428b      	cmp	r3, r1
   875ec:	d232      	bcs.n	87654 <_free_r+0x11c>
   875ee:	6892      	ldr	r2, [r2, #8]
   875f0:	4290      	cmp	r0, r2
   875f2:	d1f7      	bne.n	875e4 <_free_r+0xac>
   875f4:	68c3      	ldr	r3, [r0, #12]
   875f6:	60a0      	str	r0, [r4, #8]
   875f8:	60e3      	str	r3, [r4, #12]
   875fa:	609c      	str	r4, [r3, #8]
   875fc:	60c4      	str	r4, [r0, #12]
   875fe:	4640      	mov	r0, r8
   87600:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   87604:	f7ff bb18 	b.w	86c38 <__malloc_unlock>
   87608:	6895      	ldr	r5, [r2, #8]
   8760a:	4f3b      	ldr	r7, [pc, #236]	; (876f8 <_free_r+0x1c0>)
   8760c:	4403      	add	r3, r0
   8760e:	42bd      	cmp	r5, r7
   87610:	d040      	beq.n	87694 <_free_r+0x15c>
   87612:	68d0      	ldr	r0, [r2, #12]
   87614:	f043 0201 	orr.w	r2, r3, #1
   87618:	60e8      	str	r0, [r5, #12]
   8761a:	6085      	str	r5, [r0, #8]
   8761c:	6062      	str	r2, [r4, #4]
   8761e:	50e3      	str	r3, [r4, r3]
   87620:	e7b7      	b.n	87592 <_free_r+0x5a>
   87622:	07ff      	lsls	r7, r7, #31
   87624:	4403      	add	r3, r0
   87626:	d407      	bmi.n	87638 <_free_r+0x100>
   87628:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8762c:	1b64      	subs	r4, r4, r5
   8762e:	68e2      	ldr	r2, [r4, #12]
   87630:	68a0      	ldr	r0, [r4, #8]
   87632:	442b      	add	r3, r5
   87634:	60c2      	str	r2, [r0, #12]
   87636:	6090      	str	r0, [r2, #8]
   87638:	4a30      	ldr	r2, [pc, #192]	; (876fc <_free_r+0x1c4>)
   8763a:	f043 0001 	orr.w	r0, r3, #1
   8763e:	6812      	ldr	r2, [r2, #0]
   87640:	6060      	str	r0, [r4, #4]
   87642:	4293      	cmp	r3, r2
   87644:	608c      	str	r4, [r1, #8]
   87646:	d3b9      	bcc.n	875bc <_free_r+0x84>
   87648:	4b2d      	ldr	r3, [pc, #180]	; (87700 <_free_r+0x1c8>)
   8764a:	4640      	mov	r0, r8
   8764c:	6819      	ldr	r1, [r3, #0]
   8764e:	f7ff ff23 	bl	87498 <_malloc_trim_r>
   87652:	e7b3      	b.n	875bc <_free_r+0x84>
   87654:	4610      	mov	r0, r2
   87656:	e7cd      	b.n	875f4 <_free_r+0xbc>
   87658:	1811      	adds	r1, r2, r0
   8765a:	6849      	ldr	r1, [r1, #4]
   8765c:	07c9      	lsls	r1, r1, #31
   8765e:	d444      	bmi.n	876ea <_free_r+0x1b2>
   87660:	6891      	ldr	r1, [r2, #8]
   87662:	4403      	add	r3, r0
   87664:	68d2      	ldr	r2, [r2, #12]
   87666:	f043 0001 	orr.w	r0, r3, #1
   8766a:	60ca      	str	r2, [r1, #12]
   8766c:	6091      	str	r1, [r2, #8]
   8766e:	6060      	str	r0, [r4, #4]
   87670:	50e3      	str	r3, [r4, r3]
   87672:	e7a3      	b.n	875bc <_free_r+0x84>
   87674:	2a14      	cmp	r2, #20
   87676:	d816      	bhi.n	876a6 <_free_r+0x16e>
   87678:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   8767c:	00ff      	lsls	r7, r7, #3
   8767e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   87682:	e7aa      	b.n	875da <_free_r+0xa2>
   87684:	2301      	movs	r3, #1
   87686:	10aa      	asrs	r2, r5, #2
   87688:	684d      	ldr	r5, [r1, #4]
   8768a:	4093      	lsls	r3, r2
   8768c:	432b      	orrs	r3, r5
   8768e:	604b      	str	r3, [r1, #4]
   87690:	4603      	mov	r3, r0
   87692:	e7b0      	b.n	875f6 <_free_r+0xbe>
   87694:	f043 0201 	orr.w	r2, r3, #1
   87698:	614c      	str	r4, [r1, #20]
   8769a:	610c      	str	r4, [r1, #16]
   8769c:	60e5      	str	r5, [r4, #12]
   8769e:	60a5      	str	r5, [r4, #8]
   876a0:	6062      	str	r2, [r4, #4]
   876a2:	50e3      	str	r3, [r4, r3]
   876a4:	e78a      	b.n	875bc <_free_r+0x84>
   876a6:	2a54      	cmp	r2, #84	; 0x54
   876a8:	d806      	bhi.n	876b8 <_free_r+0x180>
   876aa:	0b1a      	lsrs	r2, r3, #12
   876ac:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   876b0:	00ff      	lsls	r7, r7, #3
   876b2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   876b6:	e790      	b.n	875da <_free_r+0xa2>
   876b8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   876bc:	d806      	bhi.n	876cc <_free_r+0x194>
   876be:	0bda      	lsrs	r2, r3, #15
   876c0:	f102 0778 	add.w	r7, r2, #120	; 0x78
   876c4:	00ff      	lsls	r7, r7, #3
   876c6:	f102 0577 	add.w	r5, r2, #119	; 0x77
   876ca:	e786      	b.n	875da <_free_r+0xa2>
   876cc:	f240 5054 	movw	r0, #1364	; 0x554
   876d0:	4282      	cmp	r2, r0
   876d2:	d806      	bhi.n	876e2 <_free_r+0x1aa>
   876d4:	0c9a      	lsrs	r2, r3, #18
   876d6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   876da:	00ff      	lsls	r7, r7, #3
   876dc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   876e0:	e77b      	b.n	875da <_free_r+0xa2>
   876e2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   876e6:	257e      	movs	r5, #126	; 0x7e
   876e8:	e777      	b.n	875da <_free_r+0xa2>
   876ea:	f043 0101 	orr.w	r1, r3, #1
   876ee:	6061      	str	r1, [r4, #4]
   876f0:	6013      	str	r3, [r2, #0]
   876f2:	e763      	b.n	875bc <_free_r+0x84>
   876f4:	20000bc8 	.word	0x20000bc8
   876f8:	20000bd0 	.word	0x20000bd0
   876fc:	20000fd4 	.word	0x20000fd4
   87700:	200010b0 	.word	0x200010b0

00087704 <memmove>:
   87704:	4288      	cmp	r0, r1
   87706:	b5f0      	push	{r4, r5, r6, r7, lr}
   87708:	d90d      	bls.n	87726 <memmove+0x22>
   8770a:	188b      	adds	r3, r1, r2
   8770c:	4298      	cmp	r0, r3
   8770e:	d20a      	bcs.n	87726 <memmove+0x22>
   87710:	1884      	adds	r4, r0, r2
   87712:	2a00      	cmp	r2, #0
   87714:	d051      	beq.n	877ba <memmove+0xb6>
   87716:	4622      	mov	r2, r4
   87718:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   8771c:	4299      	cmp	r1, r3
   8771e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   87722:	d1f9      	bne.n	87718 <memmove+0x14>
   87724:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87726:	2a0f      	cmp	r2, #15
   87728:	d948      	bls.n	877bc <memmove+0xb8>
   8772a:	ea41 0300 	orr.w	r3, r1, r0
   8772e:	079b      	lsls	r3, r3, #30
   87730:	d146      	bne.n	877c0 <memmove+0xbc>
   87732:	4615      	mov	r5, r2
   87734:	f100 0410 	add.w	r4, r0, #16
   87738:	f101 0310 	add.w	r3, r1, #16
   8773c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   87740:	3d10      	subs	r5, #16
   87742:	f844 6c10 	str.w	r6, [r4, #-16]
   87746:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8774a:	2d0f      	cmp	r5, #15
   8774c:	f844 6c0c 	str.w	r6, [r4, #-12]
   87750:	f853 6c08 	ldr.w	r6, [r3, #-8]
   87754:	f104 0410 	add.w	r4, r4, #16
   87758:	f844 6c18 	str.w	r6, [r4, #-24]
   8775c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   87760:	f103 0310 	add.w	r3, r3, #16
   87764:	f844 6c14 	str.w	r6, [r4, #-20]
   87768:	d8e8      	bhi.n	8773c <memmove+0x38>
   8776a:	f1a2 0310 	sub.w	r3, r2, #16
   8776e:	f023 030f 	bic.w	r3, r3, #15
   87772:	f002 0e0f 	and.w	lr, r2, #15
   87776:	3310      	adds	r3, #16
   87778:	f1be 0f03 	cmp.w	lr, #3
   8777c:	4419      	add	r1, r3
   8777e:	4403      	add	r3, r0
   87780:	d921      	bls.n	877c6 <memmove+0xc2>
   87782:	460e      	mov	r6, r1
   87784:	4674      	mov	r4, lr
   87786:	1f1d      	subs	r5, r3, #4
   87788:	f856 7b04 	ldr.w	r7, [r6], #4
   8778c:	3c04      	subs	r4, #4
   8778e:	2c03      	cmp	r4, #3
   87790:	f845 7f04 	str.w	r7, [r5, #4]!
   87794:	d8f8      	bhi.n	87788 <memmove+0x84>
   87796:	f1ae 0404 	sub.w	r4, lr, #4
   8779a:	f024 0403 	bic.w	r4, r4, #3
   8779e:	3404      	adds	r4, #4
   877a0:	4421      	add	r1, r4
   877a2:	4423      	add	r3, r4
   877a4:	f002 0203 	and.w	r2, r2, #3
   877a8:	b162      	cbz	r2, 877c4 <memmove+0xc0>
   877aa:	3b01      	subs	r3, #1
   877ac:	440a      	add	r2, r1
   877ae:	f811 4b01 	ldrb.w	r4, [r1], #1
   877b2:	428a      	cmp	r2, r1
   877b4:	f803 4f01 	strb.w	r4, [r3, #1]!
   877b8:	d1f9      	bne.n	877ae <memmove+0xaa>
   877ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
   877bc:	4603      	mov	r3, r0
   877be:	e7f3      	b.n	877a8 <memmove+0xa4>
   877c0:	4603      	mov	r3, r0
   877c2:	e7f2      	b.n	877aa <memmove+0xa6>
   877c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   877c6:	4672      	mov	r2, lr
   877c8:	e7ee      	b.n	877a8 <memmove+0xa4>
   877ca:	bf00      	nop

000877cc <_realloc_r>:
   877cc:	2900      	cmp	r1, #0
   877ce:	f000 8094 	beq.w	878fa <_realloc_r+0x12e>
   877d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   877d6:	460c      	mov	r4, r1
   877d8:	4615      	mov	r5, r2
   877da:	b083      	sub	sp, #12
   877dc:	4680      	mov	r8, r0
   877de:	f105 060b 	add.w	r6, r5, #11
   877e2:	f7ff fa23 	bl	86c2c <__malloc_lock>
   877e6:	f854 ec04 	ldr.w	lr, [r4, #-4]
   877ea:	2e16      	cmp	r6, #22
   877ec:	f02e 0703 	bic.w	r7, lr, #3
   877f0:	f1a4 0908 	sub.w	r9, r4, #8
   877f4:	d83c      	bhi.n	87870 <_realloc_r+0xa4>
   877f6:	2210      	movs	r2, #16
   877f8:	4616      	mov	r6, r2
   877fa:	42b5      	cmp	r5, r6
   877fc:	d83d      	bhi.n	8787a <_realloc_r+0xae>
   877fe:	4297      	cmp	r7, r2
   87800:	da43      	bge.n	8788a <_realloc_r+0xbe>
   87802:	4bc6      	ldr	r3, [pc, #792]	; (87b1c <_realloc_r+0x350>)
   87804:	eb09 0007 	add.w	r0, r9, r7
   87808:	6899      	ldr	r1, [r3, #8]
   8780a:	4288      	cmp	r0, r1
   8780c:	f000 80c3 	beq.w	87996 <_realloc_r+0x1ca>
   87810:	6843      	ldr	r3, [r0, #4]
   87812:	f023 0101 	bic.w	r1, r3, #1
   87816:	4401      	add	r1, r0
   87818:	6849      	ldr	r1, [r1, #4]
   8781a:	07c9      	lsls	r1, r1, #31
   8781c:	d54d      	bpl.n	878ba <_realloc_r+0xee>
   8781e:	f01e 0f01 	tst.w	lr, #1
   87822:	f000 809b 	beq.w	8795c <_realloc_r+0x190>
   87826:	4629      	mov	r1, r5
   87828:	4640      	mov	r0, r8
   8782a:	f7fe fe8b 	bl	86544 <_malloc_r>
   8782e:	4605      	mov	r5, r0
   87830:	2800      	cmp	r0, #0
   87832:	d03b      	beq.n	878ac <_realloc_r+0xe0>
   87834:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87838:	f1a0 0208 	sub.w	r2, r0, #8
   8783c:	f023 0301 	bic.w	r3, r3, #1
   87840:	444b      	add	r3, r9
   87842:	429a      	cmp	r2, r3
   87844:	f000 812b 	beq.w	87a9e <_realloc_r+0x2d2>
   87848:	1f3a      	subs	r2, r7, #4
   8784a:	2a24      	cmp	r2, #36	; 0x24
   8784c:	f200 8118 	bhi.w	87a80 <_realloc_r+0x2b4>
   87850:	2a13      	cmp	r2, #19
   87852:	f200 80eb 	bhi.w	87a2c <_realloc_r+0x260>
   87856:	4603      	mov	r3, r0
   87858:	4622      	mov	r2, r4
   8785a:	6811      	ldr	r1, [r2, #0]
   8785c:	6019      	str	r1, [r3, #0]
   8785e:	6851      	ldr	r1, [r2, #4]
   87860:	6059      	str	r1, [r3, #4]
   87862:	6892      	ldr	r2, [r2, #8]
   87864:	609a      	str	r2, [r3, #8]
   87866:	4621      	mov	r1, r4
   87868:	4640      	mov	r0, r8
   8786a:	f7ff fe65 	bl	87538 <_free_r>
   8786e:	e01d      	b.n	878ac <_realloc_r+0xe0>
   87870:	f026 0607 	bic.w	r6, r6, #7
   87874:	2e00      	cmp	r6, #0
   87876:	4632      	mov	r2, r6
   87878:	dabf      	bge.n	877fa <_realloc_r+0x2e>
   8787a:	2500      	movs	r5, #0
   8787c:	230c      	movs	r3, #12
   8787e:	4628      	mov	r0, r5
   87880:	f8c8 3000 	str.w	r3, [r8]
   87884:	b003      	add	sp, #12
   87886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8788a:	4625      	mov	r5, r4
   8788c:	1bbb      	subs	r3, r7, r6
   8788e:	2b0f      	cmp	r3, #15
   87890:	f8d9 2004 	ldr.w	r2, [r9, #4]
   87894:	d81d      	bhi.n	878d2 <_realloc_r+0x106>
   87896:	f002 0201 	and.w	r2, r2, #1
   8789a:	433a      	orrs	r2, r7
   8789c:	eb09 0107 	add.w	r1, r9, r7
   878a0:	f8c9 2004 	str.w	r2, [r9, #4]
   878a4:	684b      	ldr	r3, [r1, #4]
   878a6:	f043 0301 	orr.w	r3, r3, #1
   878aa:	604b      	str	r3, [r1, #4]
   878ac:	4640      	mov	r0, r8
   878ae:	f7ff f9c3 	bl	86c38 <__malloc_unlock>
   878b2:	4628      	mov	r0, r5
   878b4:	b003      	add	sp, #12
   878b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   878ba:	f023 0303 	bic.w	r3, r3, #3
   878be:	18f9      	adds	r1, r7, r3
   878c0:	4291      	cmp	r1, r2
   878c2:	db1d      	blt.n	87900 <_realloc_r+0x134>
   878c4:	68c3      	ldr	r3, [r0, #12]
   878c6:	6882      	ldr	r2, [r0, #8]
   878c8:	4625      	mov	r5, r4
   878ca:	60d3      	str	r3, [r2, #12]
   878cc:	460f      	mov	r7, r1
   878ce:	609a      	str	r2, [r3, #8]
   878d0:	e7dc      	b.n	8788c <_realloc_r+0xc0>
   878d2:	f002 0201 	and.w	r2, r2, #1
   878d6:	eb09 0106 	add.w	r1, r9, r6
   878da:	f043 0301 	orr.w	r3, r3, #1
   878de:	4332      	orrs	r2, r6
   878e0:	f8c9 2004 	str.w	r2, [r9, #4]
   878e4:	444f      	add	r7, r9
   878e6:	604b      	str	r3, [r1, #4]
   878e8:	687b      	ldr	r3, [r7, #4]
   878ea:	3108      	adds	r1, #8
   878ec:	f043 0301 	orr.w	r3, r3, #1
   878f0:	607b      	str	r3, [r7, #4]
   878f2:	4640      	mov	r0, r8
   878f4:	f7ff fe20 	bl	87538 <_free_r>
   878f8:	e7d8      	b.n	878ac <_realloc_r+0xe0>
   878fa:	4611      	mov	r1, r2
   878fc:	f7fe be22 	b.w	86544 <_malloc_r>
   87900:	f01e 0f01 	tst.w	lr, #1
   87904:	d18f      	bne.n	87826 <_realloc_r+0x5a>
   87906:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8790a:	eba9 0a01 	sub.w	sl, r9, r1
   8790e:	f8da 1004 	ldr.w	r1, [sl, #4]
   87912:	f021 0103 	bic.w	r1, r1, #3
   87916:	440b      	add	r3, r1
   87918:	443b      	add	r3, r7
   8791a:	4293      	cmp	r3, r2
   8791c:	db26      	blt.n	8796c <_realloc_r+0x1a0>
   8791e:	4655      	mov	r5, sl
   87920:	68c1      	ldr	r1, [r0, #12]
   87922:	6880      	ldr	r0, [r0, #8]
   87924:	1f3a      	subs	r2, r7, #4
   87926:	60c1      	str	r1, [r0, #12]
   87928:	6088      	str	r0, [r1, #8]
   8792a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8792e:	f8da 100c 	ldr.w	r1, [sl, #12]
   87932:	2a24      	cmp	r2, #36	; 0x24
   87934:	60c1      	str	r1, [r0, #12]
   87936:	6088      	str	r0, [r1, #8]
   87938:	d826      	bhi.n	87988 <_realloc_r+0x1bc>
   8793a:	2a13      	cmp	r2, #19
   8793c:	f240 8081 	bls.w	87a42 <_realloc_r+0x276>
   87940:	6821      	ldr	r1, [r4, #0]
   87942:	2a1b      	cmp	r2, #27
   87944:	f8ca 1008 	str.w	r1, [sl, #8]
   87948:	6861      	ldr	r1, [r4, #4]
   8794a:	f8ca 100c 	str.w	r1, [sl, #12]
   8794e:	f200 80ad 	bhi.w	87aac <_realloc_r+0x2e0>
   87952:	f104 0008 	add.w	r0, r4, #8
   87956:	f10a 0210 	add.w	r2, sl, #16
   8795a:	e074      	b.n	87a46 <_realloc_r+0x27a>
   8795c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   87960:	eba9 0a03 	sub.w	sl, r9, r3
   87964:	f8da 1004 	ldr.w	r1, [sl, #4]
   87968:	f021 0103 	bic.w	r1, r1, #3
   8796c:	187b      	adds	r3, r7, r1
   8796e:	4293      	cmp	r3, r2
   87970:	f6ff af59 	blt.w	87826 <_realloc_r+0x5a>
   87974:	4655      	mov	r5, sl
   87976:	f8da 100c 	ldr.w	r1, [sl, #12]
   8797a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8797e:	1f3a      	subs	r2, r7, #4
   87980:	2a24      	cmp	r2, #36	; 0x24
   87982:	60c1      	str	r1, [r0, #12]
   87984:	6088      	str	r0, [r1, #8]
   87986:	d9d8      	bls.n	8793a <_realloc_r+0x16e>
   87988:	4621      	mov	r1, r4
   8798a:	4628      	mov	r0, r5
   8798c:	461f      	mov	r7, r3
   8798e:	46d1      	mov	r9, sl
   87990:	f7ff feb8 	bl	87704 <memmove>
   87994:	e77a      	b.n	8788c <_realloc_r+0xc0>
   87996:	6841      	ldr	r1, [r0, #4]
   87998:	f106 0010 	add.w	r0, r6, #16
   8799c:	f021 0b03 	bic.w	fp, r1, #3
   879a0:	44bb      	add	fp, r7
   879a2:	4583      	cmp	fp, r0
   879a4:	da58      	bge.n	87a58 <_realloc_r+0x28c>
   879a6:	f01e 0f01 	tst.w	lr, #1
   879aa:	f47f af3c 	bne.w	87826 <_realloc_r+0x5a>
   879ae:	f854 1c08 	ldr.w	r1, [r4, #-8]
   879b2:	eba9 0a01 	sub.w	sl, r9, r1
   879b6:	f8da 1004 	ldr.w	r1, [sl, #4]
   879ba:	f021 0103 	bic.w	r1, r1, #3
   879be:	448b      	add	fp, r1
   879c0:	4558      	cmp	r0, fp
   879c2:	dcd3      	bgt.n	8796c <_realloc_r+0x1a0>
   879c4:	4655      	mov	r5, sl
   879c6:	f8da 100c 	ldr.w	r1, [sl, #12]
   879ca:	f855 0f08 	ldr.w	r0, [r5, #8]!
   879ce:	1f3a      	subs	r2, r7, #4
   879d0:	2a24      	cmp	r2, #36	; 0x24
   879d2:	60c1      	str	r1, [r0, #12]
   879d4:	6088      	str	r0, [r1, #8]
   879d6:	f200 808d 	bhi.w	87af4 <_realloc_r+0x328>
   879da:	2a13      	cmp	r2, #19
   879dc:	f240 8087 	bls.w	87aee <_realloc_r+0x322>
   879e0:	6821      	ldr	r1, [r4, #0]
   879e2:	2a1b      	cmp	r2, #27
   879e4:	f8ca 1008 	str.w	r1, [sl, #8]
   879e8:	6861      	ldr	r1, [r4, #4]
   879ea:	f8ca 100c 	str.w	r1, [sl, #12]
   879ee:	f200 8088 	bhi.w	87b02 <_realloc_r+0x336>
   879f2:	f104 0108 	add.w	r1, r4, #8
   879f6:	f10a 0210 	add.w	r2, sl, #16
   879fa:	6808      	ldr	r0, [r1, #0]
   879fc:	6010      	str	r0, [r2, #0]
   879fe:	6848      	ldr	r0, [r1, #4]
   87a00:	6050      	str	r0, [r2, #4]
   87a02:	6889      	ldr	r1, [r1, #8]
   87a04:	6091      	str	r1, [r2, #8]
   87a06:	ebab 0206 	sub.w	r2, fp, r6
   87a0a:	eb0a 0106 	add.w	r1, sl, r6
   87a0e:	f042 0201 	orr.w	r2, r2, #1
   87a12:	6099      	str	r1, [r3, #8]
   87a14:	604a      	str	r2, [r1, #4]
   87a16:	f8da 3004 	ldr.w	r3, [sl, #4]
   87a1a:	4640      	mov	r0, r8
   87a1c:	f003 0301 	and.w	r3, r3, #1
   87a20:	431e      	orrs	r6, r3
   87a22:	f8ca 6004 	str.w	r6, [sl, #4]
   87a26:	f7ff f907 	bl	86c38 <__malloc_unlock>
   87a2a:	e742      	b.n	878b2 <_realloc_r+0xe6>
   87a2c:	6823      	ldr	r3, [r4, #0]
   87a2e:	2a1b      	cmp	r2, #27
   87a30:	6003      	str	r3, [r0, #0]
   87a32:	6863      	ldr	r3, [r4, #4]
   87a34:	6043      	str	r3, [r0, #4]
   87a36:	d827      	bhi.n	87a88 <_realloc_r+0x2bc>
   87a38:	f100 0308 	add.w	r3, r0, #8
   87a3c:	f104 0208 	add.w	r2, r4, #8
   87a40:	e70b      	b.n	8785a <_realloc_r+0x8e>
   87a42:	4620      	mov	r0, r4
   87a44:	462a      	mov	r2, r5
   87a46:	6801      	ldr	r1, [r0, #0]
   87a48:	461f      	mov	r7, r3
   87a4a:	6011      	str	r1, [r2, #0]
   87a4c:	6841      	ldr	r1, [r0, #4]
   87a4e:	46d1      	mov	r9, sl
   87a50:	6051      	str	r1, [r2, #4]
   87a52:	6883      	ldr	r3, [r0, #8]
   87a54:	6093      	str	r3, [r2, #8]
   87a56:	e719      	b.n	8788c <_realloc_r+0xc0>
   87a58:	ebab 0b06 	sub.w	fp, fp, r6
   87a5c:	eb09 0106 	add.w	r1, r9, r6
   87a60:	f04b 0201 	orr.w	r2, fp, #1
   87a64:	6099      	str	r1, [r3, #8]
   87a66:	604a      	str	r2, [r1, #4]
   87a68:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87a6c:	4640      	mov	r0, r8
   87a6e:	f003 0301 	and.w	r3, r3, #1
   87a72:	431e      	orrs	r6, r3
   87a74:	f844 6c04 	str.w	r6, [r4, #-4]
   87a78:	f7ff f8de 	bl	86c38 <__malloc_unlock>
   87a7c:	4625      	mov	r5, r4
   87a7e:	e718      	b.n	878b2 <_realloc_r+0xe6>
   87a80:	4621      	mov	r1, r4
   87a82:	f7ff fe3f 	bl	87704 <memmove>
   87a86:	e6ee      	b.n	87866 <_realloc_r+0x9a>
   87a88:	68a3      	ldr	r3, [r4, #8]
   87a8a:	2a24      	cmp	r2, #36	; 0x24
   87a8c:	6083      	str	r3, [r0, #8]
   87a8e:	68e3      	ldr	r3, [r4, #12]
   87a90:	60c3      	str	r3, [r0, #12]
   87a92:	d018      	beq.n	87ac6 <_realloc_r+0x2fa>
   87a94:	f100 0310 	add.w	r3, r0, #16
   87a98:	f104 0210 	add.w	r2, r4, #16
   87a9c:	e6dd      	b.n	8785a <_realloc_r+0x8e>
   87a9e:	f850 3c04 	ldr.w	r3, [r0, #-4]
   87aa2:	4625      	mov	r5, r4
   87aa4:	f023 0303 	bic.w	r3, r3, #3
   87aa8:	441f      	add	r7, r3
   87aaa:	e6ef      	b.n	8788c <_realloc_r+0xc0>
   87aac:	68a1      	ldr	r1, [r4, #8]
   87aae:	2a24      	cmp	r2, #36	; 0x24
   87ab0:	f8ca 1010 	str.w	r1, [sl, #16]
   87ab4:	68e1      	ldr	r1, [r4, #12]
   87ab6:	f8ca 1014 	str.w	r1, [sl, #20]
   87aba:	d00d      	beq.n	87ad8 <_realloc_r+0x30c>
   87abc:	f104 0010 	add.w	r0, r4, #16
   87ac0:	f10a 0218 	add.w	r2, sl, #24
   87ac4:	e7bf      	b.n	87a46 <_realloc_r+0x27a>
   87ac6:	6922      	ldr	r2, [r4, #16]
   87ac8:	f100 0318 	add.w	r3, r0, #24
   87acc:	6102      	str	r2, [r0, #16]
   87ace:	6961      	ldr	r1, [r4, #20]
   87ad0:	f104 0218 	add.w	r2, r4, #24
   87ad4:	6141      	str	r1, [r0, #20]
   87ad6:	e6c0      	b.n	8785a <_realloc_r+0x8e>
   87ad8:	6922      	ldr	r2, [r4, #16]
   87ada:	f104 0018 	add.w	r0, r4, #24
   87ade:	f8ca 2018 	str.w	r2, [sl, #24]
   87ae2:	6961      	ldr	r1, [r4, #20]
   87ae4:	f10a 0220 	add.w	r2, sl, #32
   87ae8:	f8ca 101c 	str.w	r1, [sl, #28]
   87aec:	e7ab      	b.n	87a46 <_realloc_r+0x27a>
   87aee:	4621      	mov	r1, r4
   87af0:	462a      	mov	r2, r5
   87af2:	e782      	b.n	879fa <_realloc_r+0x22e>
   87af4:	4621      	mov	r1, r4
   87af6:	4628      	mov	r0, r5
   87af8:	9301      	str	r3, [sp, #4]
   87afa:	f7ff fe03 	bl	87704 <memmove>
   87afe:	9b01      	ldr	r3, [sp, #4]
   87b00:	e781      	b.n	87a06 <_realloc_r+0x23a>
   87b02:	68a1      	ldr	r1, [r4, #8]
   87b04:	2a24      	cmp	r2, #36	; 0x24
   87b06:	f8ca 1010 	str.w	r1, [sl, #16]
   87b0a:	68e1      	ldr	r1, [r4, #12]
   87b0c:	f8ca 1014 	str.w	r1, [sl, #20]
   87b10:	d006      	beq.n	87b20 <_realloc_r+0x354>
   87b12:	f104 0110 	add.w	r1, r4, #16
   87b16:	f10a 0218 	add.w	r2, sl, #24
   87b1a:	e76e      	b.n	879fa <_realloc_r+0x22e>
   87b1c:	20000bc8 	.word	0x20000bc8
   87b20:	6922      	ldr	r2, [r4, #16]
   87b22:	f104 0118 	add.w	r1, r4, #24
   87b26:	f8ca 2018 	str.w	r2, [sl, #24]
   87b2a:	6960      	ldr	r0, [r4, #20]
   87b2c:	f10a 0220 	add.w	r2, sl, #32
   87b30:	f8ca 001c 	str.w	r0, [sl, #28]
   87b34:	e761      	b.n	879fa <_realloc_r+0x22e>
   87b36:	bf00      	nop

00087b38 <__aeabi_drsub>:
   87b38:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   87b3c:	e002      	b.n	87b44 <__adddf3>
   87b3e:	bf00      	nop

00087b40 <__aeabi_dsub>:
   87b40:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00087b44 <__adddf3>:
   87b44:	b530      	push	{r4, r5, lr}
   87b46:	ea4f 0441 	mov.w	r4, r1, lsl #1
   87b4a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   87b4e:	ea94 0f05 	teq	r4, r5
   87b52:	bf08      	it	eq
   87b54:	ea90 0f02 	teqeq	r0, r2
   87b58:	bf1f      	itttt	ne
   87b5a:	ea54 0c00 	orrsne.w	ip, r4, r0
   87b5e:	ea55 0c02 	orrsne.w	ip, r5, r2
   87b62:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   87b66:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87b6a:	f000 80e2 	beq.w	87d32 <__adddf3+0x1ee>
   87b6e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   87b72:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   87b76:	bfb8      	it	lt
   87b78:	426d      	neglt	r5, r5
   87b7a:	dd0c      	ble.n	87b96 <__adddf3+0x52>
   87b7c:	442c      	add	r4, r5
   87b7e:	ea80 0202 	eor.w	r2, r0, r2
   87b82:	ea81 0303 	eor.w	r3, r1, r3
   87b86:	ea82 0000 	eor.w	r0, r2, r0
   87b8a:	ea83 0101 	eor.w	r1, r3, r1
   87b8e:	ea80 0202 	eor.w	r2, r0, r2
   87b92:	ea81 0303 	eor.w	r3, r1, r3
   87b96:	2d36      	cmp	r5, #54	; 0x36
   87b98:	bf88      	it	hi
   87b9a:	bd30      	pophi	{r4, r5, pc}
   87b9c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   87ba0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   87ba4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   87ba8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   87bac:	d002      	beq.n	87bb4 <__adddf3+0x70>
   87bae:	4240      	negs	r0, r0
   87bb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87bb4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   87bb8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   87bbc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   87bc0:	d002      	beq.n	87bc8 <__adddf3+0x84>
   87bc2:	4252      	negs	r2, r2
   87bc4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   87bc8:	ea94 0f05 	teq	r4, r5
   87bcc:	f000 80a7 	beq.w	87d1e <__adddf3+0x1da>
   87bd0:	f1a4 0401 	sub.w	r4, r4, #1
   87bd4:	f1d5 0e20 	rsbs	lr, r5, #32
   87bd8:	db0d      	blt.n	87bf6 <__adddf3+0xb2>
   87bda:	fa02 fc0e 	lsl.w	ip, r2, lr
   87bde:	fa22 f205 	lsr.w	r2, r2, r5
   87be2:	1880      	adds	r0, r0, r2
   87be4:	f141 0100 	adc.w	r1, r1, #0
   87be8:	fa03 f20e 	lsl.w	r2, r3, lr
   87bec:	1880      	adds	r0, r0, r2
   87bee:	fa43 f305 	asr.w	r3, r3, r5
   87bf2:	4159      	adcs	r1, r3
   87bf4:	e00e      	b.n	87c14 <__adddf3+0xd0>
   87bf6:	f1a5 0520 	sub.w	r5, r5, #32
   87bfa:	f10e 0e20 	add.w	lr, lr, #32
   87bfe:	2a01      	cmp	r2, #1
   87c00:	fa03 fc0e 	lsl.w	ip, r3, lr
   87c04:	bf28      	it	cs
   87c06:	f04c 0c02 	orrcs.w	ip, ip, #2
   87c0a:	fa43 f305 	asr.w	r3, r3, r5
   87c0e:	18c0      	adds	r0, r0, r3
   87c10:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   87c14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87c18:	d507      	bpl.n	87c2a <__adddf3+0xe6>
   87c1a:	f04f 0e00 	mov.w	lr, #0
   87c1e:	f1dc 0c00 	rsbs	ip, ip, #0
   87c22:	eb7e 0000 	sbcs.w	r0, lr, r0
   87c26:	eb6e 0101 	sbc.w	r1, lr, r1
   87c2a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   87c2e:	d31b      	bcc.n	87c68 <__adddf3+0x124>
   87c30:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   87c34:	d30c      	bcc.n	87c50 <__adddf3+0x10c>
   87c36:	0849      	lsrs	r1, r1, #1
   87c38:	ea5f 0030 	movs.w	r0, r0, rrx
   87c3c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   87c40:	f104 0401 	add.w	r4, r4, #1
   87c44:	ea4f 5244 	mov.w	r2, r4, lsl #21
   87c48:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   87c4c:	f080 809a 	bcs.w	87d84 <__adddf3+0x240>
   87c50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   87c54:	bf08      	it	eq
   87c56:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   87c5a:	f150 0000 	adcs.w	r0, r0, #0
   87c5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87c62:	ea41 0105 	orr.w	r1, r1, r5
   87c66:	bd30      	pop	{r4, r5, pc}
   87c68:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   87c6c:	4140      	adcs	r0, r0
   87c6e:	eb41 0101 	adc.w	r1, r1, r1
   87c72:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87c76:	f1a4 0401 	sub.w	r4, r4, #1
   87c7a:	d1e9      	bne.n	87c50 <__adddf3+0x10c>
   87c7c:	f091 0f00 	teq	r1, #0
   87c80:	bf04      	itt	eq
   87c82:	4601      	moveq	r1, r0
   87c84:	2000      	moveq	r0, #0
   87c86:	fab1 f381 	clz	r3, r1
   87c8a:	bf08      	it	eq
   87c8c:	3320      	addeq	r3, #32
   87c8e:	f1a3 030b 	sub.w	r3, r3, #11
   87c92:	f1b3 0220 	subs.w	r2, r3, #32
   87c96:	da0c      	bge.n	87cb2 <__adddf3+0x16e>
   87c98:	320c      	adds	r2, #12
   87c9a:	dd08      	ble.n	87cae <__adddf3+0x16a>
   87c9c:	f102 0c14 	add.w	ip, r2, #20
   87ca0:	f1c2 020c 	rsb	r2, r2, #12
   87ca4:	fa01 f00c 	lsl.w	r0, r1, ip
   87ca8:	fa21 f102 	lsr.w	r1, r1, r2
   87cac:	e00c      	b.n	87cc8 <__adddf3+0x184>
   87cae:	f102 0214 	add.w	r2, r2, #20
   87cb2:	bfd8      	it	le
   87cb4:	f1c2 0c20 	rsble	ip, r2, #32
   87cb8:	fa01 f102 	lsl.w	r1, r1, r2
   87cbc:	fa20 fc0c 	lsr.w	ip, r0, ip
   87cc0:	bfdc      	itt	le
   87cc2:	ea41 010c 	orrle.w	r1, r1, ip
   87cc6:	4090      	lslle	r0, r2
   87cc8:	1ae4      	subs	r4, r4, r3
   87cca:	bfa2      	ittt	ge
   87ccc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   87cd0:	4329      	orrge	r1, r5
   87cd2:	bd30      	popge	{r4, r5, pc}
   87cd4:	ea6f 0404 	mvn.w	r4, r4
   87cd8:	3c1f      	subs	r4, #31
   87cda:	da1c      	bge.n	87d16 <__adddf3+0x1d2>
   87cdc:	340c      	adds	r4, #12
   87cde:	dc0e      	bgt.n	87cfe <__adddf3+0x1ba>
   87ce0:	f104 0414 	add.w	r4, r4, #20
   87ce4:	f1c4 0220 	rsb	r2, r4, #32
   87ce8:	fa20 f004 	lsr.w	r0, r0, r4
   87cec:	fa01 f302 	lsl.w	r3, r1, r2
   87cf0:	ea40 0003 	orr.w	r0, r0, r3
   87cf4:	fa21 f304 	lsr.w	r3, r1, r4
   87cf8:	ea45 0103 	orr.w	r1, r5, r3
   87cfc:	bd30      	pop	{r4, r5, pc}
   87cfe:	f1c4 040c 	rsb	r4, r4, #12
   87d02:	f1c4 0220 	rsb	r2, r4, #32
   87d06:	fa20 f002 	lsr.w	r0, r0, r2
   87d0a:	fa01 f304 	lsl.w	r3, r1, r4
   87d0e:	ea40 0003 	orr.w	r0, r0, r3
   87d12:	4629      	mov	r1, r5
   87d14:	bd30      	pop	{r4, r5, pc}
   87d16:	fa21 f004 	lsr.w	r0, r1, r4
   87d1a:	4629      	mov	r1, r5
   87d1c:	bd30      	pop	{r4, r5, pc}
   87d1e:	f094 0f00 	teq	r4, #0
   87d22:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   87d26:	bf06      	itte	eq
   87d28:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   87d2c:	3401      	addeq	r4, #1
   87d2e:	3d01      	subne	r5, #1
   87d30:	e74e      	b.n	87bd0 <__adddf3+0x8c>
   87d32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   87d36:	bf18      	it	ne
   87d38:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87d3c:	d029      	beq.n	87d92 <__adddf3+0x24e>
   87d3e:	ea94 0f05 	teq	r4, r5
   87d42:	bf08      	it	eq
   87d44:	ea90 0f02 	teqeq	r0, r2
   87d48:	d005      	beq.n	87d56 <__adddf3+0x212>
   87d4a:	ea54 0c00 	orrs.w	ip, r4, r0
   87d4e:	bf04      	itt	eq
   87d50:	4619      	moveq	r1, r3
   87d52:	4610      	moveq	r0, r2
   87d54:	bd30      	pop	{r4, r5, pc}
   87d56:	ea91 0f03 	teq	r1, r3
   87d5a:	bf1e      	ittt	ne
   87d5c:	2100      	movne	r1, #0
   87d5e:	2000      	movne	r0, #0
   87d60:	bd30      	popne	{r4, r5, pc}
   87d62:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   87d66:	d105      	bne.n	87d74 <__adddf3+0x230>
   87d68:	0040      	lsls	r0, r0, #1
   87d6a:	4149      	adcs	r1, r1
   87d6c:	bf28      	it	cs
   87d6e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   87d72:	bd30      	pop	{r4, r5, pc}
   87d74:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   87d78:	bf3c      	itt	cc
   87d7a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   87d7e:	bd30      	popcc	{r4, r5, pc}
   87d80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87d84:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   87d88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   87d8c:	f04f 0000 	mov.w	r0, #0
   87d90:	bd30      	pop	{r4, r5, pc}
   87d92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   87d96:	bf1a      	itte	ne
   87d98:	4619      	movne	r1, r3
   87d9a:	4610      	movne	r0, r2
   87d9c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   87da0:	bf1c      	itt	ne
   87da2:	460b      	movne	r3, r1
   87da4:	4602      	movne	r2, r0
   87da6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   87daa:	bf06      	itte	eq
   87dac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   87db0:	ea91 0f03 	teqeq	r1, r3
   87db4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   87db8:	bd30      	pop	{r4, r5, pc}
   87dba:	bf00      	nop

00087dbc <__aeabi_ui2d>:
   87dbc:	f090 0f00 	teq	r0, #0
   87dc0:	bf04      	itt	eq
   87dc2:	2100      	moveq	r1, #0
   87dc4:	4770      	bxeq	lr
   87dc6:	b530      	push	{r4, r5, lr}
   87dc8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87dcc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87dd0:	f04f 0500 	mov.w	r5, #0
   87dd4:	f04f 0100 	mov.w	r1, #0
   87dd8:	e750      	b.n	87c7c <__adddf3+0x138>
   87dda:	bf00      	nop

00087ddc <__aeabi_i2d>:
   87ddc:	f090 0f00 	teq	r0, #0
   87de0:	bf04      	itt	eq
   87de2:	2100      	moveq	r1, #0
   87de4:	4770      	bxeq	lr
   87de6:	b530      	push	{r4, r5, lr}
   87de8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87dec:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87df0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   87df4:	bf48      	it	mi
   87df6:	4240      	negmi	r0, r0
   87df8:	f04f 0100 	mov.w	r1, #0
   87dfc:	e73e      	b.n	87c7c <__adddf3+0x138>
   87dfe:	bf00      	nop

00087e00 <__aeabi_f2d>:
   87e00:	0042      	lsls	r2, r0, #1
   87e02:	ea4f 01e2 	mov.w	r1, r2, asr #3
   87e06:	ea4f 0131 	mov.w	r1, r1, rrx
   87e0a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   87e0e:	bf1f      	itttt	ne
   87e10:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   87e14:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   87e18:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   87e1c:	4770      	bxne	lr
   87e1e:	f092 0f00 	teq	r2, #0
   87e22:	bf14      	ite	ne
   87e24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   87e28:	4770      	bxeq	lr
   87e2a:	b530      	push	{r4, r5, lr}
   87e2c:	f44f 7460 	mov.w	r4, #896	; 0x380
   87e30:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87e34:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   87e38:	e720      	b.n	87c7c <__adddf3+0x138>
   87e3a:	bf00      	nop

00087e3c <__aeabi_ul2d>:
   87e3c:	ea50 0201 	orrs.w	r2, r0, r1
   87e40:	bf08      	it	eq
   87e42:	4770      	bxeq	lr
   87e44:	b530      	push	{r4, r5, lr}
   87e46:	f04f 0500 	mov.w	r5, #0
   87e4a:	e00a      	b.n	87e62 <__aeabi_l2d+0x16>

00087e4c <__aeabi_l2d>:
   87e4c:	ea50 0201 	orrs.w	r2, r0, r1
   87e50:	bf08      	it	eq
   87e52:	4770      	bxeq	lr
   87e54:	b530      	push	{r4, r5, lr}
   87e56:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   87e5a:	d502      	bpl.n	87e62 <__aeabi_l2d+0x16>
   87e5c:	4240      	negs	r0, r0
   87e5e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87e62:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87e66:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87e6a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   87e6e:	f43f aedc 	beq.w	87c2a <__adddf3+0xe6>
   87e72:	f04f 0203 	mov.w	r2, #3
   87e76:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   87e7a:	bf18      	it	ne
   87e7c:	3203      	addne	r2, #3
   87e7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   87e82:	bf18      	it	ne
   87e84:	3203      	addne	r2, #3
   87e86:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   87e8a:	f1c2 0320 	rsb	r3, r2, #32
   87e8e:	fa00 fc03 	lsl.w	ip, r0, r3
   87e92:	fa20 f002 	lsr.w	r0, r0, r2
   87e96:	fa01 fe03 	lsl.w	lr, r1, r3
   87e9a:	ea40 000e 	orr.w	r0, r0, lr
   87e9e:	fa21 f102 	lsr.w	r1, r1, r2
   87ea2:	4414      	add	r4, r2
   87ea4:	e6c1      	b.n	87c2a <__adddf3+0xe6>
   87ea6:	bf00      	nop

00087ea8 <__aeabi_dmul>:
   87ea8:	b570      	push	{r4, r5, r6, lr}
   87eaa:	f04f 0cff 	mov.w	ip, #255	; 0xff
   87eae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   87eb2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   87eb6:	bf1d      	ittte	ne
   87eb8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   87ebc:	ea94 0f0c 	teqne	r4, ip
   87ec0:	ea95 0f0c 	teqne	r5, ip
   87ec4:	f000 f8de 	bleq	88084 <__aeabi_dmul+0x1dc>
   87ec8:	442c      	add	r4, r5
   87eca:	ea81 0603 	eor.w	r6, r1, r3
   87ece:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   87ed2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   87ed6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   87eda:	bf18      	it	ne
   87edc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   87ee0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87ee4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   87ee8:	d038      	beq.n	87f5c <__aeabi_dmul+0xb4>
   87eea:	fba0 ce02 	umull	ip, lr, r0, r2
   87eee:	f04f 0500 	mov.w	r5, #0
   87ef2:	fbe1 e502 	umlal	lr, r5, r1, r2
   87ef6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   87efa:	fbe0 e503 	umlal	lr, r5, r0, r3
   87efe:	f04f 0600 	mov.w	r6, #0
   87f02:	fbe1 5603 	umlal	r5, r6, r1, r3
   87f06:	f09c 0f00 	teq	ip, #0
   87f0a:	bf18      	it	ne
   87f0c:	f04e 0e01 	orrne.w	lr, lr, #1
   87f10:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   87f14:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   87f18:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   87f1c:	d204      	bcs.n	87f28 <__aeabi_dmul+0x80>
   87f1e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   87f22:	416d      	adcs	r5, r5
   87f24:	eb46 0606 	adc.w	r6, r6, r6
   87f28:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   87f2c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   87f30:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   87f34:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   87f38:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   87f3c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   87f40:	bf88      	it	hi
   87f42:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87f46:	d81e      	bhi.n	87f86 <__aeabi_dmul+0xde>
   87f48:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   87f4c:	bf08      	it	eq
   87f4e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   87f52:	f150 0000 	adcs.w	r0, r0, #0
   87f56:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87f5a:	bd70      	pop	{r4, r5, r6, pc}
   87f5c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   87f60:	ea46 0101 	orr.w	r1, r6, r1
   87f64:	ea40 0002 	orr.w	r0, r0, r2
   87f68:	ea81 0103 	eor.w	r1, r1, r3
   87f6c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   87f70:	bfc2      	ittt	gt
   87f72:	ebd4 050c 	rsbsgt	r5, r4, ip
   87f76:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   87f7a:	bd70      	popgt	{r4, r5, r6, pc}
   87f7c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87f80:	f04f 0e00 	mov.w	lr, #0
   87f84:	3c01      	subs	r4, #1
   87f86:	f300 80ab 	bgt.w	880e0 <__aeabi_dmul+0x238>
   87f8a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   87f8e:	bfde      	ittt	le
   87f90:	2000      	movle	r0, #0
   87f92:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   87f96:	bd70      	pople	{r4, r5, r6, pc}
   87f98:	f1c4 0400 	rsb	r4, r4, #0
   87f9c:	3c20      	subs	r4, #32
   87f9e:	da35      	bge.n	8800c <__aeabi_dmul+0x164>
   87fa0:	340c      	adds	r4, #12
   87fa2:	dc1b      	bgt.n	87fdc <__aeabi_dmul+0x134>
   87fa4:	f104 0414 	add.w	r4, r4, #20
   87fa8:	f1c4 0520 	rsb	r5, r4, #32
   87fac:	fa00 f305 	lsl.w	r3, r0, r5
   87fb0:	fa20 f004 	lsr.w	r0, r0, r4
   87fb4:	fa01 f205 	lsl.w	r2, r1, r5
   87fb8:	ea40 0002 	orr.w	r0, r0, r2
   87fbc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   87fc0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   87fc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   87fc8:	fa21 f604 	lsr.w	r6, r1, r4
   87fcc:	eb42 0106 	adc.w	r1, r2, r6
   87fd0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87fd4:	bf08      	it	eq
   87fd6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   87fda:	bd70      	pop	{r4, r5, r6, pc}
   87fdc:	f1c4 040c 	rsb	r4, r4, #12
   87fe0:	f1c4 0520 	rsb	r5, r4, #32
   87fe4:	fa00 f304 	lsl.w	r3, r0, r4
   87fe8:	fa20 f005 	lsr.w	r0, r0, r5
   87fec:	fa01 f204 	lsl.w	r2, r1, r4
   87ff0:	ea40 0002 	orr.w	r0, r0, r2
   87ff4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87ff8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   87ffc:	f141 0100 	adc.w	r1, r1, #0
   88000:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   88004:	bf08      	it	eq
   88006:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8800a:	bd70      	pop	{r4, r5, r6, pc}
   8800c:	f1c4 0520 	rsb	r5, r4, #32
   88010:	fa00 f205 	lsl.w	r2, r0, r5
   88014:	ea4e 0e02 	orr.w	lr, lr, r2
   88018:	fa20 f304 	lsr.w	r3, r0, r4
   8801c:	fa01 f205 	lsl.w	r2, r1, r5
   88020:	ea43 0302 	orr.w	r3, r3, r2
   88024:	fa21 f004 	lsr.w	r0, r1, r4
   88028:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8802c:	fa21 f204 	lsr.w	r2, r1, r4
   88030:	ea20 0002 	bic.w	r0, r0, r2
   88034:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   88038:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8803c:	bf08      	it	eq
   8803e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   88042:	bd70      	pop	{r4, r5, r6, pc}
   88044:	f094 0f00 	teq	r4, #0
   88048:	d10f      	bne.n	8806a <__aeabi_dmul+0x1c2>
   8804a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8804e:	0040      	lsls	r0, r0, #1
   88050:	eb41 0101 	adc.w	r1, r1, r1
   88054:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   88058:	bf08      	it	eq
   8805a:	3c01      	subeq	r4, #1
   8805c:	d0f7      	beq.n	8804e <__aeabi_dmul+0x1a6>
   8805e:	ea41 0106 	orr.w	r1, r1, r6
   88062:	f095 0f00 	teq	r5, #0
   88066:	bf18      	it	ne
   88068:	4770      	bxne	lr
   8806a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8806e:	0052      	lsls	r2, r2, #1
   88070:	eb43 0303 	adc.w	r3, r3, r3
   88074:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   88078:	bf08      	it	eq
   8807a:	3d01      	subeq	r5, #1
   8807c:	d0f7      	beq.n	8806e <__aeabi_dmul+0x1c6>
   8807e:	ea43 0306 	orr.w	r3, r3, r6
   88082:	4770      	bx	lr
   88084:	ea94 0f0c 	teq	r4, ip
   88088:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8808c:	bf18      	it	ne
   8808e:	ea95 0f0c 	teqne	r5, ip
   88092:	d00c      	beq.n	880ae <__aeabi_dmul+0x206>
   88094:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   88098:	bf18      	it	ne
   8809a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8809e:	d1d1      	bne.n	88044 <__aeabi_dmul+0x19c>
   880a0:	ea81 0103 	eor.w	r1, r1, r3
   880a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   880a8:	f04f 0000 	mov.w	r0, #0
   880ac:	bd70      	pop	{r4, r5, r6, pc}
   880ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   880b2:	bf06      	itte	eq
   880b4:	4610      	moveq	r0, r2
   880b6:	4619      	moveq	r1, r3
   880b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   880bc:	d019      	beq.n	880f2 <__aeabi_dmul+0x24a>
   880be:	ea94 0f0c 	teq	r4, ip
   880c2:	d102      	bne.n	880ca <__aeabi_dmul+0x222>
   880c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   880c8:	d113      	bne.n	880f2 <__aeabi_dmul+0x24a>
   880ca:	ea95 0f0c 	teq	r5, ip
   880ce:	d105      	bne.n	880dc <__aeabi_dmul+0x234>
   880d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   880d4:	bf1c      	itt	ne
   880d6:	4610      	movne	r0, r2
   880d8:	4619      	movne	r1, r3
   880da:	d10a      	bne.n	880f2 <__aeabi_dmul+0x24a>
   880dc:	ea81 0103 	eor.w	r1, r1, r3
   880e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   880e4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   880e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   880ec:	f04f 0000 	mov.w	r0, #0
   880f0:	bd70      	pop	{r4, r5, r6, pc}
   880f2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   880f6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   880fa:	bd70      	pop	{r4, r5, r6, pc}

000880fc <__aeabi_ddiv>:
   880fc:	b570      	push	{r4, r5, r6, lr}
   880fe:	f04f 0cff 	mov.w	ip, #255	; 0xff
   88102:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   88106:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8810a:	bf1d      	ittte	ne
   8810c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   88110:	ea94 0f0c 	teqne	r4, ip
   88114:	ea95 0f0c 	teqne	r5, ip
   88118:	f000 f8a7 	bleq	8826a <__aeabi_ddiv+0x16e>
   8811c:	eba4 0405 	sub.w	r4, r4, r5
   88120:	ea81 0e03 	eor.w	lr, r1, r3
   88124:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   88128:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8812c:	f000 8088 	beq.w	88240 <__aeabi_ddiv+0x144>
   88130:	ea4f 3303 	mov.w	r3, r3, lsl #12
   88134:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   88138:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8813c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   88140:	ea4f 2202 	mov.w	r2, r2, lsl #8
   88144:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   88148:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8814c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   88150:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   88154:	429d      	cmp	r5, r3
   88156:	bf08      	it	eq
   88158:	4296      	cmpeq	r6, r2
   8815a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8815e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   88162:	d202      	bcs.n	8816a <__aeabi_ddiv+0x6e>
   88164:	085b      	lsrs	r3, r3, #1
   88166:	ea4f 0232 	mov.w	r2, r2, rrx
   8816a:	1ab6      	subs	r6, r6, r2
   8816c:	eb65 0503 	sbc.w	r5, r5, r3
   88170:	085b      	lsrs	r3, r3, #1
   88172:	ea4f 0232 	mov.w	r2, r2, rrx
   88176:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8817a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8817e:	ebb6 0e02 	subs.w	lr, r6, r2
   88182:	eb75 0e03 	sbcs.w	lr, r5, r3
   88186:	bf22      	ittt	cs
   88188:	1ab6      	subcs	r6, r6, r2
   8818a:	4675      	movcs	r5, lr
   8818c:	ea40 000c 	orrcs.w	r0, r0, ip
   88190:	085b      	lsrs	r3, r3, #1
   88192:	ea4f 0232 	mov.w	r2, r2, rrx
   88196:	ebb6 0e02 	subs.w	lr, r6, r2
   8819a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8819e:	bf22      	ittt	cs
   881a0:	1ab6      	subcs	r6, r6, r2
   881a2:	4675      	movcs	r5, lr
   881a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   881a8:	085b      	lsrs	r3, r3, #1
   881aa:	ea4f 0232 	mov.w	r2, r2, rrx
   881ae:	ebb6 0e02 	subs.w	lr, r6, r2
   881b2:	eb75 0e03 	sbcs.w	lr, r5, r3
   881b6:	bf22      	ittt	cs
   881b8:	1ab6      	subcs	r6, r6, r2
   881ba:	4675      	movcs	r5, lr
   881bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   881c0:	085b      	lsrs	r3, r3, #1
   881c2:	ea4f 0232 	mov.w	r2, r2, rrx
   881c6:	ebb6 0e02 	subs.w	lr, r6, r2
   881ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   881ce:	bf22      	ittt	cs
   881d0:	1ab6      	subcs	r6, r6, r2
   881d2:	4675      	movcs	r5, lr
   881d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   881d8:	ea55 0e06 	orrs.w	lr, r5, r6
   881dc:	d018      	beq.n	88210 <__aeabi_ddiv+0x114>
   881de:	ea4f 1505 	mov.w	r5, r5, lsl #4
   881e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   881e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
   881ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   881ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   881f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   881f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   881fa:	d1c0      	bne.n	8817e <__aeabi_ddiv+0x82>
   881fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   88200:	d10b      	bne.n	8821a <__aeabi_ddiv+0x11e>
   88202:	ea41 0100 	orr.w	r1, r1, r0
   88206:	f04f 0000 	mov.w	r0, #0
   8820a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8820e:	e7b6      	b.n	8817e <__aeabi_ddiv+0x82>
   88210:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   88214:	bf04      	itt	eq
   88216:	4301      	orreq	r1, r0
   88218:	2000      	moveq	r0, #0
   8821a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8821e:	bf88      	it	hi
   88220:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   88224:	f63f aeaf 	bhi.w	87f86 <__aeabi_dmul+0xde>
   88228:	ebb5 0c03 	subs.w	ip, r5, r3
   8822c:	bf04      	itt	eq
   8822e:	ebb6 0c02 	subseq.w	ip, r6, r2
   88232:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   88236:	f150 0000 	adcs.w	r0, r0, #0
   8823a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8823e:	bd70      	pop	{r4, r5, r6, pc}
   88240:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   88244:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   88248:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8824c:	bfc2      	ittt	gt
   8824e:	ebd4 050c 	rsbsgt	r5, r4, ip
   88252:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   88256:	bd70      	popgt	{r4, r5, r6, pc}
   88258:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8825c:	f04f 0e00 	mov.w	lr, #0
   88260:	3c01      	subs	r4, #1
   88262:	e690      	b.n	87f86 <__aeabi_dmul+0xde>
   88264:	ea45 0e06 	orr.w	lr, r5, r6
   88268:	e68d      	b.n	87f86 <__aeabi_dmul+0xde>
   8826a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8826e:	ea94 0f0c 	teq	r4, ip
   88272:	bf08      	it	eq
   88274:	ea95 0f0c 	teqeq	r5, ip
   88278:	f43f af3b 	beq.w	880f2 <__aeabi_dmul+0x24a>
   8827c:	ea94 0f0c 	teq	r4, ip
   88280:	d10a      	bne.n	88298 <__aeabi_ddiv+0x19c>
   88282:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   88286:	f47f af34 	bne.w	880f2 <__aeabi_dmul+0x24a>
   8828a:	ea95 0f0c 	teq	r5, ip
   8828e:	f47f af25 	bne.w	880dc <__aeabi_dmul+0x234>
   88292:	4610      	mov	r0, r2
   88294:	4619      	mov	r1, r3
   88296:	e72c      	b.n	880f2 <__aeabi_dmul+0x24a>
   88298:	ea95 0f0c 	teq	r5, ip
   8829c:	d106      	bne.n	882ac <__aeabi_ddiv+0x1b0>
   8829e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   882a2:	f43f aefd 	beq.w	880a0 <__aeabi_dmul+0x1f8>
   882a6:	4610      	mov	r0, r2
   882a8:	4619      	mov	r1, r3
   882aa:	e722      	b.n	880f2 <__aeabi_dmul+0x24a>
   882ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   882b0:	bf18      	it	ne
   882b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   882b6:	f47f aec5 	bne.w	88044 <__aeabi_dmul+0x19c>
   882ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   882be:	f47f af0d 	bne.w	880dc <__aeabi_dmul+0x234>
   882c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   882c6:	f47f aeeb 	bne.w	880a0 <__aeabi_dmul+0x1f8>
   882ca:	e712      	b.n	880f2 <__aeabi_dmul+0x24a>

000882cc <__gedf2>:
   882cc:	f04f 3cff 	mov.w	ip, #4294967295
   882d0:	e006      	b.n	882e0 <__cmpdf2+0x4>
   882d2:	bf00      	nop

000882d4 <__ledf2>:
   882d4:	f04f 0c01 	mov.w	ip, #1
   882d8:	e002      	b.n	882e0 <__cmpdf2+0x4>
   882da:	bf00      	nop

000882dc <__cmpdf2>:
   882dc:	f04f 0c01 	mov.w	ip, #1
   882e0:	f84d cd04 	str.w	ip, [sp, #-4]!
   882e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   882e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   882ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   882f0:	bf18      	it	ne
   882f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   882f6:	d01b      	beq.n	88330 <__cmpdf2+0x54>
   882f8:	b001      	add	sp, #4
   882fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   882fe:	bf0c      	ite	eq
   88300:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   88304:	ea91 0f03 	teqne	r1, r3
   88308:	bf02      	ittt	eq
   8830a:	ea90 0f02 	teqeq	r0, r2
   8830e:	2000      	moveq	r0, #0
   88310:	4770      	bxeq	lr
   88312:	f110 0f00 	cmn.w	r0, #0
   88316:	ea91 0f03 	teq	r1, r3
   8831a:	bf58      	it	pl
   8831c:	4299      	cmppl	r1, r3
   8831e:	bf08      	it	eq
   88320:	4290      	cmpeq	r0, r2
   88322:	bf2c      	ite	cs
   88324:	17d8      	asrcs	r0, r3, #31
   88326:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8832a:	f040 0001 	orr.w	r0, r0, #1
   8832e:	4770      	bx	lr
   88330:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   88334:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   88338:	d102      	bne.n	88340 <__cmpdf2+0x64>
   8833a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8833e:	d107      	bne.n	88350 <__cmpdf2+0x74>
   88340:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   88344:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   88348:	d1d6      	bne.n	882f8 <__cmpdf2+0x1c>
   8834a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8834e:	d0d3      	beq.n	882f8 <__cmpdf2+0x1c>
   88350:	f85d 0b04 	ldr.w	r0, [sp], #4
   88354:	4770      	bx	lr
   88356:	bf00      	nop

00088358 <__aeabi_cdrcmple>:
   88358:	4684      	mov	ip, r0
   8835a:	4610      	mov	r0, r2
   8835c:	4662      	mov	r2, ip
   8835e:	468c      	mov	ip, r1
   88360:	4619      	mov	r1, r3
   88362:	4663      	mov	r3, ip
   88364:	e000      	b.n	88368 <__aeabi_cdcmpeq>
   88366:	bf00      	nop

00088368 <__aeabi_cdcmpeq>:
   88368:	b501      	push	{r0, lr}
   8836a:	f7ff ffb7 	bl	882dc <__cmpdf2>
   8836e:	2800      	cmp	r0, #0
   88370:	bf48      	it	mi
   88372:	f110 0f00 	cmnmi.w	r0, #0
   88376:	bd01      	pop	{r0, pc}

00088378 <__aeabi_dcmpeq>:
   88378:	f84d ed08 	str.w	lr, [sp, #-8]!
   8837c:	f7ff fff4 	bl	88368 <__aeabi_cdcmpeq>
   88380:	bf0c      	ite	eq
   88382:	2001      	moveq	r0, #1
   88384:	2000      	movne	r0, #0
   88386:	f85d fb08 	ldr.w	pc, [sp], #8
   8838a:	bf00      	nop

0008838c <__aeabi_dcmplt>:
   8838c:	f84d ed08 	str.w	lr, [sp, #-8]!
   88390:	f7ff ffea 	bl	88368 <__aeabi_cdcmpeq>
   88394:	bf34      	ite	cc
   88396:	2001      	movcc	r0, #1
   88398:	2000      	movcs	r0, #0
   8839a:	f85d fb08 	ldr.w	pc, [sp], #8
   8839e:	bf00      	nop

000883a0 <__aeabi_dcmple>:
   883a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   883a4:	f7ff ffe0 	bl	88368 <__aeabi_cdcmpeq>
   883a8:	bf94      	ite	ls
   883aa:	2001      	movls	r0, #1
   883ac:	2000      	movhi	r0, #0
   883ae:	f85d fb08 	ldr.w	pc, [sp], #8
   883b2:	bf00      	nop

000883b4 <__aeabi_dcmpge>:
   883b4:	f84d ed08 	str.w	lr, [sp, #-8]!
   883b8:	f7ff ffce 	bl	88358 <__aeabi_cdrcmple>
   883bc:	bf94      	ite	ls
   883be:	2001      	movls	r0, #1
   883c0:	2000      	movhi	r0, #0
   883c2:	f85d fb08 	ldr.w	pc, [sp], #8
   883c6:	bf00      	nop

000883c8 <__aeabi_dcmpgt>:
   883c8:	f84d ed08 	str.w	lr, [sp, #-8]!
   883cc:	f7ff ffc4 	bl	88358 <__aeabi_cdrcmple>
   883d0:	bf34      	ite	cc
   883d2:	2001      	movcc	r0, #1
   883d4:	2000      	movcs	r0, #0
   883d6:	f85d fb08 	ldr.w	pc, [sp], #8
   883da:	bf00      	nop

000883dc <__aeabi_dcmpun>:
   883dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   883e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   883e4:	d102      	bne.n	883ec <__aeabi_dcmpun+0x10>
   883e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   883ea:	d10a      	bne.n	88402 <__aeabi_dcmpun+0x26>
   883ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   883f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   883f4:	d102      	bne.n	883fc <__aeabi_dcmpun+0x20>
   883f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   883fa:	d102      	bne.n	88402 <__aeabi_dcmpun+0x26>
   883fc:	f04f 0000 	mov.w	r0, #0
   88400:	4770      	bx	lr
   88402:	f04f 0001 	mov.w	r0, #1
   88406:	4770      	bx	lr

00088408 <__aeabi_d2iz>:
   88408:	ea4f 0241 	mov.w	r2, r1, lsl #1
   8840c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   88410:	d215      	bcs.n	8843e <__aeabi_d2iz+0x36>
   88412:	d511      	bpl.n	88438 <__aeabi_d2iz+0x30>
   88414:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   88418:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   8841c:	d912      	bls.n	88444 <__aeabi_d2iz+0x3c>
   8841e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   88422:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   88426:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8842a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8842e:	fa23 f002 	lsr.w	r0, r3, r2
   88432:	bf18      	it	ne
   88434:	4240      	negne	r0, r0
   88436:	4770      	bx	lr
   88438:	f04f 0000 	mov.w	r0, #0
   8843c:	4770      	bx	lr
   8843e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   88442:	d105      	bne.n	88450 <__aeabi_d2iz+0x48>
   88444:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   88448:	bf08      	it	eq
   8844a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   8844e:	4770      	bx	lr
   88450:	f04f 0000 	mov.w	r0, #0
   88454:	4770      	bx	lr
   88456:	bf00      	nop

00088458 <__aeabi_uldivmod>:
   88458:	b953      	cbnz	r3, 88470 <__aeabi_uldivmod+0x18>
   8845a:	b94a      	cbnz	r2, 88470 <__aeabi_uldivmod+0x18>
   8845c:	2900      	cmp	r1, #0
   8845e:	bf08      	it	eq
   88460:	2800      	cmpeq	r0, #0
   88462:	bf1c      	itt	ne
   88464:	f04f 31ff 	movne.w	r1, #4294967295
   88468:	f04f 30ff 	movne.w	r0, #4294967295
   8846c:	f000 b97a 	b.w	88764 <__aeabi_idiv0>
   88470:	f1ad 0c08 	sub.w	ip, sp, #8
   88474:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   88478:	f000 f806 	bl	88488 <__udivmoddi4>
   8847c:	f8dd e004 	ldr.w	lr, [sp, #4]
   88480:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   88484:	b004      	add	sp, #16
   88486:	4770      	bx	lr

00088488 <__udivmoddi4>:
   88488:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8848c:	468c      	mov	ip, r1
   8848e:	460e      	mov	r6, r1
   88490:	4604      	mov	r4, r0
   88492:	9d08      	ldr	r5, [sp, #32]
   88494:	2b00      	cmp	r3, #0
   88496:	d150      	bne.n	8853a <__udivmoddi4+0xb2>
   88498:	428a      	cmp	r2, r1
   8849a:	4617      	mov	r7, r2
   8849c:	d96c      	bls.n	88578 <__udivmoddi4+0xf0>
   8849e:	fab2 fe82 	clz	lr, r2
   884a2:	f1be 0f00 	cmp.w	lr, #0
   884a6:	d00b      	beq.n	884c0 <__udivmoddi4+0x38>
   884a8:	f1ce 0c20 	rsb	ip, lr, #32
   884ac:	fa01 f60e 	lsl.w	r6, r1, lr
   884b0:	fa20 fc0c 	lsr.w	ip, r0, ip
   884b4:	fa02 f70e 	lsl.w	r7, r2, lr
   884b8:	ea4c 0c06 	orr.w	ip, ip, r6
   884bc:	fa00 f40e 	lsl.w	r4, r0, lr
   884c0:	0c3a      	lsrs	r2, r7, #16
   884c2:	fbbc f9f2 	udiv	r9, ip, r2
   884c6:	b2bb      	uxth	r3, r7
   884c8:	fb02 cc19 	mls	ip, r2, r9, ip
   884cc:	fb09 fa03 	mul.w	sl, r9, r3
   884d0:	ea4f 4814 	mov.w	r8, r4, lsr #16
   884d4:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   884d8:	45b2      	cmp	sl, r6
   884da:	d90a      	bls.n	884f2 <__udivmoddi4+0x6a>
   884dc:	19f6      	adds	r6, r6, r7
   884de:	f109 31ff 	add.w	r1, r9, #4294967295
   884e2:	f080 8125 	bcs.w	88730 <__udivmoddi4+0x2a8>
   884e6:	45b2      	cmp	sl, r6
   884e8:	f240 8122 	bls.w	88730 <__udivmoddi4+0x2a8>
   884ec:	f1a9 0902 	sub.w	r9, r9, #2
   884f0:	443e      	add	r6, r7
   884f2:	eba6 060a 	sub.w	r6, r6, sl
   884f6:	fbb6 f0f2 	udiv	r0, r6, r2
   884fa:	fb02 6610 	mls	r6, r2, r0, r6
   884fe:	fb00 f303 	mul.w	r3, r0, r3
   88502:	b2a4      	uxth	r4, r4
   88504:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   88508:	42a3      	cmp	r3, r4
   8850a:	d909      	bls.n	88520 <__udivmoddi4+0x98>
   8850c:	19e4      	adds	r4, r4, r7
   8850e:	f100 32ff 	add.w	r2, r0, #4294967295
   88512:	f080 810b 	bcs.w	8872c <__udivmoddi4+0x2a4>
   88516:	42a3      	cmp	r3, r4
   88518:	f240 8108 	bls.w	8872c <__udivmoddi4+0x2a4>
   8851c:	3802      	subs	r0, #2
   8851e:	443c      	add	r4, r7
   88520:	2100      	movs	r1, #0
   88522:	1ae4      	subs	r4, r4, r3
   88524:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   88528:	2d00      	cmp	r5, #0
   8852a:	d062      	beq.n	885f2 <__udivmoddi4+0x16a>
   8852c:	2300      	movs	r3, #0
   8852e:	fa24 f40e 	lsr.w	r4, r4, lr
   88532:	602c      	str	r4, [r5, #0]
   88534:	606b      	str	r3, [r5, #4]
   88536:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8853a:	428b      	cmp	r3, r1
   8853c:	d907      	bls.n	8854e <__udivmoddi4+0xc6>
   8853e:	2d00      	cmp	r5, #0
   88540:	d055      	beq.n	885ee <__udivmoddi4+0x166>
   88542:	2100      	movs	r1, #0
   88544:	e885 0041 	stmia.w	r5, {r0, r6}
   88548:	4608      	mov	r0, r1
   8854a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8854e:	fab3 f183 	clz	r1, r3
   88552:	2900      	cmp	r1, #0
   88554:	f040 808f 	bne.w	88676 <__udivmoddi4+0x1ee>
   88558:	42b3      	cmp	r3, r6
   8855a:	d302      	bcc.n	88562 <__udivmoddi4+0xda>
   8855c:	4282      	cmp	r2, r0
   8855e:	f200 80fc 	bhi.w	8875a <__udivmoddi4+0x2d2>
   88562:	1a84      	subs	r4, r0, r2
   88564:	eb66 0603 	sbc.w	r6, r6, r3
   88568:	2001      	movs	r0, #1
   8856a:	46b4      	mov	ip, r6
   8856c:	2d00      	cmp	r5, #0
   8856e:	d040      	beq.n	885f2 <__udivmoddi4+0x16a>
   88570:	e885 1010 	stmia.w	r5, {r4, ip}
   88574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88578:	b912      	cbnz	r2, 88580 <__udivmoddi4+0xf8>
   8857a:	2701      	movs	r7, #1
   8857c:	fbb7 f7f2 	udiv	r7, r7, r2
   88580:	fab7 fe87 	clz	lr, r7
   88584:	f1be 0f00 	cmp.w	lr, #0
   88588:	d135      	bne.n	885f6 <__udivmoddi4+0x16e>
   8858a:	2101      	movs	r1, #1
   8858c:	1bf6      	subs	r6, r6, r7
   8858e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   88592:	fa1f f887 	uxth.w	r8, r7
   88596:	fbb6 f2fc 	udiv	r2, r6, ip
   8859a:	fb0c 6612 	mls	r6, ip, r2, r6
   8859e:	fb08 f002 	mul.w	r0, r8, r2
   885a2:	0c23      	lsrs	r3, r4, #16
   885a4:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   885a8:	42b0      	cmp	r0, r6
   885aa:	d907      	bls.n	885bc <__udivmoddi4+0x134>
   885ac:	19f6      	adds	r6, r6, r7
   885ae:	f102 33ff 	add.w	r3, r2, #4294967295
   885b2:	d202      	bcs.n	885ba <__udivmoddi4+0x132>
   885b4:	42b0      	cmp	r0, r6
   885b6:	f200 80d2 	bhi.w	8875e <__udivmoddi4+0x2d6>
   885ba:	461a      	mov	r2, r3
   885bc:	1a36      	subs	r6, r6, r0
   885be:	fbb6 f0fc 	udiv	r0, r6, ip
   885c2:	fb0c 6610 	mls	r6, ip, r0, r6
   885c6:	fb08 f800 	mul.w	r8, r8, r0
   885ca:	b2a3      	uxth	r3, r4
   885cc:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   885d0:	45a0      	cmp	r8, r4
   885d2:	d907      	bls.n	885e4 <__udivmoddi4+0x15c>
   885d4:	19e4      	adds	r4, r4, r7
   885d6:	f100 33ff 	add.w	r3, r0, #4294967295
   885da:	d202      	bcs.n	885e2 <__udivmoddi4+0x15a>
   885dc:	45a0      	cmp	r8, r4
   885de:	f200 80b9 	bhi.w	88754 <__udivmoddi4+0x2cc>
   885e2:	4618      	mov	r0, r3
   885e4:	eba4 0408 	sub.w	r4, r4, r8
   885e8:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   885ec:	e79c      	b.n	88528 <__udivmoddi4+0xa0>
   885ee:	4629      	mov	r1, r5
   885f0:	4628      	mov	r0, r5
   885f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   885f6:	fa07 f70e 	lsl.w	r7, r7, lr
   885fa:	f1ce 0320 	rsb	r3, lr, #32
   885fe:	fa26 f203 	lsr.w	r2, r6, r3
   88602:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   88606:	fbb2 f1fc 	udiv	r1, r2, ip
   8860a:	fa1f f887 	uxth.w	r8, r7
   8860e:	fb0c 2211 	mls	r2, ip, r1, r2
   88612:	fa06 f60e 	lsl.w	r6, r6, lr
   88616:	fa20 f303 	lsr.w	r3, r0, r3
   8861a:	fb01 f908 	mul.w	r9, r1, r8
   8861e:	4333      	orrs	r3, r6
   88620:	0c1e      	lsrs	r6, r3, #16
   88622:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   88626:	45b1      	cmp	r9, r6
   88628:	fa00 f40e 	lsl.w	r4, r0, lr
   8862c:	d909      	bls.n	88642 <__udivmoddi4+0x1ba>
   8862e:	19f6      	adds	r6, r6, r7
   88630:	f101 32ff 	add.w	r2, r1, #4294967295
   88634:	f080 808c 	bcs.w	88750 <__udivmoddi4+0x2c8>
   88638:	45b1      	cmp	r9, r6
   8863a:	f240 8089 	bls.w	88750 <__udivmoddi4+0x2c8>
   8863e:	3902      	subs	r1, #2
   88640:	443e      	add	r6, r7
   88642:	eba6 0609 	sub.w	r6, r6, r9
   88646:	fbb6 f0fc 	udiv	r0, r6, ip
   8864a:	fb0c 6210 	mls	r2, ip, r0, r6
   8864e:	fb00 f908 	mul.w	r9, r0, r8
   88652:	b29e      	uxth	r6, r3
   88654:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   88658:	45b1      	cmp	r9, r6
   8865a:	d907      	bls.n	8866c <__udivmoddi4+0x1e4>
   8865c:	19f6      	adds	r6, r6, r7
   8865e:	f100 33ff 	add.w	r3, r0, #4294967295
   88662:	d271      	bcs.n	88748 <__udivmoddi4+0x2c0>
   88664:	45b1      	cmp	r9, r6
   88666:	d96f      	bls.n	88748 <__udivmoddi4+0x2c0>
   88668:	3802      	subs	r0, #2
   8866a:	443e      	add	r6, r7
   8866c:	eba6 0609 	sub.w	r6, r6, r9
   88670:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   88674:	e78f      	b.n	88596 <__udivmoddi4+0x10e>
   88676:	f1c1 0720 	rsb	r7, r1, #32
   8867a:	fa22 f807 	lsr.w	r8, r2, r7
   8867e:	408b      	lsls	r3, r1
   88680:	ea48 0303 	orr.w	r3, r8, r3
   88684:	fa26 f407 	lsr.w	r4, r6, r7
   88688:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   8868c:	fbb4 f9fe 	udiv	r9, r4, lr
   88690:	fa1f fc83 	uxth.w	ip, r3
   88694:	fb0e 4419 	mls	r4, lr, r9, r4
   88698:	408e      	lsls	r6, r1
   8869a:	fa20 f807 	lsr.w	r8, r0, r7
   8869e:	fb09 fa0c 	mul.w	sl, r9, ip
   886a2:	ea48 0806 	orr.w	r8, r8, r6
   886a6:	ea4f 4618 	mov.w	r6, r8, lsr #16
   886aa:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   886ae:	45a2      	cmp	sl, r4
   886b0:	fa02 f201 	lsl.w	r2, r2, r1
   886b4:	fa00 f601 	lsl.w	r6, r0, r1
   886b8:	d908      	bls.n	886cc <__udivmoddi4+0x244>
   886ba:	18e4      	adds	r4, r4, r3
   886bc:	f109 30ff 	add.w	r0, r9, #4294967295
   886c0:	d244      	bcs.n	8874c <__udivmoddi4+0x2c4>
   886c2:	45a2      	cmp	sl, r4
   886c4:	d942      	bls.n	8874c <__udivmoddi4+0x2c4>
   886c6:	f1a9 0902 	sub.w	r9, r9, #2
   886ca:	441c      	add	r4, r3
   886cc:	eba4 040a 	sub.w	r4, r4, sl
   886d0:	fbb4 f0fe 	udiv	r0, r4, lr
   886d4:	fb0e 4410 	mls	r4, lr, r0, r4
   886d8:	fb00 fc0c 	mul.w	ip, r0, ip
   886dc:	fa1f f888 	uxth.w	r8, r8
   886e0:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   886e4:	45a4      	cmp	ip, r4
   886e6:	d907      	bls.n	886f8 <__udivmoddi4+0x270>
   886e8:	18e4      	adds	r4, r4, r3
   886ea:	f100 3eff 	add.w	lr, r0, #4294967295
   886ee:	d229      	bcs.n	88744 <__udivmoddi4+0x2bc>
   886f0:	45a4      	cmp	ip, r4
   886f2:	d927      	bls.n	88744 <__udivmoddi4+0x2bc>
   886f4:	3802      	subs	r0, #2
   886f6:	441c      	add	r4, r3
   886f8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   886fc:	fba0 8902 	umull	r8, r9, r0, r2
   88700:	eba4 0c0c 	sub.w	ip, r4, ip
   88704:	45cc      	cmp	ip, r9
   88706:	46c2      	mov	sl, r8
   88708:	46ce      	mov	lr, r9
   8870a:	d315      	bcc.n	88738 <__udivmoddi4+0x2b0>
   8870c:	d012      	beq.n	88734 <__udivmoddi4+0x2ac>
   8870e:	b155      	cbz	r5, 88726 <__udivmoddi4+0x29e>
   88710:	ebb6 030a 	subs.w	r3, r6, sl
   88714:	eb6c 060e 	sbc.w	r6, ip, lr
   88718:	fa06 f707 	lsl.w	r7, r6, r7
   8871c:	40cb      	lsrs	r3, r1
   8871e:	431f      	orrs	r7, r3
   88720:	40ce      	lsrs	r6, r1
   88722:	602f      	str	r7, [r5, #0]
   88724:	606e      	str	r6, [r5, #4]
   88726:	2100      	movs	r1, #0
   88728:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8872c:	4610      	mov	r0, r2
   8872e:	e6f7      	b.n	88520 <__udivmoddi4+0x98>
   88730:	4689      	mov	r9, r1
   88732:	e6de      	b.n	884f2 <__udivmoddi4+0x6a>
   88734:	4546      	cmp	r6, r8
   88736:	d2ea      	bcs.n	8870e <__udivmoddi4+0x286>
   88738:	ebb8 0a02 	subs.w	sl, r8, r2
   8873c:	eb69 0e03 	sbc.w	lr, r9, r3
   88740:	3801      	subs	r0, #1
   88742:	e7e4      	b.n	8870e <__udivmoddi4+0x286>
   88744:	4670      	mov	r0, lr
   88746:	e7d7      	b.n	886f8 <__udivmoddi4+0x270>
   88748:	4618      	mov	r0, r3
   8874a:	e78f      	b.n	8866c <__udivmoddi4+0x1e4>
   8874c:	4681      	mov	r9, r0
   8874e:	e7bd      	b.n	886cc <__udivmoddi4+0x244>
   88750:	4611      	mov	r1, r2
   88752:	e776      	b.n	88642 <__udivmoddi4+0x1ba>
   88754:	3802      	subs	r0, #2
   88756:	443c      	add	r4, r7
   88758:	e744      	b.n	885e4 <__udivmoddi4+0x15c>
   8875a:	4608      	mov	r0, r1
   8875c:	e706      	b.n	8856c <__udivmoddi4+0xe4>
   8875e:	3a02      	subs	r2, #2
   88760:	443e      	add	r6, r7
   88762:	e72b      	b.n	885bc <__udivmoddi4+0x134>

00088764 <__aeabi_idiv0>:
   88764:	4770      	bx	lr
   88766:	bf00      	nop
   88768:	090a0a0d 	.word	0x090a0a0d
   8876c:	5f5f5f2a 	.word	0x5f5f5f2a
   88770:	5f5f5f5f 	.word	0x5f5f5f5f
   88774:	5f5f5f5f 	.word	0x5f5f5f5f
   88778:	205f5f5f 	.word	0x205f5f5f
   8877c:	2e555043 	.word	0x2e555043
   88780:	2d584341 	.word	0x2d584341
   88784:	41535441 	.word	0x41535441
   88788:	3455334d 	.word	0x3455334d
   8878c:	412d4143 	.word	0x412d4143
   88790:	5f5f2055 	.word	0x5f5f2055
   88794:	5f5f5f5f 	.word	0x5f5f5f5f
   88798:	5f5f5f5f 	.word	0x5f5f5f5f
   8879c:	5f5f5f5f 	.word	0x5f5f5f5f
   887a0:	0a0a0d2a 	.word	0x0a0a0d2a
   887a4:	00000000 	.word	0x00000000
   887a8:	2e555043 	.word	0x2e555043
   887ac:	20584341 	.word	0x20584341
   887b0:	53544120 	.word	0x53544120
   887b4:	55334d41 	.word	0x55334d41
   887b8:	00004334 	.word	0x00004334
   887bc:	2e777777 	.word	0x2e777777
   887c0:	2d322d61 	.word	0x2d322d61
   887c4:	656e2e73 	.word	0x656e2e73
   887c8:	00000074 	.word	0x00000074
   887cc:	554e454d 	.word	0x554e454d
   887d0:	57454e5f 	.word	0x57454e5f
   887d4:	0000000d 	.word	0x0000000d
   887d8:	554e454d 	.word	0x554e454d
   887dc:	57454e20 	.word	0x57454e20
   887e0:	4e494620 	.word	0x4e494620
   887e4:	45485349 	.word	0x45485349
   887e8:	0a0d2044 	.word	0x0a0d2044
   887ec:	00000000 	.word	0x00000000
   887f0:	20202020 	.word	0x20202020
   887f4:	20202020 	.word	0x20202020
   887f8:	20202020 	.word	0x20202020
   887fc:	20202020 	.word	0x20202020
   88800:	20202020 	.word	0x20202020
   88804:	00000000 	.word	0x00000000

00088808 <_etatMenu>:
   88808:	000889d8 00088930 00000000 000802cd     ....0...........
   88818:	000889e8 00088930 00000000 0008030d     ....0...........
   88828:	000889cc 00088930 00000000 0008034d     ....0.......M...
	...

00088848 <_mainMenu>:
   88848:	00088970 00000000 00000000 0008028d     p...............
   88858:	0008897c 00000000 00088930 00000000     |.......0.......
   88868:	0008898c 00000000 00088930 00000000     ........0.......
   88878:	0008899c 00000000 00088930 00000000     ........0.......
	...
   88898:	54415445 524f5020 31204554 00000000     ETAT PORTE 1....
   888a8:	54415445 524f5020 00534554 6e656d5f     ETAT PORTES._men
   888b8:	74704f75 536e6f69 75467361 203a636e     uOptionSasFunc: 
   888c8:	20444142 00004353 20202020 20202020     BAD SC..        
   888d8:	20202020 20202020 20202020 00000020                  ...
   888e8:	4d524546 52555445 41532045 00000053     FERMETURE SAS...
   888f8:	6e656d5f 726f5075 65466574 72656d72     _menuPorteFermer
   88908:	42203a31 53204441 00000043 6e656d5f     1: BAD SC..._men
   88918:	726f5075 65466574 72656d72 42203a32     uPorteFermer2: B
   88928:	53204441 00000043                       AD SC...

00088930 <_porteMenu>:
   88930:	000889ac 00088848 00000000 0008024d     ....H.......M...
   88940:	000889bc 00088848 00000000 0008026d     ....H.......m...
   88950:	000889cc 00088848 00088808 00000000     ....H...........
	...
   88970:	6974704f 73206e6f 00007361 6974704f     Option sas..Opti
   88980:	70206e6f 6574726f 00000073 6974704f     on portes...Opti
   88990:	66206e6f 74656e65 00006572 6974704f     on fenetre..Opti
   889a0:	74206e6f 70706172 00000065 6d726546     on trappe...Ferm
   889b0:	70207265 6574726f 00003120 6d726546     er porte 1..Ferm
   889c0:	70207265 6574726f 00003220 74617445     er porte 2..Etat
   889d0:	726f7020 00736574 74617445 726f7020      portes.Etat por
   889e0:	31206574 00000000 74617445 726f7020     te 1....Etat por
   889f0:	32206574 00000000 00000001 00000002     te 2............
   88a00:	00000004 00000008 00000010 00000020     ............ ...
   88a10:	00000040 00000080 00000100 00000200     @...............
   88a20:	00000400 000186a0 000186a0 00b71b00     ................
   88a30:	65540a0d 73207473 74726174 2e2e6465     ..Test started..
   88a40:	000a0d2e 48500a0d 2d64253a 0d64252d     ......PH:%d--%d.
   88a50:	0000000a 454e4550 56554f20 00545245     ....PENE OUVERT.
   88a60:	00203a09 00004e4f 0046464f 454e4550     .: .ON..OFF.PENE
   88a70:	52454620 0000454d 00534c49 203a0909      FERME..ILS...: 
   88a80:	00000000 00005653 41444152 00000052     ....SV..RADAR...
   88a90:	00555644 4d455250 45524549 544e4520     DVU.PREMIERE ENT
   88aa0:	00454552 20555644 454e4547 004c4152     REE.DVU GENERAL.
   88ab0:	52544e45 4c204545 45524249 00000000     ENTREE LIBRE....
   88ac0:	52544e45 4f204545 4f495450 0000004e     ENTREE OPTION...
   88ad0:	65540a0d 74207473 696d7265 6574616e     ..Test terminate
   88ae0:	2e2e2e64 00000a0d                       d.......

00088ae8 <commands>:
   88ae8:	0000624f 00081549 0000ae76 000814a5     Ob..I...v.......
	...
   88b00:	624e0a0d 74736554 6425203a 00000a0d     ..NbTest: %d....
   88b10:	75420a0d 72657a7a 206e6f20 20726f66     ..Buzzer on for 
   88b20:	00000000 6d206425 2e2e2e73 00000a0d     ....%d ms.......
   88b30:	75420a0d 72657a7a 66666f20 0d2e2e2e     ..Buzzer off....
   88b40:	0000000a 000a0d20 25207325 73252064     .... ...%s %d %s
   88b50:	64342520 00000000                        %4d....

00088b58 <nbDaysInMonth>:
   88b58:	1e1f1c1f 1f1f1e1f 1f1e1f1e 756e614a     ............Janu
   88b68:	00797261 72626546 79726175 00000000     ary.February....
   88b78:	6372614d 00000068 69727041 0000006c     March...April...
   88b88:	0079614d 656e754a 00000000 796c754a     May.June....July
   88b98:	00000000 75677541 00007473 74706553     ....August..Sept
   88ba8:	65626d65 00000072 6f74634f 00726562     ember...October.
   88bb8:	65766f4e 7265626d 00000000 65636544     November....Dece
   88bc8:	7265626d 00000000 646e7553 00007961     mber....Sunday..
   88bd8:	646e6f4d 00007961 73657554 00796164     Monday..Tuesday.
   88be8:	6e646557 61647365 00000079 72756854     Wednesday...Thur
   88bf8:	79616473 00000000 64697246 00007961     sday....Friday..
   88c08:	75746153 79616472 00000000              Saturday....

00088c14 <line2addr>:
   88c14:	54144000 3230250d 30253a64 253a6432     .@.T.%02d:%02d:%
   88c24:	00643230 64323025 3230253a 30253a64     02d.%02d:%02d:%0
   88c34:	00006432 64323025 3230252f 30252f64     2d..%02d/%02d/%0
   88c44:	00006434 003e0a0d 00445b1b 00435b1b     4d....>..[D..[C.
   88c54:	3e2f0a0d 00000000 6b6e7509 6e776f6e     ../>.....unknown
   88c64:	646d6320 3025203a 0a0d5834 00000000      cmd: %04X......
   88c74:	2a090a0d 2a2a2a2a 73616320 535f2065     ...***** case _S
   88c84:	4c4c4548 48424b5f 203a5449 20444142     HELL_KBHIT: BAD 
   88c94:	65736163 2a2a2021 2a2a2a2a 00000a0d     case! ******....
   88ca4:	20200a0d 43534520 5145535f 0000203a     ..   ESC_SEQ: ..
   88cb4:	30253c20 0d3e5834 0000000a 4b325b1b      <%04X>......[2K
   88cc4:	0000000d 3b315b1b 00004335              .....[1;5C..

00088cd0 <heartBeatRhythm>:
   88cd0:	00000028 000000fe 00000028 00000548     (.......(...H...
   88ce0:	00000000                                ....

00088ce4 <hexDigits>:
   88ce4:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   88cf4:	00000000                                ....

00088cf8 <separators>:
   88cf8:	3a3b2e20 0d095c2f 0000000a 4a325b1b      .;:/\.......[2J
   88d08:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   88d18:	3d3d3d3d 43203d3d 20504948 4e454449     ====== CHIP IDEN
   88d28:	49464954 49205245 534f464e 3d3d3d20     TIFIER INFOS ===
   88d38:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88d48:	52455609 4e4f4953 6325203a 00000a0d     .VERSION: %c....
   88d58:	45202009 434f5250 0000203a 564e2009     .  EPROC: ... NV
   88d68:	5a495350 0000203a 50564e09 325a4953     PSIZ: ...NVPSIZ2
   88d78:	0000203a 41525309 5a49534d 0000203a     : ...SRAMSIZ: ..
   88d88:	20202009 48435241 0000203a 2d2d2d20     .   ARCH: .. ---
   88d98:	00000020 564e2009 50595450 0000203a      .... NVPTYP: ..
   88da8:	20202009 44495845 3025203a 0a0d5838     .   EXID: %08X..
   88db8:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   88dc8:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88dd8:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88de8:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88df8:	7379530d 206d6574 6c6c6977 73657220     .System will res
   88e08:	74726174 206e6920 73206925 6e6f6365     tart in %i secon
   88e18:	2e2e2e64 00000000 2f2e3a20 00000a0d     d....... :./....
   88e28:	4b325b1b 00000000 646d6320 61747320     .[2K.... cmd sta
   88e38:	3a207472 00000020                       rt : ...

00088e40 <arch>:
   88e40:	00000019 0008910c 00089118 00000029     ............)...
   88e50:	0008912c 0008913c 00000034 00089150     ,...<...4...P...
   88e60:	00089158 00000037 00089168 00089170     X...7...h...p...
   88e70:	00000039 0008917c 00089184 0000003b     9...|.......;...
   88e80:	00089190 00089198 00000040 000891a8     ........@.......
   88e90:	000891b0 00000042 000891c0 000891c8     ....B...........
   88ea0:	00000055 000891d8 000891e0 00000060     U...........`...
   88eb0:	000891f0 000891fc 00000061 00089210     ........a.......
   88ec0:	00089220 00000063 00089234 0008923c      ...c...4...<...
   88ed0:	00000070 0008924c 00089258 00000071     p...L...X...q...
   88ee0:	0008926c 0008927c 00000072 00089290     l...|...r.......
   88ef0:	000892a0 00000073 000892b4 000892c0     ....s...........
   88f00:	00000075 000892d4 000892e0 00000076     u...........v...
   88f10:	000892f4 00089304 00000080 00089318     ................
   88f20:	00089320 00000081 00089344 0008934c      .......D...L...
   88f30:	00000083 00089370 00089380 00000084     ....p...........
   88f40:	000893ac 000893bc 00000085 000893e8     ................
   88f50:	000893f8 00000086 00089424 00089434     ........$...4...
   88f60:	00000088 00089464 00089474 00000089     ....d...t.......
   88f70:	0008949c 000894ac 0000008a 000894d4     ................
   88f80:	000894e4 00000092 00089510 00089518     ................
   88f90:	00000093 00089528 00089530 00000094     ....(...0.......
   88fa0:	00089550 00089558 00000095 00089578     P...X.......x...
   88fb0:	00089580 00000099 000895a4 000895b0     ................
   88fc0:	0000009a 000895d4 000895e0 000000a5     ................
   88fd0:	00089604 00089604 000000f0 0008960c     ................
   88fe0:	00089614 00000000 00089624 00000000     ........$.......

00088ff0 <cmdEntries>:
   88ff0:	0000624f 00082e81 00006cab 00082eb1     Ob.......l......
   89000:	00003bed 00082e9d 0000aaf6 00082e01     .;..............
   89010:	0000b326 00082e41 0000902b 000830ad     &...A...+....0..
   89020:	0000b344 000830ad 0000ebe8 000830e1     D....0.......0..
   89030:	000010e1 00082fc9 00000000 00000000     ...../..........
   89040:	204d4f52 202d2d2d 004d4f52 4c4d4f52     ROM --- ROM.ROML
   89050:	20535345 202d2d2d 6c4d4f52 20737365     ESS --- ROMless 
   89060:	6f20726f 68632d6e 46207069 6873616c     or on-chip Flash
   89070:	00000000 53414c46 2d2d2048 6d45202d     ....FLASH --- Em
   89080:	64646562 46206465 6873616c 6d654d20     bedded Flash Mem
   89090:	0079726f 5f4d4f52 53414c46 2d2d2048     ory.ROM_FLASH --
   890a0:	4f52202d 6e61204d 6d452064 64646562     - ROM and Embedd
   890b0:	46206465 6873616c 6d654d20 2079726f     ed Flash Memory 
   890c0:	50564e5b 205a4953 52207369 73204d4f     [NVPSIZ is ROM s
   890d0:	20657a69 564e202f 5a495350 73692032     ize / NVPSIZ2 is
   890e0:	616c4620 73206873 5d657a69 00000000      Flash size]....
   890f0:	4d415253 2d2d2d20 41525320 6d65204d     SRAM --- SRAM em
   89100:	74616c75 20676e69 004d4f52 31395441     ulating ROM.AT91
   89110:	394d4153 00007878 31395441 394d4153     SAM9xx..AT91SAM9
   89120:	53207878 65697265 00000073 31395441     xx Series...AT91
   89130:	394d4153 78784558 00000000 31395441     SAM9XExx....AT91
   89140:	394d4153 78784558 72655320 00736569     SAM9XExx Series.
   89150:	31395441 00343378 31395441 20343378     AT91x34.AT91x34 
   89160:	69726553 00007365 37504143 00000000     Series..CAP7....
   89170:	37504143 72655320 00736569 39504143     CAP7 Series.CAP9
   89180:	00000000 39504143 72655320 00736569     ....CAP9 Series.
   89190:	31504143 00000031 31504143 65532031     CAP11...CAP11 Se
   891a0:	73656972 00000000 31395441 00303478     ries....AT91x40.
   891b0:	31395441 20303478 69726553 00007365     AT91x40 Series..
   891c0:	31395441 00323478 31395441 20323478     AT91x42.AT91x42 
   891d0:	69726553 00007365 31395441 00353578     Series..AT91x55.
   891e0:	31395441 20353578 69726553 00007365     AT91x55 Series..
   891f0:	31395441 374d4153 00787841 31395441     AT91SAM7Axx.AT91
   89200:	374d4153 20787841 69726553 00007365     SAM7Axx Series..
   89210:	31395441 374d4153 78785141 00000000     AT91SAM7AQxx....
   89220:	31395441 374d4153 78785141 72655320     AT91SAM7AQxx Ser
   89230:	00736569 31395441 00333678 31395441     ies.AT91x63.AT91
   89240:	20333678 69726553 00007365 31395441     x63 Series..AT91
   89250:	374d4153 00787853 31395441 374d4153     SAM7Sxx.AT91SAM7
   89260:	20787853 69726553 00007365 31395441     Sxx Series..AT91
   89270:	374d4153 78784358 00000000 31395441     SAM7XCxx....AT91
   89280:	374d4153 78784358 72655320 00736569     SAM7XCxx Series.
   89290:	31395441 374d4153 78784553 00000000     AT91SAM7SExx....
   892a0:	31395441 374d4153 78784553 72655320     AT91SAM7SExx Ser
   892b0:	00736569 31395441 374d4153 0078784c     ies.AT91SAM7Lxx.
   892c0:	31395441 374d4153 2078784c 69726553     AT91SAM7Lxx Seri
   892d0:	00007365 31395441 374d4153 00787858     es..AT91SAM7Xxx.
   892e0:	31395441 374d4153 20787858 69726553     AT91SAM7Xxx Seri
   892f0:	00007365 31395441 374d4153 78784c53     es..AT91SAM7SLxx
   89300:	00000000 31395441 374d4153 78784c53     ....AT91SAM7SLxx
   89310:	72655320 00736569 334d4153 00437855      Series.SAM3UxC.
   89320:	334d4153 20437855 69726553 28207365     SAM3UxC Series (
   89330:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   89340:	00000000 334d4153 00457855 334d4153     ....SAM3UxE.SAM3
   89350:	20457855 69726553 28207365 2d343431     UxE Series (144-
   89360:	206e6970 73726576 296e6f69 00000000     pin version)....
   89370:	334d4153 2f437841 334d4153 00437841     SAM3AxC/SAM3AxC.
   89380:	334d4153 2f437841 344d4153 20437841     SAM3AxC/SAM4AxC 
   89390:	69726553 28207365 2d303031 206e6970     Series (100-pin 
   893a0:	73726576 296e6f69 00000000 334d4153     version)....SAM3
   893b0:	2f437858 344d4153 00437858 334d4153     XxC/SAM4XxC.SAM3
   893c0:	2f437858 344d4153 20437858 69726553     XxC/SAM4XxC Seri
   893d0:	28207365 2d303031 206e6970 73726576     es (100-pin vers
   893e0:	296e6f69 00000000 334d4153 2f457858     ion)....SAM3XxE/
   893f0:	344d4153 00457858 334d4153 2f457858     SAM4XxE.SAM3XxE/
   89400:	344d4153 20457858 69726553 28207365     SAM4XxE Series (
   89410:	2d343431 206e6970 73726576 296e6f69     144-pin version)
   89420:	00000000 334d4153 2f477858 344d4153     ....SAM3XxG/SAM4
   89430:	00477858 334d4153 2f477858 344d4153     XxG.SAM3XxG/SAM4
   89440:	20477858 69726553 28207365 2f383032     XxG Series (208/
   89450:	2d373132 206e6970 73726576 296e6f69     217-pin version)
   89460:	00000000 334d4153 2f417853 344d4153     ....SAM3SxA/SAM4
   89470:	00417853 334d4153 2f417853 344d4153     SxA.SAM3SxA/SAM4
   89480:	20417853 69726553 28207365 702d3834     SxA Series (48-p
   89490:	76206e69 69737265 00296e6f 334d4153     in version).SAM3
   894a0:	2f427853 344d4153 00427853 334d4153     SxB/SAM4SxB.SAM3
   894b0:	2f427853 344d4153 20427853 69726553     SxB/SAM4SxB Seri
   894c0:	28207365 702d3436 76206e69 69737265     es (64-pin versi
   894d0:	00296e6f 334d4153 2f437853 344d4153     on).SAM3SxC/SAM4
   894e0:	00437853 334d4153 2f437853 344d4153     SxC.SAM3SxC/SAM4
   894f0:	20437853 69726553 28207365 2d303031     SxC Series (100-
   89500:	206e6970 73726576 296e6f69 00000000     pin version)....
   89510:	31395441 00323978 31395441 20323978     AT91x92.AT91x92 
   89520:	69726553 00007365 334d4153 0041784e     Series..SAM3NxA.
   89530:	334d4153 2041784e 69726553 28207365     SAM3NxA Series (
   89540:	702d3834 76206e69 69737265 00296e6f     48-pin version).
   89550:	334d4153 0042784e 334d4153 2042784e     SAM3NxB.SAM3NxB 
   89560:	69726553 28207365 702d3436 76206e69     Series (64-pin v
   89570:	69737265 00296e6f 334d4153 0043784e     ersion).SAM3NxC.
   89580:	334d4153 2043784e 69726553 28207365     SAM3NxC Series (
   89590:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   895a0:	00000000 334d4153 42784453 00000000     ....SAM3SDxB....
   895b0:	334d4153 42784453 72655320 20736569     SAM3SDxB Series 
   895c0:	2d343628 206e6970 73726576 296e6f69     (64-pin version)
   895d0:	00000000 334d4153 43784453 00000000     ....SAM3SDxC....
   895e0:	334d4153 43784453 72655320 20736569     SAM3SDxC Series 
   895f0:	30303128 6e69702d 72657620 6e6f6973     (100-pin version
   89600:	00000029 354d4153 00000041 35375441     )...SAM5A...AT75
   89610:	00787843 35375441 20787843 69726553     Cxx.AT75Cxx Seri
   89620:	00007365 41204f4e 21484352 00000000     es..NO ARCH!....
   89630:	204b3834 65747962 00000073 62204b31     48K bytes...1K b
   89640:	73657479 00000000 62204b32 73657479     ytes....2K bytes
   89650:	00000000 62204b36 73657479 00000000     ....6K bytes....
   89660:	204b3432 65747962 00000073 62204b34     24K bytes...4K b
   89670:	73657479 00000000 204b3038 65747962     ytes....80K byte
   89680:	00000073 4b303631 74796220 00007365     s...160K bytes..
   89690:	62204b38 73657479 00000000 204b3631     8K bytes....16K 
   896a0:	65747962 00000073 204b3233 65747962     bytes...32K byte
   896b0:	00000073 204b3436 65747962 00000073     s...64K bytes...
   896c0:	4b383231 74796220 00007365 4b363532     128K bytes..256K
   896d0:	74796220 00007365 204b3639 65747962      bytes..96K byte
   896e0:	00000073 4b323135 74796220 00007365     s...512K bytes..
   896f0:	454e4f4e 00000000 34323031 7962204b     NONE....1024K by
   89700:	00736574 38343032 7962204b 00736574     tes.2048K bytes.
   89710:	45444e55 454e4946 00002144 394d5241     UNDEFINED!..ARM9
   89720:	00533634 374d5241 494d4454 00000000     46S.ARM7TDMI....
   89730:	74726f43 4d2d7865 00000033 394d5241     Cortex-M3...ARM9
   89740:	00543032 394d5241 4a453632 00000053     20T.ARM926EJS...
   89750:	74726f43 412d7865 00000035 74726f43     Cortex-A5...Cort
   89760:	4d2d7865 00000034                       ex-M4...

00089768 <uart_opt>:
   89768:	05b8d800 0001c200 00000800              ............

00089774 <_global_impure_ptr>:
   89774:	20000630 00464e49 00666e69 004e414e     0.. INF.inf.NAN.
   89784:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   89794:	46454443 00000000 33323130 37363534     CDEF....01234567
   897a4:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   897b4:	0000296c 00000030                       l)..0...

000897bc <blanks.7223>:
   897bc:	20202020 20202020 20202020 20202020                     

000897cc <zeroes.7224>:
   897cc:	30303030 30303030 30303030 30303030     0000000000000000
   897dc:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   897ec:	49534f50 00000058 0000002e              POSIX.......

000897f8 <__mprec_bigtens>:
   897f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   89808:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   89818:	7f73bf3c 75154fdd                       <.s..O.u

00089820 <__mprec_tens>:
   89820:	00000000 3ff00000 00000000 40240000     .......?......$@
   89830:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   89840:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   89850:	00000000 412e8480 00000000 416312d0     .......A......cA
   89860:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   89870:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   89880:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   89890:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   898a0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   898b0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   898c0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   898d0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   898e0:	79d99db4 44ea7843                       ...yCx.D

000898e8 <p05.6055>:
   898e8:	00000005 00000019 0000007d              ........}...

000898f4 <_ctype_>:
   898f4:	20202000 20202020 28282020 20282828     .         ((((( 
   89904:	20202020 20202020 20202020 20202020                     
   89914:	10108820 10101010 10101010 10101010      ...............
   89924:	04040410 04040404 10040404 10101010     ................
   89934:	41411010 41414141 01010101 01010101     ..AAAAAA........
   89944:	01010101 01010101 01010101 10101010     ................
   89954:	42421010 42424242 02020202 02020202     ..BBBBBB........
   89964:	02020202 02020202 02020202 10101010     ................
   89974:	00000020 00000000 00000000 00000000      ...............
	...

000899f8 <_init>:
   899f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   899fa:	bf00      	nop
   899fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   899fe:	bc08      	pop	{r3}
   89a00:	469e      	mov	lr, r3
   89a02:	4770      	bx	lr

00089a04 <__init_array_start>:
   89a04:	00085559 	.word	0x00085559

00089a08 <__frame_dummy_init_array_entry>:
   89a08:	000800e1                                ....

00089a0c <_fini>:
   89a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89a0e:	bf00      	nop
   89a10:	bcf8      	pop	{r3, r4, r5, r6, r7}
   89a12:	bc08      	pop	{r3}
   89a14:	469e      	mov	lr, r3
   89a16:	4770      	bx	lr

00089a18 <__fini_array_start>:
   89a18:	000800bd 	.word	0x000800bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
2000000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20000010:	4a21      	ldr	r2, [pc, #132]	; (20000098 <SystemInit+0x8c>)
20000012:	6013      	str	r3, [r2, #0]
20000014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20000018:	6013      	str	r3, [r2, #0]
2000001a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
2000001e:	f503 2360 	add.w	r3, r3, #917504	; 0xe0000
20000022:	6a1b      	ldr	r3, [r3, #32]
20000024:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000028:	d107      	bne.n	2000003a <SystemInit+0x2e>
2000002a:	4a1c      	ldr	r2, [pc, #112]	; (2000009c <SystemInit+0x90>)
2000002c:	4b1c      	ldr	r3, [pc, #112]	; (200000a0 <SystemInit+0x94>)
2000002e:	621a      	str	r2, [r3, #32]
20000030:	461a      	mov	r2, r3
20000032:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000034:	f013 0f01 	tst.w	r3, #1
20000038:	d0fb      	beq.n	20000032 <SystemInit+0x26>
2000003a:	4a1a      	ldr	r2, [pc, #104]	; (200000a4 <SystemInit+0x98>)
2000003c:	4b18      	ldr	r3, [pc, #96]	; (200000a0 <SystemInit+0x94>)
2000003e:	621a      	str	r2, [r3, #32]
20000040:	461a      	mov	r2, r3
20000042:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000044:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000048:	d0fb      	beq.n	20000042 <SystemInit+0x36>
2000004a:	4a15      	ldr	r2, [pc, #84]	; (200000a0 <SystemInit+0x94>)
2000004c:	6b13      	ldr	r3, [r2, #48]	; 0x30
2000004e:	f023 0303 	bic.w	r3, r3, #3
20000052:	f043 0301 	orr.w	r3, r3, #1
20000056:	6313      	str	r3, [r2, #48]	; 0x30
20000058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000005a:	f013 0f08 	tst.w	r3, #8
2000005e:	d0fb      	beq.n	20000058 <SystemInit+0x4c>
20000060:	4a11      	ldr	r2, [pc, #68]	; (200000a8 <SystemInit+0x9c>)
20000062:	4b0f      	ldr	r3, [pc, #60]	; (200000a0 <SystemInit+0x94>)
20000064:	629a      	str	r2, [r3, #40]	; 0x28
20000066:	461a      	mov	r2, r3
20000068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000006a:	f013 0f02 	tst.w	r3, #2
2000006e:	d0fb      	beq.n	20000068 <SystemInit+0x5c>
20000070:	2211      	movs	r2, #17
20000072:	4b0b      	ldr	r3, [pc, #44]	; (200000a0 <SystemInit+0x94>)
20000074:	631a      	str	r2, [r3, #48]	; 0x30
20000076:	461a      	mov	r2, r3
20000078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000007a:	f013 0f08 	tst.w	r3, #8
2000007e:	d0fb      	beq.n	20000078 <SystemInit+0x6c>
20000080:	2212      	movs	r2, #18
20000082:	4b07      	ldr	r3, [pc, #28]	; (200000a0 <SystemInit+0x94>)
20000084:	631a      	str	r2, [r3, #48]	; 0x30
20000086:	461a      	mov	r2, r3
20000088:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000008a:	f013 0f08 	tst.w	r3, #8
2000008e:	d0fb      	beq.n	20000088 <SystemInit+0x7c>
20000090:	4a06      	ldr	r2, [pc, #24]	; (200000ac <SystemInit+0xa0>)
20000092:	4b07      	ldr	r3, [pc, #28]	; (200000b0 <SystemInit+0xa4>)
20000094:	601a      	str	r2, [r3, #0]
20000096:	4770      	bx	lr
20000098:	400e0800 	.word	0x400e0800
2000009c:	00370809 	.word	0x00370809
200000a0:	400e0400 	.word	0x400e0400
200000a4:	01370809 	.word	0x01370809
200000a8:	200f3f01 	.word	0x200f3f01
200000ac:	05b8d800 	.word	0x05b8d800
200000b0:	20000128 	.word	0x20000128

200000b4 <system_init_flash>:
200000b4:	4b16      	ldr	r3, [pc, #88]	; (20000110 <system_init_flash+0x5c>)
200000b6:	4298      	cmp	r0, r3
200000b8:	d912      	bls.n	200000e0 <system_init_flash+0x2c>
200000ba:	4b16      	ldr	r3, [pc, #88]	; (20000114 <system_init_flash+0x60>)
200000bc:	4298      	cmp	r0, r3
200000be:	d916      	bls.n	200000ee <system_init_flash+0x3a>
200000c0:	4b15      	ldr	r3, [pc, #84]	; (20000118 <system_init_flash+0x64>)
200000c2:	4298      	cmp	r0, r3
200000c4:	d91b      	bls.n	200000fe <system_init_flash+0x4a>
200000c6:	4b15      	ldr	r3, [pc, #84]	; (2000011c <system_init_flash+0x68>)
200000c8:	4298      	cmp	r0, r3
200000ca:	bf94      	ite	ls
200000cc:	f44f 7340 	movls.w	r3, #768	; 0x300
200000d0:	f44f 6380 	movhi.w	r3, #1024	; 0x400
200000d4:	4a12      	ldr	r2, [pc, #72]	; (20000120 <system_init_flash+0x6c>)
200000d6:	6013      	str	r3, [r2, #0]
200000d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000dc:	6013      	str	r3, [r2, #0]
200000de:	4770      	bx	lr
200000e0:	2300      	movs	r3, #0
200000e2:	4a0f      	ldr	r2, [pc, #60]	; (20000120 <system_init_flash+0x6c>)
200000e4:	6013      	str	r3, [r2, #0]
200000e6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000ea:	6013      	str	r3, [r2, #0]
200000ec:	4770      	bx	lr
200000ee:	f44f 7380 	mov.w	r3, #256	; 0x100
200000f2:	4a0b      	ldr	r2, [pc, #44]	; (20000120 <system_init_flash+0x6c>)
200000f4:	6013      	str	r3, [r2, #0]
200000f6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000fa:	6013      	str	r3, [r2, #0]
200000fc:	4770      	bx	lr
200000fe:	f44f 7300 	mov.w	r3, #512	; 0x200
20000102:	4a07      	ldr	r2, [pc, #28]	; (20000120 <system_init_flash+0x6c>)
20000104:	6013      	str	r3, [r2, #0]
20000106:	f502 7200 	add.w	r2, r2, #512	; 0x200
2000010a:	6013      	str	r3, [r2, #0]
2000010c:	4770      	bx	lr
2000010e:	bf00      	nop
20000110:	016e35ff 	.word	0x016e35ff
20000114:	026259ff 	.word	0x026259ff
20000118:	044aa1ff 	.word	0x044aa1ff
2000011c:	0501bcff 	.word	0x0501bcff
20000120:	400e0800 	.word	0x400e0800

20000124 <g_interrupt_enabled>:
20000124:	00000001                                ....

20000128 <SystemCoreClock>:
20000128:	003d0900                                ..=.

2000012c <wCRCTable>:
2000012c:	00000000 0000c0c1 0000c181 00000140     ............@...
2000013c:	0000c301 000003c0 00000280 0000c241     ............A...
2000014c:	0000c601 000006c0 00000780 0000c741     ............A...
2000015c:	00000500 0000c5c1 0000c481 00000440     ............@...
2000016c:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
2000017c:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
2000018c:	00000a00 0000cac1 0000cb81 00000b40     ............@...
2000019c:	0000c901 000009c0 00000880 0000c841     ............A...
200001ac:	0000d801 000018c0 00001980 0000d941     ............A...
200001bc:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200001cc:	00001e00 0000dec1 0000df81 00001f40     ............@...
200001dc:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200001ec:	00001400 0000d4c1 0000d581 00001540     ............@...
200001fc:	0000d701 000017c0 00001680 0000d641     ............A...
2000020c:	0000d201 000012c0 00001380 0000d341     ............A...
2000021c:	00001100 0000d1c1 0000d081 00001040     ............@...
2000022c:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
2000023c:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
2000024c:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
2000025c:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
2000026c:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
2000027c:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
2000028c:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
2000029c:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200002ac:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200002bc:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200002cc:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200002dc:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200002ec:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
200002fc:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
2000030c:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
2000031c:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
2000032c:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
2000033c:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
2000034c:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
2000035c:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
2000036c:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
2000037c:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
2000038c:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
2000039c:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200003ac:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200003bc:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200003cc:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200003dc:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200003ec:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
200003fc:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
2000040c:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
2000041c:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
2000042c:	00005000 000090c1 00009181 00005140     .P..........@Q..
2000043c:	00009301 000053c0 00005280 00009241     .....S...R..A...
2000044c:	00009601 000056c0 00005780 00009741     .....V...W..A...
2000045c:	00005500 000095c1 00009481 00005440     .U..........@T..
2000046c:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
2000047c:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
2000048c:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
2000049c:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200004ac:	00008801 000048c0 00004980 00008941     .....H...I..A...
200004bc:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200004cc:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200004dc:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200004ec:	00004400 000084c1 00008581 00004540     .D..........@E..
200004fc:	00008701 000047c0 00004680 00008641     .....G...F..A...
2000050c:	00008201 000042c0 00004380 00008341     .....B...C..A...
2000051c:	00004100 000081c1 00008081 00004040     .A..........@@..

2000052c <daysOfWeek>:
2000052c:	00088bd0 00088bd8 00088be0 00088be8     ................
2000053c:	00088bf4 00088c00 00088c08              ............

20000548 <months>:
20000548:	00088b64 00088b6c 00088b78 00088b80     d...l...x.......
20000558:	00088b88 00088b8c 00088b94 00088b9c     ................
20000568:	00088ba4 00088bb0 00088bb8 00088bc4     ................

20000578 <eprocs>:
20000578:	00089710 0008971c 00089724 00089730     ........$...0...
20000588:	0008973c 00089744 00089750 0008975c     <...D...P...\...

20000598 <nvpsiz>:
20000598:	000896f0 00089690 0008969c 000896a8     ................
200005a8:	00000000 000896b4 00000000 000896c0     ................
200005b8:	00000000 000896cc 000896e4 00000000     ................
200005c8:	000896f8 00000000 00089704 00000000     ................

200005d8 <nvptyp>:
200005d8:	00089040 0008904c 00089074 00089094     @...L...t.......
200005e8:	000890f0                                ....

200005ec <sramsiz>:
200005ec:	00089630 0008963c 00089648 00089654     0...<...H...T...
200005fc:	00089660 0008966c 00089678 00089684     `...l...x.......
2000060c:	00089690 0008969c 000896a8 000896b4     ................
2000061c:	000896c0 000896cc 000896d8 000896e4     ................

2000062c <_impure_ptr>:
2000062c:	20000630                                0.. 

20000630 <impure_data>:
20000630:	00000000 2000091c 20000984 200009ec     ....... ... ... 
	...
200006d8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200006e8:	0005deec 0000000b 00000000 00000000     ................
	...

20000a58 <__atexit_recursive_mutex>:
20000a58:	20001838                                8.. 

20000a5c <__global_locale>:
20000a5c:	00000043 00000000 00000000 00000000     C...............
	...
20000a7c:	00000043 00000000 00000000 00000000     C...............
	...
20000a9c:	00000043 00000000 00000000 00000000     C...............
	...
20000abc:	00000043 00000000 00000000 00000000     C...............
	...
20000adc:	00000043 00000000 00000000 00000000     C...............
	...
20000afc:	00000043 00000000 00000000 00000000     C...............
	...
20000b1c:	00000043 00000000 00000000 00000000     C...............
	...
20000b3c:	0008735d 00086a89 00000000 000898f4     ]s...j..........
20000b4c:	000897f4 000887a4 000887a4 000887a4     ................
20000b5c:	000887a4 000887a4 000887a4 000887a4     ................
20000b6c:	000887a4 000887a4 ffffffff ffffffff     ................
20000b7c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000ba4:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000bc8 <__malloc_av_>:
	...
20000bd0:	20000bc8 20000bc8 20000bd0 20000bd0     ... ... ... ... 
20000be0:	20000bd8 20000bd8 20000be0 20000be0     ... ... ... ... 
20000bf0:	20000be8 20000be8 20000bf0 20000bf0     ... ... ... ... 
20000c00:	20000bf8 20000bf8 20000c00 20000c00     ... ... ... ... 
20000c10:	20000c08 20000c08 20000c10 20000c10     ... ... ... ... 
20000c20:	20000c18 20000c18 20000c20 20000c20     ... ...  ..  .. 
20000c30:	20000c28 20000c28 20000c30 20000c30     (.. (.. 0.. 0.. 
20000c40:	20000c38 20000c38 20000c40 20000c40     8.. 8.. @.. @.. 
20000c50:	20000c48 20000c48 20000c50 20000c50     H.. H.. P.. P.. 
20000c60:	20000c58 20000c58 20000c60 20000c60     X.. X.. `.. `.. 
20000c70:	20000c68 20000c68 20000c70 20000c70     h.. h.. p.. p.. 
20000c80:	20000c78 20000c78 20000c80 20000c80     x.. x.. ... ... 
20000c90:	20000c88 20000c88 20000c90 20000c90     ... ... ... ... 
20000ca0:	20000c98 20000c98 20000ca0 20000ca0     ... ... ... ... 
20000cb0:	20000ca8 20000ca8 20000cb0 20000cb0     ... ... ... ... 
20000cc0:	20000cb8 20000cb8 20000cc0 20000cc0     ... ... ... ... 
20000cd0:	20000cc8 20000cc8 20000cd0 20000cd0     ... ... ... ... 
20000ce0:	20000cd8 20000cd8 20000ce0 20000ce0     ... ... ... ... 
20000cf0:	20000ce8 20000ce8 20000cf0 20000cf0     ... ... ... ... 
20000d00:	20000cf8 20000cf8 20000d00 20000d00     ... ... ... ... 
20000d10:	20000d08 20000d08 20000d10 20000d10     ... ... ... ... 
20000d20:	20000d18 20000d18 20000d20 20000d20     ... ...  ..  .. 
20000d30:	20000d28 20000d28 20000d30 20000d30     (.. (.. 0.. 0.. 
20000d40:	20000d38 20000d38 20000d40 20000d40     8.. 8.. @.. @.. 
20000d50:	20000d48 20000d48 20000d50 20000d50     H.. H.. P.. P.. 
20000d60:	20000d58 20000d58 20000d60 20000d60     X.. X.. `.. `.. 
20000d70:	20000d68 20000d68 20000d70 20000d70     h.. h.. p.. p.. 
20000d80:	20000d78 20000d78 20000d80 20000d80     x.. x.. ... ... 
20000d90:	20000d88 20000d88 20000d90 20000d90     ... ... ... ... 
20000da0:	20000d98 20000d98 20000da0 20000da0     ... ... ... ... 
20000db0:	20000da8 20000da8 20000db0 20000db0     ... ... ... ... 
20000dc0:	20000db8 20000db8 20000dc0 20000dc0     ... ... ... ... 
20000dd0:	20000dc8 20000dc8 20000dd0 20000dd0     ... ... ... ... 
20000de0:	20000dd8 20000dd8 20000de0 20000de0     ... ... ... ... 
20000df0:	20000de8 20000de8 20000df0 20000df0     ... ... ... ... 
20000e00:	20000df8 20000df8 20000e00 20000e00     ... ... ... ... 
20000e10:	20000e08 20000e08 20000e10 20000e10     ... ... ... ... 
20000e20:	20000e18 20000e18 20000e20 20000e20     ... ...  ..  .. 
20000e30:	20000e28 20000e28 20000e30 20000e30     (.. (.. 0.. 0.. 
20000e40:	20000e38 20000e38 20000e40 20000e40     8.. 8.. @.. @.. 
20000e50:	20000e48 20000e48 20000e50 20000e50     H.. H.. P.. P.. 
20000e60:	20000e58 20000e58 20000e60 20000e60     X.. X.. `.. `.. 
20000e70:	20000e68 20000e68 20000e70 20000e70     h.. h.. p.. p.. 
20000e80:	20000e78 20000e78 20000e80 20000e80     x.. x.. ... ... 
20000e90:	20000e88 20000e88 20000e90 20000e90     ... ... ... ... 
20000ea0:	20000e98 20000e98 20000ea0 20000ea0     ... ... ... ... 
20000eb0:	20000ea8 20000ea8 20000eb0 20000eb0     ... ... ... ... 
20000ec0:	20000eb8 20000eb8 20000ec0 20000ec0     ... ... ... ... 
20000ed0:	20000ec8 20000ec8 20000ed0 20000ed0     ... ... ... ... 
20000ee0:	20000ed8 20000ed8 20000ee0 20000ee0     ... ... ... ... 
20000ef0:	20000ee8 20000ee8 20000ef0 20000ef0     ... ... ... ... 
20000f00:	20000ef8 20000ef8 20000f00 20000f00     ... ... ... ... 
20000f10:	20000f08 20000f08 20000f10 20000f10     ... ... ... ... 
20000f20:	20000f18 20000f18 20000f20 20000f20     ... ...  ..  .. 
20000f30:	20000f28 20000f28 20000f30 20000f30     (.. (.. 0.. 0.. 
20000f40:	20000f38 20000f38 20000f40 20000f40     8.. 8.. @.. @.. 
20000f50:	20000f48 20000f48 20000f50 20000f50     H.. H.. P.. P.. 
20000f60:	20000f58 20000f58 20000f60 20000f60     X.. X.. `.. `.. 
20000f70:	20000f68 20000f68 20000f70 20000f70     h.. h.. p.. p.. 
20000f80:	20000f78 20000f78 20000f80 20000f80     x.. x.. ... ... 
20000f90:	20000f88 20000f88 20000f90 20000f90     ... ... ... ... 
20000fa0:	20000f98 20000f98 20000fa0 20000fa0     ... ... ... ... 
20000fb0:	20000fa8 20000fa8 20000fb0 20000fb0     ... ... ... ... 
20000fc0:	20000fb8 20000fb8 20000fc0 20000fc0     ... ... ... ... 

20000fd0 <__malloc_sbrk_base>:
20000fd0:	ffffffff                                ....

20000fd4 <__malloc_trim_threshold>:
20000fd4:	00020000                                ....
